/usr/lib/system/libsystem_kernel.dylib:
(__TEXT,__text) section
_kdebug_is_enabled:
0000000000000f60	pushq	%rbp
0000000000000f61	movq	%rsp, %rbp
0000000000000f64	pushq	%r14
0000000000000f66	pushq	%rbx
0000000000000f67	movabsq	$0x7fffffe00044, %rax
0000000000000f71	movl	(%rax), %eax
0000000000000f73	testl	%eax, %eax
0000000000000f75	je	0xfa2
0000000000000f77	movb	$0x1, %r14b
0000000000000f7a	testb	$0x2, %al
0000000000000f7c	je	0xfa5
0000000000000f7e	movl	%edi, %ebx
0000000000000f80	callq	_kdebug_typefilter
0000000000000f85	testq	%rax, %rax
0000000000000f88	je	0xfa5
0000000000000f8a	movl	%ebx, %ecx
0000000000000f8c	shrl	$0x10, %ebx
0000000000000f8f	shrq	$0x13, %rcx
0000000000000f93	movsbl	(%rax,%rcx), %eax
0000000000000f97	andb	$0x7, %bl
0000000000000f9a	movzbl	%bl, %ecx
0000000000000f9d	btl	%ecx, %eax
0000000000000fa0	jb	0xfa5
0000000000000fa2	xorl	%r14d, %r14d
0000000000000fa5	movl	%r14d, %eax
0000000000000fa8	popq	%rbx
0000000000000fa9	popq	%r14
0000000000000fab	popq	%rbp
0000000000000fac	retq
_kdebug_typefilter:
0000000000000fad	movq	_kdebug_typefilter.typefilter(%rip), %rax
0000000000000fb4	testq	%rax, %rax
0000000000000fb7	je	0xfba
0000000000000fb9	retq
0000000000000fba	pushq	%rbp
0000000000000fbb	movq	%rsp, %rbp
0000000000000fbe	subq	$0x10, %rsp
0000000000000fc2	xorl	%eax, %eax
0000000000000fc4	leaq	-0x8(%rbp), %rdi
0000000000000fc8	movq	%rax, (%rdi)
0000000000000fcb	leaq	-0x10(%rbp), %rsi
0000000000000fcf	movq	%rax, (%rsi)
0000000000000fd2	callq	___kdebug_typefilter
0000000000000fd7	testl	%eax, %eax
0000000000000fd9	je	0xfe8
0000000000000fdb	movq	_kdebug_typefilter.typefilter(%rip), %rax
0000000000000fe2	addq	$0x10, %rsp
0000000000000fe6	popq	%rbp
0000000000000fe7	retq
0000000000000fe8	movq	-0x8(%rbp), %rcx
0000000000000fec	testq	%rcx, %rcx
0000000000000fef	je	0xfdb
0000000000000ff1	xorl	%eax, %eax
0000000000000ff3	lock
0000000000000ff4	cmpxchgq	%rcx, _kdebug_typefilter.typefilter(%rip)
0000000000000ffc	je	0xfdb
0000000000000ffe	leaq	_mach_task_self_(%rip), %rax
0000000000001005	movl	(%rax), %edi
0000000000001007	movq	-0x8(%rbp), %rsi
000000000000100b	movl	$0x2000, %edx
0000000000001010	callq	_mach_vm_deallocate
0000000000001015	jmp	0xfdb
_kdebug_trace:
0000000000001017	pushq	%rbp
0000000000001018	movq	%rsp, %rbp
000000000000101b	pushq	%r15
000000000000101d	pushq	%r14
000000000000101f	pushq	%r13
0000000000001021	pushq	%r12
0000000000001023	pushq	%rbx
0000000000001024	pushq	%rax
0000000000001025	movq	%r8, %r14
0000000000001028	movq	%rcx, %r15
000000000000102b	movq	%rdx, %r12
000000000000102e	movq	%rsi, %r13
0000000000001031	movl	%edi, %ebx
0000000000001033	callq	_kdebug_is_enabled
0000000000001038	testb	%al, %al
000000000000103a	je	0x105d
000000000000103c	movl	%ebx, %edi
000000000000103e	movq	%r13, %rsi
0000000000001041	movq	%r12, %rdx
0000000000001044	movq	%r15, %rcx
0000000000001047	movq	%r14, %r8
000000000000104a	addq	$0x8, %rsp
000000000000104e	popq	%rbx
000000000000104f	popq	%r12
0000000000001051	popq	%r13
0000000000001053	popq	%r14
0000000000001055	popq	%r15
0000000000001057	popq	%rbp
0000000000001058	jmp	___kdebug_trace64
000000000000105d	xorl	%eax, %eax
000000000000105f	addq	$0x8, %rsp
0000000000001063	popq	%rbx
0000000000001064	popq	%r12
0000000000001066	popq	%r13
0000000000001068	popq	%r14
000000000000106a	popq	%r15
000000000000106c	popq	%rbp
000000000000106d	retq
000000000000106e	nop
000000000000106f	nop
_issetugid:
0000000000001070	movl	$0x2000147, %eax
0000000000001075	movq	%rcx, %r10
0000000000001078	syscall
000000000000107a	jae	0x1084
000000000000107c	movq	%rax, %rdi
000000000000107f	jmp	_cerror_nocancel
0000000000001084	retq
_mach_vm_map:
0000000000001085	pushq	%rbp
0000000000001086	movq	%rsp, %rbp
0000000000001089	pushq	%r15
000000000000108b	pushq	%r14
000000000000108d	pushq	%r13
000000000000108f	pushq	%r12
0000000000001091	pushq	%rbx
0000000000001092	pushq	%rax
0000000000001093	movl	%r9d, %r13d
0000000000001096	movl	%r8d, %r12d
0000000000001099	movq	%rsi, %rbx
000000000000109c	movl	%edi, %r15d
000000000000109f	movl	0x28(%rbp), %r11d
00000000000010a3	movl	0x20(%rbp), %r10d
00000000000010a7	testl	%r9d, %r9d
00000000000010aa	jne	0x10f1
00000000000010ac	cmpl	$0x7, %r11d
00000000000010b0	jne	0x10f1
00000000000010b2	movl	0x30(%rbp), %eax
00000000000010b5	cmpl	$0x1, %eax
00000000000010b8	jne	0x10f1
00000000000010ba	movl	%r15d, %edi
00000000000010bd	movq	%rbx, %rsi
00000000000010c0	movq	%rdx, %r14
00000000000010c3	movq	%rbx, -0x30(%rbp)
00000000000010c7	movq	%rcx, %rbx
00000000000010ca	movl	%r12d, %r8d
00000000000010cd	movl	%r10d, %r9d
00000000000010d0	callq	__kernelrpc_mach_vm_map_trap
00000000000010d5	movq	%rbx, %rcx
00000000000010d8	movl	0x28(%rbp), %r11d
00000000000010dc	movl	0x20(%rbp), %r10d
00000000000010e0	movq	-0x30(%rbp), %rbx
00000000000010e4	movq	%r14, %rdx
00000000000010e7	movl	%eax, %r14d
00000000000010ea	cmpl	$0x10000003, %eax
00000000000010ef	jne	0x1122
00000000000010f1	subq	$0x8, %rsp
00000000000010f5	movl	%r15d, %edi
00000000000010f8	movq	%rbx, %rsi
00000000000010fb	movq	%rdx, %r14
00000000000010fe	movl	%r12d, %r8d
0000000000001101	movl	%r13d, %r9d
0000000000001104	movl	0x30(%rbp), %eax
0000000000001107	pushq	%rax
0000000000001108	pushq	%r11
000000000000110a	pushq	%r10
000000000000110c	movl	0x18(%rbp), %eax
000000000000110f	pushq	%rax
0000000000001110	pushq	0x10(%rbp)
0000000000001113	callq	__kernelrpc_mach_vm_map
0000000000001118	movq	%r14, %rdx
000000000000111b	addq	$0x30, %rsp
000000000000111f	movl	%eax, %r14d
0000000000001122	movl	%r12d, %eax
0000000000001125	andl	$0x1e000000, %eax
000000000000112a	orl	%r14d, %eax
000000000000112d	jne	0x1159
000000000000112f	movq	___syscall_logger(%rip), %rax
0000000000001136	testq	%rax, %rax
0000000000001139	je	0x1159
000000000000113b	andl	$0xff000000, %r12d
0000000000001142	orl	$0x90, %r12d
0000000000001149	movl	%r15d, %esi
000000000000114c	movq	(%rbx), %r8
000000000000114f	movl	%r12d, %edi
0000000000001152	xorl	%ecx, %ecx
0000000000001154	xorl	%r9d, %r9d
0000000000001157	callq	*%rax
0000000000001159	movl	%r14d, %eax
000000000000115c	addq	$0x8, %rsp
0000000000001160	popq	%rbx
0000000000001161	popq	%r12
0000000000001163	popq	%r13
0000000000001165	popq	%r14
0000000000001167	popq	%r15
0000000000001169	popq	%rbp
000000000000116a	retq
000000000000116b	nop
__kernelrpc_mach_vm_allocate_trap:
000000000000116c	movq	%rcx, %r10
000000000000116f	movl	$0x100000a, %eax
0000000000001174	syscall
0000000000001176	retq
0000000000001177	nop
__kernelrpc_mach_vm_purgable_control_trap:
0000000000001178	movq	%rcx, %r10
000000000000117b	movl	$0x100000b, %eax
0000000000001180	syscall
0000000000001182	retq
0000000000001183	nop
__kernelrpc_mach_vm_deallocate_trap:
0000000000001184	movq	%rcx, %r10
0000000000001187	movl	$0x100000c, %eax
000000000000118c	syscall
000000000000118e	retq
000000000000118f	nop
__kernelrpc_mach_vm_protect_trap:
0000000000001190	movq	%rcx, %r10
0000000000001193	movl	$0x100000e, %eax
0000000000001198	syscall
000000000000119a	retq
000000000000119b	nop
__kernelrpc_mach_vm_map_trap:
000000000000119c	movq	%rcx, %r10
000000000000119f	movl	$0x100000f, %eax
00000000000011a4	syscall
00000000000011a6	retq
00000000000011a7	nop
__kernelrpc_mach_port_allocate_trap:
00000000000011a8	movq	%rcx, %r10
00000000000011ab	movl	$0x1000010, %eax
00000000000011b0	syscall
00000000000011b2	retq
00000000000011b3	nop
__kernelrpc_mach_port_destroy_trap:
00000000000011b4	movq	%rcx, %r10
00000000000011b7	movl	$0x1000011, %eax
00000000000011bc	syscall
00000000000011be	retq
00000000000011bf	nop
__kernelrpc_mach_port_deallocate_trap:
00000000000011c0	movq	%rcx, %r10
00000000000011c3	movl	$0x1000012, %eax
00000000000011c8	syscall
00000000000011ca	retq
00000000000011cb	nop
__kernelrpc_mach_port_mod_refs_trap:
00000000000011cc	movq	%rcx, %r10
00000000000011cf	movl	$0x1000013, %eax
00000000000011d4	syscall
00000000000011d6	retq
00000000000011d7	nop
__kernelrpc_mach_port_move_member_trap:
00000000000011d8	movq	%rcx, %r10
00000000000011db	movl	$0x1000014, %eax
00000000000011e0	syscall
00000000000011e2	retq
00000000000011e3	nop
__kernelrpc_mach_port_insert_right_trap:
00000000000011e4	movq	%rcx, %r10
00000000000011e7	movl	$0x1000015, %eax
00000000000011ec	syscall
00000000000011ee	retq
00000000000011ef	nop
__kernelrpc_mach_port_insert_member_trap:
00000000000011f0	movq	%rcx, %r10
00000000000011f3	movl	$0x1000016, %eax
00000000000011f8	syscall
00000000000011fa	retq
00000000000011fb	nop
__kernelrpc_mach_port_extract_member_trap:
00000000000011fc	movq	%rcx, %r10
00000000000011ff	movl	$0x1000017, %eax
0000000000001204	syscall
0000000000001206	retq
0000000000001207	nop
__kernelrpc_mach_port_construct_trap:
0000000000001208	movq	%rcx, %r10
000000000000120b	movl	$0x1000018, %eax
0000000000001210	syscall
0000000000001212	retq
0000000000001213	nop
__kernelrpc_mach_port_destruct_trap:
0000000000001214	movq	%rcx, %r10
0000000000001217	movl	$0x1000019, %eax
000000000000121c	syscall
000000000000121e	retq
000000000000121f	nop
_mach_reply_port:
0000000000001220	movq	%rcx, %r10
0000000000001223	movl	$0x100001a, %eax
0000000000001228	syscall
000000000000122a	retq
000000000000122b	nop
_thread_self_trap:
000000000000122c	movq	%rcx, %r10
000000000000122f	movl	$0x100001b, %eax
0000000000001234	syscall
0000000000001236	retq
0000000000001237	nop
_task_self_trap:
0000000000001238	movq	%rcx, %r10
000000000000123b	movl	$0x100001c, %eax
0000000000001240	syscall
0000000000001242	retq
0000000000001243	nop
_host_self_trap:
0000000000001244	movq	%rcx, %r10
0000000000001247	movl	$0x100001d, %eax
000000000000124c	syscall
000000000000124e	retq
000000000000124f	nop
_mach_msg_trap:
0000000000001250	movq	%rcx, %r10
0000000000001253	movl	$0x100001f, %eax
0000000000001258	syscall
000000000000125a	retq
000000000000125b	nop
_mach_msg_overwrite_trap:
000000000000125c	movq	%rcx, %r10
000000000000125f	movl	$0x1000020, %eax
0000000000001264	syscall
0000000000001266	retq
0000000000001267	nop
_semaphore_signal_trap:
0000000000001268	movq	%rcx, %r10
000000000000126b	movl	$0x1000021, %eax
0000000000001270	syscall
0000000000001272	retq
0000000000001273	nop
_semaphore_signal_all_trap:
0000000000001274	movq	%rcx, %r10
0000000000001277	movl	$0x1000022, %eax
000000000000127c	syscall
000000000000127e	retq
000000000000127f	nop
_semaphore_signal_thread_trap:
0000000000001280	movq	%rcx, %r10
0000000000001283	movl	$0x1000023, %eax
0000000000001288	syscall
000000000000128a	retq
000000000000128b	nop
_semaphore_wait_trap:
000000000000128c	movq	%rcx, %r10
000000000000128f	movl	$0x1000024, %eax
0000000000001294	syscall
0000000000001296	retq
0000000000001297	nop
_semaphore_wait_signal_trap:
0000000000001298	movq	%rcx, %r10
000000000000129b	movl	$0x1000025, %eax
00000000000012a0	syscall
00000000000012a2	retq
00000000000012a3	nop
_semaphore_timedwait_trap:
00000000000012a4	movq	%rcx, %r10
00000000000012a7	movl	$0x1000026, %eax
00000000000012ac	syscall
00000000000012ae	retq
00000000000012af	nop
_semaphore_timedwait_signal_trap:
00000000000012b0	movq	%rcx, %r10
00000000000012b3	movl	$0x1000027, %eax
00000000000012b8	syscall
00000000000012ba	retq
00000000000012bb	nop
__kernelrpc_mach_port_get_attributes_trap:
00000000000012bc	movq	%rcx, %r10
00000000000012bf	movl	$0x1000028, %eax
00000000000012c4	syscall
00000000000012c6	retq
00000000000012c7	nop
__kernelrpc_mach_port_guard_trap:
00000000000012c8	movq	%rcx, %r10
00000000000012cb	movl	$0x1000029, %eax
00000000000012d0	syscall
00000000000012d2	retq
00000000000012d3	nop
__kernelrpc_mach_port_unguard_trap:
00000000000012d4	movq	%rcx, %r10
00000000000012d7	movl	$0x100002a, %eax
00000000000012dc	syscall
00000000000012de	retq
00000000000012df	nop
_mach_generate_activity_id:
00000000000012e0	movq	%rcx, %r10
00000000000012e3	movl	$0x100002b, %eax
00000000000012e8	syscall
00000000000012ea	retq
00000000000012eb	nop
_task_name_for_pid:
00000000000012ec	movq	%rcx, %r10
00000000000012ef	movl	$0x100002c, %eax
00000000000012f4	syscall
00000000000012f6	retq
00000000000012f7	nop
_task_for_pid:
00000000000012f8	movq	%rcx, %r10
00000000000012fb	movl	$0x100002d, %eax
0000000000001300	syscall
0000000000001302	retq
0000000000001303	nop
_pid_for_task:
0000000000001304	movq	%rcx, %r10
0000000000001307	movl	$0x100002e, %eax
000000000000130c	syscall
000000000000130e	retq
000000000000130f	nop
_macx_swapon:
0000000000001310	movq	%rcx, %r10
0000000000001313	movl	$0x1000030, %eax
0000000000001318	syscall
000000000000131a	retq
000000000000131b	nop
_macx_swapoff:
000000000000131c	movq	%rcx, %r10
000000000000131f	movl	$0x1000031, %eax
0000000000001324	syscall
0000000000001326	retq
0000000000001327	nop
_thread_get_special_reply_port:
0000000000001328	movq	%rcx, %r10
000000000000132b	movl	$0x1000032, %eax
0000000000001330	syscall
0000000000001332	retq
0000000000001333	nop
_macx_triggers:
0000000000001334	movq	%rcx, %r10
0000000000001337	movl	$0x1000033, %eax
000000000000133c	syscall
000000000000133e	retq
000000000000133f	nop
_macx_backing_store_suspend:
0000000000001340	movq	%rcx, %r10
0000000000001343	movl	$0x1000034, %eax
0000000000001348	syscall
000000000000134a	retq
000000000000134b	nop
_macx_backing_store_recovery:
000000000000134c	movq	%rcx, %r10
000000000000134f	movl	$0x1000035, %eax
0000000000001354	syscall
0000000000001356	retq
0000000000001357	nop
_swtch_pri:
0000000000001358	movq	%rcx, %r10
000000000000135b	movl	$0x100003b, %eax
0000000000001360	syscall
0000000000001362	retq
0000000000001363	nop
_swtch:
0000000000001364	movq	%rcx, %r10
0000000000001367	movl	$0x100003c, %eax
000000000000136c	syscall
000000000000136e	retq
000000000000136f	nop
_syscall_thread_switch:
0000000000001370	movq	%rcx, %r10
0000000000001373	movl	$0x100003d, %eax
0000000000001378	syscall
000000000000137a	retq
000000000000137b	nop
_clock_sleep_trap:
000000000000137c	movq	%rcx, %r10
000000000000137f	movl	$0x100003e, %eax
0000000000001384	syscall
0000000000001386	retq
0000000000001387	nop
_host_create_mach_voucher_trap:
0000000000001388	movq	%rcx, %r10
000000000000138b	movl	$0x1000046, %eax
0000000000001390	syscall
0000000000001392	retq
0000000000001393	nop
_mach_voucher_extract_attr_recipe_trap:
0000000000001394	movq	%rcx, %r10
0000000000001397	movl	$0x1000048, %eax
000000000000139c	syscall
000000000000139e	retq
000000000000139f	nop
__kernelrpc_mach_port_type_trap:
00000000000013a0	movq	%rcx, %r10
00000000000013a3	movl	$0x100004c, %eax
00000000000013a8	syscall
00000000000013aa	retq
00000000000013ab	nop
__kernelrpc_mach_port_request_notification_trap:
00000000000013ac	movq	%rcx, %r10
00000000000013af	movl	$0x100004d, %eax
00000000000013b4	syscall
00000000000013b6	retq
00000000000013b7	nop
_mach_timebase_info_trap:
00000000000013b8	movq	%rcx, %r10
00000000000013bb	movl	$0x1000059, %eax
00000000000013c0	syscall
00000000000013c2	retq
00000000000013c3	nop
_mach_wait_until:
00000000000013c4	movq	%rcx, %r10
00000000000013c7	movl	$0x100005a, %eax
00000000000013cc	syscall
00000000000013ce	retq
00000000000013cf	nop
_mk_timer_create:
00000000000013d0	movq	%rcx, %r10
00000000000013d3	movl	$0x100005b, %eax
00000000000013d8	syscall
00000000000013da	retq
00000000000013db	nop
_mk_timer_destroy:
00000000000013dc	movq	%rcx, %r10
00000000000013df	movl	$0x100005c, %eax
00000000000013e4	syscall
00000000000013e6	retq
00000000000013e7	nop
_mk_timer_arm:
00000000000013e8	movq	%rcx, %r10
00000000000013eb	movl	$0x100005d, %eax
00000000000013f0	syscall
00000000000013f2	retq
00000000000013f3	nop
_mk_timer_cancel:
00000000000013f4	movq	%rcx, %r10
00000000000013f7	movl	$0x100005e, %eax
00000000000013fc	syscall
00000000000013fe	retq
00000000000013ff	nop
_mk_timer_arm_leeway:
0000000000001400	movq	%rcx, %r10
0000000000001403	movl	$0x100005f, %eax
0000000000001408	syscall
000000000000140a	retq
000000000000140b	nop
_debug_control_port_for_pid:
000000000000140c	movq	%rcx, %r10
000000000000140f	movl	$0x1000060, %eax
0000000000001414	syscall
0000000000001416	retq
_task_restartable_ranges_register:
0000000000001417	pushq	%rbp
0000000000001418	movq	%rsp, %rbp
000000000000141b	pushq	%r15
000000000000141d	pushq	%r14
000000000000141f	pushq	%r12
0000000000001421	pushq	%rbx
0000000000001422	subq	$0x430, %rsp
0000000000001429	leaq	_NDR_record(%rip), %rax
0000000000001430	movq	(%rax), %rax
0000000000001433	movq	%rax, -0x430(%rbp)
000000000000143a	movl	$0xfffffecd, %r15d
0000000000001440	cmpl	$0x40, %edx
0000000000001443	ja	0x154f
0000000000001449	movl	%edx, %ebx
000000000000144b	movl	%edi, %r14d
000000000000144e	leaq	-0x424(%rbp), %r15
0000000000001455	movl	%edx, %r12d
0000000000001458	shll	$0x4, %r12d
000000000000145c	movq	%r15, %rdi
000000000000145f	movq	%r12, %rdx
0000000000001462	callq	_memcpy
0000000000001467	movl	%ebx, -0x4(%r15)
000000000000146b	addl	$0x24, %r12d
000000000000146f	movl	$0x1513, -0x24(%r15)
0000000000001477	movl	%r14d, -0x1c(%r15)
000000000000147b	callq	_mig_get_reply_port
0000000000001480	movl	%eax, -0x18(%r15)
0000000000001484	movabsq	$0x1f4000000000, %rcx
000000000000148e	movq	%rcx, -0x14(%r15)
0000000000001492	movl	$0x0, (%rsp)
0000000000001499	leaq	-0x448(%rbp), %rdi
00000000000014a0	movl	$0x3, %esi
00000000000014a5	movl	%r12d, %edx
00000000000014a8	movl	$0x2c, %ecx
00000000000014ad	movl	%eax, %r8d
00000000000014b0	xorl	%r9d, %r9d
00000000000014b3	callq	_mach_msg
00000000000014b8	movl	%eax, %r15d
00000000000014bb	leal	-0x10000002(%r15), %eax
00000000000014c2	cmpl	$0xe, %eax
00000000000014c5	ja	0x14de
00000000000014c7	movl	$0x4003, %ecx
00000000000014cc	btl	%eax, %ecx
00000000000014cf	jae	0x14de
00000000000014d1	movl	-0x43c(%rbp), %edi
00000000000014d7	callq	_mig_put_reply_port
00000000000014dc	jmp	0x154f
00000000000014de	testl	%r15d, %r15d
00000000000014e1	jne	0x1528
00000000000014e3	movl	-0x434(%rbp), %eax
00000000000014e9	cmpl	$0x47, %eax
00000000000014ec	je	0x1535
00000000000014ee	cmpl	$0x1fa4, %eax
00000000000014f3	jne	0x153d
00000000000014f5	movl	$0xfffffed4, %r15d
00000000000014fb	cmpl	$0x0, -0x448(%rbp)
0000000000001502	js	0x1543
0000000000001504	cmpl	$0x24, -0x444(%rbp)
000000000000150b	jne	0x1543
000000000000150d	movl	-0x440(%rbp), %eax
0000000000001513	testl	%eax, %eax
0000000000001515	jne	0x1543
0000000000001517	movl	-0x428(%rbp), %r15d
000000000000151e	testl	%r15d, %r15d
0000000000001521	jne	0x1543
0000000000001523	xorl	%r15d, %r15d
0000000000001526	jmp	0x154f
0000000000001528	movl	-0x43c(%rbp), %edi
000000000000152e	callq	_mig_dealloc_reply_port
0000000000001533	jmp	0x154f
0000000000001535	movl	$0xfffffecc, %r15d
000000000000153b	jmp	0x1543
000000000000153d	movl	$0xfffffed3, %r15d
0000000000001543	leaq	-0x448(%rbp), %rdi
000000000000154a	callq	_mach_msg_destroy
000000000000154f	movl	%r15d, %eax
0000000000001552	addq	$0x430, %rsp
0000000000001559	popq	%rbx
000000000000155a	popq	%r12
000000000000155c	popq	%r14
000000000000155e	popq	%r15
0000000000001560	popq	%rbp
0000000000001561	retq
_memcpy:
0000000000001562	movq	__libkernel_string_functions(%rip), %rax
0000000000001569	movq	0x20(%rax), %rax
000000000000156d	jmpq	*%rax
_mig_get_reply_port:
000000000000156f	movl	%gs:0x10, %eax
0000000000001577	testl	%eax, %eax
0000000000001579	je	0x157c
000000000000157b	retq
000000000000157c	pushq	%rbp
000000000000157d	movq	%rsp, %rbp
0000000000001580	callq	_mach_reply_port
0000000000001585	movl	%eax, %ecx
0000000000001587	movq	%rcx, %gs:0x10
0000000000001590	popq	%rbp
0000000000001591	retq
0000000000001592	nop
0000000000001593	nop
_mach_msg:
0000000000001594	pushq	%rbp
0000000000001595	movq	%rsp, %rbp
0000000000001598	pushq	%r15
000000000000159a	pushq	%r14
000000000000159c	pushq	%r13
000000000000159e	pushq	%r12
00000000000015a0	pushq	%rbx
00000000000015a1	subq	$0x28, %rsp
00000000000015a5	movl	%ecx, %r13d
00000000000015a8	movl	%esi, %ebx
00000000000015aa	movq	%rdi, %r14
00000000000015ad	movl	0x10(%rbp), %eax
00000000000015b0	movl	%esi, %r12d
00000000000015b3	andl	$0xfffffbbf, %r12d
00000000000015ba	movl	%eax, (%rsp)
00000000000015bd	movl	%r12d, %esi
00000000000015c0	movl	%edx, %r15d
00000000000015c3	movl	%r8d, -0x2c(%rbp)
00000000000015c7	movl	%r9d, -0x30(%rbp)
00000000000015cb	callq	_mach_msg_trap
00000000000015d0	testl	%eax, %eax
00000000000015d2	je	0x1666
00000000000015d8	movl	%ebx, -0x34(%rbp)
00000000000015db	testb	$0x40, %bl
00000000000015de	jne	0x1621
00000000000015e0	cmpl	$0x10000007, %eax
00000000000015e5	jne	0x1621
00000000000015e7	movl	-0x30(%rbp), %ebx
00000000000015ea	movq	%r14, -0x40(%rbp)
00000000000015ee	movl	%r13d, %r14d
00000000000015f1	movl	-0x2c(%rbp), %r13d
00000000000015f5	movl	0x10(%rbp), %eax
00000000000015f8	movl	%eax, (%rsp)
00000000000015fb	movq	-0x40(%rbp), %rdi
00000000000015ff	movl	%r12d, %esi
0000000000001602	movl	%r15d, %edx
0000000000001605	movl	%r14d, %ecx
0000000000001608	movl	%r13d, %r8d
000000000000160b	movl	%ebx, %r9d
000000000000160e	callq	_mach_msg_trap
0000000000001613	cmpl	$0x10000007, %eax
0000000000001618	je	0x15f5
000000000000161a	movl	%r14d, %r13d
000000000000161d	movq	-0x40(%rbp), %r14
0000000000001621	movl	-0x34(%rbp), %r12d
0000000000001625	btl	$0xa, %r12d
000000000000162a	jb	0x1668
000000000000162c	cmpl	$0x10004005, %eax
0000000000001631	jne	0x1668
0000000000001633	andl	$0xfffffbbe, %r12d
000000000000163a	movl	-0x30(%rbp), %r15d
000000000000163e	movl	-0x2c(%rbp), %ebx
0000000000001641	movl	0x10(%rbp), %eax
0000000000001644	movl	%eax, (%rsp)
0000000000001647	movq	%r14, %rdi
000000000000164a	movl	%r12d, %esi
000000000000164d	xorl	%edx, %edx
000000000000164f	movl	%r13d, %ecx
0000000000001652	movl	%ebx, %r8d
0000000000001655	movl	%r15d, %r9d
0000000000001658	callq	_mach_msg_trap
000000000000165d	cmpl	$0x10004005, %eax
0000000000001662	je	0x1641
0000000000001664	jmp	0x1668
0000000000001666	xorl	%eax, %eax
0000000000001668	addq	$0x28, %rsp
000000000000166c	popq	%rbx
000000000000166d	popq	%r12
000000000000166f	popq	%r13
0000000000001671	popq	%r14
0000000000001673	popq	%r15
0000000000001675	popq	%rbp
0000000000001676	retq
_mach_timebase_info:
0000000000001677	pushq	%rbp
0000000000001678	movq	%rsp, %rbp
000000000000167b	pushq	%rbx
000000000000167c	pushq	%rax
000000000000167d	movq	%rdi, %rbx
0000000000001680	movl	_mach_timebase_info.cached_info(%rip), %eax
0000000000001686	testl	%eax, %eax
0000000000001688	je	0x1694
000000000000168a	movl	0x2e64c(%rip), %ecx
0000000000001690	testl	%ecx, %ecx
0000000000001692	jne	0x16b0
0000000000001694	leaq	_mach_timebase_info.cached_info(%rip), %rdi
000000000000169b	callq	_mach_timebase_info_trap
00000000000016a0	testl	%eax, %eax
00000000000016a2	jne	0x16b7
00000000000016a4	movl	_mach_timebase_info.cached_info(%rip), %eax
00000000000016aa	movl	0x2e62c(%rip), %ecx
00000000000016b0	movl	%eax, (%rbx)
00000000000016b2	movl	%ecx, 0x4(%rbx)
00000000000016b5	xorl	%eax, %eax
00000000000016b7	addq	$0x8, %rsp
00000000000016bb	popq	%rbx
00000000000016bc	popq	%rbp
00000000000016bd	retq
_mach_continuous_time:
00000000000016be	pushq	%rbp
00000000000016bf	movq	%rsp, %rbp
00000000000016c2	pushq	%rbx
00000000000016c3	pushq	%rax
00000000000016c4	leaq	-0x10(%rbp), %rbx
00000000000016c8	xorl	%edi, %edi
00000000000016ca	movq	%rbx, %rsi
00000000000016cd	callq	__mach_continuous_time
00000000000016d2	movq	(%rbx), %rax
00000000000016d5	addq	$0x8, %rsp
00000000000016d9	popq	%rbx
00000000000016da	popq	%rbp
00000000000016db	retq
_mach_absolute_time:
00000000000016dc	pushq	%rbp
00000000000016dd	movq	%rsp, %rbp
00000000000016e0	movabsq	$0x7fffffe00050, %rsi
00000000000016ea	movl	0x18(%rsi), %r8d
00000000000016ee	testl	%r8d, %r8d
00000000000016f1	je	0x16ea
00000000000016f3	lfence
00000000000016f6	rdtsc
00000000000016f8	lfence
00000000000016fb	shlq	$0x20, %rdx
00000000000016ff	orq	%rdx, %rax
0000000000001702	movl	0xc(%rsi), %ecx
0000000000001705	andl	$0x1f, %ecx
0000000000001708	subq	(%rsi), %rax
000000000000170b	shlq	%cl, %rax
000000000000170e	movl	0x8(%rsi), %ecx
0000000000001711	mulq	%rcx
0000000000001714	shrdq	$0x20, %rdx, %rax
0000000000001719	addq	0x10(%rsi), %rax
000000000000171d	cmpl	0x18(%rsi), %r8d
0000000000001721	jne	0x16ea
0000000000001723	popq	%rbp
0000000000001724	retq
0000000000001725	nop
0000000000001726	nop
0000000000001727	nop
_getentropy:
0000000000001728	movl	$0x20001f4, %eax
000000000000172d	movq	%rcx, %r10
0000000000001730	syscall
0000000000001732	jae	0x173c
0000000000001734	movq	%rax, %rdi
0000000000001737	jmp	_cerror_nocancel
000000000000173c	retq
___libkernel_voucher_init:
000000000000173d	movq	%rdi, __libkernel_voucher_functions(%rip)
0000000000001744	xorl	%eax, %eax
0000000000001746	retq
0000000000001747	nop
___getpid:
_getpid:
0000000000001748	movl	__current_pid(%rip), %eax
000000000000174e	testl	%eax, %eax
0000000000001750	jle	0x1753
0000000000001752	retq
0000000000001753	movl	$0x2000014, %eax
0000000000001758	movq	%rcx, %r10
000000000000175b	syscall
000000000000175d	jae	0x1767
000000000000175f	movq	%rax, %rdi
0000000000001762	jmp	_cerror_nocancel
0000000000001767	movl	%eax, %edx
0000000000001769	xorl	%eax, %eax
000000000000176b	leaq	__current_pid(%rip), %rcx
0000000000001772	lock
0000000000001773	cmpxchgl	%edx, (%rcx)
0000000000001776	movl	%edx, %eax
0000000000001778	retq
_task_get_special_port:
0000000000001779	pushq	%rbp
000000000000177a	movq	%rsp, %rbp
000000000000177d	pushq	%r14
000000000000177f	pushq	%rbx
0000000000001780	subq	$0x40, %rsp
0000000000001784	movq	%rdx, %r14
0000000000001787	leaq	_NDR_record(%rip), %rax
000000000000178e	movq	(%rax), %rax
0000000000001791	leaq	-0x40(%rbp), %rbx
0000000000001795	movq	%rax, 0x18(%rbx)
0000000000001799	movl	%esi, 0x20(%rbx)
000000000000179c	movl	$0x1513, (%rbx)
00000000000017a2	movl	%edi, 0x8(%rbx)
00000000000017a5	callq	_mig_get_reply_port
00000000000017aa	movl	%eax, 0xc(%rbx)
00000000000017ad	movabsq	$0xd5100000000, %rcx
00000000000017b7	movq	%rcx, 0x10(%rbx)
00000000000017bb	movl	$0x0, (%rsp)
00000000000017c2	movq	%rbx, %rdi
00000000000017c5	movl	$0x3, %esi
00000000000017ca	movl	$0x24, %edx
00000000000017cf	movl	$0x30, %ecx
00000000000017d4	movl	%eax, %r8d
00000000000017d7	xorl	%r9d, %r9d
00000000000017da	callq	_mach_msg
00000000000017df	movl	%eax, %ebx
00000000000017e1	leal	-0x10000002(%rbx), %eax
00000000000017e7	cmpl	$0xe, %eax
00000000000017ea	ja	0x1800
00000000000017ec	movl	$0x4003, %ecx
00000000000017f1	btl	%eax, %ecx
00000000000017f4	jae	0x1800
00000000000017f6	movl	-0x34(%rbp), %edi
00000000000017f9	callq	_mig_put_reply_port
00000000000017fe	jmp	0x1867
0000000000001800	testl	%ebx, %ebx
0000000000001802	jne	0x1830
0000000000001804	movl	-0x2c(%rbp), %eax
0000000000001807	cmpl	$0x47, %eax
000000000000180a	je	0x183a
000000000000180c	cmpl	$0xdb5, %eax
0000000000001811	jne	0x1841
0000000000001813	movl	-0x40(%rbp), %eax
0000000000001816	movl	-0x3c(%rbp), %ecx
0000000000001819	movl	$0xfffffed4, %ebx
000000000000181e	testl	%eax, %eax
0000000000001820	js	0x1848
0000000000001822	cmpl	$0x24, %ecx
0000000000001825	jne	0x185e
0000000000001827	movl	-0x20(%rbp), %ecx
000000000000182a	testl	%ecx, %ecx
000000000000182c	jne	0x1853
000000000000182e	jmp	0x185e
0000000000001830	movl	-0x34(%rbp), %edi
0000000000001833	callq	_mig_dealloc_reply_port
0000000000001838	jmp	0x1867
000000000000183a	movl	$0xfffffecc, %ebx
000000000000183f	jmp	0x185e
0000000000001841	movl	$0xfffffed3, %ebx
0000000000001846	jmp	0x185e
0000000000001848	cmpl	$0x28, %ecx
000000000000184b	jne	0x185e
000000000000184d	cmpl	$0x1, -0x28(%rbp)
0000000000001851	jne	0x185e
0000000000001853	movl	$0xfffffed4, %ebx
0000000000001858	cmpl	$0x0, -0x38(%rbp)
000000000000185c	je	0x1872
000000000000185e	leaq	-0x40(%rbp), %rdi
0000000000001862	callq	_mach_msg_destroy
0000000000001867	movl	%ebx, %eax
0000000000001869	addq	$0x40, %rsp
000000000000186d	popq	%rbx
000000000000186e	popq	%r14
0000000000001870	popq	%rbp
0000000000001871	retq
0000000000001872	testl	%eax, %eax
0000000000001874	js	0x187f
0000000000001876	movl	-0x20(%rbp), %ebx
0000000000001879	testl	%ebx, %ebx
000000000000187b	jne	0x185e
000000000000187d	jmp	0x188d
000000000000187f	movzwl	-0x1a(%rbp), %eax
0000000000001883	shll	$0x10, %eax
0000000000001886	cmpl	$0x110000, %eax
000000000000188b	jne	0x185e
000000000000188d	movl	-0x24(%rbp), %eax
0000000000001890	movl	%eax, (%r14)
0000000000001893	xorl	%ebx, %ebx
0000000000001895	jmp	0x1867
_mach_port_mod_refs:
0000000000001897	pushq	%rbp
0000000000001898	movq	%rsp, %rbp
000000000000189b	pushq	%r15
000000000000189d	pushq	%r14
000000000000189f	pushq	%r12
00000000000018a1	pushq	%rbx
00000000000018a2	movl	%ecx, %r14d
00000000000018a5	movl	%edx, %r15d
00000000000018a8	movl	%esi, %r12d
00000000000018ab	movl	%edi, %ebx
00000000000018ad	callq	__kernelrpc_mach_port_mod_refs_trap
00000000000018b2	cmpl	$0x10000003, %eax
00000000000018b7	jne	0x18d1
00000000000018b9	movl	%ebx, %edi
00000000000018bb	movl	%r12d, %esi
00000000000018be	movl	%r15d, %edx
00000000000018c1	movl	%r14d, %ecx
00000000000018c4	popq	%rbx
00000000000018c5	popq	%r12
00000000000018c7	popq	%r14
00000000000018c9	popq	%r15
00000000000018cb	popq	%rbp
00000000000018cc	jmp	__kernelrpc_mach_port_mod_refs
00000000000018d1	popq	%rbx
00000000000018d2	popq	%r12
00000000000018d4	popq	%r14
00000000000018d6	popq	%r15
00000000000018d8	popq	%rbp
00000000000018d9	retq
_task_info:
00000000000018da	pushq	%rbp
00000000000018db	movq	%rsp, %rbp
00000000000018de	pushq	%r15
00000000000018e0	pushq	%r14
00000000000018e2	pushq	%r12
00000000000018e4	pushq	%rbx
00000000000018e5	subq	$0x1a0, %rsp
00000000000018ec	movq	%rcx, %r15
00000000000018ef	leaq	_NDR_record(%rip), %rax
00000000000018f6	movq	(%rax), %rax
00000000000018f9	leaq	-0x1b0(%rbp), %rbx
0000000000001900	movq	%rax, 0x18(%rbx)
0000000000001904	movl	%esi, 0x20(%rbx)
0000000000001907	movl	(%rcx), %eax
0000000000001909	movl	$0x57, %ecx
000000000000190e	cmpl	%ecx, %eax
0000000000001910	cmovbl	%eax, %ecx
0000000000001913	movq	%rdx, %r14
0000000000001916	movl	%ecx, 0x24(%rbx)
0000000000001919	movl	$0x1513, (%rbx)
000000000000191f	movl	%edi, 0x8(%rbx)
0000000000001922	callq	_mig_get_reply_port
0000000000001927	movl	%eax, 0xc(%rbx)
000000000000192a	movabsq	$0xd4d00000000, %rcx
0000000000001934	movq	%rcx, 0x10(%rbx)
0000000000001938	movl	$0x0, (%rsp)
000000000000193f	movq	%rbx, %rdi
0000000000001942	movl	$0x3, %esi
0000000000001947	movl	$0x28, %edx
000000000000194c	movl	$0x18c, %ecx
0000000000001951	movl	%eax, %r8d
0000000000001954	xorl	%r9d, %r9d
0000000000001957	callq	_mach_msg
000000000000195c	movl	%eax, %ebx
000000000000195e	leal	-0x10000002(%rbx), %eax
0000000000001964	cmpl	$0xe, %eax
0000000000001967	ja	0x1980
0000000000001969	movl	$0x4003, %ecx
000000000000196e	btl	%eax, %ecx
0000000000001971	jae	0x1980
0000000000001973	movl	-0x1a4(%rbp), %edi
0000000000001979	callq	_mig_put_reply_port
000000000000197e	jmp	0x19f4
0000000000001980	testl	%ebx, %ebx
0000000000001982	jne	0x19cf
0000000000001984	movl	-0x19c(%rbp), %eax
000000000000198a	cmpl	$0x47, %eax
000000000000198d	je	0x19dc
000000000000198f	cmpl	$0xdb1, %eax
0000000000001994	jne	0x19e3
0000000000001996	cmpl	$0x0, -0x1b0(%rbp)
000000000000199d	js	0x19c8
000000000000199f	movl	-0x1ac(%rbp), %eax
00000000000019a5	leal	-0x28(%rax), %ecx
00000000000019a8	cmpl	$0x15d, %ecx
00000000000019ae	jb	0x19bf
00000000000019b0	cmpl	$0x24, %eax
00000000000019b3	jne	0x19c8
00000000000019b5	movl	-0x190(%rbp), %edx
00000000000019bb	testl	%edx, %edx
00000000000019bd	je	0x19c8
00000000000019bf	cmpl	$0x0, -0x1a8(%rbp)
00000000000019c6	je	0x1a06
00000000000019c8	movl	$0xfffffed4, %ebx
00000000000019cd	jmp	0x19e8
00000000000019cf	movl	-0x1a4(%rbp), %edi
00000000000019d5	callq	_mig_dealloc_reply_port
00000000000019da	jmp	0x19f4
00000000000019dc	movl	$0xfffffecc, %ebx
00000000000019e1	jmp	0x19e8
00000000000019e3	movl	$0xfffffed3, %ebx
00000000000019e8	leaq	-0x1b0(%rbp), %rdi
00000000000019ef	callq	_mach_msg_destroy
00000000000019f4	movl	%ebx, %eax
00000000000019f6	addq	$0x1a0, %rsp
00000000000019fd	popq	%rbx
00000000000019fe	popq	%r12
0000000000001a00	popq	%r14
0000000000001a02	popq	%r15
0000000000001a04	popq	%rbp
0000000000001a05	retq
0000000000001a06	movl	-0x190(%rbp), %ebx
0000000000001a0c	testl	%ebx, %ebx
0000000000001a0e	jne	0x19e8
0000000000001a10	movl	-0x18c(%rbp), %r12d
0000000000001a17	cmpl	$0x57, %r12d
0000000000001a1b	ja	0x19c8
0000000000001a1d	shrl	$0x2, %ecx
0000000000001a20	cmpl	%r12d, %ecx
0000000000001a23	jb	0x19c8
0000000000001a25	leal	0x28(,%r12,4), %ecx
0000000000001a2d	movl	$0xfffffed4, %ebx
0000000000001a32	cmpl	%ecx, %eax
0000000000001a34	jne	0x19e8
0000000000001a36	movl	(%r15), %edx
0000000000001a39	leaq	-0x188(%rbp), %rsi
0000000000001a40	cmpl	%edx, %r12d
0000000000001a43	jbe	0x1a5a
0000000000001a45	shll	$0x2, %edx
0000000000001a48	movq	%r14, %rdi
0000000000001a4b	callq	_memcpy
0000000000001a50	movl	%r12d, (%r15)
0000000000001a53	movl	$0xfffffecd, %ebx
0000000000001a58	jmp	0x19f4
0000000000001a5a	leal	(,%r12,4), %eax
0000000000001a62	movl	%eax, %edx
0000000000001a64	movq	%r14, %rdi
0000000000001a67	callq	_memcpy
0000000000001a6c	movl	%r12d, (%r15)
0000000000001a6f	xorl	%ebx, %ebx
0000000000001a71	jmp	0x19f4
0000000000001a73	nop
_csops_audittoken:
0000000000001a74	movl	$0x20000aa, %eax
0000000000001a79	movq	%rcx, %r10
0000000000001a7c	syscall
0000000000001a7e	jae	0x1a88
0000000000001a80	movq	%rax, %rdi
0000000000001a83	jmp	_cerror_nocancel
0000000000001a88	retq
_cerror_nocancel:
0000000000001a89	movl	%edi, _errno(%rip)
0000000000001a8f	movq	%gs:0x8, %rax
0000000000001a98	testq	%rax, %rax
0000000000001a9b	je	0x1a9f
0000000000001a9d	movl	%edi, (%rax)
0000000000001a9f	movq	$-0x1, %rax
0000000000001aa6	movq	$-0x1, %rdx
0000000000001aad	retq
___error:
0000000000001aae	movq	%gs:0x8, %rcx
0000000000001ab7	testq	%rcx, %rcx
0000000000001aba	leaq	_errno(%rip), %rax
0000000000001ac1	cmovneq	%rcx, %rax
0000000000001ac5	retq
0000000000001ac6	nop
0000000000001ac7	nop
_getattrlist:
___getattrlist:
0000000000001ac8	movl	$0x20000dc, %eax
0000000000001acd	movq	%rcx, %r10
0000000000001ad0	syscall
0000000000001ad2	jae	0x1adc
0000000000001ad4	movq	%rax, %rdi
0000000000001ad7	jmp	_cerror_nocancel
0000000000001adc	retq
0000000000001add	nop
0000000000001ade	nop
0000000000001adf	nop
_access:
0000000000001ae0	movl	$0x2000021, %eax
0000000000001ae5	movq	%rcx, %r10
0000000000001ae8	syscall
0000000000001aea	jae	0x1af4
0000000000001aec	movq	%rax, %rdi
0000000000001aef	jmp	_cerror
0000000000001af4	retq
0000000000001af5	nop
0000000000001af6	nop
0000000000001af7	nop
___open:
_open:
0000000000001af8	movl	$0x2000005, %eax
0000000000001afd	movq	%rcx, %r10
0000000000001b00	syscall
0000000000001b02	jae	0x1b0c
0000000000001b04	movq	%rax, %rdi
0000000000001b07	jmp	_cerror
0000000000001b0c	retq
0000000000001b0d	nop
0000000000001b0e	nop
0000000000001b0f	nop
_fstat$INODE64:
_fstat64:
0000000000001b10	movl	$0x2000153, %eax
0000000000001b15	movq	%rcx, %r10
0000000000001b18	syscall
0000000000001b1a	jae	0x1b24
0000000000001b1c	movq	%rax, %rdi
0000000000001b1f	jmp	_cerror_nocancel
0000000000001b24	retq
_csr_check:
0000000000001b25	pushq	%rbp
0000000000001b26	movq	%rsp, %rbp
0000000000001b29	subq	$0x10, %rsp
0000000000001b2d	leaq	-0x4(%rbp), %rsi
0000000000001b31	movl	%edi, (%rsi)
0000000000001b33	movl	$0x4, %edx
0000000000001b38	xorl	%edi, %edi
0000000000001b3a	callq	___csrctl
0000000000001b3f	addq	$0x10, %rsp
0000000000001b43	popq	%rbp
0000000000001b44	retq
0000000000001b45	nop
0000000000001b46	nop
0000000000001b47	nop
___csrctl:
0000000000001b48	movl	$0x20001e3, %eax
0000000000001b4d	movq	%rcx, %r10
0000000000001b50	syscall
0000000000001b52	jae	0x1b5c
0000000000001b54	movq	%rax, %rdi
0000000000001b57	jmp	_cerror_nocancel
0000000000001b5c	retq
_fcntl:
0000000000001b5d	pushq	%rbp
0000000000001b5e	movq	%rsp, %rbp
0000000000001b61	subq	$0xd0, %rsp
0000000000001b68	testb	%al, %al
0000000000001b6a	je	0x1b92
0000000000001b6c	movaps	%xmm0, -0xa0(%rbp)
0000000000001b73	movaps	%xmm1, -0x90(%rbp)
0000000000001b7a	movaps	%xmm2, -0x80(%rbp)
0000000000001b7e	movaps	%xmm3, -0x70(%rbp)
0000000000001b82	movaps	%xmm4, -0x60(%rbp)
0000000000001b86	movaps	%xmm5, -0x50(%rbp)
0000000000001b8a	movaps	%xmm6, -0x40(%rbp)
0000000000001b8e	movaps	%xmm7, -0x30(%rbp)
0000000000001b92	leaq	-0xd0(%rbp), %rax
0000000000001b99	movq	%r9, 0x28(%rax)
0000000000001b9d	movq	%r8, 0x20(%rax)
0000000000001ba1	movq	%rcx, 0x18(%rax)
0000000000001ba5	movq	%rdx, 0x10(%rax)
0000000000001ba9	movq	%rax, -0x10(%rbp)
0000000000001bad	leaq	0x10(%rbp), %rax
0000000000001bb1	movq	%rax, -0x18(%rbp)
0000000000001bb5	movabsq	$0x3000000010, %rax
0000000000001bbf	movq	%rax, -0x20(%rbp)
0000000000001bc3	leal	-0x2a(%rsi), %eax
0000000000001bc6	cmpl	$0x3c, %eax
0000000000001bc9	ja	0x1c11
0000000000001bcb	movabsq	$0x1f9f0212618ac587, %rcx
0000000000001bd5	btq	%rax, %rcx
0000000000001bd9	jae	0x1c11
0000000000001bdb	movslq	-0x20(%rbp), %rcx
0000000000001bdf	cmpq	$0x28, %rcx
0000000000001be3	ja	0x1bf4
0000000000001be5	movq	%rcx, %rax
0000000000001be8	addq	-0x10(%rbp), %rax
0000000000001bec	leal	0x8(%rcx), %ecx
0000000000001bef	movl	%ecx, -0x20(%rbp)
0000000000001bf2	jmp	0x1c00
0000000000001bf4	movq	-0x18(%rbp), %rax
0000000000001bf8	leaq	0x8(%rax), %rcx
0000000000001bfc	movq	%rcx, -0x18(%rbp)
0000000000001c00	movq	(%rax), %rdx
0000000000001c03	callq	___fcntl
0000000000001c08	addq	$0xd0, %rsp
0000000000001c0f	popq	%rbp
0000000000001c10	retq
0000000000001c11	leal	-0x7(%rsi), %eax
0000000000001c14	cmpl	$0x4, %eax
0000000000001c17	jb	0x1bdb
0000000000001c19	movslq	-0x20(%rbp), %rcx
0000000000001c1d	cmpq	$0x28, %rcx
0000000000001c21	ja	0x1c32
0000000000001c23	movq	%rcx, %rax
0000000000001c26	addq	-0x10(%rbp), %rax
0000000000001c2a	leal	0x8(%rcx), %ecx
0000000000001c2d	movl	%ecx, -0x20(%rbp)
0000000000001c30	jmp	0x1c3e
0000000000001c32	movq	-0x18(%rbp), %rax
0000000000001c36	leaq	0x8(%rax), %rcx
0000000000001c3a	movq	%rcx, -0x18(%rbp)
0000000000001c3e	movslq	(%rax), %rdx
0000000000001c41	jmp	0x1c03
0000000000001c43	nop
___fcntl:
0000000000001c44	movl	$0x200005c, %eax
0000000000001c49	movq	%rcx, %r10
0000000000001c4c	syscall
0000000000001c4e	jae	0x1c58
0000000000001c50	movq	%rax, %rdi
0000000000001c53	jmp	_cerror
0000000000001c58	retq
0000000000001c59	nop
0000000000001c5a	nop
0000000000001c5b	nop
_close:
0000000000001c5c	movl	$0x2000006, %eax
0000000000001c61	movq	%rcx, %r10
0000000000001c64	syscall
0000000000001c66	jae	0x1c70
0000000000001c68	movq	%rax, %rdi
0000000000001c6b	jmp	_cerror
0000000000001c70	retq
0000000000001c71	nop
0000000000001c72	nop
0000000000001c73	nop
_read:
0000000000001c74	movl	$0x2000003, %eax
0000000000001c79	movq	%rcx, %r10
0000000000001c7c	syscall
0000000000001c7e	jae	0x1c88
0000000000001c80	movq	%rax, %rdi
0000000000001c83	jmp	_cerror
0000000000001c88	retq
0000000000001c89	nop
0000000000001c8a	nop
0000000000001c8b	nop
_open$NOCANCEL:
___open_nocancel:
0000000000001c8c	movl	$0x200018e, %eax
0000000000001c91	movq	%rcx, %r10
0000000000001c94	syscall
0000000000001c96	jae	0x1ca0
0000000000001c98	movq	%rax, %rdi
0000000000001c9b	jmp	_cerror_nocancel
0000000000001ca0	retq
_mmap:
0000000000001ca1	pushq	%rbp
0000000000001ca2	movq	%rsp, %rbp
0000000000001ca5	pushq	%r15
0000000000001ca7	pushq	%r14
0000000000001ca9	pushq	%r12
0000000000001cab	pushq	%rbx
0000000000001cac	testl	$0xfff, %r9d
0000000000001cb3	je	0x1cd2
0000000000001cb5	movl	$0x16, %edi
0000000000001cba	callq	_cerror_nocancel
0000000000001cbf	movq	$-0x1, %rbx
0000000000001cc6	movq	%rbx, %rax
0000000000001cc9	popq	%rbx
0000000000001cca	popq	%r12
0000000000001ccc	popq	%r14
0000000000001cce	popq	%r15
0000000000001cd0	popq	%rbp
0000000000001cd1	retq
0000000000001cd2	movq	%rsi, %r14
0000000000001cd5	testq	%rsi, %rsi
0000000000001cd8	je	0x1cb5
0000000000001cda	movl	%ecx, %r15d
0000000000001cdd	movl	%ecx, %eax
0000000000001cdf	andl	$0x3, %eax
0000000000001ce2	je	0x1cb5
0000000000001ce4	movl	%r8d, %r12d
0000000000001ce7	movq	%r14, %rsi
0000000000001cea	movl	%r15d, %ecx
0000000000001ced	callq	___mmap
0000000000001cf2	movq	%rax, %rbx
0000000000001cf5	leaq	___syscall_logger(%rip), %rax
0000000000001cfc	movq	(%rax), %rax
0000000000001cff	testq	%rax, %rax
0000000000001d02	je	0x1cc6
0000000000001d04	andl	$0xff000000, %r12d
0000000000001d0b	orl	$0x10, %r12d
0000000000001d0f	btl	$0xc, %r15d
0000000000001d14	movl	$0x90, %edi
0000000000001d19	cmovbl	%r12d, %edi
0000000000001d1d	leaq	_mach_task_self_(%rip), %rcx
0000000000001d24	movl	(%rcx), %esi
0000000000001d26	movq	%r14, %rdx
0000000000001d29	xorl	%ecx, %ecx
0000000000001d2b	movq	%rbx, %r8
0000000000001d2e	xorl	%r9d, %r9d
0000000000001d31	callq	*%rax
0000000000001d33	jmp	0x1cc6
0000000000001d35	nop
0000000000001d36	nop
0000000000001d37	nop
___mmap:
0000000000001d38	movl	$0x20000c5, %eax
0000000000001d3d	movq	%rcx, %r10
0000000000001d40	syscall
0000000000001d42	jae	0x1d4c
0000000000001d44	movq	%rax, %rdi
0000000000001d47	jmp	_cerror_nocancel
0000000000001d4c	retq
_voucher_mach_msg_set:
0000000000001d4d	movq	__libkernel_voucher_functions(%rip), %rax
0000000000001d54	movq	0x8(%rax), %rax
0000000000001d58	testq	%rax, %rax
0000000000001d5b	je	0x1d5f
0000000000001d5d	jmpq	*%rax
0000000000001d5f	xorl	%eax, %eax
0000000000001d61	retq
_mach_host_self:
0000000000001d62	jmp	_host_self_trap
_host_get_special_port:
0000000000001d67	pushq	%rbp
0000000000001d68	movq	%rsp, %rbp
0000000000001d6b	pushq	%r14
0000000000001d6d	pushq	%rbx
0000000000001d6e	subq	$0x40, %rsp
0000000000001d72	movq	%rcx, %r14
0000000000001d75	leaq	_NDR_record(%rip), %rax
0000000000001d7c	movq	(%rax), %rax
0000000000001d7f	leaq	-0x40(%rbp), %rbx
0000000000001d83	movq	%rax, 0x18(%rbx)
0000000000001d87	movl	%esi, 0x20(%rbx)
0000000000001d8a	movl	%edx, 0x24(%rbx)
0000000000001d8d	movl	$0x1513, (%rbx)
0000000000001d93	movl	%edi, 0x8(%rbx)
0000000000001d96	callq	_mig_get_reply_port
0000000000001d9b	movl	%eax, 0xc(%rbx)
0000000000001d9e	movabsq	$0x19c00000000, %rcx
0000000000001da8	movq	%rcx, 0x10(%rbx)
0000000000001dac	movl	$0x0, (%rsp)
0000000000001db3	movq	%rbx, %rdi
0000000000001db6	movl	$0x3, %esi
0000000000001dbb	movl	$0x28, %edx
0000000000001dc0	movl	$0x30, %ecx
0000000000001dc5	movl	%eax, %r8d
0000000000001dc8	xorl	%r9d, %r9d
0000000000001dcb	callq	_mach_msg
0000000000001dd0	movl	%eax, %ebx
0000000000001dd2	leal	-0x10000002(%rbx), %eax
0000000000001dd8	cmpl	$0xe, %eax
0000000000001ddb	ja	0x1df1
0000000000001ddd	movl	$0x4003, %ecx
0000000000001de2	btl	%eax, %ecx
0000000000001de5	jae	0x1df1
0000000000001de7	movl	-0x34(%rbp), %edi
0000000000001dea	callq	_mig_put_reply_port
0000000000001def	jmp	0x1e58
0000000000001df1	testl	%ebx, %ebx
0000000000001df3	jne	0x1e21
0000000000001df5	movl	-0x2c(%rbp), %eax
0000000000001df8	cmpl	$0x47, %eax
0000000000001dfb	je	0x1e2b
0000000000001dfd	cmpl	$0x200, %eax
0000000000001e02	jne	0x1e32
0000000000001e04	movl	-0x40(%rbp), %eax
0000000000001e07	movl	-0x3c(%rbp), %ecx
0000000000001e0a	movl	$0xfffffed4, %ebx
0000000000001e0f	testl	%eax, %eax
0000000000001e11	js	0x1e39
0000000000001e13	cmpl	$0x24, %ecx
0000000000001e16	jne	0x1e4f
0000000000001e18	movl	-0x20(%rbp), %ecx
0000000000001e1b	testl	%ecx, %ecx
0000000000001e1d	jne	0x1e44
0000000000001e1f	jmp	0x1e4f
0000000000001e21	movl	-0x34(%rbp), %edi
0000000000001e24	callq	_mig_dealloc_reply_port
0000000000001e29	jmp	0x1e58
0000000000001e2b	movl	$0xfffffecc, %ebx
0000000000001e30	jmp	0x1e4f
0000000000001e32	movl	$0xfffffed3, %ebx
0000000000001e37	jmp	0x1e4f
0000000000001e39	cmpl	$0x28, %ecx
0000000000001e3c	jne	0x1e4f
0000000000001e3e	cmpl	$0x1, -0x28(%rbp)
0000000000001e42	jne	0x1e4f
0000000000001e44	movl	$0xfffffed4, %ebx
0000000000001e49	cmpl	$0x0, -0x38(%rbp)
0000000000001e4d	je	0x1e63
0000000000001e4f	leaq	-0x40(%rbp), %rdi
0000000000001e53	callq	_mach_msg_destroy
0000000000001e58	movl	%ebx, %eax
0000000000001e5a	addq	$0x40, %rsp
0000000000001e5e	popq	%rbx
0000000000001e5f	popq	%r14
0000000000001e61	popq	%rbp
0000000000001e62	retq
0000000000001e63	testl	%eax, %eax
0000000000001e65	js	0x1e70
0000000000001e67	movl	-0x20(%rbp), %ebx
0000000000001e6a	testl	%ebx, %ebx
0000000000001e6c	jne	0x1e4f
0000000000001e6e	jmp	0x1e7e
0000000000001e70	movzwl	-0x1a(%rbp), %eax
0000000000001e74	shll	$0x10, %eax
0000000000001e77	cmpl	$0x110000, %eax
0000000000001e7c	jne	0x1e4f
0000000000001e7e	movl	-0x24(%rbp), %eax
0000000000001e81	movl	%eax, (%r14)
0000000000001e84	xorl	%ebx, %ebx
0000000000001e86	jmp	0x1e58
0000000000001e88	nop
0000000000001e89	nop
0000000000001e8a	nop
_mach_msg_destroy:
0000000000001e8b	pushq	%rbp
0000000000001e8c	movq	%rsp, %rbp
0000000000001e8f	pushq	%r15
0000000000001e91	pushq	%r14
0000000000001e93	pushq	%r13
0000000000001e95	pushq	%r12
0000000000001e97	pushq	%rbx
0000000000001e98	pushq	%rax
0000000000001e99	movq	%rdi, %r15
0000000000001e9c	movl	(%rdi), %ebx
0000000000001e9e	movl	0x8(%rdi), %edi
0000000000001ea1	movl	%ebx, %esi
0000000000001ea3	andl	$0x1f, %esi
0000000000001ea6	callq	_mach_msg_destroy_port
0000000000001eab	movl	0x10(%r15), %edi
0000000000001eaf	movl	%ebx, %esi
0000000000001eb1	shrl	$0x10, %esi
0000000000001eb4	andl	$0x1f, %esi
0000000000001eb7	callq	_mach_msg_destroy_port
0000000000001ebc	testl	%ebx, %ebx
0000000000001ebe	jns	0x1fd9
0000000000001ec4	movl	0x18(%r15), %r14d
0000000000001ec8	testl	%r14d, %r14d
0000000000001ecb	je	0x1fd9
0000000000001ed1	addq	$0x1c, %r15
0000000000001ed5	xorl	%ebx, %ebx
0000000000001ed7	leaq	0x10a(%rip), %r12
0000000000001ede	leaq	_mach_task_self_(%rip), %r13
0000000000001ee5	movl	0x8(%r15), %eax
0000000000001ee9	movl	%eax, %ecx
0000000000001eeb	shrl	$0x18, %ecx
0000000000001eee	cmpb	$0x4, %cl
0000000000001ef1	ja	0x1fce
0000000000001ef7	movslq	(%r12,%rcx,4), %rcx
0000000000001efb	addq	%r12, %rcx
0000000000001efe	jmpq	*%rcx
0000000000001f00	movl	(%r15), %edi
0000000000001f03	shrl	$0x10, %eax
0000000000001f06	movzbl	%al, %esi
0000000000001f09	callq	_mach_msg_destroy_port
0000000000001f0e	addq	$0xc, %r15
0000000000001f12	jmp	0x1fce
0000000000001f17	testb	%al, %al
0000000000001f19	je	0x1fca
0000000000001f1f	movl	0xc(%r15), %edx
0000000000001f23	testq	%rdx, %rdx
0000000000001f26	jne	0x1f95
0000000000001f28	jmp	0x1fca
0000000000001f2d	cmpl	$0x0, 0xc(%r15)
0000000000001f32	je	0x1fca
0000000000001f38	movq	(%r15), %r13
0000000000001f3b	movl	(%r13), %edi
0000000000001f3f	shrl	$0x10, %eax
0000000000001f42	movzbl	%al, %esi
0000000000001f45	callq	_mach_msg_destroy_port
0000000000001f4a	movl	0xc(%r15), %eax
0000000000001f4e	cmpl	$0x2, %eax
0000000000001f51	jb	0x1f74
0000000000001f53	movl	$0x1, %r12d
0000000000001f59	movzbl	0xa(%r15), %esi
0000000000001f5e	movl	(%r13,%r12,4), %edi
0000000000001f63	callq	_mach_msg_destroy_port
0000000000001f68	movl	0xc(%r15), %eax
0000000000001f6c	incq	%r12
0000000000001f6f	cmpl	%eax, %r12d
0000000000001f72	jb	0x1f59
0000000000001f74	testl	%eax, %eax
0000000000001f76	leaq	0x6b(%rip), %r12
0000000000001f7d	leaq	_mach_task_self_(%rip), %r13
0000000000001f84	je	0x1fca
0000000000001f86	movzbl	0x8(%r15), %ecx
0000000000001f8b	testl	%ecx, %ecx
0000000000001f8d	je	0x1fca
0000000000001f8f	movl	%eax, %edx
0000000000001f91	shlq	$0x2, %rdx
0000000000001f95	movq	(%r15), %rsi
0000000000001f98	movl	(%r13), %edi
0000000000001f9c	callq	_vm_deallocate
0000000000001fa1	jmp	0x1fca
0000000000001fa3	testb	$0x2, %al
0000000000001fa5	jne	0x1fbb
0000000000001fa7	movl	(%r13), %edi
0000000000001fab	movl	0xc(%r15), %esi
0000000000001faf	movq	(%r15), %rdx
0000000000001fb2	callq	_mach_port_unguard
0000000000001fb7	movl	0x8(%r15), %eax
0000000000001fbb	movl	0xc(%r15), %edi
0000000000001fbf	shrl	$0x10, %eax
0000000000001fc2	movzbl	%al, %esi
0000000000001fc5	callq	_mach_msg_destroy_port
0000000000001fca	addq	$0x10, %r15
0000000000001fce	incl	%ebx
0000000000001fd0	cmpl	%r14d, %ebx
0000000000001fd3	jne	0x1ee5
0000000000001fd9	addq	$0x8, %rsp
0000000000001fdd	popq	%rbx
0000000000001fde	popq	%r12
0000000000001fe0	popq	%r13
0000000000001fe2	popq	%r14
0000000000001fe4	popq	%r15
0000000000001fe6	popq	%rbp
0000000000001fe7	retq
0000000000001fe8	sbbb	%bh, %bh
0000000000001fea	.byte 0xff #bad opcode
0000000000001feb	ljmpl	*(%rdi)
0000000000001fed	.byte 0xff #bad opcode
0000000000001fee	.byte 0xff #bad opcode
0000000000001fef	incl	-0x1(%rbp)
0000000000001ff2	.byte 0xff #bad opcode
0000000000001ff3	jmpq	*%rdx
0000000000001ff5	.byte 0xff #bad opcode
0000000000001ff6	.byte 0xff #bad opcode
0000000000001ff7	.byte 0xff #bad opcode
0000000000001ff8	movl	$0x55ffffff, %ebx
_mach_msg_destroy_port:
0000000000001ffc	pushq	%rbp
0000000000001ffd	movq	%rsp, %rbp
0000000000002000	pushq	%r15
0000000000002002	pushq	%r14
0000000000002004	pushq	%rbx
0000000000002005	pushq	%rax
0000000000002006	movl	%edi, %ebx
0000000000002008	movl	%edi, -0x20(%rbp)
000000000000200b	movl	%esi, -0x1c(%rbp)
000000000000200e	leal	0x1(%rbx), %eax
0000000000002011	cmpl	$0x2, %eax
0000000000002014	jb	0x20bd
000000000000201a	addl	$-0x10, %esi
000000000000201d	cmpl	$0x5, %esi
0000000000002020	ja	0x20bd
0000000000002026	leaq	0x9b(%rip), %rax
000000000000202d	movslq	(%rax,%rsi,4), %rcx
0000000000002031	addq	%rax, %rcx
0000000000002034	jmpq	*%rcx
0000000000002036	leaq	_mach_task_self_(%rip), %rax
000000000000203d	movl	(%rax), %edi
000000000000203f	jmp	0x2080
0000000000002041	leaq	_mach_task_self_(%rip), %rax
0000000000002048	movl	(%rax), %edi
000000000000204a	movl	%ebx, %esi
000000000000204c	movl	$0x1, %edx
0000000000002051	movl	$0xffffffff, %ecx
0000000000002056	addq	$0x8, %rsp
000000000000205a	popq	%rbx
000000000000205b	popq	%r14
000000000000205d	popq	%r15
000000000000205f	popq	%rbp
0000000000002060	jmp	_mach_port_mod_refs
0000000000002065	leaq	_mach_task_self_(%rip), %r14
000000000000206c	movl	(%r14), %edi
000000000000206f	movl	%ebx, %esi
0000000000002071	movl	%ebx, %edx
0000000000002073	movl	$0x14, %ecx
0000000000002078	callq	_mach_port_insert_right
000000000000207d	movl	(%r14), %edi
0000000000002080	movl	%ebx, %esi
0000000000002082	addq	$0x8, %rsp
0000000000002086	popq	%rbx
0000000000002087	popq	%r14
0000000000002089	popq	%r15
000000000000208b	popq	%rbp
000000000000208c	jmp	_mach_port_deallocate
0000000000002091	leaq	_mach_task_self_(%rip), %r15
0000000000002098	movl	(%r15), %edi
000000000000209b	leaq	-0x20(%rbp), %r14
000000000000209f	leaq	-0x1c(%rbp), %r8
00000000000020a3	movl	%ebx, %esi
00000000000020a5	movl	$0x15, %edx
00000000000020aa	movq	%r14, %rcx
00000000000020ad	callq	_mach_port_extract_right
00000000000020b2	movl	(%r15), %edi
00000000000020b5	movl	(%r14), %esi
00000000000020b8	callq	_mach_port_deallocate
00000000000020bd	addq	$0x8, %rsp
00000000000020c1	popq	%rbx
00000000000020c2	popq	%r14
00000000000020c4	popq	%r15
00000000000020c6	popq	%rbp
00000000000020c7	retq
00000000000020c8	jns	0x20c9
00000000000020ca	.byte 0xff #bad opcode
00000000000020cb	ljmpl	*-0x1(%rsi)
00000000000020ce	.byte 0xff #bad opcode
00000000000020cf	ljmpl	*-0x1(%rsi)
00000000000020d2	.byte 0xff #bad opcode
00000000000020d3	pushq	%rbp
00000000000020d5	.byte 0xff #bad opcode
00000000000020d6	.byte 0xff #bad opcode
00000000000020d7	lcalll	*-0x36000001(%rbp)
00000000000020dd	.byte 0xff #bad opcode
00000000000020de	.byte 0xff #bad opcode
00000000000020df	callq	*0x48(%rbp)
_host_create_mach_voucher:
00000000000020e0	pushq	%rbp
00000000000020e1	movq	%rsp, %rbp
00000000000020e4	pushq	%r15
00000000000020e6	pushq	%r14
00000000000020e8	pushq	%r12
00000000000020ea	pushq	%rbx
00000000000020eb	movq	%rcx, %r14
00000000000020ee	movl	%edx, %r15d
00000000000020f1	movq	%rsi, %r12
00000000000020f4	movl	%edi, %ebx
00000000000020f6	callq	_host_create_mach_voucher_trap
00000000000020fb	movl	%eax, %ecx
00000000000020fd	cmpl	$0x1000046, %eax
0000000000002102	movl	$0x10000003, %eax
0000000000002107	cmovnel	%ecx, %eax
000000000000210a	cmpl	$0x10000003, %eax
000000000000210f	jne	0x2129
0000000000002111	movl	%ebx, %edi
0000000000002113	movq	%r12, %rsi
0000000000002116	movl	%r15d, %edx
0000000000002119	movq	%r14, %rcx
000000000000211c	popq	%rbx
000000000000211d	popq	%r12
000000000000211f	popq	%r14
0000000000002121	popq	%r15
0000000000002123	popq	%rbp
0000000000002124	jmp	__kernelrpc_host_create_mach_voucher
0000000000002129	popq	%rbx
000000000000212a	popq	%r12
000000000000212c	popq	%r14
000000000000212e	popq	%r15
0000000000002130	popq	%rbp
0000000000002131	retq
_voucher_mach_msg_clear:
0000000000002132	movq	__libkernel_voucher_functions(%rip), %rax
0000000000002139	movq	0x10(%rax), %rax
000000000000213d	testq	%rax, %rax
0000000000002140	je	0x2144
0000000000002142	jmpq	*%rax
0000000000002144	retq
_mach_port_construct:
0000000000002145	pushq	%rbp
0000000000002146	movq	%rsp, %rbp
0000000000002149	pushq	%r15
000000000000214b	pushq	%r14
000000000000214d	pushq	%r12
000000000000214f	pushq	%rbx
0000000000002150	movq	%rcx, %r14
0000000000002153	movq	%rdx, %r15
0000000000002156	movq	%rsi, %r12
0000000000002159	movl	%edi, %ebx
000000000000215b	callq	__kernelrpc_mach_port_construct_trap
0000000000002160	cmpl	$0x10000003, %eax
0000000000002165	jne	0x217f
0000000000002167	movl	%ebx, %edi
0000000000002169	movq	%r12, %rsi
000000000000216c	movq	%r15, %rdx
000000000000216f	movq	%r14, %rcx
0000000000002172	popq	%rbx
0000000000002173	popq	%r12
0000000000002175	popq	%r14
0000000000002177	popq	%r15
0000000000002179	popq	%rbp
000000000000217a	jmp	__kernelrpc_mach_port_construct
000000000000217f	popq	%rbx
0000000000002180	popq	%r12
0000000000002182	popq	%r14
0000000000002184	popq	%r15
0000000000002186	popq	%rbp
0000000000002187	retq
_task_set_special_port:
0000000000002188	pushq	%rbp
0000000000002189	movq	%rsp, %rbp
000000000000218c	pushq	%rbx
000000000000218d	subq	$0x48, %rsp
0000000000002191	leaq	-0x40(%rbp), %rbx
0000000000002195	movl	$0x1, 0x18(%rbx)
000000000000219c	movl	%edx, 0x1c(%rbx)
000000000000219f	movl	$0x130000, 0x24(%rbx)
00000000000021a6	leaq	_NDR_record(%rip), %rax
00000000000021ad	movq	(%rax), %rax
00000000000021b0	movq	%rax, 0x28(%rbx)
00000000000021b4	movl	%esi, 0x30(%rbx)
00000000000021b7	movl	$0x80001513, (%rbx)
00000000000021bd	movl	%edi, 0x8(%rbx)
00000000000021c0	callq	_mig_get_reply_port
00000000000021c5	movl	%eax, 0xc(%rbx)
00000000000021c8	movabsq	$0xd5200000000, %rcx
00000000000021d2	movq	%rcx, 0x10(%rbx)
00000000000021d6	movl	$0x0, (%rsp)
00000000000021dd	movq	%rbx, %rdi
00000000000021e0	movl	$0x3, %esi
00000000000021e5	movl	$0x34, %edx
00000000000021ea	movl	$0x2c, %ecx
00000000000021ef	movl	%eax, %r8d
00000000000021f2	xorl	%r9d, %r9d
00000000000021f5	callq	_mach_msg
00000000000021fa	movl	%eax, %ebx
00000000000021fc	leal	-0x10000002(%rbx), %eax
0000000000002202	cmpl	$0xe, %eax
0000000000002205	ja	0x221b
0000000000002207	movl	$0x4003, %ecx
000000000000220c	btl	%eax, %ecx
000000000000220f	jae	0x221b
0000000000002211	movl	-0x34(%rbp), %edi
0000000000002214	callq	_mig_put_reply_port
0000000000002219	jmp	0x2270
000000000000221b	testl	%ebx, %ebx
000000000000221d	jne	0x2251
000000000000221f	movl	-0x2c(%rbp), %eax
0000000000002222	cmpl	$0x47, %eax
0000000000002225	je	0x225b
0000000000002227	cmpl	$0xdb6, %eax
000000000000222c	jne	0x2262
000000000000222e	movl	$0xfffffed4, %ebx
0000000000002233	cmpl	$0x0, -0x40(%rbp)
0000000000002237	js	0x2267
0000000000002239	cmpl	$0x24, -0x3c(%rbp)
000000000000223d	jne	0x2267
000000000000223f	movl	-0x38(%rbp), %eax
0000000000002242	testl	%eax, %eax
0000000000002244	jne	0x2267
0000000000002246	movl	-0x20(%rbp), %ebx
0000000000002249	testl	%ebx, %ebx
000000000000224b	jne	0x2267
000000000000224d	xorl	%ebx, %ebx
000000000000224f	jmp	0x2270
0000000000002251	movl	-0x34(%rbp), %edi
0000000000002254	callq	_mig_dealloc_reply_port
0000000000002259	jmp	0x2270
000000000000225b	movl	$0xfffffecc, %ebx
0000000000002260	jmp	0x2267
0000000000002262	movl	$0xfffffed3, %ebx
0000000000002267	leaq	-0x40(%rbp), %rdi
000000000000226b	callq	_mach_msg_destroy
0000000000002270	movl	%ebx, %eax
0000000000002272	addq	$0x48, %rsp
0000000000002276	popq	%rbx
0000000000002277	popq	%rbp
0000000000002278	retq
0000000000002279	nop
000000000000227a	nop
000000000000227b	nop
_geteuid:
000000000000227c	movl	$0x2000019, %eax
0000000000002281	movq	%rcx, %r10
0000000000002284	syscall
0000000000002286	jae	0x2290
0000000000002288	movq	%rax, %rdi
000000000000228b	jmp	_cerror_nocancel
0000000000002290	retq
_mach_port_deallocate:
0000000000002291	pushq	%rbp
0000000000002292	movq	%rsp, %rbp
0000000000002295	pushq	%r14
0000000000002297	pushq	%rbx
0000000000002298	movl	%esi, %r14d
000000000000229b	movl	%edi, %ebx
000000000000229d	callq	__kernelrpc_mach_port_deallocate_trap
00000000000022a2	cmpl	$0x10000003, %eax
00000000000022a7	jne	0x22b7
00000000000022a9	movl	%ebx, %edi
00000000000022ab	movl	%r14d, %esi
00000000000022ae	popq	%rbx
00000000000022af	popq	%r14
00000000000022b1	popq	%rbp
00000000000022b2	jmp	__kernelrpc_mach_port_deallocate
00000000000022b7	popq	%rbx
00000000000022b8	popq	%r14
00000000000022ba	popq	%rbp
00000000000022bb	retq
_proc_pidinfo:
00000000000022bc	pushq	%rbp
00000000000022bd	movq	%rsp, %rbp
00000000000022c0	movl	%r8d, %r9d
00000000000022c3	movq	%rcx, %r8
00000000000022c6	movq	%rdx, %rcx
00000000000022c9	movl	%esi, %edx
00000000000022cb	movl	%edi, %esi
00000000000022cd	movl	$0x2, %edi
00000000000022d2	callq	___proc_info
00000000000022d7	xorl	%ecx, %ecx
00000000000022d9	cmpl	$-0x1, %eax
00000000000022dc	cmovel	%ecx, %eax
00000000000022df	popq	%rbp
00000000000022e0	retq
00000000000022e1	nop
00000000000022e2	nop
00000000000022e3	nop
___proc_info:
00000000000022e4	movl	$0x2000150, %eax
00000000000022e9	movq	%rcx, %r10
00000000000022ec	syscall
00000000000022ee	jae	0x22f8
00000000000022f0	movq	%rax, %rdi
00000000000022f3	jmp	_cerror_nocancel
00000000000022f8	retq
__kernelrpc_mach_vm_map:
00000000000022f9	pushq	%rbp
00000000000022fa	movq	%rsp, %rbp
00000000000022fd	pushq	%r15
00000000000022ff	pushq	%r14
0000000000002301	pushq	%r12
0000000000002303	pushq	%rbx
0000000000002304	subq	$0x70, %rsp
0000000000002308	movq	%rsi, %r14
000000000000230b	movl	0x30(%rbp), %r10d
000000000000230f	movl	0x28(%rbp), %r11d
0000000000002313	movl	0x20(%rbp), %r15d
0000000000002317	movl	0x18(%rbp), %r12d
000000000000231b	movq	0x10(%rbp), %rax
000000000000231f	leaq	-0x88(%rbp), %rbx
0000000000002326	movl	$0x1, 0x18(%rbx)
000000000000232d	movl	%r9d, 0x1c(%rbx)
0000000000002331	movl	$0x130000, 0x24(%rbx)
0000000000002338	leaq	_NDR_record(%rip), %rsi
000000000000233f	movq	(%rsi), %rsi
0000000000002342	movq	%rsi, 0x28(%rbx)
0000000000002346	movq	(%r14), %rsi
0000000000002349	movq	%rsi, 0x30(%rbx)
000000000000234d	movq	%rdx, 0x38(%rbx)
0000000000002351	movq	%rcx, 0x40(%rbx)
0000000000002355	movl	%r8d, 0x48(%rbx)
0000000000002359	movq	%rax, 0x4c(%rbx)
000000000000235d	movl	%r12d, 0x54(%rbx)
0000000000002361	movl	%r15d, 0x58(%rbx)
0000000000002365	movl	%r11d, 0x5c(%rbx)
0000000000002369	movl	%r10d, 0x60(%rbx)
000000000000236d	movl	$0x80001513, (%rbx)
0000000000002373	movl	%edi, 0x8(%rbx)
0000000000002376	callq	_mig_get_reply_port
000000000000237b	movl	%eax, 0xc(%rbx)
000000000000237e	movabsq	$0x12cb00000000, %rcx
0000000000002388	movq	%rcx, 0x10(%rbx)
000000000000238c	movl	$0x0, (%rsp)
0000000000002393	movq	%rbx, %rdi
0000000000002396	movl	$0x3, %esi
000000000000239b	movl	$0x64, %edx
00000000000023a0	movl	$0x34, %ecx
00000000000023a5	movl	%eax, %r8d
00000000000023a8	xorl	%r9d, %r9d
00000000000023ab	callq	_mach_msg
00000000000023b0	movl	%eax, %ebx
00000000000023b2	leal	-0x10000002(%rbx), %eax
00000000000023b8	cmpl	$0xe, %eax
00000000000023bb	ja	0x23d1
00000000000023bd	movl	$0x4003, %ecx
00000000000023c2	btl	%eax, %ecx
00000000000023c5	jae	0x23d1
00000000000023c7	movl	-0x7c(%rbp), %edi
00000000000023ca	callq	_mig_put_reply_port
00000000000023cf	jmp	0x2442
00000000000023d1	testl	%ebx, %ebx
00000000000023d3	jne	0x2420
00000000000023d5	movl	-0x74(%rbp), %eax
00000000000023d8	cmpl	$0x47, %eax
00000000000023db	je	0x242a
00000000000023dd	cmpl	$0x132f, %eax
00000000000023e2	jne	0x2431
00000000000023e4	movl	$0xfffffed4, %ebx
00000000000023e9	cmpl	$0x0, -0x88(%rbp)
00000000000023f0	js	0x2436
00000000000023f2	movl	-0x84(%rbp), %eax
00000000000023f8	cmpl	$0x2c, %eax
00000000000023fb	je	0x2408
00000000000023fd	cmpl	$0x24, %eax
0000000000002400	jne	0x2436
0000000000002402	cmpl	$0x0, -0x68(%rbp)
0000000000002406	je	0x2436
0000000000002408	cmpl	$0x0, -0x80(%rbp)
000000000000240c	jne	0x2436
000000000000240e	movl	-0x68(%rbp), %ebx
0000000000002411	testl	%ebx, %ebx
0000000000002413	jne	0x2436
0000000000002415	movq	-0x64(%rbp), %rax
0000000000002419	movq	%rax, (%r14)
000000000000241c	xorl	%ebx, %ebx
000000000000241e	jmp	0x2442
0000000000002420	movl	-0x7c(%rbp), %edi
0000000000002423	callq	_mig_dealloc_reply_port
0000000000002428	jmp	0x2442
000000000000242a	movl	$0xfffffecc, %ebx
000000000000242f	jmp	0x2436
0000000000002431	movl	$0xfffffed3, %ebx
0000000000002436	leaq	-0x88(%rbp), %rdi
000000000000243d	callq	_mach_msg_destroy
0000000000002442	movl	%ebx, %eax
0000000000002444	addq	$0x70, %rsp
0000000000002448	popq	%rbx
0000000000002449	popq	%r12
000000000000244b	popq	%r14
000000000000244d	popq	%r15
000000000000244f	popq	%rbp
0000000000002450	retq
_mach_make_memory_entry_64:
0000000000002451	pushq	%rbp
0000000000002452	movq	%rsp, %rbp
0000000000002455	pushq	%r15
0000000000002457	pushq	%r14
0000000000002459	pushq	%rbx
000000000000245a	subq	$0x58, %rsp
000000000000245e	movq	%r8, %r14
0000000000002461	movq	%rsi, %r15
0000000000002464	leaq	-0x60(%rbp), %rbx
0000000000002468	movl	$0x1, 0x18(%rbx)
000000000000246f	movl	%r9d, 0x1c(%rbx)
0000000000002473	movl	$0x130000, 0x24(%rbx)
000000000000247a	leaq	_NDR_record(%rip), %rax
0000000000002481	movq	(%rax), %rax
0000000000002484	movq	%rax, 0x28(%rbx)
0000000000002488	movq	(%rsi), %rax
000000000000248b	movq	%rax, 0x30(%rbx)
000000000000248f	movq	%rdx, 0x38(%rbx)
0000000000002493	movl	%ecx, 0x40(%rbx)
0000000000002496	movl	$0x80001513, (%rbx)
000000000000249c	movl	%edi, 0x8(%rbx)
000000000000249f	callq	_mig_get_reply_port
00000000000024a4	movl	%eax, 0xc(%rbx)
00000000000024a7	movabsq	$0x12d100000000, %rcx
00000000000024b1	movq	%rcx, 0x10(%rbx)
00000000000024b5	movl	$0x0, (%rsp)
00000000000024bc	movq	%rbx, %rdi
00000000000024bf	movl	$0x3, %esi
00000000000024c4	movl	$0x44, %edx
00000000000024c9	movl	$0x40, %ecx
00000000000024ce	movl	%eax, %r8d
00000000000024d1	xorl	%r9d, %r9d
00000000000024d4	callq	_mach_msg
00000000000024d9	movl	%eax, %ebx
00000000000024db	leal	-0x10000002(%rbx), %eax
00000000000024e1	cmpl	$0xe, %eax
00000000000024e4	ja	0x24fa
00000000000024e6	movl	$0x4003, %ecx
00000000000024eb	btl	%eax, %ecx
00000000000024ee	jae	0x24fa
00000000000024f0	movl	-0x54(%rbp), %edi
00000000000024f3	callq	_mig_put_reply_port
00000000000024f8	jmp	0x2548
00000000000024fa	testl	%ebx, %ebx
00000000000024fc	jne	0x2529
00000000000024fe	movl	-0x4c(%rbp), %eax
0000000000002501	cmpl	$0x47, %eax
0000000000002504	je	0x2533
0000000000002506	cmpl	$0x1335, %eax
000000000000250b	jne	0x253a
000000000000250d	movl	-0x60(%rbp), %eax
0000000000002510	movl	-0x5c(%rbp), %ecx
0000000000002513	movl	$0xfffffed4, %ebx
0000000000002518	testl	%eax, %eax
000000000000251a	js	0x2555
000000000000251c	cmpl	$0x24, %ecx
000000000000251f	jne	0x253f
0000000000002521	cmpl	$0x0, -0x40(%rbp)
0000000000002525	jne	0x2560
0000000000002527	jmp	0x253f
0000000000002529	movl	-0x54(%rbp), %edi
000000000000252c	callq	_mig_dealloc_reply_port
0000000000002531	jmp	0x2548
0000000000002533	movl	$0xfffffecc, %ebx
0000000000002538	jmp	0x253f
000000000000253a	movl	$0xfffffed3, %ebx
000000000000253f	leaq	-0x60(%rbp), %rdi
0000000000002543	callq	_mach_msg_destroy
0000000000002548	movl	%ebx, %eax
000000000000254a	addq	$0x58, %rsp
000000000000254e	popq	%rbx
000000000000254f	popq	%r14
0000000000002551	popq	%r15
0000000000002553	popq	%rbp
0000000000002554	retq
0000000000002555	cmpl	$0x38, %ecx
0000000000002558	jne	0x253f
000000000000255a	cmpl	$0x1, -0x48(%rbp)
000000000000255e	jne	0x253f
0000000000002560	movl	$0xfffffed4, %ebx
0000000000002565	cmpl	$0x0, -0x58(%rbp)
0000000000002569	jne	0x253f
000000000000256b	testl	%eax, %eax
000000000000256d	js	0x2578
000000000000256f	movl	-0x40(%rbp), %ebx
0000000000002572	testl	%ebx, %ebx
0000000000002574	jne	0x253f
0000000000002576	jmp	0x2586
0000000000002578	movzwl	-0x3a(%rbp), %eax
000000000000257c	shll	$0x10, %eax
000000000000257f	cmpl	$0x110000, %eax
0000000000002584	jne	0x253f
0000000000002586	movq	-0x30(%rbp), %rax
000000000000258a	movq	%rax, (%r15)
000000000000258d	movl	-0x44(%rbp), %eax
0000000000002590	movl	%eax, (%r14)
0000000000002593	xorl	%ebx, %ebx
0000000000002595	jmp	0x2548
0000000000002597	nop
___sysctl:
0000000000002598	movl	$0x20000ca, %eax
000000000000259d	movq	%rcx, %r10
00000000000025a0	syscall
00000000000025a2	jae	0x25ac
00000000000025a4	movq	%rax, %rdi
00000000000025a7	jmp	_cerror_nocancel
00000000000025ac	retq
_mach_approximate_time:
00000000000025ad	movabsq	$0x7fffffe00080, %rax
00000000000025b7	cmpb	$0x0, 0x8(%rax)
00000000000025bb	je	_mach_absolute_time
00000000000025c1	movq	(%rax), %rax
00000000000025c4	retq
_mig_get_special_reply_port:
00000000000025c5	movl	%gs:0x40, %eax
00000000000025cd	leal	0x1(%rax), %ecx
00000000000025d0	movl	$0x1, %edx
00000000000025d5	cmpl	%edx, %ecx
00000000000025d7	ja	0x25ee
00000000000025d9	pushq	%rbp
00000000000025da	movq	%rsp, %rbp
00000000000025dd	callq	_thread_get_special_reply_port
00000000000025e2	movl	%eax, %ecx
00000000000025e4	movq	%rcx, %gs:0x40
00000000000025ed	popq	%rbp
00000000000025ee	retq
_mig_strncpy_zerofill:
00000000000025ef	xorl	%eax, %eax
00000000000025f1	testq	%rdi, %rdi
00000000000025f4	je	0x2644
00000000000025f6	testl	%edx, %edx
00000000000025f8	jle	0x2644
00000000000025fa	xorl	%r8d, %r8d
00000000000025fd	testq	%rsi, %rsi
0000000000002600	sete	%r8b
0000000000002604	xorl	%eax, %eax
0000000000002606	cmpl	$0x2, %edx
0000000000002609	jl	0x263b
000000000000260b	movl	$0x1, %ecx
0000000000002610	xorl	%eax, %eax
0000000000002612	testl	%r8d, %r8d
0000000000002615	je	0x261c
0000000000002617	movb	$0x0, (%rdi)
000000000000261a	jmp	0x2632
000000000000261c	movb	(%rsi), %r9b
000000000000261f	incq	%rsi
0000000000002622	movb	%r9b, (%rdi)
0000000000002625	xorl	%r8d, %r8d
0000000000002628	testb	%r9b, %r9b
000000000000262b	sete	%r8b
000000000000262f	cmovel	%ecx, %eax
0000000000002632	incq	%rdi
0000000000002635	incl	%ecx
0000000000002637	cmpl	%ecx, %edx
0000000000002639	jne	0x2612
000000000000263b	movb	$0x0, (%rdi)
000000000000263e	testl	%r8d, %r8d
0000000000002641	cmovel	%edx, %eax
0000000000002644	retq
0000000000002645	nop
0000000000002646	nop
0000000000002647	nop
___shm_open:
_shm_open:
0000000000002648	movl	$0x200010a, %eax
000000000000264d	movq	%rcx, %r10
0000000000002650	syscall
0000000000002652	jae	0x265c
0000000000002654	movq	%rax, %rdi
0000000000002657	jmp	_cerror_nocancel
000000000000265c	retq
000000000000265d	nop
000000000000265e	nop
000000000000265f	nop
___close_nocancel:
_close$NOCANCEL:
0000000000002660	movl	$0x200018f, %eax
0000000000002665	movq	%rcx, %r10
0000000000002668	syscall
000000000000266a	jae	0x2674
000000000000266c	movq	%rax, %rdi
000000000000266f	jmp	_cerror_nocancel
0000000000002674	retq
0000000000002675	nop
0000000000002676	nop
0000000000002677	nop
___openat:
_openat:
0000000000002678	movl	$0x20001cf, %eax
000000000000267d	movq	%rcx, %r10
0000000000002680	syscall
0000000000002682	jae	0x268c
0000000000002684	movq	%rax, %rdi
0000000000002687	jmp	_cerror
000000000000268c	retq
_cerror:
000000000000268d	pushq	%rbp
000000000000268e	movq	%rsp, %rbp
0000000000002691	pushq	%rbx
0000000000002692	pushq	%rax
0000000000002693	movl	%edi, %ebx
0000000000002695	callq	__pthread_exit_if_canceled
000000000000269a	movl	%ebx, %edi
000000000000269c	callq	_cerror_nocancel
00000000000026a1	movq	$-0x1, %rax
00000000000026a8	movq	$-0x1, %rdx
00000000000026af	addq	$0x8, %rsp
00000000000026b3	popq	%rbx
00000000000026b4	popq	%rbp
00000000000026b5	retq
__pthread_exit_if_canceled:
00000000000026b6	leaq	__libkernel_functions(%rip), %rax
00000000000026bd	movq	(%rax), %rax
00000000000026c0	jmpq	*0x28(%rax)
00000000000026c3	nop
___lseek:
_lseek:
00000000000026c4	movl	$0x20000c7, %eax
00000000000026c9	movq	%rcx, %r10
00000000000026cc	syscall
00000000000026ce	jae	0x26d8
00000000000026d0	movq	%rax, %rdi
00000000000026d3	jmp	_cerror
00000000000026d8	retq
00000000000026d9	nop
00000000000026da	nop
00000000000026db	nop
_pread:
00000000000026dc	movl	$0x2000099, %eax
00000000000026e1	movq	%rcx, %r10
00000000000026e4	syscall
00000000000026e6	jae	0x26f0
00000000000026e8	movq	%rax, %rdi
00000000000026eb	jmp	_cerror
00000000000026f0	retq
00000000000026f1	nop
_mach_voucher_deallocate:
00000000000026f2	movl	%edi, %esi
00000000000026f4	leaq	_mach_task_self_(%rip), %rax
00000000000026fb	movl	(%rax), %edi
00000000000026fd	jmp	_mach_port_deallocate
0000000000002702	nop
0000000000002703	nop
___sysctlbyname:
0000000000002704	movl	$0x2000112, %eax
0000000000002709	movq	%rcx, %r10
000000000000270c	syscall
000000000000270e	jae	0x2718
0000000000002710	movq	%rax, %rdi
0000000000002713	jmp	_cerror_nocancel
0000000000002718	retq
_mach_port_destruct:
0000000000002719	pushq	%rbp
000000000000271a	movq	%rsp, %rbp
000000000000271d	pushq	%r15
000000000000271f	pushq	%r14
0000000000002721	pushq	%r12
0000000000002723	pushq	%rbx
0000000000002724	movq	%rcx, %r14
0000000000002727	movl	%edx, %r15d
000000000000272a	movl	%esi, %r12d
000000000000272d	movl	%edi, %ebx
000000000000272f	callq	__kernelrpc_mach_port_destruct_trap
0000000000002734	cmpl	$0x10000003, %eax
0000000000002739	jne	0x2753
000000000000273b	movl	%ebx, %edi
000000000000273d	movl	%r12d, %esi
0000000000002740	movl	%r15d, %edx
0000000000002743	movq	%r14, %rcx
0000000000002746	popq	%rbx
0000000000002747	popq	%r12
0000000000002749	popq	%r14
000000000000274b	popq	%r15
000000000000274d	popq	%rbp
000000000000274e	jmp	__kernelrpc_mach_port_destruct
0000000000002753	popq	%rbx
0000000000002754	popq	%r12
0000000000002756	popq	%r14
0000000000002758	popq	%r15
000000000000275a	popq	%rbp
000000000000275b	retq
___mac_syscall:
___sandbox_ms:
000000000000275c	movl	$0x200017d, %eax
0000000000002761	movq	%rcx, %r10
0000000000002764	syscall
0000000000002766	jae	0x2770
0000000000002768	movq	%rax, %rdi
000000000000276b	jmp	_cerror_nocancel
0000000000002770	retq
0000000000002771	nop
0000000000002772	nop
0000000000002773	nop
_chdir:
0000000000002774	movl	$0x200000c, %eax
0000000000002779	movq	%rcx, %r10
000000000000277c	syscall
000000000000277e	jae	0x2788
0000000000002780	movq	%rax, %rdi
0000000000002783	jmp	_cerror_nocancel
0000000000002788	retq
0000000000002789	nop
000000000000278a	nop
000000000000278b	nop
_stat$INODE64:
_stat64:
000000000000278c	movl	$0x2000152, %eax
0000000000002791	movq	%rcx, %r10
0000000000002794	syscall
0000000000002796	jae	0x27a0
0000000000002798	movq	%rax, %rdi
000000000000279b	jmp	_cerror_nocancel
00000000000027a0	retq
00000000000027a1	nop
00000000000027a2	nop
00000000000027a3	nop
_mkdir:
00000000000027a4	movl	$0x2000088, %eax
00000000000027a9	movq	%rcx, %r10
00000000000027ac	syscall
00000000000027ae	jae	0x27b8
00000000000027b0	movq	%rax, %rdi
00000000000027b3	jmp	_cerror_nocancel
00000000000027b8	retq
_mach_vm_deallocate:
00000000000027b9	pushq	%rbp
00000000000027ba	movq	%rsp, %rbp
00000000000027bd	pushq	%r15
00000000000027bf	pushq	%r14
00000000000027c1	pushq	%rbx
00000000000027c2	pushq	%rax
00000000000027c3	movq	%rdx, %r14
00000000000027c6	movq	%rsi, %r15
00000000000027c9	movl	%edi, %ebx
00000000000027cb	movq	___syscall_logger(%rip), %rax
00000000000027d2	testq	%rax, %rax
00000000000027d5	je	0x27ec
00000000000027d7	movl	%ebx, %esi
00000000000027d9	movl	$0x20, %edi
00000000000027de	movq	%r15, %rdx
00000000000027e1	movq	%r14, %rcx
00000000000027e4	xorl	%r8d, %r8d
00000000000027e7	xorl	%r9d, %r9d
00000000000027ea	callq	*%rax
00000000000027ec	movl	%ebx, %edi
00000000000027ee	movq	%r15, %rsi
00000000000027f1	movq	%r14, %rdx
00000000000027f4	callq	__kernelrpc_mach_vm_deallocate_trap
00000000000027f9	cmpl	$0x10000003, %eax
00000000000027fe	jne	0x2817
0000000000002800	movl	%ebx, %edi
0000000000002802	movq	%r15, %rsi
0000000000002805	movq	%r14, %rdx
0000000000002808	addq	$0x8, %rsp
000000000000280c	popq	%rbx
000000000000280d	popq	%r14
000000000000280f	popq	%r15
0000000000002811	popq	%rbp
0000000000002812	jmp	__kernelrpc_mach_vm_deallocate
0000000000002817	addq	$0x8, %rsp
000000000000281b	popq	%rbx
000000000000281c	popq	%r14
000000000000281e	popq	%r15
0000000000002820	popq	%rbp
0000000000002821	retq
0000000000002822	nop
0000000000002823	nop
_getuid:
0000000000002824	movl	$0x2000018, %eax
0000000000002829	movq	%rcx, %r10
000000000000282c	syscall
000000000000282e	jae	0x2838
0000000000002830	movq	%rax, %rdi
0000000000002833	jmp	_cerror_nocancel
0000000000002838	retq
0000000000002839	nop
000000000000283a	nop
000000000000283b	nop
_pthread_getugid_np:
___gettid:
000000000000283c	movl	$0x200011e, %eax
0000000000002841	movq	%rcx, %r10
0000000000002844	syscall
0000000000002846	jae	0x2850
0000000000002848	movq	%rax, %rdi
000000000000284b	jmp	_cerror_nocancel
0000000000002850	retq
0000000000002851	nop
0000000000002852	nop
0000000000002853	nop
_getegid:
0000000000002854	movl	$0x200002b, %eax
0000000000002859	movq	%rcx, %r10
000000000000285c	syscall
000000000000285e	jae	0x2868
0000000000002860	movq	%rax, %rdi
0000000000002863	jmp	_cerror_nocancel
0000000000002868	retq
0000000000002869	nop
000000000000286a	nop
000000000000286b	nop
_csops:
000000000000286c	movl	$0x20000a9, %eax
0000000000002871	movq	%rcx, %r10
0000000000002874	syscall
0000000000002876	jae	0x2880
0000000000002878	movq	%rax, %rdi
000000000000287b	jmp	_cerror_nocancel
0000000000002880	retq
_proc_pidpath:
0000000000002881	pushq	%rbp
0000000000002882	movq	%rsp, %rbp
0000000000002885	pushq	%r14
0000000000002887	pushq	%rbx
0000000000002888	cmpl	$0x3ff, %edx
000000000000288e	ja	0x289d
0000000000002890	callq	___error
0000000000002895	movl	$0xc, (%rax)
000000000000289b	jmp	0x28b3
000000000000289d	movl	%edx, %r9d
00000000000028a0	cmpl	$0x1001, %edx
00000000000028a6	jb	0x28bc
00000000000028a8	callq	___error
00000000000028ad	movl	$0x54, (%rax)
00000000000028b3	xorl	%ebx, %ebx
00000000000028b5	movl	%ebx, %eax
00000000000028b7	popq	%rbx
00000000000028b8	popq	%r14
00000000000028ba	popq	%rbp
00000000000028bb	retq
00000000000028bc	movq	%rsi, %r14
00000000000028bf	movl	%edi, %esi
00000000000028c1	xorl	%ebx, %ebx
00000000000028c3	movl	$0x2, %edi
00000000000028c8	movl	$0xb, %edx
00000000000028cd	xorl	%ecx, %ecx
00000000000028cf	movq	%r14, %r8
00000000000028d2	callq	___proc_info
00000000000028d7	cmpl	$-0x1, %eax
00000000000028da	je	0x28b5
00000000000028dc	movq	%r14, %rdi
00000000000028df	callq	_strlen
00000000000028e4	movq	%rax, %rbx
00000000000028e7	jmp	0x28b5
_strlen:
00000000000028e9	movq	__libkernel_string_functions(%rip), %rax
00000000000028f0	jmpq	*0x60(%rax)
00000000000028f3	nop
_fstatfs64:
_fstatfs$INODE64:
00000000000028f4	movl	$0x200015a, %eax
00000000000028f9	movq	%rcx, %r10
00000000000028fc	syscall
00000000000028fe	jae	0x2908
0000000000002900	movq	%rax, %rdi
0000000000002903	jmp	_cerror_nocancel
0000000000002908	retq
0000000000002909	nop
000000000000290a	nop
000000000000290b	nop
___getdirentries64:
000000000000290c	movl	$0x2000158, %eax
0000000000002911	movq	%rcx, %r10
0000000000002914	syscall
0000000000002916	jae	0x2920
0000000000002918	movq	%rax, %rdi
000000000000291b	jmp	_cerror_nocancel
0000000000002920	retq
0000000000002921	nop
0000000000002922	nop
0000000000002923	nop
___workq_kernreturn:
0000000000002924	movl	$0x2000170, %eax
0000000000002929	movq	%rcx, %r10
000000000000292c	syscall
000000000000292e	jae	0x2938
0000000000002930	movq	%rax, %rdi
0000000000002933	jmp	_cerror_nocancel
0000000000002938	retq
0000000000002939	nop
000000000000293a	nop
000000000000293b	nop
___workq_open:
000000000000293c	movl	$0x200016f, %eax
0000000000002941	movq	%rcx, %r10
0000000000002944	syscall
0000000000002946	jae	0x2950
0000000000002948	movq	%rax, %rdi
000000000000294b	jmp	_cerror_nocancel
0000000000002950	retq
0000000000002951	nop
0000000000002952	nop
0000000000002953	nop
_kevent_qos:
0000000000002954	movl	$0x2000176, %eax
0000000000002959	movq	%rcx, %r10
000000000000295c	syscall
000000000000295e	jae	0x2968
0000000000002960	movq	%rax, %rdi
0000000000002963	jmp	_cerror_nocancel
0000000000002968	retq
0000000000002969	nop
000000000000296a	nop
000000000000296b	nop
_kevent_id:
000000000000296c	movl	$0x2000177, %eax
0000000000002971	movq	%rcx, %r10
0000000000002974	syscall
0000000000002976	jae	0x2980
0000000000002978	movq	%rax, %rdi
000000000000297b	jmp	_cerror_nocancel
0000000000002980	retq
0000000000002981	nop
0000000000002982	nop
0000000000002983	nop
___bsdthread_ctl:
0000000000002984	movl	$0x20001de, %eax
0000000000002989	movq	%rcx, %r10
000000000000298c	syscall
000000000000298e	jae	0x2998
0000000000002990	movq	%rax, %rdi
0000000000002993	jmp	_cerror_nocancel
0000000000002998	retq
0000000000002999	nop
000000000000299a	nop
000000000000299b	nop
___thread_selfid:
000000000000299c	movl	$0x2000174, %eax
00000000000029a1	movq	%rcx, %r10
00000000000029a4	syscall
00000000000029a6	jae	0x29b0
00000000000029a8	movq	%rax, %rdi
00000000000029ab	jmp	_cerror
00000000000029b0	retq
00000000000029b1	nop
00000000000029b2	nop
00000000000029b3	nop
___ulock_wait:
00000000000029b4	movl	$0x2000203, %eax
00000000000029b9	movq	%rcx, %r10
00000000000029bc	syscall
00000000000029be	jae	0x29c8
00000000000029c0	movq	%rax, %rdi
00000000000029c3	jmp	_cerror_nocancel
00000000000029c8	retq
_mach_port_request_notification:
00000000000029c9	pushq	%rbp
00000000000029ca	movq	%rsp, %rbp
00000000000029cd	pushq	%r15
00000000000029cf	pushq	%r14
00000000000029d1	pushq	%r13
00000000000029d3	pushq	%r12
00000000000029d5	pushq	%rbx
00000000000029d6	subq	$0x18, %rsp
00000000000029da	movl	%r8d, %r15d
00000000000029dd	movl	%ecx, %r12d
00000000000029e0	movl	%edx, %r13d
00000000000029e3	movl	%esi, %ebx
00000000000029e5	movl	%edi, %r14d
00000000000029e8	movq	0x10(%rbp), %rax
00000000000029ec	movq	%rax, (%rsp)
00000000000029f0	movl	%r9d, -0x2c(%rbp)
00000000000029f4	callq	__kernelrpc_mach_port_request_notification_trap
00000000000029f9	movl	%eax, %ecx
00000000000029fb	cmpl	$0x100004d, %eax
0000000000002a00	movl	$0x10000003, %eax
0000000000002a05	cmovnel	%ecx, %eax
0000000000002a08	cmpl	$0x10000003, %eax
0000000000002a0d	jne	0x2a34
0000000000002a0f	movl	%r14d, %edi
0000000000002a12	movl	%ebx, %esi
0000000000002a14	movl	%r13d, %edx
0000000000002a17	movl	%r12d, %ecx
0000000000002a1a	movl	%r15d, %r8d
0000000000002a1d	movl	-0x2c(%rbp), %r9d
0000000000002a21	addq	$0x18, %rsp
0000000000002a25	popq	%rbx
0000000000002a26	popq	%r12
0000000000002a28	popq	%r13
0000000000002a2a	popq	%r14
0000000000002a2c	popq	%r15
0000000000002a2e	popq	%rbp
0000000000002a2f	jmp	__kernelrpc_mach_port_request_notification
0000000000002a34	addq	$0x18, %rsp
0000000000002a38	popq	%rbx
0000000000002a39	popq	%r12
0000000000002a3b	popq	%r13
0000000000002a3d	popq	%r14
0000000000002a3f	popq	%r15
0000000000002a41	popq	%rbp
0000000000002a42	retq
0000000000002a43	nop
___ulock_wake:
0000000000002a44	movl	$0x2000204, %eax
0000000000002a49	movq	%rcx, %r10
0000000000002a4c	syscall
0000000000002a4e	jae	0x2a58
0000000000002a50	movq	%rax, %rdi
0000000000002a53	jmp	_cerror_nocancel
0000000000002a58	retq
___commpage_gettimeofday:
0000000000002a59	xorl	%esi, %esi
0000000000002a5b	jmp	___commpage_gettimeofday_internal
___commpage_gettimeofday_internal:
0000000000002a60	pushq	%rbp
0000000000002a61	movq	%rsp, %rbp
0000000000002a64	pushq	%r15
0000000000002a66	pushq	%r14
0000000000002a68	pushq	%r12
0000000000002a6a	pushq	%rbx
0000000000002a6b	movq	%rsi, %r14
0000000000002a6e	movq	%rdi, %r15
0000000000002a71	movabsq	$0x7fffffe000d0, %r12
0000000000002a7b	movq	(%r12), %rbx
0000000000002a7f	callq	_mach_absolute_time
0000000000002a84	movq	0x8(%r12), %rdi
0000000000002a89	movq	0x10(%r12), %rcx
0000000000002a8e	movq	0x18(%r12), %rsi
0000000000002a93	movq	0x20(%r12), %rdx
0000000000002a98	cmpq	(%r12), %rbx
0000000000002a9c	jne	0x2a7b
0000000000002a9e	movq	%rax, %r8
0000000000002aa1	movl	$0x1, %eax
0000000000002aa6	testq	%rbx, %rbx
0000000000002aa9	je	0x2aeb
0000000000002aab	testq	%rdi, %rdi
0000000000002aae	js	0x2aeb
0000000000002ab0	movq	%r8, %r9
0000000000002ab3	subq	%rbx, %r9
0000000000002ab6	cmpq	%rdx, %r9
0000000000002ab9	jae	0x2aeb
0000000000002abb	movq	%rsi, %rax
0000000000002abe	mulq	%r9
0000000000002ac1	imulq	%r9, %rsi
0000000000002ac5	addq	%rcx, %rsi
0000000000002ac8	adcq	%rdx, %rdi
0000000000002acb	movq	%rdi, (%r15)
0000000000002ace	shrq	$0x20, %rsi
0000000000002ad2	imulq	$0xf4240, %rsi, %rax
0000000000002ad9	shrq	$0x20, %rax
0000000000002add	movl	%eax, 0x8(%r15)
0000000000002ae1	xorl	%eax, %eax
0000000000002ae3	testq	%r14, %r14
0000000000002ae6	je	0x2aeb
0000000000002ae8	movq	%r8, (%r14)
0000000000002aeb	popq	%rbx
0000000000002aec	popq	%r12
0000000000002aee	popq	%r14
0000000000002af0	popq	%r15
0000000000002af2	popq	%rbp
0000000000002af3	retq
___read_nocancel:
_read$NOCANCEL:
0000000000002af4	movl	$0x200018c, %eax
0000000000002af9	movq	%rcx, %r10
0000000000002afc	syscall
0000000000002afe	jae	0x2b08
0000000000002b00	movq	%rax, %rdi
0000000000002b03	jmp	_cerror_nocancel
0000000000002b08	retq
_mach_get_times:
0000000000002b09	pushq	%rbp
0000000000002b0a	movq	%rsp, %rbp
0000000000002b0d	pushq	%r15
0000000000002b0f	pushq	%r13
0000000000002b11	pushq	%r12
0000000000002b13	pushq	%rbx
0000000000002b14	subq	$0x30, %rsp
0000000000002b18	testq	%rdx, %rdx
0000000000002b1b	je	0x2bc8
0000000000002b21	movq	%rdx, %r15
0000000000002b24	movq	%rdi, -0x40(%rbp)
0000000000002b28	movq	%rsi, -0x48(%rbp)
0000000000002b2c	leaq	-0x38(%rbp), %rbx
0000000000002b30	leaq	-0x28(%rbp), %r13
0000000000002b34	callq	__mach_continuous_time_base
0000000000002b39	movq	%rax, %r12
0000000000002b3c	movq	%rbx, %rdi
0000000000002b3f	movq	%r13, %rsi
0000000000002b42	callq	___commpage_gettimeofday_internal
0000000000002b47	testl	%eax, %eax
0000000000002b49	je	0x2b75
0000000000002b4b	movq	$0x0, -0x28(%rbp)
0000000000002b53	leaq	-0x38(%rbp), %rdi
0000000000002b57	xorl	%esi, %esi
0000000000002b59	movq	%r13, %rdx
0000000000002b5c	callq	___gettimeofday_with_mach
0000000000002b61	testl	%eax, %eax
0000000000002b63	js	0x2bd9
0000000000002b65	cmpq	$0x0, -0x28(%rbp)
0000000000002b6a	jne	0x2b75
0000000000002b6c	callq	_mach_absolute_time
0000000000002b71	movq	%rax, -0x28(%rbp)
0000000000002b75	callq	__mach_continuous_time_base
0000000000002b7a	cmpq	%rax, %r12
0000000000002b7d	leaq	-0x38(%rbp), %rbx
0000000000002b81	jne	0x2b34
0000000000002b83	movq	-0x40(%rbp), %rdx
0000000000002b87	testq	%rdx, %rdx
0000000000002b8a	movq	-0x48(%rbp), %rcx
0000000000002b8e	je	0x2b97
0000000000002b90	movq	-0x28(%rbp), %rax
0000000000002b94	movq	%rax, (%rdx)
0000000000002b97	testq	%rcx, %rcx
0000000000002b9a	je	0x2ba3
0000000000002b9c	addq	-0x28(%rbp), %r12
0000000000002ba0	movq	%r12, (%rcx)
0000000000002ba3	movq	-0x38(%rbp), %rax
0000000000002ba7	movq	%rax, (%r15)
0000000000002baa	movslq	-0x30(%rbp), %rax
0000000000002bae	imulq	$0x3e8, %rax, %rax
0000000000002bb5	movq	%rax, 0x8(%r15)
0000000000002bb9	xorl	%eax, %eax
0000000000002bbb	addq	$0x30, %rsp
0000000000002bbf	popq	%rbx
0000000000002bc0	popq	%r12
0000000000002bc2	popq	%r13
0000000000002bc4	popq	%r15
0000000000002bc6	popq	%rbp
0000000000002bc7	retq
0000000000002bc8	addq	$0x30, %rsp
0000000000002bcc	popq	%rbx
0000000000002bcd	popq	%r12
0000000000002bcf	popq	%r13
0000000000002bd1	popq	%r15
0000000000002bd3	popq	%rbp
0000000000002bd4	jmp	__mach_continuous_time
0000000000002bd9	movl	$0x5, %eax
0000000000002bde	jmp	0x2bbb
__mach_continuous_time_base:
0000000000002be0	movabsq	$0x7fffffe000c0, %rax
0000000000002bea	movq	(%rax), %rax
0000000000002bed	retq
_host_request_notification:
0000000000002bee	pushq	%rbp
0000000000002bef	movq	%rsp, %rbp
0000000000002bf2	pushq	%rbx
0000000000002bf3	subq	$0x48, %rsp
0000000000002bf7	leaq	-0x40(%rbp), %rbx
0000000000002bfb	movl	$0x1, 0x18(%rbx)
0000000000002c02	movl	%edx, 0x1c(%rbx)
0000000000002c05	movl	$0x150000, 0x24(%rbx)
0000000000002c0c	leaq	_NDR_record(%rip), %rax
0000000000002c13	movq	(%rax), %rax
0000000000002c16	movq	%rax, 0x28(%rbx)
0000000000002c1a	movl	%esi, 0x30(%rbx)
0000000000002c1d	movl	$0x80001513, (%rbx)
0000000000002c23	movl	%edi, 0x8(%rbx)
0000000000002c26	callq	_mig_get_reply_port
0000000000002c2b	movl	%eax, 0xc(%rbx)
0000000000002c2e	movabsq	$0xd900000000, %rcx
0000000000002c38	movq	%rcx, 0x10(%rbx)
0000000000002c3c	movl	$0x0, (%rsp)
0000000000002c43	movq	%rbx, %rdi
0000000000002c46	movl	$0x3, %esi
0000000000002c4b	movl	$0x34, %edx
0000000000002c50	movl	$0x2c, %ecx
0000000000002c55	movl	%eax, %r8d
0000000000002c58	xorl	%r9d, %r9d
0000000000002c5b	callq	_mach_msg
0000000000002c60	movl	%eax, %ebx
0000000000002c62	leal	-0x10000002(%rbx), %eax
0000000000002c68	cmpl	$0xe, %eax
0000000000002c6b	ja	0x2c81
0000000000002c6d	movl	$0x4003, %ecx
0000000000002c72	btl	%eax, %ecx
0000000000002c75	jae	0x2c81
0000000000002c77	movl	-0x34(%rbp), %edi
0000000000002c7a	callq	_mig_put_reply_port
0000000000002c7f	jmp	0x2cd6
0000000000002c81	testl	%ebx, %ebx
0000000000002c83	jne	0x2cb7
0000000000002c85	movl	-0x2c(%rbp), %eax
0000000000002c88	cmpl	$0x47, %eax
0000000000002c8b	je	0x2cc1
0000000000002c8d	cmpl	$0x13d, %eax
0000000000002c92	jne	0x2cc8
0000000000002c94	movl	$0xfffffed4, %ebx
0000000000002c99	cmpl	$0x0, -0x40(%rbp)
0000000000002c9d	js	0x2ccd
0000000000002c9f	cmpl	$0x24, -0x3c(%rbp)
0000000000002ca3	jne	0x2ccd
0000000000002ca5	movl	-0x38(%rbp), %eax
0000000000002ca8	testl	%eax, %eax
0000000000002caa	jne	0x2ccd
0000000000002cac	movl	-0x20(%rbp), %ebx
0000000000002caf	testl	%ebx, %ebx
0000000000002cb1	jne	0x2ccd
0000000000002cb3	xorl	%ebx, %ebx
0000000000002cb5	jmp	0x2cd6
0000000000002cb7	movl	-0x34(%rbp), %edi
0000000000002cba	callq	_mig_dealloc_reply_port
0000000000002cbf	jmp	0x2cd6
0000000000002cc1	movl	$0xfffffecc, %ebx
0000000000002cc6	jmp	0x2ccd
0000000000002cc8	movl	$0xfffffed3, %ebx
0000000000002ccd	leaq	-0x40(%rbp), %rdi
0000000000002cd1	callq	_mach_msg_destroy
0000000000002cd6	movl	%ebx, %eax
0000000000002cd8	addq	$0x48, %rsp
0000000000002cdc	popq	%rbx
0000000000002cdd	popq	%rbp
0000000000002cde	retq
_mach_port_allocate:
0000000000002cdf	pushq	%rbp
0000000000002ce0	movq	%rsp, %rbp
0000000000002ce3	pushq	%r15
0000000000002ce5	pushq	%r14
0000000000002ce7	pushq	%rbx
0000000000002ce8	pushq	%rax
0000000000002ce9	movq	%rdx, %r14
0000000000002cec	movl	%esi, %r15d
0000000000002cef	movl	%edi, %ebx
0000000000002cf1	callq	__kernelrpc_mach_port_allocate_trap
0000000000002cf6	cmpl	$0x10000003, %eax
0000000000002cfb	jne	0x2d14
0000000000002cfd	movl	%ebx, %edi
0000000000002cff	movl	%r15d, %esi
0000000000002d02	movq	%r14, %rdx
0000000000002d05	addq	$0x8, %rsp
0000000000002d09	popq	%rbx
0000000000002d0a	popq	%r14
0000000000002d0c	popq	%r15
0000000000002d0e	popq	%rbp
0000000000002d0f	jmp	__kernelrpc_mach_port_allocate
0000000000002d14	addq	$0x8, %rsp
0000000000002d18	popq	%rbx
0000000000002d19	popq	%r14
0000000000002d1b	popq	%r15
0000000000002d1d	popq	%rbp
0000000000002d1e	retq
_mach_port_insert_member:
0000000000002d1f	pushq	%rbp
0000000000002d20	movq	%rsp, %rbp
0000000000002d23	pushq	%r15
0000000000002d25	pushq	%r14
0000000000002d27	pushq	%rbx
0000000000002d28	pushq	%rax
0000000000002d29	movl	%edx, %r14d
0000000000002d2c	movl	%esi, %r15d
0000000000002d2f	movl	%edi, %ebx
0000000000002d31	callq	__kernelrpc_mach_port_insert_member_trap
0000000000002d36	cmpl	$0x10000003, %eax
0000000000002d3b	jne	0x2d54
0000000000002d3d	movl	%ebx, %edi
0000000000002d3f	movl	%r15d, %esi
0000000000002d42	movl	%r14d, %edx
0000000000002d45	addq	$0x8, %rsp
0000000000002d49	popq	%rbx
0000000000002d4a	popq	%r14
0000000000002d4c	popq	%r15
0000000000002d4e	popq	%rbp
0000000000002d4f	jmp	__kernelrpc_mach_port_insert_member
0000000000002d54	addq	$0x8, %rsp
0000000000002d58	popq	%rbx
0000000000002d59	popq	%r14
0000000000002d5b	popq	%r15
0000000000002d5d	popq	%rbp
0000000000002d5e	retq
_vm_allocate:
0000000000002d5f	pushq	%rbp
0000000000002d60	movq	%rsp, %rbp
0000000000002d63	pushq	%r14
0000000000002d65	pushq	%rbx
0000000000002d66	subq	$0x10, %rsp
0000000000002d6a	movq	%rsi, %rbx
0000000000002d6d	movq	(%rsi), %rax
0000000000002d70	leaq	-0x18(%rbp), %r14
0000000000002d74	movq	%rax, (%r14)
0000000000002d77	movq	%r14, %rsi
0000000000002d7a	callq	_mach_vm_allocate
0000000000002d7f	movq	(%r14), %rcx
0000000000002d82	movq	%rcx, (%rbx)
0000000000002d85	addq	$0x10, %rsp
0000000000002d89	popq	%rbx
0000000000002d8a	popq	%r14
0000000000002d8c	popq	%rbp
0000000000002d8d	retq
_mach_vm_allocate:
0000000000002d8e	pushq	%rbp
0000000000002d8f	movq	%rsp, %rbp
0000000000002d92	pushq	%r15
0000000000002d94	pushq	%r14
0000000000002d96	pushq	%r13
0000000000002d98	pushq	%r12
0000000000002d9a	pushq	%rbx
0000000000002d9b	pushq	%rax
0000000000002d9c	movl	%ecx, %ebx
0000000000002d9e	movq	%rdx, %r14
0000000000002da1	movq	%rsi, %r15
0000000000002da4	movl	%edi, %r12d
0000000000002da7	callq	__kernelrpc_mach_vm_allocate_trap
0000000000002dac	movl	%eax, %r13d
0000000000002daf	cmpl	$0x10000003, %eax
0000000000002db4	jne	0x2dc9
0000000000002db6	movl	%r12d, %edi
0000000000002db9	movq	%r15, %rsi
0000000000002dbc	movq	%r14, %rdx
0000000000002dbf	movl	%ebx, %ecx
0000000000002dc1	callq	__kernelrpc_mach_vm_allocate
0000000000002dc6	movl	%eax, %r13d
0000000000002dc9	movl	%ebx, %eax
0000000000002dcb	andl	$0x1e000000, %eax
0000000000002dd0	orl	%r13d, %eax
0000000000002dd3	jne	0x2dfc
0000000000002dd5	movq	___syscall_logger(%rip), %rax
0000000000002ddc	testq	%rax, %rax
0000000000002ddf	je	0x2dfc
0000000000002de1	andl	$0xff000000, %ebx
0000000000002de7	orl	$0x10, %ebx
0000000000002dea	movl	%r12d, %esi
0000000000002ded	movq	(%r15), %r8
0000000000002df0	movl	%ebx, %edi
0000000000002df2	movq	%r14, %rdx
0000000000002df5	xorl	%ecx, %ecx
0000000000002df7	xorl	%r9d, %r9d
0000000000002dfa	callq	*%rax
0000000000002dfc	movl	%r13d, %eax
0000000000002dff	addq	$0x8, %rsp
0000000000002e03	popq	%rbx
0000000000002e04	popq	%r12
0000000000002e06	popq	%r13
0000000000002e08	popq	%r14
0000000000002e0a	popq	%r15
0000000000002e0c	popq	%rbp
0000000000002e0d	retq
_vm_deallocate:
0000000000002e0e	jmp	_mach_vm_deallocate
_getrlimit:
0000000000002e13	orl	$0x1000, %edi
0000000000002e19	jmp	___getrlimit
0000000000002e1e	nop
0000000000002e1f	nop
___getrlimit:
0000000000002e20	movl	$0x20000c2, %eax
0000000000002e25	movq	%rcx, %r10
0000000000002e28	syscall
0000000000002e2a	jae	0x2e34
0000000000002e2c	movq	%rax, %rdi
0000000000002e2f	jmp	_cerror_nocancel
0000000000002e34	retq
0000000000002e35	nop
0000000000002e36	nop
0000000000002e37	nop
_getaudit_addr:
0000000000002e38	movl	$0x2000165, %eax
0000000000002e3d	movq	%rcx, %r10
0000000000002e40	syscall
0000000000002e42	jae	0x2e4c
0000000000002e44	movq	%rax, %rdi
0000000000002e47	jmp	_cerror_nocancel
0000000000002e4c	retq
0000000000002e4d	nop
0000000000002e4e	nop
0000000000002e4f	nop
_syscall:
___syscall:
0000000000002e50	movl	$0x2000000, %eax
0000000000002e55	movq	%rcx, %r10
0000000000002e58	syscall
0000000000002e5a	jae	0x2e64
0000000000002e5c	movq	%rax, %rdi
0000000000002e5f	jmp	_cerror
0000000000002e64	retq
0000000000002e65	nop
0000000000002e66	nop
0000000000002e67	nop
_readlink:
0000000000002e68	movl	$0x200003a, %eax
0000000000002e6d	movq	%rcx, %r10
0000000000002e70	syscall
0000000000002e72	jae	0x2e7c
0000000000002e74	movq	%rax, %rdi
0000000000002e77	jmp	_cerror_nocancel
0000000000002e7c	retq
_mach_port_insert_right:
0000000000002e7d	pushq	%rbp
0000000000002e7e	movq	%rsp, %rbp
0000000000002e81	pushq	%r15
0000000000002e83	pushq	%r14
0000000000002e85	pushq	%r12
0000000000002e87	pushq	%rbx
0000000000002e88	movl	%ecx, %r14d
0000000000002e8b	movl	%edx, %r15d
0000000000002e8e	movl	%esi, %r12d
0000000000002e91	movl	%edi, %ebx
0000000000002e93	callq	__kernelrpc_mach_port_insert_right_trap
0000000000002e98	cmpl	$0x10000003, %eax
0000000000002e9d	jne	0x2eb7
0000000000002e9f	movl	%ebx, %edi
0000000000002ea1	movl	%r12d, %esi
0000000000002ea4	movl	%r15d, %edx
0000000000002ea7	movl	%r14d, %ecx
0000000000002eaa	popq	%rbx
0000000000002eab	popq	%r12
0000000000002ead	popq	%r14
0000000000002eaf	popq	%r15
0000000000002eb1	popq	%rbp
0000000000002eb2	jmp	__kernelrpc_mach_port_insert_right
0000000000002eb7	popq	%rbx
0000000000002eb8	popq	%r12
0000000000002eba	popq	%r14
0000000000002ebc	popq	%r15
0000000000002ebe	popq	%rbp
0000000000002ebf	retq
_proc_setpcontrol:
0000000000002ec0	pushq	%rbp
0000000000002ec1	movq	%rsp, %rbp
0000000000002ec4	pushq	%r14
0000000000002ec6	pushq	%rbx
0000000000002ec7	movl	$0x16, %r14d
0000000000002ecd	cmpl	$0x3, %edi
0000000000002ed0	ja	0x2f03
0000000000002ed2	movl	%edi, %ebx
0000000000002ed4	callq	_getpid
0000000000002ed9	movslq	%ebx, %rcx
0000000000002edc	xorl	%r14d, %r14d
0000000000002edf	movl	$0x5, %edi
0000000000002ee4	movl	%eax, %esi
0000000000002ee6	movl	$0x1, %edx
0000000000002eeb	xorl	%r8d, %r8d
0000000000002eee	xorl	%r9d, %r9d
0000000000002ef1	callq	___proc_info
0000000000002ef6	cmpl	$-0x1, %eax
0000000000002ef9	jne	0x2f03
0000000000002efb	callq	___error
0000000000002f00	movl	(%rax), %r14d
0000000000002f03	movl	%r14d, %eax
0000000000002f06	popq	%rbx
0000000000002f07	popq	%r14
0000000000002f09	popq	%rbp
0000000000002f0a	retq
_vm_remap:
0000000000002f0b	pushq	%rbp
0000000000002f0c	movq	%rsp, %rbp
0000000000002f0f	pushq	%r15
0000000000002f11	pushq	%r14
0000000000002f13	pushq	%r13
0000000000002f15	pushq	%r12
0000000000002f17	pushq	%rbx
0000000000002f18	pushq	%rax
0000000000002f19	movl	%r8d, %ebx
0000000000002f1c	movq	%rdx, %r14
0000000000002f1f	movq	%rsi, %r15
0000000000002f22	movl	%edi, %r12d
0000000000002f25	movl	0x18(%rbp), %r10d
0000000000002f29	movl	0x30(%rbp), %eax
0000000000002f2c	subq	$0x8, %rsp
0000000000002f30	pushq	%rax
0000000000002f31	pushq	0x28(%rbp)
0000000000002f34	pushq	0x20(%rbp)
0000000000002f37	pushq	%r10
0000000000002f39	pushq	0x10(%rbp)
0000000000002f3c	callq	__kernelrpc_vm_remap
0000000000002f41	addq	$0x30, %rsp
0000000000002f45	movl	%eax, %r13d
0000000000002f48	movq	___syscall_logger(%rip), %rax
0000000000002f4f	testq	%rax, %rax
0000000000002f52	je	0x2f72
0000000000002f54	andl	$0xff000000, %ebx
0000000000002f5a	orl	$0x90, %ebx
0000000000002f60	movl	%r12d, %esi
0000000000002f63	movq	(%r15), %r8
0000000000002f66	movl	%ebx, %edi
0000000000002f68	movq	%r14, %rdx
0000000000002f6b	xorl	%ecx, %ecx
0000000000002f6d	xorl	%r9d, %r9d
0000000000002f70	callq	*%rax
0000000000002f72	movl	%r13d, %eax
0000000000002f75	addq	$0x8, %rsp
0000000000002f79	popq	%rbx
0000000000002f7a	popq	%r12
0000000000002f7c	popq	%r13
0000000000002f7e	popq	%r14
0000000000002f80	popq	%r15
0000000000002f82	popq	%rbp
0000000000002f83	retq
__kernelrpc_vm_remap:
0000000000002f84	pushq	%rbp
0000000000002f85	movq	%rsp, %rbp
0000000000002f88	pushq	%r14
0000000000002f8a	pushq	%rbx
0000000000002f8b	subq	$0x70, %rsp
0000000000002f8f	movq	%rsi, %r14
0000000000002f92	movl	0x30(%rbp), %r10d
0000000000002f96	movl	0x18(%rbp), %r11d
0000000000002f9a	movq	0x10(%rbp), %rax
0000000000002f9e	leaq	-0x70(%rbp), %rbx
0000000000002fa2	movl	$0x1, 0x18(%rbx)
0000000000002fa9	movl	%r9d, 0x1c(%rbx)
0000000000002fad	movl	$0x130000, 0x24(%rbx)
0000000000002fb4	leaq	_NDR_record(%rip), %rsi
0000000000002fbb	movq	(%rsi), %rsi
0000000000002fbe	movq	%rsi, 0x28(%rbx)
0000000000002fc2	movq	(%r14), %rsi
0000000000002fc5	movq	%rsi, 0x30(%rbx)
0000000000002fc9	movq	%rdx, 0x38(%rbx)
0000000000002fcd	movq	%rcx, 0x40(%rbx)
0000000000002fd1	movl	%r8d, 0x48(%rbx)
0000000000002fd5	movq	%rax, 0x4c(%rbx)
0000000000002fd9	movl	%r11d, 0x54(%rbx)
0000000000002fdd	movl	%r10d, 0x58(%rbx)
0000000000002fe1	movl	$0x80001513, (%rbx)
0000000000002fe7	movl	%edi, 0x8(%rbx)
0000000000002fea	callq	_mig_get_reply_port
0000000000002fef	movl	%eax, 0xc(%rbx)
0000000000002ff2	movabsq	$0x12cd00000000, %rcx
0000000000002ffc	movq	%rcx, 0x10(%rbx)
0000000000003000	movl	$0x0, (%rsp)
0000000000003007	movq	%rbx, %rdi
000000000000300a	movl	$0x3, %esi
000000000000300f	movl	$0x5c, %edx
0000000000003014	movl	$0x3c, %ecx
0000000000003019	movl	%eax, %r8d
000000000000301c	xorl	%r9d, %r9d
000000000000301f	callq	_mach_msg
0000000000003024	movl	%eax, %ebx
0000000000003026	leal	-0x10000002(%rbx), %eax
000000000000302c	cmpl	$0xe, %eax
000000000000302f	ja	0x3045
0000000000003031	movl	$0x4003, %ecx
0000000000003036	btl	%eax, %ecx
0000000000003039	jae	0x3045
000000000000303b	movl	-0x64(%rbp), %edi
000000000000303e	callq	_mig_put_reply_port
0000000000003043	jmp	0x30bf
0000000000003045	testl	%ebx, %ebx
0000000000003047	jne	0x30a0
0000000000003049	movl	-0x5c(%rbp), %eax
000000000000304c	cmpl	$0x47, %eax
000000000000304f	je	0x30aa
0000000000003051	cmpl	$0x1331, %eax
0000000000003056	jne	0x30b1
0000000000003058	movl	$0xfffffed4, %ebx
000000000000305d	cmpl	$0x0, -0x70(%rbp)
0000000000003061	js	0x30b6
0000000000003063	movl	-0x6c(%rbp), %eax
0000000000003066	cmpl	$0x34, %eax
0000000000003069	je	0x3076
000000000000306b	cmpl	$0x24, %eax
000000000000306e	jne	0x30b6
0000000000003070	cmpl	$0x0, -0x50(%rbp)
0000000000003074	je	0x30b6
0000000000003076	cmpl	$0x0, -0x68(%rbp)
000000000000307a	jne	0x30b6
000000000000307c	movl	-0x50(%rbp), %ebx
000000000000307f	testl	%ebx, %ebx
0000000000003081	jne	0x30b6
0000000000003083	movq	0x28(%rbp), %rax
0000000000003087	movq	0x20(%rbp), %rcx
000000000000308b	movq	-0x4c(%rbp), %rdx
000000000000308f	movq	%rdx, (%r14)
0000000000003092	movl	-0x44(%rbp), %edx
0000000000003095	movl	%edx, (%rcx)
0000000000003097	movl	-0x40(%rbp), %ecx
000000000000309a	movl	%ecx, (%rax)
000000000000309c	xorl	%ebx, %ebx
000000000000309e	jmp	0x30bf
00000000000030a0	movl	-0x64(%rbp), %edi
00000000000030a3	callq	_mig_dealloc_reply_port
00000000000030a8	jmp	0x30bf
00000000000030aa	movl	$0xfffffecc, %ebx
00000000000030af	jmp	0x30b6
00000000000030b1	movl	$0xfffffed3, %ebx
00000000000030b6	leaq	-0x70(%rbp), %rdi
00000000000030ba	callq	_mach_msg_destroy
00000000000030bf	movl	%ebx, %eax
00000000000030c1	addq	$0x70, %rsp
00000000000030c5	popq	%rbx
00000000000030c6	popq	%r14
00000000000030c8	popq	%rbp
00000000000030c9	retq
_task_policy_set:
00000000000030ca	pushq	%rbp
00000000000030cb	movq	%rsp, %rbp
00000000000030ce	pushq	%r15
00000000000030d0	pushq	%r14
00000000000030d2	pushq	%rbx
00000000000030d3	subq	$0x78, %rsp
00000000000030d7	leaq	_NDR_record(%rip), %rax
00000000000030de	movq	(%rax), %rax
00000000000030e1	movq	%rax, -0x68(%rbp)
00000000000030e5	movl	%esi, -0x60(%rbp)
00000000000030e8	movl	$0xfffffecd, %r14d
00000000000030ee	cmpl	$0x10, %ecx
00000000000030f1	ja	0x31e4
00000000000030f7	movl	%ecx, %ebx
00000000000030f9	movl	%edi, %r15d
00000000000030fc	leaq	-0x58(%rbp), %r14
0000000000003100	leal	(,%rbx,4), %eax
0000000000003107	movq	%r14, %rdi
000000000000310a	movq	%rdx, %rsi
000000000000310d	movq	%rax, %rdx
0000000000003110	callq	_memcpy
0000000000003115	movl	%ebx, -0x4(%r14)
0000000000003119	leal	0x28(,%rbx,4), %ebx
0000000000003120	movl	$0x1513, -0x28(%r14)
0000000000003128	movl	%r15d, -0x20(%r14)
000000000000312c	callq	_mig_get_reply_port
0000000000003131	movl	%eax, -0x1c(%r14)
0000000000003135	movabsq	$0xd5c00000000, %rcx
000000000000313f	movq	%rcx, -0x18(%r14)
0000000000003143	movl	$0x0, (%rsp)
000000000000314a	leaq	-0x80(%rbp), %rdi
000000000000314e	movl	$0x3, %esi
0000000000003153	movl	%ebx, %edx
0000000000003155	movl	$0x2c, %ecx
000000000000315a	movl	%eax, %r8d
000000000000315d	xorl	%r9d, %r9d
0000000000003160	callq	_mach_msg
0000000000003165	movl	%eax, %r14d
0000000000003168	leal	-0x10000002(%r14), %eax
000000000000316f	cmpl	$0xe, %eax
0000000000003172	ja	0x3188
0000000000003174	movl	$0x4003, %ecx
0000000000003179	btl	%eax, %ecx
000000000000317c	jae	0x3188
000000000000317e	movl	-0x74(%rbp), %edi
0000000000003181	callq	_mig_put_reply_port
0000000000003186	jmp	0x31e4
0000000000003188	testl	%r14d, %r14d
000000000000318b	jne	0x31c3
000000000000318d	movl	-0x6c(%rbp), %eax
0000000000003190	cmpl	$0x47, %eax
0000000000003193	je	0x31cd
0000000000003195	cmpl	$0xdc0, %eax
000000000000319a	jne	0x31d5
000000000000319c	movl	$0xfffffed4, %r14d
00000000000031a2	cmpl	$0x0, -0x80(%rbp)
00000000000031a6	js	0x31db
00000000000031a8	cmpl	$0x24, -0x7c(%rbp)
00000000000031ac	jne	0x31db
00000000000031ae	movl	-0x78(%rbp), %eax
00000000000031b1	testl	%eax, %eax
00000000000031b3	jne	0x31db
00000000000031b5	movl	-0x60(%rbp), %r14d
00000000000031b9	testl	%r14d, %r14d
00000000000031bc	jne	0x31db
00000000000031be	xorl	%r14d, %r14d
00000000000031c1	jmp	0x31e4
00000000000031c3	movl	-0x74(%rbp), %edi
00000000000031c6	callq	_mig_dealloc_reply_port
00000000000031cb	jmp	0x31e4
00000000000031cd	movl	$0xfffffecc, %r14d
00000000000031d3	jmp	0x31db
00000000000031d5	movl	$0xfffffed3, %r14d
00000000000031db	leaq	-0x80(%rbp), %rdi
00000000000031df	callq	_mach_msg_destroy
00000000000031e4	movl	%r14d, %eax
00000000000031e7	addq	$0x78, %rsp
00000000000031eb	popq	%rbx
00000000000031ec	popq	%r14
00000000000031ee	popq	%r15
00000000000031f0	popq	%rbp
00000000000031f1	retq
_mach_voucher_extract_attr_recipe:
00000000000031f2	pushq	%rbp
00000000000031f3	movq	%rsp, %rbp
00000000000031f6	pushq	%r15
00000000000031f8	pushq	%r14
00000000000031fa	pushq	%r12
00000000000031fc	pushq	%rbx
00000000000031fd	movq	%rcx, %r14
0000000000003200	movq	%rdx, %r15
0000000000003203	movl	%esi, %r12d
0000000000003206	movl	%edi, %ebx
0000000000003208	callq	_mach_voucher_extract_attr_recipe_trap
000000000000320d	cmpl	$0x10000003, %eax
0000000000003212	jne	0x322c
0000000000003214	movl	%ebx, %edi
0000000000003216	movl	%r12d, %esi
0000000000003219	movq	%r15, %rdx
000000000000321c	movq	%r14, %rcx
000000000000321f	popq	%rbx
0000000000003220	popq	%r12
0000000000003222	popq	%r14
0000000000003224	popq	%r15
0000000000003226	popq	%rbp
0000000000003227	jmp	__kernelrpc_mach_voucher_extract_attr_recipe
000000000000322c	popq	%rbx
000000000000322d	popq	%r12
000000000000322f	popq	%r14
0000000000003231	popq	%r15
0000000000003233	popq	%rbp
0000000000003234	retq
_mach_port_get_attributes:
0000000000003235	pushq	%rbp
0000000000003236	movq	%rsp, %rbp
0000000000003239	pushq	%r15
000000000000323b	pushq	%r14
000000000000323d	pushq	%r13
000000000000323f	pushq	%r12
0000000000003241	pushq	%rbx
0000000000003242	pushq	%rax
0000000000003243	movq	%r8, %r14
0000000000003246	movq	%rcx, %r15
0000000000003249	movl	%edx, %r12d
000000000000324c	movl	%esi, %r13d
000000000000324f	movl	%edi, %ebx
0000000000003251	callq	__kernelrpc_mach_port_get_attributes_trap
0000000000003256	movl	%eax, %ecx
0000000000003258	cmpl	$0x1000028, %eax
000000000000325d	movl	$0x10000003, %eax
0000000000003262	cmovnel	%ecx, %eax
0000000000003265	cmpl	$0x10000003, %eax
000000000000326a	jne	0x328d
000000000000326c	movl	%ebx, %edi
000000000000326e	movl	%r13d, %esi
0000000000003271	movl	%r12d, %edx
0000000000003274	movq	%r15, %rcx
0000000000003277	movq	%r14, %r8
000000000000327a	addq	$0x8, %rsp
000000000000327e	popq	%rbx
000000000000327f	popq	%r12
0000000000003281	popq	%r13
0000000000003283	popq	%r14
0000000000003285	popq	%r15
0000000000003287	popq	%rbp
0000000000003288	jmp	__kernelrpc_mach_port_get_attributes
000000000000328d	addq	$0x8, %rsp
0000000000003291	popq	%rbx
0000000000003292	popq	%r12
0000000000003294	popq	%r13
0000000000003296	popq	%r14
0000000000003298	popq	%r15
000000000000329a	popq	%rbp
000000000000329b	retq
_mach_port_set_attributes:
000000000000329c	jmp	__kernelrpc_mach_port_set_attributes
__kernelrpc_mach_port_set_attributes:
00000000000032a1	pushq	%rbp
00000000000032a2	movq	%rsp, %rbp
00000000000032a5	pushq	%r15
00000000000032a7	pushq	%r14
00000000000032a9	pushq	%rbx
00000000000032aa	subq	$0x78, %rsp
00000000000032ae	leaq	_NDR_record(%rip), %rax
00000000000032b5	movq	(%rax), %rax
00000000000032b8	movq	%rax, -0x70(%rbp)
00000000000032bc	movl	%esi, -0x68(%rbp)
00000000000032bf	movl	%edx, -0x64(%rbp)
00000000000032c2	movl	$0xfffffecd, %r14d
00000000000032c8	cmpl	$0x11, %r8d
00000000000032cc	ja	0x33c9
00000000000032d2	movl	%r8d, %ebx
00000000000032d5	movl	%edi, %r15d
00000000000032d8	leaq	-0x5c(%rbp), %r14
00000000000032dc	leal	(,%rbx,4), %edx
00000000000032e3	movq	%r14, %rdi
00000000000032e6	movq	%rcx, %rsi
00000000000032e9	callq	_memcpy
00000000000032ee	movl	%ebx, -0x4(%r14)
00000000000032f2	leal	0x2c(,%rbx,4), %ebx
00000000000032f9	movl	$0x1513, -0x2c(%r14)
0000000000003301	movl	%r15d, -0x24(%r14)
0000000000003305	callq	_mig_get_reply_port
000000000000330a	movl	%eax, -0x20(%r14)
000000000000330e	movabsq	$0xc9200000000, %rcx
0000000000003318	movq	%rcx, -0x1c(%r14)
000000000000331c	movl	$0x0, (%rsp)
0000000000003323	leaq	-0x88(%rbp), %rdi
000000000000332a	movl	$0x3, %esi
000000000000332f	movl	%ebx, %edx
0000000000003331	movl	$0x2c, %ecx
0000000000003336	movl	%eax, %r8d
0000000000003339	xorl	%r9d, %r9d
000000000000333c	callq	_mach_msg
0000000000003341	movl	%eax, %r14d
0000000000003344	leal	-0x10000002(%r14), %eax
000000000000334b	cmpl	$0xe, %eax
000000000000334e	ja	0x3364
0000000000003350	movl	$0x4003, %ecx
0000000000003355	btl	%eax, %ecx
0000000000003358	jae	0x3364
000000000000335a	movl	-0x7c(%rbp), %edi
000000000000335d	callq	_mig_put_reply_port
0000000000003362	jmp	0x33c9
0000000000003364	testl	%r14d, %r14d
0000000000003367	jne	0x33a5
0000000000003369	movl	-0x74(%rbp), %eax
000000000000336c	cmpl	$0x47, %eax
000000000000336f	je	0x33af
0000000000003371	cmpl	$0xcf6, %eax
0000000000003376	jne	0x33b7
0000000000003378	movl	$0xfffffed4, %r14d
000000000000337e	cmpl	$0x0, -0x88(%rbp)
0000000000003385	js	0x33bd
0000000000003387	cmpl	$0x24, -0x84(%rbp)
000000000000338e	jne	0x33bd
0000000000003390	movl	-0x80(%rbp), %eax
0000000000003393	testl	%eax, %eax
0000000000003395	jne	0x33bd
0000000000003397	movl	-0x68(%rbp), %r14d
000000000000339b	testl	%r14d, %r14d
000000000000339e	jne	0x33bd
00000000000033a0	xorl	%r14d, %r14d
00000000000033a3	jmp	0x33c9
00000000000033a5	movl	-0x7c(%rbp), %edi
00000000000033a8	callq	_mig_dealloc_reply_port
00000000000033ad	jmp	0x33c9
00000000000033af	movl	$0xfffffecc, %r14d
00000000000033b5	jmp	0x33bd
00000000000033b7	movl	$0xfffffed3, %r14d
00000000000033bd	leaq	-0x88(%rbp), %rdi
00000000000033c4	callq	_mach_msg_destroy
00000000000033c9	movl	%r14d, %eax
00000000000033cc	addq	$0x78, %rsp
00000000000033d0	popq	%rbx
00000000000033d1	popq	%r14
00000000000033d3	popq	%r15
00000000000033d5	popq	%rbp
00000000000033d6	retq
_kdebug_trace_string:
00000000000033d7	pushq	%rbp
00000000000033d8	movq	%rsp, %rbp
00000000000033db	pushq	%r15
00000000000033dd	pushq	%r14
00000000000033df	pushq	%rbx
00000000000033e0	pushq	%rax
00000000000033e1	movq	%rdx, %r14
00000000000033e4	movq	%rsi, %r15
00000000000033e7	movl	%edi, %ebx
00000000000033e9	callq	_kdebug_is_enabled
00000000000033ee	testb	%al, %al
00000000000033f0	je	0x3416
00000000000033f2	cmpq	$-0x1, %r15
00000000000033f6	je	0x3402
00000000000033f8	testq	%r15, %r15
00000000000033fb	jne	0x3423
00000000000033fd	testq	%r14, %r14
0000000000003400	jne	0x3423
0000000000003402	callq	___error
0000000000003407	movl	$0x16, (%rax)
000000000000340d	movq	$-0x1, %rax
0000000000003414	jmp	0x3418
0000000000003416	xorl	%eax, %eax
0000000000003418	addq	$0x8, %rsp
000000000000341c	popq	%rbx
000000000000341d	popq	%r14
000000000000341f	popq	%r15
0000000000003421	popq	%rbp
0000000000003422	retq
0000000000003423	movl	%ebx, %edi
0000000000003425	movq	%r15, %rsi
0000000000003428	movq	%r14, %rdx
000000000000342b	addq	$0x8, %rsp
000000000000342f	popq	%rbx
0000000000003430	popq	%r14
0000000000003432	popq	%r15
0000000000003434	popq	%rbp
0000000000003435	jmp	___kdebug_trace_string
000000000000343a	nop
000000000000343b	nop
___kdebug_trace64:
000000000000343c	movl	$0x20000b3, %eax
0000000000003441	movq	%rcx, %r10
0000000000003444	syscall
0000000000003446	jae	0x3450
0000000000003448	movq	%rax, %rdi
000000000000344b	jmp	_cerror_nocancel
0000000000003450	retq
_mach_port_type:
0000000000003451	pushq	%rbp
0000000000003452	movq	%rsp, %rbp
0000000000003455	pushq	%r15
0000000000003457	pushq	%r14
0000000000003459	pushq	%rbx
000000000000345a	pushq	%rax
000000000000345b	movq	%rdx, %r14
000000000000345e	movl	%esi, %r15d
0000000000003461	movl	%edi, %ebx
0000000000003463	callq	__kernelrpc_mach_port_type_trap
0000000000003468	movl	%eax, %ecx
000000000000346a	cmpl	$0x100004c, %eax
000000000000346f	movl	$0x10000003, %eax
0000000000003474	cmovnel	%ecx, %eax
0000000000003477	cmpl	$0x10000003, %eax
000000000000347c	jne	0x3495
000000000000347e	movl	%ebx, %edi
0000000000003480	movl	%r15d, %esi
0000000000003483	movq	%r14, %rdx
0000000000003486	addq	$0x8, %rsp
000000000000348a	popq	%rbx
000000000000348b	popq	%r14
000000000000348d	popq	%r15
000000000000348f	popq	%rbp
0000000000003490	jmp	__kernelrpc_mach_port_type
0000000000003495	addq	$0x8, %rsp
0000000000003499	popq	%rbx
000000000000349a	popq	%r14
000000000000349c	popq	%r15
000000000000349e	popq	%rbp
000000000000349f	retq
_posix_madvise:
_madvise:
00000000000034a0	movl	$0x200004b, %eax
00000000000034a5	movq	%rcx, %r10
00000000000034a8	syscall
00000000000034aa	jae	0x34b4
00000000000034ac	movq	%rax, %rdi
00000000000034af	jmp	_cerror_nocancel
00000000000034b4	retq
00000000000034b5	nop
00000000000034b6	nop
00000000000034b7	nop
___psynch_mutexwait:
00000000000034b8	movl	$0x200012d, %eax
00000000000034bd	movq	%rcx, %r10
00000000000034c0	syscall
00000000000034c2	jae	0x34cc
00000000000034c4	movq	%rax, %rdi
00000000000034c7	jmp	_cerror_nocancel
00000000000034cc	retq
_setrlimit:
00000000000034cd	orl	$0x1000, %edi
00000000000034d3	jmp	___setrlimit
___setrlimit:
00000000000034d8	movl	$0x20000c3, %eax
00000000000034dd	movq	%rcx, %r10
00000000000034e0	syscall
00000000000034e2	jae	0x34ec
00000000000034e4	movq	%rax, %rdi
00000000000034e7	jmp	_cerror_nocancel
00000000000034ec	retq
_task_restartable_ranges_synchronize:
00000000000034ed	pushq	%rbp
00000000000034ee	movq	%rsp, %rbp
00000000000034f1	pushq	%rbx
00000000000034f2	subq	$0x38, %rsp
00000000000034f6	leaq	-0x38(%rbp), %rbx
00000000000034fa	movl	$0x1513, (%rbx)
0000000000003500	movl	%edi, 0x8(%rbx)
0000000000003503	callq	_mig_get_reply_port
0000000000003508	movl	%eax, 0xc(%rbx)
000000000000350b	movabsq	$0x1f4100000000, %rcx
0000000000003515	movq	%rcx, 0x10(%rbx)
0000000000003519	movl	$0x0, (%rsp)
0000000000003520	movq	%rbx, %rdi
0000000000003523	movl	$0x3, %esi
0000000000003528	movl	$0x18, %edx
000000000000352d	movl	$0x2c, %ecx
0000000000003532	movl	%eax, %r8d
0000000000003535	xorl	%r9d, %r9d
0000000000003538	callq	_mach_msg
000000000000353d	movl	%eax, %ebx
000000000000353f	leal	-0x10000002(%rbx), %eax
0000000000003545	cmpl	$0xe, %eax
0000000000003548	ja	0x355e
000000000000354a	movl	$0x4003, %ecx
000000000000354f	btl	%eax, %ecx
0000000000003552	jae	0x355e
0000000000003554	movl	-0x2c(%rbp), %edi
0000000000003557	callq	_mig_put_reply_port
000000000000355c	jmp	0x35b3
000000000000355e	testl	%ebx, %ebx
0000000000003560	jne	0x3594
0000000000003562	movl	-0x24(%rbp), %eax
0000000000003565	cmpl	$0x47, %eax
0000000000003568	je	0x359e
000000000000356a	cmpl	$0x1fa5, %eax
000000000000356f	jne	0x35a5
0000000000003571	movl	$0xfffffed4, %ebx
0000000000003576	cmpl	$0x0, -0x38(%rbp)
000000000000357a	js	0x35aa
000000000000357c	cmpl	$0x24, -0x34(%rbp)
0000000000003580	jne	0x35aa
0000000000003582	movl	-0x30(%rbp), %eax
0000000000003585	testl	%eax, %eax
0000000000003587	jne	0x35aa
0000000000003589	movl	-0x18(%rbp), %ebx
000000000000358c	testl	%ebx, %ebx
000000000000358e	jne	0x35aa
0000000000003590	xorl	%ebx, %ebx
0000000000003592	jmp	0x35b3
0000000000003594	movl	-0x2c(%rbp), %edi
0000000000003597	callq	_mig_dealloc_reply_port
000000000000359c	jmp	0x35b3
000000000000359e	movl	$0xfffffecc, %ebx
00000000000035a3	jmp	0x35aa
00000000000035a5	movl	$0xfffffed3, %ebx
00000000000035aa	leaq	-0x38(%rbp), %rdi
00000000000035ae	callq	_mach_msg_destroy
00000000000035b3	movl	%ebx, %eax
00000000000035b5	addq	$0x38, %rsp
00000000000035b9	popq	%rbx
00000000000035ba	popq	%rbp
00000000000035bb	retq
___disable_threadsignal:
00000000000035bc	movl	$0x200014b, %eax
00000000000035c1	movq	%rcx, %r10
00000000000035c4	syscall
00000000000035c6	jae	0x35d0
00000000000035c8	movq	%rax, %rdi
00000000000035cb	jmp	_cerror_nocancel
00000000000035d0	retq
00000000000035d1	nop
00000000000035d2	nop
00000000000035d3	nop
___bsdthread_terminate:
00000000000035d4	movl	$0x2000169, %eax
00000000000035d9	movq	%rcx, %r10
00000000000035dc	syscall
00000000000035de	jae	0x35e8
00000000000035e0	movq	%rax, %rdi
00000000000035e3	jmp	_cerror_nocancel
00000000000035e8	retq
00000000000035e9	nop
00000000000035ea	nop
00000000000035eb	nop
___psynch_mutexdrop:
00000000000035ec	movl	$0x200012e, %eax
00000000000035f1	movq	%rcx, %r10
00000000000035f4	syscall
00000000000035f6	jae	0x3600
00000000000035f8	movq	%rax, %rdi
00000000000035fb	jmp	_cerror_nocancel
0000000000003600	retq
0000000000003601	nop
0000000000003602	nop
0000000000003603	nop
_getfsstat64:
_getfsstat$INODE64:
0000000000003604	movl	$0x200015b, %eax
0000000000003609	movq	%rcx, %r10
000000000000360c	syscall
000000000000360e	jae	0x3618
0000000000003610	movq	%rax, %rdi
0000000000003613	jmp	_cerror_nocancel
0000000000003618	retq
0000000000003619	nop
000000000000361a	nop
000000000000361b	nop
_statfs$INODE64:
_statfs64:
000000000000361c	movl	$0x2000159, %eax
0000000000003621	movq	%rcx, %r10
0000000000003624	syscall
0000000000003626	jae	0x3630
0000000000003628	movq	%rax, %rdi
000000000000362b	jmp	_cerror_nocancel
0000000000003630	retq
_mach_port_guard:
0000000000003631	pushq	%rbp
0000000000003632	movq	%rsp, %rbp
0000000000003635	pushq	%r15
0000000000003637	pushq	%r14
0000000000003639	pushq	%r12
000000000000363b	pushq	%rbx
000000000000363c	movl	%ecx, %r14d
000000000000363f	movq	%rdx, %r15
0000000000003642	movl	%esi, %r12d
0000000000003645	movl	%edi, %ebx
0000000000003647	callq	__kernelrpc_mach_port_guard_trap
000000000000364c	cmpl	$0x10000003, %eax
0000000000003651	jne	0x366b
0000000000003653	movl	%ebx, %edi
0000000000003655	movl	%r12d, %esi
0000000000003658	movq	%r15, %rdx
000000000000365b	movl	%r14d, %ecx
000000000000365e	popq	%rbx
000000000000365f	popq	%r12
0000000000003661	popq	%r14
0000000000003663	popq	%r15
0000000000003665	popq	%rbp
0000000000003666	jmp	__kernelrpc_mach_port_guard
000000000000366b	popq	%rbx
000000000000366c	popq	%r12
000000000000366e	popq	%r14
0000000000003670	popq	%r15
0000000000003672	popq	%rbp
0000000000003673	retq
_semaphore_create:
0000000000003674	pushq	%rbp
0000000000003675	movq	%rsp, %rbp
0000000000003678	pushq	%r14
000000000000367a	pushq	%rbx
000000000000367b	subq	$0x40, %rsp
000000000000367f	movq	%rsi, %r14
0000000000003682	leaq	_NDR_record(%rip), %rax
0000000000003689	movq	(%rax), %rax
000000000000368c	leaq	-0x40(%rbp), %rbx
0000000000003690	movq	%rax, 0x18(%rbx)
0000000000003694	movl	%edx, 0x20(%rbx)
0000000000003697	movl	%ecx, 0x24(%rbx)
000000000000369a	movl	$0x1513, (%rbx)
00000000000036a0	movl	%edi, 0x8(%rbx)
00000000000036a3	callq	_mig_get_reply_port
00000000000036a8	movl	%eax, 0xc(%rbx)
00000000000036ab	movabsq	$0xd5a00000000, %rcx
00000000000036b5	movq	%rcx, 0x10(%rbx)
00000000000036b9	movl	$0x0, (%rsp)
00000000000036c0	movq	%rbx, %rdi
00000000000036c3	movl	$0x3, %esi
00000000000036c8	movl	$0x28, %edx
00000000000036cd	movl	$0x30, %ecx
00000000000036d2	movl	%eax, %r8d
00000000000036d5	xorl	%r9d, %r9d
00000000000036d8	callq	_mach_msg
00000000000036dd	movl	%eax, %ebx
00000000000036df	leal	-0x10000002(%rbx), %eax
00000000000036e5	cmpl	$0xe, %eax
00000000000036e8	ja	0x36fe
00000000000036ea	movl	$0x4003, %ecx
00000000000036ef	btl	%eax, %ecx
00000000000036f2	jae	0x36fe
00000000000036f4	movl	-0x34(%rbp), %edi
00000000000036f7	callq	_mig_put_reply_port
00000000000036fc	jmp	0x3765
00000000000036fe	testl	%ebx, %ebx
0000000000003700	jne	0x372e
0000000000003702	movl	-0x2c(%rbp), %eax
0000000000003705	cmpl	$0x47, %eax
0000000000003708	je	0x3738
000000000000370a	cmpl	$0xdbe, %eax
000000000000370f	jne	0x373f
0000000000003711	movl	-0x40(%rbp), %eax
0000000000003714	movl	-0x3c(%rbp), %ecx
0000000000003717	movl	$0xfffffed4, %ebx
000000000000371c	testl	%eax, %eax
000000000000371e	js	0x3746
0000000000003720	cmpl	$0x24, %ecx
0000000000003723	jne	0x375c
0000000000003725	movl	-0x20(%rbp), %ecx
0000000000003728	testl	%ecx, %ecx
000000000000372a	jne	0x3751
000000000000372c	jmp	0x375c
000000000000372e	movl	-0x34(%rbp), %edi
0000000000003731	callq	_mig_dealloc_reply_port
0000000000003736	jmp	0x3765
0000000000003738	movl	$0xfffffecc, %ebx
000000000000373d	jmp	0x375c
000000000000373f	movl	$0xfffffed3, %ebx
0000000000003744	jmp	0x375c
0000000000003746	cmpl	$0x28, %ecx
0000000000003749	jne	0x375c
000000000000374b	cmpl	$0x1, -0x28(%rbp)
000000000000374f	jne	0x375c
0000000000003751	movl	$0xfffffed4, %ebx
0000000000003756	cmpl	$0x0, -0x38(%rbp)
000000000000375a	je	0x3770
000000000000375c	leaq	-0x40(%rbp), %rdi
0000000000003760	callq	_mach_msg_destroy
0000000000003765	movl	%ebx, %eax
0000000000003767	addq	$0x40, %rsp
000000000000376b	popq	%rbx
000000000000376c	popq	%r14
000000000000376e	popq	%rbp
000000000000376f	retq
0000000000003770	testl	%eax, %eax
0000000000003772	js	0x377d
0000000000003774	movl	-0x20(%rbp), %ebx
0000000000003777	testl	%ebx, %ebx
0000000000003779	jne	0x375c
000000000000377b	jmp	0x378b
000000000000377d	movzwl	-0x1a(%rbp), %eax
0000000000003781	shll	$0x10, %eax
0000000000003784	cmpl	$0x110000, %eax
0000000000003789	jne	0x375c
000000000000378b	movl	-0x24(%rbp), %eax
000000000000378e	movl	%eax, (%r14)
0000000000003791	xorl	%ebx, %ebx
0000000000003793	jmp	0x3765
_semaphore_wait:
0000000000003795	jmp	_semaphore_wait_trap
_semaphore_signal:
000000000000379a	jmp	_semaphore_signal_trap
_vm_copy:
000000000000379f	pushq	%rbp
00000000000037a0	movq	%rsp, %rbp
00000000000037a3	pushq	%rbx
00000000000037a4	subq	$0x48, %rsp
00000000000037a8	leaq	_NDR_record(%rip), %rax
00000000000037af	movq	(%rax), %rax
00000000000037b2	leaq	-0x40(%rbp), %rbx
00000000000037b6	movq	%rax, 0x18(%rbx)
00000000000037ba	movq	%rsi, 0x20(%rbx)
00000000000037be	movq	%rdx, 0x28(%rbx)
00000000000037c2	movq	%rcx, 0x30(%rbx)
00000000000037c6	movl	$0x1513, (%rbx)
00000000000037cc	movl	%edi, 0x8(%rbx)
00000000000037cf	callq	_mig_get_reply_port
00000000000037d4	movl	%eax, 0xc(%rbx)
00000000000037d7	movabsq	$0x12c700000000, %rcx
00000000000037e1	movq	%rcx, 0x10(%rbx)
00000000000037e5	movl	$0x0, (%rsp)
00000000000037ec	movq	%rbx, %rdi
00000000000037ef	movl	$0x3, %esi
00000000000037f4	movl	$0x38, %edx
00000000000037f9	movl	$0x2c, %ecx
00000000000037fe	movl	%eax, %r8d
0000000000003801	xorl	%r9d, %r9d
0000000000003804	callq	_mach_msg
0000000000003809	movl	%eax, %ebx
000000000000380b	leal	-0x10000002(%rbx), %eax
0000000000003811	cmpl	$0xe, %eax
0000000000003814	ja	0x382a
0000000000003816	movl	$0x4003, %ecx
000000000000381b	btl	%eax, %ecx
000000000000381e	jae	0x382a
0000000000003820	movl	-0x34(%rbp), %edi
0000000000003823	callq	_mig_put_reply_port
0000000000003828	jmp	0x387f
000000000000382a	testl	%ebx, %ebx
000000000000382c	jne	0x3860
000000000000382e	movl	-0x2c(%rbp), %eax
0000000000003831	cmpl	$0x47, %eax
0000000000003834	je	0x386a
0000000000003836	cmpl	$0x132b, %eax
000000000000383b	jne	0x3871
000000000000383d	movl	$0xfffffed4, %ebx
0000000000003842	cmpl	$0x0, -0x40(%rbp)
0000000000003846	js	0x3876
0000000000003848	cmpl	$0x24, -0x3c(%rbp)
000000000000384c	jne	0x3876
000000000000384e	movl	-0x38(%rbp), %eax
0000000000003851	testl	%eax, %eax
0000000000003853	jne	0x3876
0000000000003855	movl	-0x20(%rbp), %ebx
0000000000003858	testl	%ebx, %ebx
000000000000385a	jne	0x3876
000000000000385c	xorl	%ebx, %ebx
000000000000385e	jmp	0x387f
0000000000003860	movl	-0x34(%rbp), %edi
0000000000003863	callq	_mig_dealloc_reply_port
0000000000003868	jmp	0x387f
000000000000386a	movl	$0xfffffecc, %ebx
000000000000386f	jmp	0x3876
0000000000003871	movl	$0xfffffed3, %ebx
0000000000003876	leaq	-0x40(%rbp), %rdi
000000000000387a	callq	_mach_msg_destroy
000000000000387f	movl	%ebx, %eax
0000000000003881	addq	$0x48, %rsp
0000000000003885	popq	%rbx
0000000000003886	popq	%rbp
0000000000003887	retq
_getxattr:
0000000000003888	movl	$0x20000ea, %eax
000000000000388d	movq	%rcx, %r10
0000000000003890	syscall
0000000000003892	jae	0x389c
0000000000003894	movq	%rax, %rdi
0000000000003897	jmp	_cerror_nocancel
000000000000389c	retq
_thread_destruct_special_reply_port:
000000000000389d	movl	%edi, %eax
000000000000389f	cmpl	$0x2, %esi
00000000000038a2	je	0x38c4
00000000000038a4	cmpl	$0x1, %esi
00000000000038a7	je	0x38d4
00000000000038a9	testl	%esi, %esi
00000000000038ab	jne	0x38e8
00000000000038ad	leaq	_mach_task_self_(%rip), %rcx
00000000000038b4	movl	(%rcx), %edi
00000000000038b6	movl	%eax, %esi
00000000000038b8	movl	$0xffffffff, %edx
00000000000038bd	xorl	%ecx, %ecx
00000000000038bf	jmp	_mach_port_destruct
00000000000038c4	leaq	_mach_task_self_(%rip), %rcx
00000000000038cb	movl	(%rcx), %edi
00000000000038cd	movl	%eax, %esi
00000000000038cf	jmp	_mach_port_deallocate
00000000000038d4	leaq	_mach_task_self_(%rip), %rcx
00000000000038db	movl	(%rcx), %edi
00000000000038dd	movl	%eax, %esi
00000000000038df	xorl	%edx, %edx
00000000000038e1	xorl	%ecx, %ecx
00000000000038e3	jmp	_mach_port_destruct
00000000000038e8	movl	$0x4, %eax
00000000000038ed	retq
_mig_dealloc_reply_port:
00000000000038ee	pushq	%rbp
00000000000038ef	movq	%rsp, %rbp
00000000000038f2	pushq	%r15
00000000000038f4	pushq	%r14
00000000000038f6	pushq	%rbx
00000000000038f7	pushq	%rax
00000000000038f8	movl	%gs:0x10, %ebx
0000000000003900	testl	%ebx, %ebx
0000000000003902	je	0x3952
0000000000003904	movl	__task_reply_port(%rip), %eax
000000000000390a	cmpl	%ebx, %eax
000000000000390c	je	0x3952
000000000000390e	movl	%edi, %r14d
0000000000003911	movq	%rax, %gs:0x10
000000000000391a	leaq	_mach_task_self_(%rip), %r15
0000000000003921	movl	(%r15), %edi
0000000000003924	movl	%ebx, %esi
0000000000003926	movl	$0x1, %edx
000000000000392b	movl	$0xffffffff, %ecx
0000000000003930	callq	_mach_port_mod_refs
0000000000003935	cmpl	%r14d, %ebx
0000000000003938	je	0x3945
000000000000393a	movl	(%r15), %edi
000000000000393d	movl	%r14d, %esi
0000000000003940	callq	_mach_port_deallocate
0000000000003945	movq	$0x0, %gs:0x10
0000000000003952	addq	$0x8, %rsp
0000000000003956	popq	%rbx
0000000000003957	popq	%r14
0000000000003959	popq	%r15
000000000000395b	popq	%rbp
000000000000395c	retq
_semaphore_destroy:
000000000000395d	pushq	%rbp
000000000000395e	movq	%rsp, %rbp
0000000000003961	pushq	%rbx
0000000000003962	subq	$0x38, %rsp
0000000000003966	leaq	-0x38(%rbp), %rbx
000000000000396a	movl	$0x1, 0x18(%rbx)
0000000000003971	movl	%esi, 0x1c(%rbx)
0000000000003974	movl	$0x110000, 0x24(%rbx)
000000000000397b	movl	$0x80001513, (%rbx)
0000000000003981	movl	%edi, 0x8(%rbx)
0000000000003984	callq	_mig_get_reply_port
0000000000003989	movl	%eax, 0xc(%rbx)
000000000000398c	movabsq	$0xd5b00000000, %rcx
0000000000003996	movq	%rcx, 0x10(%rbx)
000000000000399a	movl	$0x0, (%rsp)
00000000000039a1	movq	%rbx, %rdi
00000000000039a4	movl	$0x3, %esi
00000000000039a9	movl	$0x28, %edx
00000000000039ae	movl	$0x2c, %ecx
00000000000039b3	movl	%eax, %r8d
00000000000039b6	xorl	%r9d, %r9d
00000000000039b9	callq	_mach_msg
00000000000039be	movl	%eax, %ebx
00000000000039c0	leal	-0x10000002(%rbx), %eax
00000000000039c6	cmpl	$0xe, %eax
00000000000039c9	ja	0x39df
00000000000039cb	movl	$0x4003, %ecx
00000000000039d0	btl	%eax, %ecx
00000000000039d3	jae	0x39df
00000000000039d5	movl	-0x2c(%rbp), %edi
00000000000039d8	callq	_mig_put_reply_port
00000000000039dd	jmp	0x3a34
00000000000039df	testl	%ebx, %ebx
00000000000039e1	jne	0x3a15
00000000000039e3	movl	-0x24(%rbp), %eax
00000000000039e6	cmpl	$0x47, %eax
00000000000039e9	je	0x3a1f
00000000000039eb	cmpl	$0xdbf, %eax
00000000000039f0	jne	0x3a26
00000000000039f2	movl	$0xfffffed4, %ebx
00000000000039f7	cmpl	$0x0, -0x38(%rbp)
00000000000039fb	js	0x3a2b
00000000000039fd	cmpl	$0x24, -0x34(%rbp)
0000000000003a01	jne	0x3a2b
0000000000003a03	movl	-0x30(%rbp), %eax
0000000000003a06	testl	%eax, %eax
0000000000003a08	jne	0x3a2b
0000000000003a0a	movl	-0x18(%rbp), %ebx
0000000000003a0d	testl	%ebx, %ebx
0000000000003a0f	jne	0x3a2b
0000000000003a11	xorl	%ebx, %ebx
0000000000003a13	jmp	0x3a34
0000000000003a15	movl	-0x2c(%rbp), %edi
0000000000003a18	callq	_mig_dealloc_reply_port
0000000000003a1d	jmp	0x3a34
0000000000003a1f	movl	$0xfffffecc, %ebx
0000000000003a24	jmp	0x3a2b
0000000000003a26	movl	$0xfffffed3, %ebx
0000000000003a2b	leaq	-0x38(%rbp), %rdi
0000000000003a2f	callq	_mach_msg_destroy
0000000000003a34	movl	%ebx, %eax
0000000000003a36	addq	$0x38, %rsp
0000000000003a3a	popq	%rbx
0000000000003a3b	popq	%rbp
0000000000003a3c	retq
_proc_track_dirty:
0000000000003a3d	pushq	%rbp
0000000000003a3e	movq	%rsp, %rbp
0000000000003a41	pushq	%rbx
0000000000003a42	pushq	%rax
0000000000003a43	movl	%edi, %eax
0000000000003a45	movl	%esi, %ecx
0000000000003a47	xorl	%ebx, %ebx
0000000000003a49	movl	$0x8, %edi
0000000000003a4e	movl	%eax, %esi
0000000000003a50	movl	$0x1, %edx
0000000000003a55	xorl	%r8d, %r8d
0000000000003a58	xorl	%r9d, %r9d
0000000000003a5b	callq	___proc_info
0000000000003a60	cmpl	$-0x1, %eax
0000000000003a63	jne	0x3a6c
0000000000003a65	callq	___error
0000000000003a6a	movl	(%rax), %ebx
0000000000003a6c	movl	%ebx, %eax
0000000000003a6e	addq	$0x8, %rsp
0000000000003a72	popq	%rbx
0000000000003a73	popq	%rbp
0000000000003a74	retq
_proc_set_dirty:
0000000000003a75	pushq	%rbp
0000000000003a76	movq	%rsp, %rbp
0000000000003a79	pushq	%rbx
0000000000003a7a	pushq	%rax
0000000000003a7b	movl	%edi, %eax
0000000000003a7d	movl	%esi, %ecx
0000000000003a7f	xorl	%ebx, %ebx
0000000000003a81	movl	$0x8, %edi
0000000000003a86	movl	%eax, %esi
0000000000003a88	movl	$0x2, %edx
0000000000003a8d	xorl	%r8d, %r8d
0000000000003a90	xorl	%r9d, %r9d
0000000000003a93	callq	___proc_info
0000000000003a98	cmpl	$-0x1, %eax
0000000000003a9b	jne	0x3aa4
0000000000003a9d	callq	___error
0000000000003aa2	movl	(%rax), %ebx
0000000000003aa4	movl	%ebx, %eax
0000000000003aa6	addq	$0x8, %rsp
0000000000003aaa	popq	%rbx
0000000000003aab	popq	%rbp
0000000000003aac	retq
_mach_port_get_refs:
0000000000003aad	jmp	__kernelrpc_mach_port_get_refs
__kernelrpc_mach_port_get_refs:
0000000000003ab2	pushq	%rbp
0000000000003ab3	movq	%rsp, %rbp
0000000000003ab6	pushq	%r14
0000000000003ab8	pushq	%rbx
0000000000003ab9	subq	$0x40, %rsp
0000000000003abd	movq	%rcx, %r14
0000000000003ac0	leaq	_NDR_record(%rip), %rax
0000000000003ac7	movq	(%rax), %rax
0000000000003aca	leaq	-0x40(%rbp), %rbx
0000000000003ace	movq	%rax, 0x18(%rbx)
0000000000003ad2	movl	%esi, 0x20(%rbx)
0000000000003ad5	movl	%edx, 0x24(%rbx)
0000000000003ad8	movl	$0x1513, (%rbx)
0000000000003ade	movl	%edi, 0x8(%rbx)
0000000000003ae1	callq	_mig_get_reply_port
0000000000003ae6	movl	%eax, 0xc(%rbx)
0000000000003ae9	movabsq	$0xc8700000000, %rcx
0000000000003af3	movq	%rcx, 0x10(%rbx)
0000000000003af7	movl	$0x0, (%rsp)
0000000000003afe	movq	%rbx, %rdi
0000000000003b01	movl	$0x3, %esi
0000000000003b06	movl	$0x28, %edx
0000000000003b0b	movl	$0x30, %ecx
0000000000003b10	movl	%eax, %r8d
0000000000003b13	xorl	%r9d, %r9d
0000000000003b16	callq	_mach_msg
0000000000003b1b	movl	%eax, %ebx
0000000000003b1d	leal	-0x10000002(%rbx), %eax
0000000000003b23	cmpl	$0xe, %eax
0000000000003b26	ja	0x3b3c
0000000000003b28	movl	$0x4003, %ecx
0000000000003b2d	btl	%eax, %ecx
0000000000003b30	jae	0x3b3c
0000000000003b32	movl	-0x34(%rbp), %edi
0000000000003b35	callq	_mig_put_reply_port
0000000000003b3a	jmp	0x3ba3
0000000000003b3c	testl	%ebx, %ebx
0000000000003b3e	jne	0x3b84
0000000000003b40	movl	-0x2c(%rbp), %eax
0000000000003b43	cmpl	$0x47, %eax
0000000000003b46	je	0x3b8e
0000000000003b48	cmpl	$0xceb, %eax
0000000000003b4d	jne	0x3b95
0000000000003b4f	movl	$0xfffffed4, %ebx
0000000000003b54	cmpl	$0x0, -0x40(%rbp)
0000000000003b58	js	0x3b9a
0000000000003b5a	movl	-0x3c(%rbp), %eax
0000000000003b5d	cmpl	$0x28, %eax
0000000000003b60	je	0x3b6d
0000000000003b62	cmpl	$0x24, %eax
0000000000003b65	jne	0x3b9a
0000000000003b67	cmpl	$0x0, -0x20(%rbp)
0000000000003b6b	je	0x3b9a
0000000000003b6d	cmpl	$0x0, -0x38(%rbp)
0000000000003b71	jne	0x3b9a
0000000000003b73	movl	-0x20(%rbp), %ebx
0000000000003b76	testl	%ebx, %ebx
0000000000003b78	jne	0x3b9a
0000000000003b7a	movl	-0x1c(%rbp), %eax
0000000000003b7d	movl	%eax, (%r14)
0000000000003b80	xorl	%ebx, %ebx
0000000000003b82	jmp	0x3ba3
0000000000003b84	movl	-0x34(%rbp), %edi
0000000000003b87	callq	_mig_dealloc_reply_port
0000000000003b8c	jmp	0x3ba3
0000000000003b8e	movl	$0xfffffecc, %ebx
0000000000003b93	jmp	0x3b9a
0000000000003b95	movl	$0xfffffed3, %ebx
0000000000003b9a	leaq	-0x40(%rbp), %rdi
0000000000003b9e	callq	_mach_msg_destroy
0000000000003ba3	movl	%ebx, %eax
0000000000003ba5	addq	$0x40, %rsp
0000000000003ba9	popq	%rbx
0000000000003baa	popq	%r14
0000000000003bac	popq	%rbp
0000000000003bad	retq
0000000000003bae	nop
0000000000003baf	nop
___semwait_signal:
0000000000003bb0	movl	$0x200014e, %eax
0000000000003bb5	movq	%rcx, %r10
0000000000003bb8	syscall
0000000000003bba	jae	0x3bc4
0000000000003bbc	movq	%rax, %rdi
0000000000003bbf	jmp	_cerror
0000000000003bc4	retq
_voucher_mach_msg_revert:
0000000000003bc5	movq	__libkernel_voucher_functions(%rip), %rax
0000000000003bcc	movq	0x20(%rax), %rax
0000000000003bd0	testq	%rax, %rax
0000000000003bd3	je	0x3bd7
0000000000003bd5	jmpq	*%rax
0000000000003bd7	retq
_voucher_mach_msg_adopt:
0000000000003bd8	movq	__libkernel_voucher_functions(%rip), %rax
0000000000003bdf	movq	0x18(%rax), %rax
0000000000003be3	testq	%rax, %rax
0000000000003be6	je	0x3bea
0000000000003be8	jmpq	*%rax
0000000000003bea	movq	$-0x1, %rax
0000000000003bf1	retq
_mach_port_extract_member:
0000000000003bf2	pushq	%rbp
0000000000003bf3	movq	%rsp, %rbp
0000000000003bf6	pushq	%r15
0000000000003bf8	pushq	%r14
0000000000003bfa	pushq	%rbx
0000000000003bfb	pushq	%rax
0000000000003bfc	movl	%edx, %r14d
0000000000003bff	movl	%esi, %r15d
0000000000003c02	movl	%edi, %ebx
0000000000003c04	callq	__kernelrpc_mach_port_extract_member_trap
0000000000003c09	cmpl	$0x10000003, %eax
0000000000003c0e	jne	0x3c27
0000000000003c10	movl	%ebx, %edi
0000000000003c12	movl	%r15d, %esi
0000000000003c15	movl	%r14d, %edx
0000000000003c18	addq	$0x8, %rsp
0000000000003c1c	popq	%rbx
0000000000003c1d	popq	%r14
0000000000003c1f	popq	%r15
0000000000003c21	popq	%rbp
0000000000003c22	jmp	__kernelrpc_mach_port_extract_member
0000000000003c27	addq	$0x8, %rsp
0000000000003c2b	popq	%rbx
0000000000003c2c	popq	%r14
0000000000003c2e	popq	%r15
0000000000003c30	popq	%rbp
0000000000003c31	retq
0000000000003c32	nop
0000000000003c33	nop
_sigprocmask:
0000000000003c34	movl	$0x2000030, %eax
0000000000003c39	movq	%rcx, %r10
0000000000003c3c	syscall
0000000000003c3e	jae	0x3c48
0000000000003c40	movq	%rax, %rdi
0000000000003c43	jmp	_cerror_nocancel
0000000000003c48	retq
0000000000003c49	nop
0000000000003c4a	nop
0000000000003c4b	nop
___sigaltstack:
0000000000003c4c	movl	$0x2000035, %eax
0000000000003c51	movq	%rcx, %r10
0000000000003c54	syscall
0000000000003c56	jae	0x3c60
0000000000003c58	movq	%rax, %rdi
0000000000003c5b	jmp	_cerror
0000000000003c60	retq
0000000000003c61	nop
0000000000003c62	nop
0000000000003c63	nop
_pwrite:
0000000000003c64	movl	$0x200009a, %eax
0000000000003c69	movq	%rcx, %r10
0000000000003c6c	syscall
0000000000003c6e	jae	0x3c78
0000000000003c70	movq	%rax, %rdi
0000000000003c73	jmp	_cerror
0000000000003c78	retq
0000000000003c79	nop
0000000000003c7a	nop
0000000000003c7b	nop
_ftruncate:
0000000000003c7c	movl	$0x20000c9, %eax
0000000000003c81	movq	%rcx, %r10
0000000000003c84	syscall
0000000000003c86	jae	0x3c90
0000000000003c88	movq	%rax, %rdi
0000000000003c8b	jmp	_cerror_nocancel
0000000000003c90	retq
0000000000003c91	nop
0000000000003c92	nop
0000000000003c93	nop
___setattrlist:
_setattrlist:
0000000000003c94	movl	$0x20000dd, %eax
0000000000003c99	movq	%rcx, %r10
0000000000003c9c	syscall
0000000000003c9e	jae	0x3ca8
0000000000003ca0	movq	%rax, %rdi
0000000000003ca3	jmp	_cerror_nocancel
0000000000003ca8	retq
0000000000003ca9	nop
0000000000003caa	nop
0000000000003cab	nop
_getattrlistbulk:
0000000000003cac	movl	$0x20001cd, %eax
0000000000003cb1	movq	%rcx, %r10
0000000000003cb4	syscall
0000000000003cb6	jae	0x3cc0
0000000000003cb8	movq	%rax, %rdi
0000000000003cbb	jmp	_cerror_nocancel
0000000000003cc0	retq
0000000000003cc1	nop
0000000000003cc2	nop
0000000000003cc3	nop
_listxattr:
0000000000003cc4	movl	$0x20000f0, %eax
0000000000003cc9	movq	%rcx, %r10
0000000000003ccc	syscall
0000000000003cce	jae	0x3cd8
0000000000003cd0	movq	%rax, %rdi
0000000000003cd3	jmp	_cerror_nocancel
0000000000003cd8	retq
0000000000003cd9	nop
0000000000003cda	nop
0000000000003cdb	nop
___psynch_cvwait:
0000000000003cdc	movl	$0x2000131, %eax
0000000000003ce1	movq	%rcx, %r10
0000000000003ce4	syscall
0000000000003ce6	jae	0x3cf0
0000000000003ce8	movq	%rax, %rdi
0000000000003ceb	jmp	_cerror_nocancel
0000000000003cf0	retq
0000000000003cf1	nop
0000000000003cf2	nop
0000000000003cf3	nop
___psynch_cvbroad:
0000000000003cf4	movl	$0x200012f, %eax
0000000000003cf9	movq	%rcx, %r10
0000000000003cfc	syscall
0000000000003cfe	jae	0x3d08
0000000000003d00	movq	%rax, %rdi
0000000000003d03	jmp	_cerror_nocancel
0000000000003d08	retq
_guarded_open_np:
0000000000003d09	pushq	%rbp
0000000000003d0a	movq	%rsp, %rbp
0000000000003d0d	subq	$0xd0, %rsp
0000000000003d14	testb	%al, %al
0000000000003d16	je	0x3d3e
0000000000003d18	movaps	%xmm0, -0xa0(%rbp)
0000000000003d1f	movaps	%xmm1, -0x90(%rbp)
0000000000003d26	movaps	%xmm2, -0x80(%rbp)
0000000000003d2a	movaps	%xmm3, -0x70(%rbp)
0000000000003d2e	movaps	%xmm4, -0x60(%rbp)
0000000000003d32	movaps	%xmm5, -0x50(%rbp)
0000000000003d36	movaps	%xmm6, -0x40(%rbp)
0000000000003d3a	movaps	%xmm7, -0x30(%rbp)
0000000000003d3e	movq	%r9, -0xa8(%rbp)
0000000000003d45	movq	%r8, -0xb0(%rbp)
0000000000003d4c	xorl	%r8d, %r8d
0000000000003d4f	btl	$0x9, %ecx
0000000000003d53	jae	0x3da4
0000000000003d55	leaq	-0xd0(%rbp), %rax
0000000000003d5c	movq	%rax, -0x10(%rbp)
0000000000003d60	leaq	0x10(%rbp), %rax
0000000000003d64	movq	%rax, -0x18(%rbp)
0000000000003d68	movabsq	$0x3000000020, %rax
0000000000003d72	movq	%rax, -0x20(%rbp)
0000000000003d76	movl	$0x20, %r8d
0000000000003d7c	cmpq	$0x28, %r8
0000000000003d80	ja	0x3d95
0000000000003d82	movl	$0x20, %r9d
0000000000003d88	addq	-0x10(%rbp), %r9
0000000000003d8c	leal	0x8(%r8), %eax
0000000000003d90	movl	%eax, -0x20(%rbp)
0000000000003d93	jmp	0x3da1
0000000000003d95	movq	-0x18(%rbp), %r9
0000000000003d99	leaq	0x8(%r9), %rax
0000000000003d9d	movq	%rax, -0x18(%rbp)
0000000000003da1	movl	(%r9), %r8d
0000000000003da4	callq	___guarded_open_np
0000000000003da9	addq	$0xd0, %rsp
0000000000003db0	popq	%rbp
0000000000003db1	retq
0000000000003db2	nop
0000000000003db3	nop
___guarded_open_np:
0000000000003db4	movl	$0x20001b9, %eax
0000000000003db9	movq	%rcx, %r10
0000000000003dbc	syscall
0000000000003dbe	jae	0x3dc8
0000000000003dc0	movq	%rax, %rdi
0000000000003dc3	jmp	_cerror_nocancel
0000000000003dc8	retq
0000000000003dc9	nop
0000000000003dca	nop
0000000000003dcb	nop
_guarded_pwrite_np:
0000000000003dcc	movl	$0x20001e6, %eax
0000000000003dd1	movq	%rcx, %r10
0000000000003dd4	syscall
0000000000003dd6	jae	0x3de0
0000000000003dd8	movq	%rax, %rdi
0000000000003ddb	jmp	_cerror_nocancel
0000000000003de0	retq
_vm_purgable_control:
0000000000003de1	jmp	_mach_vm_purgable_control
_mach_vm_purgable_control:
0000000000003de6	pushq	%rbp
0000000000003de7	movq	%rsp, %rbp
0000000000003dea	pushq	%r15
0000000000003dec	pushq	%r14
0000000000003dee	pushq	%r12
0000000000003df0	pushq	%rbx
0000000000003df1	movq	%rcx, %r14
0000000000003df4	movl	%edx, %r15d
0000000000003df7	movq	%rsi, %r12
0000000000003dfa	movl	%edi, %ebx
0000000000003dfc	callq	__kernelrpc_mach_vm_purgable_control_trap
0000000000003e01	cmpl	$0x10000003, %eax
0000000000003e06	jne	0x3e20
0000000000003e08	movl	%ebx, %edi
0000000000003e0a	movq	%r12, %rsi
0000000000003e0d	movl	%r15d, %edx
0000000000003e10	movq	%r14, %rcx
0000000000003e13	popq	%rbx
0000000000003e14	popq	%r12
0000000000003e16	popq	%r14
0000000000003e18	popq	%r15
0000000000003e1a	popq	%rbp
0000000000003e1b	jmp	__kernelrpc_mach_vm_purgable_control
0000000000003e20	popq	%rbx
0000000000003e21	popq	%r12
0000000000003e23	popq	%r14
0000000000003e25	popq	%r15
0000000000003e27	popq	%rbp
0000000000003e28	retq
0000000000003e29	nop
0000000000003e2a	nop
0000000000003e2b	nop
_fsctl:
0000000000003e2c	movl	$0x20000f2, %eax
0000000000003e31	movq	%rcx, %r10
0000000000003e34	syscall
0000000000003e36	jae	0x3e40
0000000000003e38	movq	%rax, %rdi
0000000000003e3b	jmp	_cerror_nocancel
0000000000003e40	retq
0000000000003e41	nop
0000000000003e42	nop
0000000000003e43	nop
_fgetattrlist:
0000000000003e44	movl	$0x20000e4, %eax
0000000000003e49	movq	%rcx, %r10
0000000000003e4c	syscall
0000000000003e4e	jae	0x3e58
0000000000003e50	movq	%rax, %rdi
0000000000003e53	jmp	_cerror_nocancel
0000000000003e58	retq
_munmap:
0000000000003e59	pushq	%rbp
0000000000003e5a	movq	%rsp, %rbp
0000000000003e5d	pushq	%r14
0000000000003e5f	pushq	%rbx
0000000000003e60	movq	%rsi, %r14
0000000000003e63	movq	%rdi, %rbx
0000000000003e66	leaq	___syscall_logger(%rip), %rax
0000000000003e6d	movq	(%rax), %rax
0000000000003e70	testq	%rax, %rax
0000000000003e73	je	0x3e91
0000000000003e75	leaq	_mach_task_self_(%rip), %rcx
0000000000003e7c	movl	(%rcx), %esi
0000000000003e7e	movl	$0x20, %edi
0000000000003e83	movq	%rbx, %rdx
0000000000003e86	movq	%r14, %rcx
0000000000003e89	xorl	%r8d, %r8d
0000000000003e8c	xorl	%r9d, %r9d
0000000000003e8f	callq	*%rax
0000000000003e91	movq	%rbx, %rdi
0000000000003e94	movq	%r14, %rsi
0000000000003e97	popq	%rbx
0000000000003e98	popq	%r14
0000000000003e9a	popq	%rbp
0000000000003e9b	jmp	___munmap
___munmap:
0000000000003ea0	movl	$0x2000049, %eax
0000000000003ea5	movq	%rcx, %r10
0000000000003ea8	syscall
0000000000003eaa	jae	0x3eb4
0000000000003eac	movq	%rax, %rdi
0000000000003eaf	jmp	_cerror_nocancel
0000000000003eb4	retq
0000000000003eb5	nop
0000000000003eb6	nop
0000000000003eb7	nop
_fsgetpath:
0000000000003eb8	movl	$0x20001ab, %eax
0000000000003ebd	movq	%rcx, %r10
0000000000003ec0	syscall
0000000000003ec2	jae	0x3ecc
0000000000003ec4	movq	%rax, %rdi
0000000000003ec7	jmp	_cerror_nocancel
0000000000003ecc	retq
0000000000003ecd	nop
0000000000003ece	nop
0000000000003ecf	nop
_setxattr:
0000000000003ed0	movl	$0x20000ec, %eax
0000000000003ed5	movq	%rcx, %r10
0000000000003ed8	syscall
0000000000003eda	jae	0x3ee4
0000000000003edc	movq	%rax, %rdi
0000000000003edf	jmp	_cerror_nocancel
0000000000003ee4	retq
0000000000003ee5	nop
0000000000003ee6	nop
0000000000003ee7	nop
_mkdirat:
0000000000003ee8	movl	$0x20001db, %eax
0000000000003eed	movq	%rcx, %r10
0000000000003ef0	syscall
0000000000003ef2	jae	0x3efc
0000000000003ef4	movq	%rax, %rdi
0000000000003ef7	jmp	_cerror_nocancel
0000000000003efc	retq
0000000000003efd	nop
0000000000003efe	nop
0000000000003eff	nop
_fstatat64:
_fstatat$INODE64:
0000000000003f00	movl	$0x20001d6, %eax
0000000000003f05	movq	%rcx, %r10
0000000000003f08	syscall
0000000000003f0a	jae	0x3f14
0000000000003f0c	movq	%rax, %rdi
0000000000003f0f	jmp	_cerror_nocancel
0000000000003f14	retq
0000000000003f15	nop
0000000000003f16	nop
0000000000003f17	nop
_guarded_close_np:
0000000000003f18	movl	$0x20001ba, %eax
0000000000003f1d	movq	%rcx, %r10
0000000000003f20	syscall
0000000000003f22	jae	0x3f2c
0000000000003f24	movq	%rax, %rdi
0000000000003f27	jmp	_cerror_nocancel
0000000000003f2c	retq
0000000000003f2d	nop
0000000000003f2e	nop
0000000000003f2f	nop
_fsync:
0000000000003f30	movl	$0x200005f, %eax
0000000000003f35	movq	%rcx, %r10
0000000000003f38	syscall
0000000000003f3a	jae	0x3f44
0000000000003f3c	movq	%rax, %rdi
0000000000003f3f	jmp	_cerror
0000000000003f44	retq
_host_get_io_master:
0000000000003f45	pushq	%rbp
0000000000003f46	movq	%rsp, %rbp
0000000000003f49	pushq	%r14
0000000000003f4b	pushq	%rbx
0000000000003f4c	subq	$0x40, %rsp
0000000000003f50	movq	%rsi, %r14
0000000000003f53	leaq	-0x40(%rbp), %rbx
0000000000003f57	movl	$0x1513, (%rbx)
0000000000003f5d	movl	%edi, 0x8(%rbx)
0000000000003f60	callq	_mig_get_reply_port
0000000000003f65	movl	%eax, 0xc(%rbx)
0000000000003f68	movabsq	$0xcd00000000, %rcx
0000000000003f72	movq	%rcx, 0x10(%rbx)
0000000000003f76	movl	$0x0, (%rsp)
0000000000003f7d	movq	%rbx, %rdi
0000000000003f80	movl	$0x3, %esi
0000000000003f85	movl	$0x18, %edx
0000000000003f8a	movl	$0x30, %ecx
0000000000003f8f	movl	%eax, %r8d
0000000000003f92	xorl	%r9d, %r9d
0000000000003f95	callq	_mach_msg
0000000000003f9a	movl	%eax, %ebx
0000000000003f9c	leal	-0x10000002(%rbx), %eax
0000000000003fa2	cmpl	$0xe, %eax
0000000000003fa5	ja	0x3fbb
0000000000003fa7	movl	$0x4003, %ecx
0000000000003fac	btl	%eax, %ecx
0000000000003faf	jae	0x3fbb
0000000000003fb1	movl	-0x34(%rbp), %edi
0000000000003fb4	callq	_mig_put_reply_port
0000000000003fb9	jmp	0x4009
0000000000003fbb	testl	%ebx, %ebx
0000000000003fbd	jne	0x3fea
0000000000003fbf	movl	-0x2c(%rbp), %eax
0000000000003fc2	cmpl	$0x47, %eax
0000000000003fc5	je	0x3ff4
0000000000003fc7	cmpl	$0x131, %eax
0000000000003fcc	jne	0x3ffb
0000000000003fce	movl	-0x40(%rbp), %eax
0000000000003fd1	movl	-0x3c(%rbp), %ecx
0000000000003fd4	movl	$0xfffffed4, %ebx
0000000000003fd9	testl	%eax, %eax
0000000000003fdb	js	0x4014
0000000000003fdd	cmpl	$0x24, %ecx
0000000000003fe0	jne	0x4000
0000000000003fe2	cmpl	$0x0, -0x20(%rbp)
0000000000003fe6	jne	0x401f
0000000000003fe8	jmp	0x4000
0000000000003fea	movl	-0x34(%rbp), %edi
0000000000003fed	callq	_mig_dealloc_reply_port
0000000000003ff2	jmp	0x4009
0000000000003ff4	movl	$0xfffffecc, %ebx
0000000000003ff9	jmp	0x4000
0000000000003ffb	movl	$0xfffffed3, %ebx
0000000000004000	leaq	-0x40(%rbp), %rdi
0000000000004004	callq	_mach_msg_destroy
0000000000004009	movl	%ebx, %eax
000000000000400b	addq	$0x40, %rsp
000000000000400f	popq	%rbx
0000000000004010	popq	%r14
0000000000004012	popq	%rbp
0000000000004013	retq
0000000000004014	cmpl	$0x28, %ecx
0000000000004017	jne	0x4000
0000000000004019	cmpl	$0x1, -0x28(%rbp)
000000000000401d	jne	0x4000
000000000000401f	movl	$0xfffffed4, %ebx
0000000000004024	cmpl	$0x0, -0x38(%rbp)
0000000000004028	jne	0x4000
000000000000402a	testl	%eax, %eax
000000000000402c	js	0x4037
000000000000402e	movl	-0x20(%rbp), %ebx
0000000000004031	testl	%ebx, %ebx
0000000000004033	jne	0x4000
0000000000004035	jmp	0x4045
0000000000004037	movzwl	-0x1a(%rbp), %eax
000000000000403b	shll	$0x10, %eax
000000000000403e	cmpl	$0x110000, %eax
0000000000004043	jne	0x4000
0000000000004045	movl	-0x24(%rbp), %eax
0000000000004048	movl	%eax, (%r14)
000000000000404b	xorl	%ebx, %ebx
000000000000404d	jmp	0x4009
000000000000404f	nop
_write:
0000000000004050	movl	$0x2000004, %eax
0000000000004055	movq	%rcx, %r10
0000000000004058	syscall
000000000000405a	jae	0x4064
000000000000405c	movq	%rax, %rdi
000000000000405f	jmp	_cerror
0000000000004064	retq
_rename:
0000000000004065	pushq	%rbp
0000000000004066	movq	%rsp, %rbp
0000000000004069	pushq	%rbx
000000000000406a	pushq	%rax
000000000000406b	callq	___rename
0000000000004070	movl	%eax, %ebx
0000000000004072	testl	%eax, %eax
0000000000004074	jne	0x407b
0000000000004076	callq	___inc_remove_counter
000000000000407b	movl	%ebx, %eax
000000000000407d	addq	$0x8, %rsp
0000000000004081	popq	%rbx
0000000000004082	popq	%rbp
0000000000004083	retq
___rename:
0000000000004084	movl	$0x2000080, %eax
0000000000004089	movq	%rcx, %r10
000000000000408c	syscall
000000000000408e	jae	0x4098
0000000000004090	movq	%rax, %rdi
0000000000004093	jmp	_cerror
0000000000004098	retq
___inc_remove_counter:
0000000000004099	lock
000000000000409a	incq	___remove_counter(%rip)
00000000000040a1	retq
_rmdir:
00000000000040a2	pushq	%rbp
00000000000040a3	movq	%rsp, %rbp
00000000000040a6	pushq	%rbx
00000000000040a7	pushq	%rax
00000000000040a8	callq	___rmdir
00000000000040ad	movl	%eax, %ebx
00000000000040af	testl	%eax, %eax
00000000000040b1	jne	0x40b8
00000000000040b3	callq	___inc_remove_counter
00000000000040b8	movl	%ebx, %eax
00000000000040ba	addq	$0x8, %rsp
00000000000040be	popq	%rbx
00000000000040bf	popq	%rbp
00000000000040c0	retq
00000000000040c1	nop
00000000000040c2	nop
00000000000040c3	nop
___rmdir:
00000000000040c4	movl	$0x2000089, %eax
00000000000040c9	movq	%rcx, %r10
00000000000040cc	syscall
00000000000040ce	jae	0x40d8
00000000000040d0	movq	%rax, %rdi
00000000000040d3	jmp	_cerror_nocancel
00000000000040d8	retq
_chmod:
00000000000040d9	pushq	%rbp
00000000000040da	movq	%rsp, %rbp
00000000000040dd	pushq	%r15
00000000000040df	pushq	%r14
00000000000040e1	pushq	%r13
00000000000040e3	pushq	%r12
00000000000040e5	pushq	%rbx
00000000000040e6	pushq	%rax
00000000000040e7	movl	%esi, %r15d
00000000000040ea	movq	%rdi, %r14
00000000000040ed	callq	___chmod
00000000000040f2	movl	%eax, %ebx
00000000000040f4	testl	%eax, %eax
00000000000040f6	jns	0x419e
00000000000040fc	callq	___error
0000000000004101	cmpl	$0x1, (%rax)
0000000000004104	jne	0x419e
000000000000410a	movzwl	%r15w, %r13d
000000000000410e	movl	%r13d, %r12d
0000000000004111	andl	$0xc00, %r12d
0000000000004118	je	0x419e
000000000000411e	btl	$0xa, %r13d
0000000000004123	jb	0x4156
0000000000004125	btl	$0xb, %r13d
000000000000412a	jb	0x417b
000000000000412c	cmpl	$0xc00, %r12d
0000000000004133	jne	0x419e
0000000000004135	xorl	$0xc00, %r15d
000000000000413c	movzwl	%r15w, %esi
0000000000004140	movq	%r14, %rdi
0000000000004143	addq	$0x8, %rsp
0000000000004147	popq	%rbx
0000000000004148	popq	%r12
000000000000414a	popq	%r13
000000000000414c	popq	%r14
000000000000414e	popq	%r15
0000000000004150	popq	%rbp
0000000000004151	jmp	___chmod
0000000000004156	movl	%r15d, %eax
0000000000004159	xorl	$0x400, %eax
000000000000415e	movzwl	%ax, %esi
0000000000004161	movq	%r14, %rdi
0000000000004164	callq	___chmod
0000000000004169	movl	%eax, %ebx
000000000000416b	testl	%eax, %eax
000000000000416d	jns	0x419e
000000000000416f	callq	___error
0000000000004174	cmpl	$0x1, (%rax)
0000000000004177	je	0x4125
0000000000004179	jmp	0x419e
000000000000417b	movl	%r15d, %eax
000000000000417e	xorl	$0x800, %eax
0000000000004183	movzwl	%ax, %esi
0000000000004186	movq	%r14, %rdi
0000000000004189	callq	___chmod
000000000000418e	movl	%eax, %ebx
0000000000004190	testl	%eax, %eax
0000000000004192	jns	0x419e
0000000000004194	callq	___error
0000000000004199	cmpl	$0x1, (%rax)
000000000000419c	je	0x412c
000000000000419e	movl	%ebx, %eax
00000000000041a0	addq	$0x8, %rsp
00000000000041a4	popq	%rbx
00000000000041a5	popq	%r12
00000000000041a7	popq	%r13
00000000000041a9	popq	%r14
00000000000041ab	popq	%r15
00000000000041ad	popq	%rbp
00000000000041ae	retq
00000000000041af	nop
___chmod:
00000000000041b0	movl	$0x200000f, %eax
00000000000041b5	movq	%rcx, %r10
00000000000041b8	syscall
00000000000041ba	jae	0x41c4
00000000000041bc	movq	%rax, %rdi
00000000000041bf	jmp	_cerror_nocancel
00000000000041c4	retq
_mach_vm_protect:
00000000000041c5	pushq	%rbp
00000000000041c6	movq	%rsp, %rbp
00000000000041c9	pushq	%r15
00000000000041cb	pushq	%r14
00000000000041cd	pushq	%r13
00000000000041cf	pushq	%r12
00000000000041d1	pushq	%rbx
00000000000041d2	pushq	%rax
00000000000041d3	movl	%r8d, %r14d
00000000000041d6	movl	%ecx, %r15d
00000000000041d9	movq	%rdx, %r12
00000000000041dc	movq	%rsi, %r13
00000000000041df	movl	%edi, %ebx
00000000000041e1	callq	__kernelrpc_mach_vm_protect_trap
00000000000041e6	cmpl	$0x10000003, %eax
00000000000041eb	jne	0x420e
00000000000041ed	movl	%ebx, %edi
00000000000041ef	movq	%r13, %rsi
00000000000041f2	movq	%r12, %rdx
00000000000041f5	movl	%r15d, %ecx
00000000000041f8	movl	%r14d, %r8d
00000000000041fb	addq	$0x8, %rsp
00000000000041ff	popq	%rbx
0000000000004200	popq	%r12
0000000000004202	popq	%r13
0000000000004204	popq	%r14
0000000000004206	popq	%r15
0000000000004208	popq	%rbp
0000000000004209	jmp	__kernelrpc_mach_vm_protect
000000000000420e	addq	$0x8, %rsp
0000000000004212	popq	%rbx
0000000000004213	popq	%r12
0000000000004215	popq	%r13
0000000000004217	popq	%r14
0000000000004219	popq	%r15
000000000000421b	popq	%rbp
000000000000421c	retq
000000000000421d	nop
000000000000421e	nop
000000000000421f	nop
___bsdthread_create:
0000000000004220	movl	$0x2000168, %eax
0000000000004225	movq	%rcx, %r10
0000000000004228	syscall
000000000000422a	jae	0x4234
000000000000422c	movq	%rax, %rdi
000000000000422f	jmp	_cerror_nocancel
0000000000004234	retq
0000000000004235	nop
0000000000004236	nop
0000000000004237	nop
___mprotect:
_mprotect:
0000000000004238	movl	$0x200004a, %eax
000000000000423d	movq	%rcx, %r10
0000000000004240	syscall
0000000000004242	jae	0x424c
0000000000004244	movq	%rax, %rdi
0000000000004247	jmp	_cerror_nocancel
000000000000424c	retq
000000000000424d	nop
000000000000424e	nop
000000000000424f	nop
___gettimeofday_with_mach:
0000000000004250	movl	$0x2000074, %eax
0000000000004255	movq	%rcx, %r10
0000000000004258	syscall
000000000000425a	jae	0x4264
000000000000425c	movq	%rax, %rdi
000000000000425f	jmp	_cerror
0000000000004264	retq
___gettimeofday:
0000000000004265	movq	$0x0, %rdx
000000000000426c	movl	$0x2000074, %eax
0000000000004271	movq	%rcx, %r10
0000000000004274	syscall
0000000000004276	jae	0x4280
0000000000004278	movq	%rax, %rdi
000000000000427b	jmp	_cerror_nocancel
0000000000004280	cmpq	$0x0, %rax
0000000000004284	je	0x428e
0000000000004286	movq	%rax, (%rdi)
0000000000004289	movl	%edx, 0x8(%rdi)
000000000000428c	xorl	%eax, %eax
000000000000428e	retq
000000000000428f	nop
_writev:
0000000000004290	movl	$0x2000079, %eax
0000000000004295	movq	%rcx, %r10
0000000000004298	syscall
000000000000429a	jae	0x42a4
000000000000429c	movq	%rax, %rdi
000000000000429f	jmp	_cerror
00000000000042a4	retq
00000000000042a5	nop
00000000000042a6	nop
00000000000042a7	nop
___psynch_cvclrprepost:
00000000000042a8	movl	$0x2000138, %eax
00000000000042ad	movq	%rcx, %r10
00000000000042b0	syscall
00000000000042b2	jae	0x42bc
00000000000042b4	movq	%rax, %rdi
00000000000042b7	jmp	_cerror_nocancel
00000000000042bc	retq
00000000000042bd	nop
00000000000042be	nop
00000000000042bf	nop
___write_nocancel:
_write$NOCANCEL:
00000000000042c0	movl	$0x200018d, %eax
00000000000042c5	movq	%rcx, %r10
00000000000042c8	syscall
00000000000042ca	jae	0x42d4
00000000000042cc	movq	%rax, %rdi
00000000000042cf	jmp	_cerror_nocancel
00000000000042d4	retq
_kpersona_info:
00000000000042d5	pushq	%rbp
00000000000042d6	movq	%rsp, %rbp
00000000000042d9	subq	$0x10, %rsp
00000000000042dd	movq	%rsi, %rdx
00000000000042e0	leaq	-0x4(%rbp), %rcx
00000000000042e4	movl	%edi, (%rcx)
00000000000042e6	leaq	-0x10(%rbp), %r8
00000000000042ea	movq	$0x1, (%r8)
00000000000042f1	movl	$0x5, %edi
00000000000042f6	xorl	%esi, %esi
00000000000042f8	xorl	%r9d, %r9d
00000000000042fb	callq	___persona
0000000000004300	addq	$0x10, %rsp
0000000000004304	popq	%rbp
0000000000004305	retq
0000000000004306	nop
0000000000004307	nop
___persona:
0000000000004308	movl	$0x20001ee, %eax
000000000000430d	movq	%rcx, %r10
0000000000004310	syscall
0000000000004312	jae	0x431c
0000000000004314	movq	%rax, %rdi
0000000000004317	jmp	_cerror_nocancel
000000000000431c	retq
_unlink:
000000000000431d	pushq	%rbp
000000000000431e	movq	%rsp, %rbp
0000000000004321	pushq	%rbx
0000000000004322	pushq	%rax
0000000000004323	callq	___unlink
0000000000004328	movl	%eax, %ebx
000000000000432a	testl	%eax, %eax
000000000000432c	jne	0x4333
000000000000432e	callq	___inc_remove_counter
0000000000004333	movl	%ebx, %eax
0000000000004335	addq	$0x8, %rsp
0000000000004339	popq	%rbx
000000000000433a	popq	%rbp
000000000000433b	retq
___unlink:
000000000000433c	movl	$0x200000a, %eax
0000000000004341	movq	%rcx, %r10
0000000000004344	syscall
0000000000004346	jae	0x4350
0000000000004348	movq	%rax, %rdi
000000000000434b	jmp	_cerror
0000000000004350	retq
0000000000004351	nop
0000000000004352	nop
0000000000004353	nop
_flock:
0000000000004354	movl	$0x2000083, %eax
0000000000004359	movq	%rcx, %r10
000000000000435c	syscall
000000000000435e	jae	0x4368
0000000000004360	movq	%rax, %rdi
0000000000004363	jmp	_cerror_nocancel
0000000000004368	retq
__kernelrpc_mach_port_request_notification:
0000000000004369	pushq	%rbp
000000000000436a	movq	%rsp, %rbp
000000000000436d	pushq	%rbx
000000000000436e	subq	$0x48, %rsp
0000000000004372	leaq	-0x48(%rbp), %rbx
0000000000004376	movl	$0x1, 0x18(%rbx)
000000000000437d	movl	%r8d, 0x1c(%rbx)
0000000000004381	shll	$0x10, %r9d
0000000000004385	andl	$0xff0000, %r9d
000000000000438c	movl	%r9d, 0x24(%rbx)
0000000000004390	leaq	_NDR_record(%rip), %rax
0000000000004397	movq	(%rax), %rax
000000000000439a	movq	%rax, 0x28(%rbx)
000000000000439e	movl	%esi, 0x30(%rbx)
00000000000043a1	movl	%edx, 0x34(%rbx)
00000000000043a4	movl	%ecx, 0x38(%rbx)
00000000000043a7	movl	$0x80001513, (%rbx)
00000000000043ad	movl	%edi, 0x8(%rbx)
00000000000043b0	callq	_mig_get_reply_port
00000000000043b5	movl	%eax, 0xc(%rbx)
00000000000043b8	movabsq	$0xc8d00000000, %rcx
00000000000043c2	movq	%rcx, 0x10(%rbx)
00000000000043c6	movl	$0x0, (%rsp)
00000000000043cd	movq	%rbx, %rdi
00000000000043d0	movl	$0x3, %esi
00000000000043d5	movl	$0x3c, %edx
00000000000043da	movl	$0x30, %ecx
00000000000043df	movl	%eax, %r8d
00000000000043e2	xorl	%r9d, %r9d
00000000000043e5	callq	_mach_msg
00000000000043ea	movl	%eax, %ebx
00000000000043ec	leal	-0x10000002(%rbx), %eax
00000000000043f2	cmpl	$0xe, %eax
00000000000043f5	ja	0x440b
00000000000043f7	movl	$0x4003, %ecx
00000000000043fc	btl	%eax, %ecx
00000000000043ff	jae	0x440b
0000000000004401	movl	-0x3c(%rbp), %edi
0000000000004404	callq	_mig_put_reply_port
0000000000004409	jmp	0x4459
000000000000440b	testl	%ebx, %ebx
000000000000440d	jne	0x443a
000000000000440f	movl	-0x34(%rbp), %eax
0000000000004412	cmpl	$0x47, %eax
0000000000004415	je	0x4444
0000000000004417	cmpl	$0xcf1, %eax
000000000000441c	jne	0x444b
000000000000441e	movl	-0x48(%rbp), %eax
0000000000004421	movl	-0x44(%rbp), %ecx
0000000000004424	movl	$0xfffffed4, %ebx
0000000000004429	testl	%eax, %eax
000000000000442b	js	0x4462
000000000000442d	cmpl	$0x24, %ecx
0000000000004430	jne	0x4450
0000000000004432	cmpl	$0x0, -0x28(%rbp)
0000000000004436	jne	0x446d
0000000000004438	jmp	0x4450
000000000000443a	movl	-0x3c(%rbp), %edi
000000000000443d	callq	_mig_dealloc_reply_port
0000000000004442	jmp	0x4459
0000000000004444	movl	$0xfffffecc, %ebx
0000000000004449	jmp	0x4450
000000000000444b	movl	$0xfffffed3, %ebx
0000000000004450	leaq	-0x48(%rbp), %rdi
0000000000004454	callq	_mach_msg_destroy
0000000000004459	movl	%ebx, %eax
000000000000445b	addq	$0x48, %rsp
000000000000445f	popq	%rbx
0000000000004460	popq	%rbp
0000000000004461	retq
0000000000004462	cmpl	$0x28, %ecx
0000000000004465	jne	0x4450
0000000000004467	cmpl	$0x1, -0x30(%rbp)
000000000000446b	jne	0x4450
000000000000446d	movl	$0xfffffed4, %ebx
0000000000004472	cmpl	$0x0, -0x40(%rbp)
0000000000004476	jne	0x4450
0000000000004478	testl	%eax, %eax
000000000000447a	js	0x4485
000000000000447c	movl	-0x28(%rbp), %ebx
000000000000447f	testl	%ebx, %ebx
0000000000004481	jne	0x4450
0000000000004483	jmp	0x4493
0000000000004485	movzwl	-0x22(%rbp), %eax
0000000000004489	shll	$0x10, %eax
000000000000448c	cmpl	$0x120000, %eax
0000000000004491	jne	0x4450
0000000000004493	movq	0x10(%rbp), %rax
0000000000004497	movl	-0x2c(%rbp), %ecx
000000000000449a	movl	%ecx, (%rax)
000000000000449c	xorl	%ebx, %ebx
000000000000449e	jmp	0x4459
_necp_open:
00000000000044a0	movl	$0x20001f5, %eax
00000000000044a5	movq	%rcx, %r10
00000000000044a8	syscall
00000000000044aa	jae	0x44b4
00000000000044ac	movq	%rax, %rdi
00000000000044af	jmp	_cerror_nocancel
00000000000044b4	retq
00000000000044b5	nop
00000000000044b6	nop
00000000000044b7	nop
_change_fdguard_np:
00000000000044b8	movl	$0x20001bc, %eax
00000000000044bd	movq	%rcx, %r10
00000000000044c0	syscall
00000000000044c2	jae	0x44cc
00000000000044c4	movq	%rax, %rdi
00000000000044c7	jmp	_cerror_nocancel
00000000000044cc	retq
00000000000044cd	nop
00000000000044ce	nop
00000000000044cf	nop
_necp_client_action:
00000000000044d0	movl	$0x20001f6, %eax
00000000000044d5	movq	%rcx, %r10
00000000000044d8	syscall
00000000000044da	jae	0x44e4
00000000000044dc	movq	%rax, %rdi
00000000000044df	jmp	_cerror_nocancel
00000000000044e4	retq
_kpersona_get:
00000000000044e5	pushq	%rbp
00000000000044e6	movq	%rsp, %rbp
00000000000044e9	subq	$0x10, %rsp
00000000000044ed	movq	%rdi, %rcx
00000000000044f0	leaq	-0x8(%rbp), %r8
00000000000044f4	movq	$0x1, (%r8)
00000000000044fb	movl	$0x4, %edi
0000000000004500	xorl	%esi, %esi
0000000000004502	xorl	%edx, %edx
0000000000004504	xorl	%r9d, %r9d
0000000000004507	callq	___persona
000000000000450c	addq	$0x10, %rsp
0000000000004510	popq	%rbp
0000000000004511	retq
0000000000004512	nop
0000000000004513	nop
_getgid:
0000000000004514	movl	$0x200002f, %eax
0000000000004519	movq	%rcx, %r10
000000000000451c	syscall
000000000000451e	jae	0x4528
0000000000004520	movq	%rax, %rdi
0000000000004523	jmp	_cerror_nocancel
0000000000004528	retq
0000000000004529	nop
000000000000452a	nop
000000000000452b	nop
_audit_session_self:
000000000000452c	movl	$0x20001ac, %eax
0000000000004531	movq	%rcx, %r10
0000000000004534	syscall
0000000000004536	jae	0x4540
0000000000004538	movq	%rax, %rdi
000000000000453b	jmp	_cerror_nocancel
0000000000004540	retq
0000000000004541	nop
0000000000004542	nop
0000000000004543	nop
_socket:
0000000000004544	movl	$0x2000061, %eax
0000000000004549	movq	%rcx, %r10
000000000000454c	syscall
000000000000454e	jae	0x4558
0000000000004550	movq	%rax, %rdi
0000000000004553	jmp	_cerror_nocancel
0000000000004558	retq
_fcntl$NOCANCEL:
0000000000004559	pushq	%rbp
000000000000455a	movq	%rsp, %rbp
000000000000455d	subq	$0xd0, %rsp
0000000000004564	testb	%al, %al
0000000000004566	je	0x458e
0000000000004568	movaps	%xmm0, -0xa0(%rbp)
000000000000456f	movaps	%xmm1, -0x90(%rbp)
0000000000004576	movaps	%xmm2, -0x80(%rbp)
000000000000457a	movaps	%xmm3, -0x70(%rbp)
000000000000457e	movaps	%xmm4, -0x60(%rbp)
0000000000004582	movaps	%xmm5, -0x50(%rbp)
0000000000004586	movaps	%xmm6, -0x40(%rbp)
000000000000458a	movaps	%xmm7, -0x30(%rbp)
000000000000458e	leaq	-0xd0(%rbp), %rax
0000000000004595	movq	%r9, 0x28(%rax)
0000000000004599	movq	%r8, 0x20(%rax)
000000000000459d	movq	%rcx, 0x18(%rax)
00000000000045a1	movq	%rdx, 0x10(%rax)
00000000000045a5	movq	%rax, -0x10(%rbp)
00000000000045a9	leaq	0x10(%rbp), %rax
00000000000045ad	movq	%rax, -0x18(%rbp)
00000000000045b1	movabsq	$0x3000000010, %rax
00000000000045bb	movq	%rax, -0x20(%rbp)
00000000000045bf	leal	-0x2a(%rsi), %eax
00000000000045c2	cmpl	$0x3c, %eax
00000000000045c5	ja	0x460d
00000000000045c7	movabsq	$0x1f9f0212618ac587, %rcx
00000000000045d1	btq	%rax, %rcx
00000000000045d5	jae	0x460d
00000000000045d7	movslq	-0x20(%rbp), %rcx
00000000000045db	cmpq	$0x28, %rcx
00000000000045df	ja	0x45f0
00000000000045e1	movq	%rcx, %rax
00000000000045e4	addq	-0x10(%rbp), %rax
00000000000045e8	leal	0x8(%rcx), %ecx
00000000000045eb	movl	%ecx, -0x20(%rbp)
00000000000045ee	jmp	0x45fc
00000000000045f0	movq	-0x18(%rbp), %rax
00000000000045f4	leaq	0x8(%rax), %rcx
00000000000045f8	movq	%rcx, -0x18(%rbp)
00000000000045fc	movq	(%rax), %rdx
00000000000045ff	callq	___fcntl_nocancel
0000000000004604	addq	$0xd0, %rsp
000000000000460b	popq	%rbp
000000000000460c	retq
000000000000460d	leal	-0x7(%rsi), %eax
0000000000004610	cmpl	$0x4, %eax
0000000000004613	jb	0x45d7
0000000000004615	movslq	-0x20(%rbp), %rcx
0000000000004619	cmpq	$0x28, %rcx
000000000000461d	ja	0x462e
000000000000461f	movq	%rcx, %rax
0000000000004622	addq	-0x10(%rbp), %rax
0000000000004626	leal	0x8(%rcx), %ecx
0000000000004629	movl	%ecx, -0x20(%rbp)
000000000000462c	jmp	0x463a
000000000000462e	movq	-0x18(%rbp), %rax
0000000000004632	leaq	0x8(%rax), %rcx
0000000000004636	movq	%rcx, -0x18(%rbp)
000000000000463a	movslq	(%rax), %rdx
000000000000463d	jmp	0x45ff
000000000000463f	nop
___fcntl_nocancel:
0000000000004640	movl	$0x2000196, %eax
0000000000004645	movq	%rcx, %r10
0000000000004648	syscall
000000000000464a	jae	0x4654
000000000000464c	movq	%rax, %rdi
000000000000464f	jmp	_cerror_nocancel
0000000000004654	retq
0000000000004655	nop
0000000000004656	nop
0000000000004657	nop
_setsockopt:
0000000000004658	movl	$0x2000069, %eax
000000000000465d	movq	%rcx, %r10
0000000000004660	syscall
0000000000004662	jae	0x466c
0000000000004664	movq	%rax, %rdi
0000000000004667	jmp	_cerror_nocancel
000000000000466c	retq
000000000000466d	nop
000000000000466e	nop
000000000000466f	nop
___connect_nocancel:
_connect$NOCANCEL:
0000000000004670	movl	$0x2000199, %eax
0000000000004675	movq	%rcx, %r10
0000000000004678	syscall
000000000000467a	jae	0x4684
000000000000467c	movq	%rax, %rdi
000000000000467f	jmp	_cerror_nocancel
0000000000004684	retq
0000000000004685	nop
0000000000004686	nop
0000000000004687	nop
_sendto$NOCANCEL:
___sendto_nocancel:
0000000000004688	movl	$0x200019d, %eax
000000000000468d	movq	%rcx, %r10
0000000000004690	syscall
0000000000004692	jae	0x469c
0000000000004694	movq	%rax, %rdi
0000000000004697	jmp	_cerror_nocancel
000000000000469c	retq
_select$NOCANCEL:
000000000000469d	cmpl	$0x401, %edi
00000000000046a3	jl	_select$DARWIN_EXTSN$NOCANCEL
00000000000046a9	pushq	%rbp
00000000000046aa	movq	%rsp, %rbp
00000000000046ad	callq	___error
00000000000046b2	movl	$0x16, (%rax)
00000000000046b8	movl	$0xffffffff, %eax
00000000000046bd	popq	%rbp
00000000000046be	retq
00000000000046bf	nop
_select$DARWIN_EXTSN$NOCANCEL:
___select_nocancel:
00000000000046c0	movl	$0x2000197, %eax
00000000000046c5	movq	%rcx, %r10
00000000000046c8	syscall
00000000000046ca	jae	0x46d4
00000000000046cc	movq	%rax, %rdi
00000000000046cf	jmp	_cerror_nocancel
00000000000046d4	retq
00000000000046d5	nop
00000000000046d6	nop
00000000000046d7	nop
_recvfrom$NOCANCEL:
___recvfrom_nocancel:
00000000000046d8	movl	$0x2000193, %eax
00000000000046dd	movq	%rcx, %r10
00000000000046e0	syscall
00000000000046e2	jae	0x46ec
00000000000046e4	movq	%rax, %rdi
00000000000046e7	jmp	_cerror_nocancel
00000000000046ec	retq
00000000000046ed	nop
00000000000046ee	nop
00000000000046ef	nop
___socketpair:
_socketpair:
00000000000046f0	movl	$0x2000087, %eax
00000000000046f5	movq	%rcx, %r10
00000000000046f8	syscall
00000000000046fa	jae	0x4704
00000000000046fc	movq	%rax, %rdi
00000000000046ff	jmp	_cerror_nocancel
0000000000004704	retq
0000000000004705	nop
0000000000004706	nop
0000000000004707	nop
_sendmsg$NOCANCEL:
___sendmsg_nocancel:
0000000000004708	movl	$0x2000192, %eax
000000000000470d	movq	%rcx, %r10
0000000000004710	syscall
0000000000004712	jae	0x471c
0000000000004714	movq	%rax, %rdi
0000000000004717	jmp	_cerror_nocancel
000000000000471c	retq
_ioctl:
000000000000471d	pushq	%rbp
000000000000471e	movq	%rsp, %rbp
0000000000004721	subq	$0xd0, %rsp
0000000000004728	testb	%al, %al
000000000000472a	je	0x4752
000000000000472c	movaps	%xmm0, -0xa0(%rbp)
0000000000004733	movaps	%xmm1, -0x90(%rbp)
000000000000473a	movaps	%xmm2, -0x80(%rbp)
000000000000473e	movaps	%xmm3, -0x70(%rbp)
0000000000004742	movaps	%xmm4, -0x60(%rbp)
0000000000004746	movaps	%xmm5, -0x50(%rbp)
000000000000474a	movaps	%xmm6, -0x40(%rbp)
000000000000474e	movaps	%xmm7, -0x30(%rbp)
0000000000004752	leaq	-0xd0(%rbp), %rax
0000000000004759	movq	%r9, 0x28(%rax)
000000000000475d	movq	%r8, 0x20(%rax)
0000000000004761	movq	%rcx, 0x18(%rax)
0000000000004765	movq	%rdx, 0x10(%rax)
0000000000004769	movq	%rax, -0x10(%rbp)
000000000000476d	leaq	0x10(%rbp), %rax
0000000000004771	movq	%rax, -0x18(%rbp)
0000000000004775	movabsq	$0x3000000010, %rax
000000000000477f	movq	%rax, -0x20(%rbp)
0000000000004783	movl	$0x10, %ecx
0000000000004788	cmpq	$0x28, %rcx
000000000000478c	ja	0x479f
000000000000478e	movl	$0x10, %eax
0000000000004793	addq	-0x10(%rbp), %rax
0000000000004797	leal	0x8(%rcx), %ecx
000000000000479a	movl	%ecx, -0x20(%rbp)
000000000000479d	jmp	0x47ab
000000000000479f	movq	-0x18(%rbp), %rax
00000000000047a3	leaq	0x8(%rax), %rcx
00000000000047a7	movq	%rcx, -0x18(%rbp)
00000000000047ab	movq	(%rax), %rdx
00000000000047ae	callq	___ioctl
00000000000047b3	addq	$0xd0, %rsp
00000000000047ba	popq	%rbp
00000000000047bb	retq
___ioctl:
00000000000047bc	movl	$0x2000036, %eax
00000000000047c1	movq	%rcx, %r10
00000000000047c4	syscall
00000000000047c6	jae	0x47d0
00000000000047c8	movq	%rax, %rdi
00000000000047cb	jmp	_cerror
00000000000047d0	retq
00000000000047d1	nop
00000000000047d2	nop
00000000000047d3	nop
___connect:
_connect:
00000000000047d4	movl	$0x2000062, %eax
00000000000047d9	movq	%rcx, %r10
00000000000047dc	syscall
00000000000047de	jae	0x47e8
00000000000047e0	movq	%rax, %rdi
00000000000047e3	jmp	_cerror
00000000000047e8	retq
00000000000047e9	nop
00000000000047ea	nop
00000000000047eb	nop
_sendto:
___sendto:
00000000000047ec	movl	$0x2000085, %eax
00000000000047f1	movq	%rcx, %r10
00000000000047f4	syscall
00000000000047f6	jae	0x4800
00000000000047f8	movq	%rax, %rdi
00000000000047fb	jmp	_cerror
0000000000004800	retq
0000000000004801	nop
0000000000004802	nop
0000000000004803	nop
_recvfrom:
___recvfrom:
0000000000004804	movl	$0x200001d, %eax
0000000000004809	movq	%rcx, %r10
000000000000480c	syscall
000000000000480e	jae	0x4818
0000000000004810	movq	%rax, %rdi
0000000000004813	jmp	_cerror
0000000000004818	retq
0000000000004819	nop
000000000000481a	nop
000000000000481b	nop
_connectx:
000000000000481c	movl	$0x20001bf, %eax
0000000000004821	movq	%rcx, %r10
0000000000004824	syscall
0000000000004826	jae	0x4830
0000000000004828	movq	%rax, %rdi
000000000000482b	jmp	_cerror
0000000000004830	retq
0000000000004831	nop
0000000000004832	nop
0000000000004833	nop
_getsockopt:
0000000000004834	movl	$0x2000076, %eax
0000000000004839	movq	%rcx, %r10
000000000000483c	syscall
000000000000483e	jae	0x4848
0000000000004840	movq	%rax, %rdi
0000000000004843	jmp	_cerror_nocancel
0000000000004848	retq
0000000000004849	nop
000000000000484a	nop
000000000000484b	nop
_shutdown:
000000000000484c	movl	$0x2000086, %eax
0000000000004851	movq	%rcx, %r10
0000000000004854	syscall
0000000000004856	jae	0x4860
0000000000004858	movq	%rax, %rdi
000000000000485b	jmp	_cerror_nocancel
0000000000004860	retq
0000000000004861	nop
0000000000004862	nop
0000000000004863	nop
_fgetxattr:
0000000000004864	movl	$0x20000eb, %eax
0000000000004869	movq	%rcx, %r10
000000000000486c	syscall
000000000000486e	jae	0x4878
0000000000004870	movq	%rax, %rdi
0000000000004873	jmp	_cerror_nocancel
0000000000004878	retq
0000000000004879	nop
000000000000487a	nop
000000000000487b	nop
_dup:
000000000000487c	movl	$0x2000029, %eax
0000000000004881	movq	%rcx, %r10
0000000000004884	syscall
0000000000004886	jae	0x4890
0000000000004888	movq	%rax, %rdi
000000000000488b	jmp	_cerror_nocancel
0000000000004890	retq
_select:
0000000000004891	pushq	%rbp
0000000000004892	movq	%rsp, %rbp
0000000000004895	subq	$0x10, %rsp
0000000000004899	testq	%r8, %r8
000000000000489c	je	0x48c6
000000000000489e	cmpq	$0x0, (%r8)
00000000000048a2	jne	0x48c9
00000000000048a4	movl	0x8(%r8), %eax
00000000000048a8	decl	%eax
00000000000048aa	cmpl	$0x270e, %eax
00000000000048af	ja	0x48c9
00000000000048b1	leaq	-0x10(%rbp), %r8
00000000000048b5	movq	$0x0, (%r8)
00000000000048bc	movl	$0x2710, 0x8(%r8)
00000000000048c4	jmp	0x48c9
00000000000048c6	xorl	%r8d, %r8d
00000000000048c9	callq	_select$DARWIN_EXTSN
00000000000048ce	addq	$0x10, %rsp
00000000000048d2	popq	%rbp
00000000000048d3	retq
_getpeername:
___getpeername:
00000000000048d4	movl	$0x200001f, %eax
00000000000048d9	movq	%rcx, %r10
00000000000048dc	syscall
00000000000048de	jae	0x48e8
00000000000048e0	movq	%rax, %rdi
00000000000048e3	jmp	_cerror_nocancel
00000000000048e8	retq
_fchmod:
00000000000048e9	pushq	%rbp
00000000000048ea	movq	%rsp, %rbp
00000000000048ed	pushq	%r15
00000000000048ef	pushq	%r14
00000000000048f1	pushq	%r13
00000000000048f3	pushq	%r12
00000000000048f5	pushq	%rbx
00000000000048f6	pushq	%rax
00000000000048f7	movl	%esi, %r15d
00000000000048fa	movl	%edi, %r14d
00000000000048fd	callq	___fchmod
0000000000004902	movl	%eax, %ebx
0000000000004904	testl	%eax, %eax
0000000000004906	jns	0x49ae
000000000000490c	callq	___error
0000000000004911	cmpl	$0x1, (%rax)
0000000000004914	jne	0x49ae
000000000000491a	movzwl	%r15w, %r13d
000000000000491e	movl	%r13d, %r12d
0000000000004921	andl	$0xc00, %r12d
0000000000004928	je	0x49ae
000000000000492e	btl	$0xa, %r13d
0000000000004933	jb	0x4966
0000000000004935	btl	$0xb, %r13d
000000000000493a	jb	0x498b
000000000000493c	cmpl	$0xc00, %r12d
0000000000004943	jne	0x49ae
0000000000004945	xorl	$0xc00, %r15d
000000000000494c	movzwl	%r15w, %esi
0000000000004950	movl	%r14d, %edi
0000000000004953	addq	$0x8, %rsp
0000000000004957	popq	%rbx
0000000000004958	popq	%r12
000000000000495a	popq	%r13
000000000000495c	popq	%r14
000000000000495e	popq	%r15
0000000000004960	popq	%rbp
0000000000004961	jmp	___fchmod
0000000000004966	movl	%r15d, %eax
0000000000004969	xorl	$0x400, %eax
000000000000496e	movzwl	%ax, %esi
0000000000004971	movl	%r14d, %edi
0000000000004974	callq	___fchmod
0000000000004979	movl	%eax, %ebx
000000000000497b	testl	%eax, %eax
000000000000497d	jns	0x49ae
000000000000497f	callq	___error
0000000000004984	cmpl	$0x1, (%rax)
0000000000004987	je	0x4935
0000000000004989	jmp	0x49ae
000000000000498b	movl	%r15d, %eax
000000000000498e	xorl	$0x800, %eax
0000000000004993	movzwl	%ax, %esi
0000000000004996	movl	%r14d, %edi
0000000000004999	callq	___fchmod
000000000000499e	movl	%eax, %ebx
00000000000049a0	testl	%eax, %eax
00000000000049a2	jns	0x49ae
00000000000049a4	callq	___error
00000000000049a9	cmpl	$0x1, (%rax)
00000000000049ac	je	0x493c
00000000000049ae	movl	%ebx, %eax
00000000000049b0	addq	$0x8, %rsp
00000000000049b4	popq	%rbx
00000000000049b5	popq	%r12
00000000000049b7	popq	%r13
00000000000049b9	popq	%r14
00000000000049bb	popq	%r15
00000000000049bd	popq	%rbp
00000000000049be	retq
00000000000049bf	nop
___fchmod:
00000000000049c0	movl	$0x200007c, %eax
00000000000049c5	movq	%rcx, %r10
00000000000049c8	syscall
00000000000049ca	jae	0x49d4
00000000000049cc	movq	%rax, %rdi
00000000000049cf	jmp	_cerror_nocancel
00000000000049d4	retq
_getiopolicy_np:
00000000000049d5	pushq	%rbp
00000000000049d6	movq	%rsp, %rbp
00000000000049d9	pushq	%rbx
00000000000049da	subq	$0x18, %rsp
00000000000049de	cmpl	$0x3, %edi
00000000000049e1	ja	0x49ed
00000000000049e3	cmpl	$0x1, %edi
00000000000049e6	je	0x49ed
00000000000049e8	cmpl	$0x2, %esi
00000000000049eb	jb	0x49fa
00000000000049ed	callq	___error
00000000000049f2	movl	$0x16, (%rax)
00000000000049f8	jmp	0x4a1d
00000000000049fa	leaq	-0x18(%rbp), %rax
00000000000049fe	movl	%esi, (%rax)
0000000000004a00	movl	%edi, 0x4(%rax)
0000000000004a03	movl	$0x1, %edi
0000000000004a08	movq	%rax, %rsi
0000000000004a0b	callq	___iopolicysys
0000000000004a10	testl	%eax, %eax
0000000000004a12	je	0x4a29
0000000000004a14	movl	%eax, %ebx
0000000000004a16	callq	___error
0000000000004a1b	movl	%ebx, (%rax)
0000000000004a1d	movl	$0xffffffff, %eax
0000000000004a22	addq	$0x18, %rsp
0000000000004a26	popq	%rbx
0000000000004a27	popq	%rbp
0000000000004a28	retq
0000000000004a29	movl	-0x10(%rbp), %eax
0000000000004a2c	jmp	0x4a22
0000000000004a2e	nop
0000000000004a2f	nop
___iopolicysys:
0000000000004a30	movl	$0x2000142, %eax
0000000000004a35	movq	%rcx, %r10
0000000000004a38	syscall
0000000000004a3a	jae	0x4a44
0000000000004a3c	movq	%rax, %rdi
0000000000004a3f	jmp	_cerror_nocancel
0000000000004a44	retq
0000000000004a45	nop
_mach_msg_send:
0000000000004a46	pushq	%rbp
0000000000004a47	movq	%rsp, %rbp
0000000000004a4a	subq	$0x10, %rsp
0000000000004a4e	movl	0x4(%rdi), %edx
0000000000004a51	movl	$0x0, (%rsp)
0000000000004a58	movl	$0x1, %esi
0000000000004a5d	xorl	%ecx, %ecx
0000000000004a5f	xorl	%r8d, %r8d
0000000000004a62	xorl	%r9d, %r9d
0000000000004a65	callq	_mach_msg
0000000000004a6a	addq	$0x10, %rsp
0000000000004a6e	popq	%rbp
0000000000004a6f	retq
_link:
0000000000004a70	movl	$0x2000009, %eax
0000000000004a75	movq	%rcx, %r10
0000000000004a78	syscall
0000000000004a7a	jae	0x4a84
0000000000004a7c	movq	%rax, %rdi
0000000000004a7f	jmp	_cerror
0000000000004a84	retq
_mach_right_send_release:
0000000000004a85	pushq	%rbp
0000000000004a86	movq	%rsp, %rbp
0000000000004a89	pushq	%r14
0000000000004a8b	pushq	%rbx
0000000000004a8c	movl	%edi, %ebx
0000000000004a8e	leaq	_mach_task_self_(%rip), %r14
0000000000004a95	movl	(%r14), %edi
0000000000004a98	movl	%ebx, %esi
0000000000004a9a	xorl	%edx, %edx
0000000000004a9c	movl	$0xffffffff, %ecx
0000000000004aa1	callq	_mach_port_mod_refs
0000000000004aa6	testl	%eax, %eax
0000000000004aa8	je	0x4ac7
0000000000004aaa	cmpl	$0x11, %eax
0000000000004aad	jne	0x4acc
0000000000004aaf	movl	(%r14), %edi
0000000000004ab2	movl	%ebx, %esi
0000000000004ab4	movl	$0x4, %edx
0000000000004ab9	movl	$0xffffffff, %ecx
0000000000004abe	callq	_mach_port_mod_refs
0000000000004ac3	testl	%eax, %eax
0000000000004ac5	jne	0x4ad3
0000000000004ac7	popq	%rbx
0000000000004ac8	popq	%r14
0000000000004aca	popq	%rbp
0000000000004acb	retq
0000000000004acc	movl	%eax, %edi
0000000000004ace	callq	_mach_right_send_release.cold.1
0000000000004ad3	movl	%eax, %edi
0000000000004ad5	callq	_mach_right_send_release.cold.2
_vm_protect:
0000000000004ada	jmp	_mach_vm_protect
0000000000004adf	nop
___recvmsg:
_recvmsg:
0000000000004ae0	movl	$0x200001b, %eax
0000000000004ae5	movq	%rcx, %r10
0000000000004ae8	syscall
0000000000004aea	jae	0x4af4
0000000000004aec	movq	%rax, %rdi
0000000000004aef	jmp	_cerror
0000000000004af4	retq
_mig_reply_setup:
0000000000004af5	movl	(%rdi), %eax
0000000000004af7	shrl	$0x8, %eax
0000000000004afa	andl	$0x1f, %eax
0000000000004afd	movl	%eax, (%rsi)
0000000000004aff	movl	$0x24, 0x4(%rsi)
0000000000004b06	movl	0xc(%rdi), %eax
0000000000004b09	movl	%eax, 0x8(%rsi)
0000000000004b0c	movl	$0x0, 0xc(%rsi)
0000000000004b13	movl	0x14(%rdi), %eax
0000000000004b16	addl	$0x64, %eax
0000000000004b19	movl	%eax, 0x14(%rsi)
0000000000004b1c	leaq	_NDR_record(%rip), %rax
0000000000004b23	movq	(%rax), %rax
0000000000004b26	movq	%rax, 0x18(%rsi)
0000000000004b2a	retq
_mach_vm_region:
0000000000004b2b	pushq	%rbp
0000000000004b2c	movq	%rsp, %rbp
0000000000004b2f	pushq	%r15
0000000000004b31	pushq	%r14
0000000000004b33	pushq	%r13
0000000000004b35	pushq	%r12
0000000000004b37	pushq	%rbx
0000000000004b38	subq	$0x88, %rsp
0000000000004b3f	movq	%r9, %r15
0000000000004b42	movq	%rsi, %r13
0000000000004b45	leaq	_NDR_record(%rip), %rax
0000000000004b4c	movq	(%rax), %rax
0000000000004b4f	leaq	-0xa0(%rbp), %rbx
0000000000004b56	movq	%rax, 0x18(%rbx)
0000000000004b5a	movq	(%rsi), %rax
0000000000004b5d	movq	%rax, 0x20(%rbx)
0000000000004b61	movl	%ecx, 0x28(%rbx)
0000000000004b64	movl	(%r9), %eax
0000000000004b67	movl	$0xa, %ecx
0000000000004b6c	cmpl	%ecx, %eax
0000000000004b6e	cmovbl	%eax, %ecx
0000000000004b71	movq	%r8, %r14
0000000000004b74	movq	%rdx, %r12
0000000000004b77	movl	%ecx, 0x2c(%rbx)
0000000000004b7a	movl	$0x1513, (%rbx)
0000000000004b80	movl	%edi, 0x8(%rbx)
0000000000004b83	callq	_mig_get_reply_port
0000000000004b88	movl	%eax, 0xc(%rbx)
0000000000004b8b	movabsq	$0x12d000000000, %rcx
0000000000004b95	movq	%rcx, 0x10(%rbx)
0000000000004b99	movl	$0x0, (%rsp)
0000000000004ba0	movq	%rbx, %rdi
0000000000004ba3	movl	$0x3, %esi
0000000000004ba8	movl	$0x30, %edx
0000000000004bad	movl	$0x74, %ecx
0000000000004bb2	movl	%eax, %r8d
0000000000004bb5	xorl	%r9d, %r9d
0000000000004bb8	callq	_mach_msg
0000000000004bbd	movl	%eax, %ebx
0000000000004bbf	leal	-0x10000002(%rbx), %eax
0000000000004bc5	cmpl	$0xe, %eax
0000000000004bc8	ja	0x4be1
0000000000004bca	movl	$0x4003, %ecx
0000000000004bcf	btl	%eax, %ecx
0000000000004bd2	jae	0x4be1
0000000000004bd4	movl	-0x94(%rbp), %edi
0000000000004bda	callq	_mig_put_reply_port
0000000000004bdf	jmp	0x4c3e
0000000000004be1	testl	%ebx, %ebx
0000000000004be3	jne	0x4c19
0000000000004be5	movl	-0x8c(%rbp), %eax
0000000000004beb	cmpl	$0x47, %eax
0000000000004bee	je	0x4c26
0000000000004bf0	cmpl	$_macx_triggers, %eax
0000000000004bf5	jne	0x4c2d
0000000000004bf7	movl	-0xa0(%rbp), %ecx
0000000000004bfd	movl	-0x9c(%rbp), %eax
0000000000004c03	testl	%ecx, %ecx
0000000000004c05	js	0x4c52
0000000000004c07	movl	$0xfffffed4, %ebx
0000000000004c0c	cmpl	$0x24, %eax
0000000000004c0f	jne	0x4c32
0000000000004c11	cmpl	$0x0, -0x80(%rbp)
0000000000004c15	jne	0x4c68
0000000000004c17	jmp	0x4c32
0000000000004c19	movl	-0x94(%rbp), %edi
0000000000004c1f	callq	_mig_dealloc_reply_port
0000000000004c24	jmp	0x4c3e
0000000000004c26	movl	$0xfffffecc, %ebx
0000000000004c2b	jmp	0x4c32
0000000000004c2d	movl	$0xfffffed3, %ebx
0000000000004c32	leaq	-0xa0(%rbp), %rdi
0000000000004c39	callq	_mach_msg_destroy
0000000000004c3e	movl	%ebx, %eax
0000000000004c40	addq	$0x88, %rsp
0000000000004c47	popq	%rbx
0000000000004c48	popq	%r12
0000000000004c4a	popq	%r13
0000000000004c4c	popq	%r14
0000000000004c4e	popq	%r15
0000000000004c50	popq	%rbp
0000000000004c51	retq
0000000000004c52	leal	-0x44(%rax), %edx
0000000000004c55	movl	$0xfffffed4, %ebx
0000000000004c5a	cmpl	$0x28, %edx
0000000000004c5d	ja	0x4c32
0000000000004c5f	cmpl	$0x1, -0x88(%rbp)
0000000000004c66	jne	0x4c32
0000000000004c68	movl	$0xfffffed4, %ebx
0000000000004c6d	cmpl	$0x0, -0x98(%rbp)
0000000000004c74	jne	0x4c32
0000000000004c76	testl	%ecx, %ecx
0000000000004c78	js	0x4cb7
0000000000004c7a	movl	-0x80(%rbp), %ebx
0000000000004c7d	testl	%ebx, %ebx
0000000000004c7f	jne	0x4c32
0000000000004c81	movl	-0x60(%rbp), %edi
0000000000004c84	leaq	-0x5c(%rbp), %rsi
0000000000004c88	movq	-0x14(%rsi), %rax
0000000000004c8c	movq	%rax, (%r13)
0000000000004c90	movq	-0xc(%rsi), %rax
0000000000004c94	movq	%rax, (%r12)
0000000000004c98	movl	(%r15), %edx
0000000000004c9b	cmpl	%edx, %edi
0000000000004c9d	jbe	0x4cf5
0000000000004c9f	shll	$0x2, %edx
0000000000004ca2	movq	%rdi, %rbx
0000000000004ca5	movq	%r14, %rdi
0000000000004ca8	callq	_memcpy
0000000000004cad	movl	%ebx, (%r15)
0000000000004cb0	movl	$0xfffffecd, %ebx
0000000000004cb5	jmp	0x4c3e
0000000000004cb7	movzwl	-0x7a(%rbp), %ecx
0000000000004cbb	shll	$0x10, %ecx
0000000000004cbe	cmpl	$0x110000, %ecx
0000000000004cc4	jne	0x4c32
0000000000004cca	movl	-0x60(%rbp), %edi
0000000000004ccd	cmpl	$0xa, %edi
0000000000004cd0	ja	0x4c32
0000000000004cd6	leal	-0x44(%rax), %ecx
0000000000004cd9	shrl	$0x2, %ecx
0000000000004cdc	cmpl	%edi, %ecx
0000000000004cde	jb	0x4c32
0000000000004ce4	leal	0x44(,%rdi,4), %ecx
0000000000004ceb	cmpl	%ecx, %eax
0000000000004ced	jne	0x4c32
0000000000004cf3	jmp	0x4c84
0000000000004cf5	movq	0x10(%rbp), %r12
0000000000004cf9	leal	(,%rdi,4), %edx
0000000000004d00	movq	%rdi, %rbx
0000000000004d03	movq	%r14, %rdi
0000000000004d06	callq	_memcpy
0000000000004d0b	movl	%ebx, (%r15)
0000000000004d0e	movl	-0x84(%rbp), %eax
0000000000004d14	movl	%eax, (%r12)
0000000000004d18	xorl	%ebx, %ebx
0000000000004d1a	jmp	0x4c3e
_semaphore_timedwait:
0000000000004d1f	movq	%rsi, %rdx
0000000000004d22	shrq	$0x20, %rdx
0000000000004d26	jmp	_semaphore_timedwait_trap
0000000000004d2b	nop
___psynch_cvsignal:
0000000000004d2c	movl	$0x2000130, %eax
0000000000004d31	movq	%rcx, %r10
0000000000004d34	syscall
0000000000004d36	jae	0x4d40
0000000000004d38	movq	%rax, %rdi
0000000000004d3b	jmp	_cerror_nocancel
0000000000004d40	retq
_mach_voucher_attr_command:
0000000000004d41	pushq	%rbp
0000000000004d42	movq	%rsp, %rbp
0000000000004d45	pushq	%r15
0000000000004d47	pushq	%r14
0000000000004d49	pushq	%r13
0000000000004d4b	pushq	%r12
0000000000004d4d	pushq	%rbx
0000000000004d4e	subq	$0x1048, %rsp
0000000000004d55	leaq	_NDR_record(%rip), %rax
0000000000004d5c	movq	(%rax), %rax
0000000000004d5f	movq	%rax, -0x1048(%rbp)
0000000000004d66	movl	%esi, -0x1040(%rbp)
0000000000004d6c	movl	%edx, -0x103c(%rbp)
0000000000004d72	movl	$0xfffffecd, %r15d
0000000000004d78	cmpl	$0x1000, %r8d
0000000000004d7f	ja	0x4eb6
0000000000004d85	movl	%r8d, %ebx
0000000000004d88	movl	%edi, %r12d
0000000000004d8b	movq	%r9, -0x30(%rbp)
0000000000004d8f	movq	0x10(%rbp), %r14
0000000000004d93	leaq	-0x1034(%rbp), %r15
0000000000004d9a	movl	%r8d, %edx
0000000000004d9d	movq	%r15, %rdi
0000000000004da0	movq	%rcx, %rsi
0000000000004da3	callq	_memcpy
0000000000004da8	movl	%ebx, -0x4(%r15)
0000000000004dac	addl	$0x3, %ebx
0000000000004daf	andl	$-0x4, %ebx
0000000000004db2	leal	0x30(%rbx), %r13d
0000000000004db6	movl	(%r14), %eax
0000000000004db9	movl	$0x1000, %ecx
0000000000004dbe	cmpl	%ecx, %eax
0000000000004dc0	cmovbl	%eax, %ecx
0000000000004dc3	leaq	-0x1060(%rbp), %r14
0000000000004dca	movl	%ecx, 0x2c(%rbx,%r14)
0000000000004dcf	movl	$0x1513, -0x2c(%r15)
0000000000004dd7	movl	%r12d, -0x24(%r15)
0000000000004ddb	callq	_mig_get_reply_port
0000000000004de0	movl	%eax, -0x20(%r15)
0000000000004de4	movabsq	$0x151b00000000, %rcx
0000000000004dee	movq	%rcx, -0x1c(%r15)
0000000000004df2	movl	$0x0, (%rsp)
0000000000004df9	movq	%r14, %rdi
0000000000004dfc	movl	$0x3, %esi
0000000000004e01	movl	%r13d, %edx
0000000000004e04	movl	$0x1030, %ecx
0000000000004e09	movl	%eax, %r8d
0000000000004e0c	xorl	%r9d, %r9d
0000000000004e0f	callq	_mach_msg
0000000000004e14	movl	%eax, %r15d
0000000000004e17	leal	-0x10000002(%r15), %eax
0000000000004e1e	cmpl	$0xe, %eax
0000000000004e21	ja	0x4e3a
0000000000004e23	movl	$0x4003, %ecx
0000000000004e28	btl	%eax, %ecx
0000000000004e2b	jae	0x4e3a
0000000000004e2d	movl	-0x1054(%rbp), %edi
0000000000004e33	callq	_mig_put_reply_port
0000000000004e38	jmp	0x4eb6
0000000000004e3a	testl	%r15d, %r15d
0000000000004e3d	jne	0x4e8f
0000000000004e3f	movl	-0x104c(%rbp), %eax
0000000000004e45	cmpl	$0x47, %eax
0000000000004e48	je	0x4e9c
0000000000004e4a	cmpl	$0x157f, %eax
0000000000004e4f	jne	0x4ea4
0000000000004e51	cmpl	$0x0, -0x1060(%rbp)
0000000000004e58	js	0x4e87
0000000000004e5a	movl	-0x105c(%rbp), %eax
0000000000004e60	leal	-0x28(%rax), %ecx
0000000000004e63	cmpl	$0x1001, %ecx
0000000000004e69	movq	-0x30(%rbp), %rdi
0000000000004e6d	jb	0x4e7e
0000000000004e6f	cmpl	$0x24, %eax
0000000000004e72	jne	0x4e87
0000000000004e74	movl	-0x1040(%rbp), %edx
0000000000004e7a	testl	%edx, %edx
0000000000004e7c	je	0x4e87
0000000000004e7e	cmpl	$0x0, -0x1058(%rbp)
0000000000004e85	je	0x4ecb
0000000000004e87	movl	$0xfffffed4, %r15d
0000000000004e8d	jmp	0x4eaa
0000000000004e8f	movl	-0x1054(%rbp), %edi
0000000000004e95	callq	_mig_dealloc_reply_port
0000000000004e9a	jmp	0x4eb6
0000000000004e9c	movl	$0xfffffecc, %r15d
0000000000004ea2	jmp	0x4eaa
0000000000004ea4	movl	$0xfffffed3, %r15d
0000000000004eaa	leaq	-0x1060(%rbp), %rdi
0000000000004eb1	callq	_mach_msg_destroy
0000000000004eb6	movl	%r15d, %eax
0000000000004eb9	addq	$0x1048, %rsp
0000000000004ec0	popq	%rbx
0000000000004ec1	popq	%r12
0000000000004ec3	popq	%r13
0000000000004ec5	popq	%r14
0000000000004ec7	popq	%r15
0000000000004ec9	popq	%rbp
0000000000004eca	retq
0000000000004ecb	movl	-0x1040(%rbp), %r15d
0000000000004ed2	testl	%r15d, %r15d
0000000000004ed5	jne	0x4eaa
0000000000004ed7	movl	-0x103c(%rbp), %ebx
0000000000004edd	cmpq	$0x1000, %rbx
0000000000004ee4	ja	0x4e87
0000000000004ee6	cmpl	%ebx, %ecx
0000000000004ee8	jb	0x4e87
0000000000004eea	leal	0x2b(%rbx), %ecx
0000000000004eed	andl	$-0x4, %ecx
0000000000004ef0	movl	$0xfffffed4, %r15d
0000000000004ef6	cmpl	%ecx, %eax
0000000000004ef8	jne	0x4eaa
0000000000004efa	leaq	-0x1038(%rbp), %rsi
0000000000004f01	movq	0x10(%rbp), %r14
0000000000004f05	movl	(%r14), %edx
0000000000004f08	cmpl	%edx, %ebx
0000000000004f0a	jbe	0x4f1c
0000000000004f0c	callq	_memcpy
0000000000004f11	movl	%ebx, (%r14)
0000000000004f14	movl	$0xfffffecd, %r15d
0000000000004f1a	jmp	0x4eb6
0000000000004f1c	movq	%rbx, %rdx
0000000000004f1f	callq	_memcpy
0000000000004f24	movl	%ebx, (%r14)
0000000000004f27	xorl	%r15d, %r15d
0000000000004f2a	jmp	0x4eb6
_removexattr:
0000000000004f2c	movl	$0x20000ee, %eax
0000000000004f31	movq	%rcx, %r10
0000000000004f34	syscall
0000000000004f36	jae	0x4f40
0000000000004f38	movq	%rax, %rdi
0000000000004f3b	jmp	_cerror_nocancel
0000000000004f40	retq
0000000000004f41	nop
0000000000004f42	nop
0000000000004f43	nop
_clonefileat:
0000000000004f44	movl	$0x20001ce, %eax
0000000000004f49	movq	%rcx, %r10
0000000000004f4c	syscall
0000000000004f4e	jae	0x4f58
0000000000004f50	movq	%rax, %rdi
0000000000004f53	jmp	_cerror_nocancel
0000000000004f58	retq
_host_info:
0000000000004f59	pushq	%rbp
0000000000004f5a	movq	%rsp, %rbp
0000000000004f5d	pushq	%r15
0000000000004f5f	pushq	%r14
0000000000004f61	pushq	%r12
0000000000004f63	pushq	%rbx
0000000000004f64	subq	$0x150, %rsp
0000000000004f6b	movq	%rcx, %r15
0000000000004f6e	leaq	_NDR_record(%rip), %rax
0000000000004f75	movq	(%rax), %rax
0000000000004f78	leaq	-0x160(%rbp), %rbx
0000000000004f7f	movq	%rax, 0x18(%rbx)
0000000000004f83	movl	%esi, 0x20(%rbx)
0000000000004f86	movl	(%rcx), %eax
0000000000004f88	movl	$0x44, %ecx
0000000000004f8d	cmpl	%ecx, %eax
0000000000004f8f	cmovbl	%eax, %ecx
0000000000004f92	movq	%rdx, %r14
0000000000004f95	movl	%ecx, 0x24(%rbx)
0000000000004f98	movl	$0x1513, (%rbx)
0000000000004f9e	movl	%edi, 0x8(%rbx)
0000000000004fa1	callq	_mig_get_reply_port
0000000000004fa6	movl	%eax, 0xc(%rbx)
0000000000004fa9	movabsq	$0xc800000000, %rcx
0000000000004fb3	movq	%rcx, 0x10(%rbx)
0000000000004fb7	movl	$0x0, (%rsp)
0000000000004fbe	movq	%rbx, %rdi
0000000000004fc1	movl	$0x3, %esi
0000000000004fc6	movl	$0x28, %edx
0000000000004fcb	movl	$0x140, %ecx
0000000000004fd0	movl	%eax, %r8d
0000000000004fd3	xorl	%r9d, %r9d
0000000000004fd6	callq	_mach_msg
0000000000004fdb	movl	%eax, %ebx
0000000000004fdd	leal	-0x10000002(%rbx), %eax
0000000000004fe3	cmpl	$0xe, %eax
0000000000004fe6	ja	0x4fff
0000000000004fe8	movl	$0x4003, %ecx
0000000000004fed	btl	%eax, %ecx
0000000000004ff0	jae	0x4fff
0000000000004ff2	movl	-0x154(%rbp), %edi
0000000000004ff8	callq	_mig_put_reply_port
0000000000004ffd	jmp	0x5073
0000000000004fff	testl	%ebx, %ebx
0000000000005001	jne	0x504e
0000000000005003	movl	-0x14c(%rbp), %eax
0000000000005009	cmpl	$0x47, %eax
000000000000500c	je	0x505b
000000000000500e	cmpl	$0x12c, %eax
0000000000005013	jne	0x5062
0000000000005015	cmpl	$0x0, -0x160(%rbp)
000000000000501c	js	0x5047
000000000000501e	movl	-0x15c(%rbp), %eax
0000000000005024	leal	-0x28(%rax), %ecx
0000000000005027	cmpl	$0x111, %ecx
000000000000502d	jb	0x503e
000000000000502f	cmpl	$0x24, %eax
0000000000005032	jne	0x5047
0000000000005034	movl	-0x140(%rbp), %edx
000000000000503a	testl	%edx, %edx
000000000000503c	je	0x5047
000000000000503e	cmpl	$0x0, -0x158(%rbp)
0000000000005045	je	0x5085
0000000000005047	movl	$0xfffffed4, %ebx
000000000000504c	jmp	0x5067
000000000000504e	movl	-0x154(%rbp), %edi
0000000000005054	callq	_mig_dealloc_reply_port
0000000000005059	jmp	0x5073
000000000000505b	movl	$0xfffffecc, %ebx
0000000000005060	jmp	0x5067
0000000000005062	movl	$0xfffffed3, %ebx
0000000000005067	leaq	-0x160(%rbp), %rdi
000000000000506e	callq	_mach_msg_destroy
0000000000005073	movl	%ebx, %eax
0000000000005075	addq	$0x150, %rsp
000000000000507c	popq	%rbx
000000000000507d	popq	%r12
000000000000507f	popq	%r14
0000000000005081	popq	%r15
0000000000005083	popq	%rbp
0000000000005084	retq
0000000000005085	movl	-0x140(%rbp), %ebx
000000000000508b	testl	%ebx, %ebx
000000000000508d	jne	0x5067
000000000000508f	movl	-0x13c(%rbp), %r12d
0000000000005096	cmpl	$0x44, %r12d
000000000000509a	ja	0x5047
000000000000509c	shrl	$0x2, %ecx
000000000000509f	cmpl	%r12d, %ecx
00000000000050a2	jb	0x5047
00000000000050a4	leal	0x28(,%r12,4), %ecx
00000000000050ac	movl	$0xfffffed4, %ebx
00000000000050b1	cmpl	%ecx, %eax
00000000000050b3	jne	0x5067
00000000000050b5	movl	(%r15), %edx
00000000000050b8	leaq	-0x138(%rbp), %rsi
00000000000050bf	cmpl	%edx, %r12d
00000000000050c2	jbe	0x50d9
00000000000050c4	shll	$0x2, %edx
00000000000050c7	movq	%r14, %rdi
00000000000050ca	callq	_memcpy
00000000000050cf	movl	%r12d, (%r15)
00000000000050d2	movl	$0xfffffecd, %ebx
00000000000050d7	jmp	0x5073
00000000000050d9	leal	(,%r12,4), %eax
00000000000050e1	movl	%eax, %edx
00000000000050e3	movq	%r14, %rdi
00000000000050e6	callq	_memcpy
00000000000050eb	movl	%r12d, (%r15)
00000000000050ee	xorl	%ebx, %ebx
00000000000050f0	jmp	0x5073
_mach_port_move_member:
00000000000050f2	pushq	%rbp
00000000000050f3	movq	%rsp, %rbp
00000000000050f6	pushq	%r15
00000000000050f8	pushq	%r14
00000000000050fa	pushq	%rbx
00000000000050fb	pushq	%rax
00000000000050fc	movl	%edx, %r14d
00000000000050ff	movl	%esi, %r15d
0000000000005102	movl	%edi, %ebx
0000000000005104	callq	__kernelrpc_mach_port_move_member_trap
0000000000005109	cmpl	$0x10000003, %eax
000000000000510e	jne	0x5127
0000000000005110	movl	%ebx, %edi
0000000000005112	movl	%r15d, %esi
0000000000005115	movl	%r14d, %edx
0000000000005118	addq	$0x8, %rsp
000000000000511c	popq	%rbx
000000000000511d	popq	%r14
000000000000511f	popq	%r15
0000000000005121	popq	%rbp
0000000000005122	jmp	__kernelrpc_mach_port_move_member
0000000000005127	addq	$0x8, %rsp
000000000000512b	popq	%rbx
000000000000512c	popq	%r14
000000000000512e	popq	%r15
0000000000005130	popq	%rbp
0000000000005131	retq
_thread_policy:
0000000000005132	pushq	%rbp
0000000000005133	movq	%rsp, %rbp
0000000000005136	pushq	%rbx
0000000000005137	pushq	%rax
0000000000005138	movl	%edi, %ebx
000000000000513a	callq	__kernelrpc_thread_policy
000000000000513f	cmpl	$0x33, %eax
0000000000005142	je	0x514f
0000000000005144	testl	%eax, %eax
0000000000005146	jne	0x5151
0000000000005148	movl	%ebx, %edi
000000000000514a	callq	__pthread_clear_qos_tsd
000000000000514f	xorl	%eax, %eax
0000000000005151	addq	$0x8, %rsp
0000000000005155	popq	%rbx
0000000000005156	popq	%rbp
0000000000005157	retq
__kernelrpc_thread_policy:
0000000000005158	pushq	%rbp
0000000000005159	movq	%rsp, %rbp
000000000000515c	pushq	%r15
000000000000515e	pushq	%r14
0000000000005160	pushq	%r13
0000000000005162	pushq	%r12
0000000000005164	pushq	%rbx
0000000000005165	subq	$0x48, %rsp
0000000000005169	leaq	_NDR_record(%rip), %rax
0000000000005170	movq	(%rax), %rax
0000000000005173	movq	%rax, -0x50(%rbp)
0000000000005177	movl	%esi, -0x48(%rbp)
000000000000517a	movl	$0xfffffecd, %r12d
0000000000005180	cmpl	$0x5, %ecx
0000000000005183	ja	0x528b
0000000000005189	movl	%r8d, %r14d
000000000000518c	movl	%ecx, %ebx
000000000000518e	movl	%edi, %r15d
0000000000005191	leaq	-0x40(%rbp), %r12
0000000000005195	leal	(,%rbx,4), %r13d
000000000000519d	movq	%r12, %rdi
00000000000051a0	movq	%rdx, %rsi
00000000000051a3	movq	%r13, %rdx
00000000000051a6	callq	_memcpy
00000000000051ab	movl	%ebx, -0x4(%r12)
00000000000051b0	leal	0x2c(,%rbx,4), %ebx
00000000000051b7	leaq	-0x68(%rbp), %rax
00000000000051bb	movl	%r14d, 0x28(%r13,%rax)
00000000000051c0	movq	%rax, %r14
00000000000051c3	movl	$0x1513, -0x28(%r12)
00000000000051cc	movl	%r15d, -0x20(%r12)
00000000000051d1	callq	_mig_get_reply_port
00000000000051d6	movl	%eax, -0x1c(%r12)
00000000000051db	movabsq	$0xe2000000000, %rcx
00000000000051e5	movq	%rcx, -0x18(%r12)
00000000000051ea	movl	$0x0, (%rsp)
00000000000051f1	movq	%r14, %rdi
00000000000051f4	movl	$0x3, %esi
00000000000051f9	movl	%ebx, %edx
00000000000051fb	movl	$0x2c, %ecx
0000000000005200	movl	%eax, %r8d
0000000000005203	xorl	%r9d, %r9d
0000000000005206	callq	_mach_msg
000000000000520b	movl	%eax, %r12d
000000000000520e	leal	-0x10000002(%r12), %eax
0000000000005216	cmpl	$0xe, %eax
0000000000005219	ja	0x522f
000000000000521b	movl	$0x4003, %ecx
0000000000005220	btl	%eax, %ecx
0000000000005223	jae	0x522f
0000000000005225	movl	-0x5c(%rbp), %edi
0000000000005228	callq	_mig_put_reply_port
000000000000522d	jmp	0x528b
000000000000522f	testl	%r12d, %r12d
0000000000005232	jne	0x526a
0000000000005234	movl	-0x54(%rbp), %eax
0000000000005237	cmpl	$0x47, %eax
000000000000523a	je	0x5274
000000000000523c	cmpl	$0xe84, %eax
0000000000005241	jne	0x527c
0000000000005243	movl	$0xfffffed4, %r12d
0000000000005249	cmpl	$0x0, -0x68(%rbp)
000000000000524d	js	0x5282
000000000000524f	cmpl	$0x24, -0x64(%rbp)
0000000000005253	jne	0x5282
0000000000005255	movl	-0x60(%rbp), %eax
0000000000005258	testl	%eax, %eax
000000000000525a	jne	0x5282
000000000000525c	movl	-0x48(%rbp), %r12d
0000000000005260	testl	%r12d, %r12d
0000000000005263	jne	0x5282
0000000000005265	xorl	%r12d, %r12d
0000000000005268	jmp	0x528b
000000000000526a	movl	-0x5c(%rbp), %edi
000000000000526d	callq	_mig_dealloc_reply_port
0000000000005272	jmp	0x528b
0000000000005274	movl	$0xfffffecc, %r12d
000000000000527a	jmp	0x5282
000000000000527c	movl	$0xfffffed3, %r12d
0000000000005282	leaq	-0x68(%rbp), %rdi
0000000000005286	callq	_mach_msg_destroy
000000000000528b	movl	%r12d, %eax
000000000000528e	addq	$0x48, %rsp
0000000000005292	popq	%rbx
0000000000005293	popq	%r12
0000000000005295	popq	%r13
0000000000005297	popq	%r14
0000000000005299	popq	%r15
000000000000529b	popq	%rbp
000000000000529c	retq
__pthread_clear_qos_tsd:
000000000000529d	leaq	__libkernel_functions(%rip), %rax
00000000000052a4	movq	(%rax), %rax
00000000000052a7	cmpq	$0x3, (%rax)
00000000000052ab	jb	0x52b8
00000000000052ad	movq	0x58(%rax), %rax
00000000000052b1	testq	%rax, %rax
00000000000052b4	je	0x52b8
00000000000052b6	jmpq	*%rax
00000000000052b8	retq
_mig_put_reply_port:
00000000000052b9	retq
_select$1050:
00000000000052ba	cmpl	$0x401, %edi
00000000000052c0	jl	_select$DARWIN_EXTSN
00000000000052c6	pushq	%rbp
00000000000052c7	movq	%rsp, %rbp
00000000000052ca	callq	___error
00000000000052cf	movl	$0x16, (%rax)
00000000000052d5	movl	$0xffffffff, %eax
00000000000052da	popq	%rbp
00000000000052db	retq
_mig_strncpy:
00000000000052dc	testl	%edx, %edx
00000000000052de	jle	0x530a
00000000000052e0	movl	$0x1, %eax
00000000000052e5	cmpl	$0x1, %edx
00000000000052e8	je	0x5306
00000000000052ea	xorl	%ecx, %ecx
00000000000052ec	movb	(%rsi,%rcx), %al
00000000000052ef	movb	%al, (%rdi,%rcx)
00000000000052f2	testb	%al, %al
00000000000052f4	je	0x530d
00000000000052f6	incq	%rcx
00000000000052f9	leal	0x1(%rcx), %eax
00000000000052fc	cmpl	%edx, %eax
00000000000052fe	jl	0x52ec
0000000000005300	leal	0x1(%rcx), %eax
0000000000005303	addq	%rcx, %rdi
0000000000005306	movb	$0x0, (%rdi)
0000000000005309	retq
000000000000530a	xorl	%eax, %eax
000000000000530c	retq
000000000000530d	incl	%ecx
000000000000530f	movl	%ecx, %eax
0000000000005311	retq
0000000000005312	nop
0000000000005313	nop
___psynch_rw_wrlock:
0000000000005314	movl	$0x2000133, %eax
0000000000005319	movq	%rcx, %r10
000000000000531c	syscall
000000000000531e	jae	0x5328
0000000000005320	movq	%rax, %rdi
0000000000005323	jmp	_cerror_nocancel
0000000000005328	retq
0000000000005329	nop
000000000000532a	nop
000000000000532b	nop
___psynch_rw_unlock:
000000000000532c	movl	$0x2000134, %eax
0000000000005331	movq	%rcx, %r10
0000000000005334	syscall
0000000000005336	jae	0x5340
0000000000005338	movq	%rax, %rdi
000000000000533b	jmp	_cerror_nocancel
0000000000005340	retq
0000000000005341	nop
0000000000005342	nop
0000000000005343	nop
___psynch_rw_rdlock:
0000000000005344	movl	$0x2000132, %eax
0000000000005349	movq	%rcx, %r10
000000000000534c	syscall
000000000000534e	jae	0x5358
0000000000005350	movq	%rax, %rdi
0000000000005353	jmp	_cerror_nocancel
0000000000005358	retq
0000000000005359	nop
000000000000535a	nop
000000000000535b	nop
_fsetxattr:
000000000000535c	movl	$0x20000ed, %eax
0000000000005361	movq	%rcx, %r10
0000000000005364	syscall
0000000000005366	jae	0x5370
0000000000005368	movq	%rax, %rdi
000000000000536b	jmp	_cerror_nocancel
0000000000005370	retq
_mach_port_get_context:
0000000000005371	pushq	%rbp
0000000000005372	movq	%rsp, %rbp
0000000000005375	pushq	%rbx
0000000000005376	pushq	%rax
0000000000005377	movq	%rdx, %rbx
000000000000537a	leaq	-0x10(%rbp), %rdx
000000000000537e	callq	__kernelrpc_mach_port_get_context
0000000000005383	testl	%eax, %eax
0000000000005385	jne	0x538e
0000000000005387	movq	-0x10(%rbp), %rcx
000000000000538b	movq	%rcx, (%rbx)
000000000000538e	addq	$0x8, %rsp
0000000000005392	popq	%rbx
0000000000005393	popq	%rbp
0000000000005394	retq
__kernelrpc_mach_port_get_context:
0000000000005395	pushq	%rbp
0000000000005396	movq	%rsp, %rbp
0000000000005399	pushq	%r14
000000000000539b	pushq	%rbx
000000000000539c	subq	$0x40, %rsp
00000000000053a0	movq	%rdx, %r14
00000000000053a3	leaq	_NDR_record(%rip), %rax
00000000000053aa	movq	(%rax), %rax
00000000000053ad	leaq	-0x48(%rbp), %rbx
00000000000053b1	movq	%rax, 0x18(%rbx)
00000000000053b5	movl	%esi, 0x20(%rbx)
00000000000053b8	movl	$0x1513, (%rbx)
00000000000053be	movl	%edi, 0x8(%rbx)
00000000000053c1	callq	_mig_get_reply_port
00000000000053c6	movl	%eax, 0xc(%rbx)
00000000000053c9	movabsq	$0xc9c00000000, %rcx
00000000000053d3	movq	%rcx, 0x10(%rbx)
00000000000053d7	movl	$0x0, (%rsp)
00000000000053de	movq	%rbx, %rdi
00000000000053e1	movl	$0x3, %esi
00000000000053e6	movl	$0x24, %edx
00000000000053eb	movl	$0x34, %ecx
00000000000053f0	movl	%eax, %r8d
00000000000053f3	xorl	%r9d, %r9d
00000000000053f6	callq	_mach_msg
00000000000053fb	movl	%eax, %ebx
00000000000053fd	leal	-0x10000002(%rbx), %eax
0000000000005403	cmpl	$0xe, %eax
0000000000005406	ja	0x541c
0000000000005408	movl	$0x4003, %ecx
000000000000540d	btl	%eax, %ecx
0000000000005410	jae	0x541c
0000000000005412	movl	-0x3c(%rbp), %edi
0000000000005415	callq	_mig_put_reply_port
000000000000541a	jmp	0x5484
000000000000541c	testl	%ebx, %ebx
000000000000541e	jne	0x5465
0000000000005420	movl	-0x34(%rbp), %eax
0000000000005423	cmpl	$0x47, %eax
0000000000005426	je	0x546f
0000000000005428	cmpl	$0xd00, %eax
000000000000542d	jne	0x5476
000000000000542f	movl	$0xfffffed4, %ebx
0000000000005434	cmpl	$0x0, -0x48(%rbp)
0000000000005438	js	0x547b
000000000000543a	movl	-0x44(%rbp), %eax
000000000000543d	cmpl	$0x2c, %eax
0000000000005440	je	0x544d
0000000000005442	cmpl	$0x24, %eax
0000000000005445	jne	0x547b
0000000000005447	cmpl	$0x0, -0x28(%rbp)
000000000000544b	je	0x547b
000000000000544d	cmpl	$0x0, -0x40(%rbp)
0000000000005451	jne	0x547b
0000000000005453	movl	-0x28(%rbp), %ebx
0000000000005456	testl	%ebx, %ebx
0000000000005458	jne	0x547b
000000000000545a	movq	-0x24(%rbp), %rax
000000000000545e	movq	%rax, (%r14)
0000000000005461	xorl	%ebx, %ebx
0000000000005463	jmp	0x5484
0000000000005465	movl	-0x3c(%rbp), %edi
0000000000005468	callq	_mig_dealloc_reply_port
000000000000546d	jmp	0x5484
000000000000546f	movl	$0xfffffecc, %ebx
0000000000005474	jmp	0x547b
0000000000005476	movl	$0xfffffed3, %ebx
000000000000547b	leaq	-0x48(%rbp), %rdi
000000000000547f	callq	_mach_msg_destroy
0000000000005484	movl	%ebx, %eax
0000000000005486	addq	$0x40, %rsp
000000000000548a	popq	%rbx
000000000000548b	popq	%r14
000000000000548d	popq	%rbp
000000000000548e	retq
000000000000548f	nop
_fchflags:
0000000000005490	movl	$0x2000023, %eax
0000000000005495	movq	%rcx, %r10
0000000000005498	syscall
000000000000549a	jae	0x54a4
000000000000549c	movq	%rax, %rdi
000000000000549f	jmp	_cerror_nocancel
00000000000054a4	retq
00000000000054a5	nop
00000000000054a6	nop
00000000000054a7	nop
_futimes:
00000000000054a8	movl	$0x200008b, %eax
00000000000054ad	movq	%rcx, %r10
00000000000054b0	syscall
00000000000054b2	jae	0x54bc
00000000000054b4	movq	%rax, %rdi
00000000000054b7	jmp	_cerror_nocancel
00000000000054bc	retq
00000000000054bd	nop
00000000000054be	nop
00000000000054bf	nop
_umask:
00000000000054c0	movl	$0x200003c, %eax
00000000000054c5	movq	%rcx, %r10
00000000000054c8	syscall
00000000000054ca	jae	0x54d4
00000000000054cc	movq	%rax, %rdi
00000000000054cf	jmp	_cerror_nocancel
00000000000054d4	retq
00000000000054d5	nop
00000000000054d6	nop
00000000000054d7	nop
_utimes:
00000000000054d8	movl	$0x200008a, %eax
00000000000054dd	movq	%rcx, %r10
00000000000054e0	syscall
00000000000054e2	jae	0x54ec
00000000000054e4	movq	%rax, %rdi
00000000000054e7	jmp	_cerror_nocancel
00000000000054ec	retq
_thread_switch:
00000000000054ed	jmp	_syscall_thread_switch
_clock_get_time:
00000000000054f2	pushq	%rbp
00000000000054f3	movq	%rsp, %rbp
00000000000054f6	pushq	%r14
00000000000054f8	pushq	%rbx
00000000000054f9	subq	$0x40, %rsp
00000000000054fd	movq	%rsi, %r14
0000000000005500	leaq	-0x48(%rbp), %rbx
0000000000005504	movl	$0x1513, (%rbx)
000000000000550a	movl	%edi, 0x8(%rbx)
000000000000550d	callq	_mig_get_reply_port
0000000000005512	movl	%eax, 0xc(%rbx)
0000000000005515	movabsq	$0x3e800000000, %rcx
000000000000551f	movq	%rcx, 0x10(%rbx)
0000000000005523	movl	$0x0, (%rsp)
000000000000552a	movq	%rbx, %rdi
000000000000552d	movl	$0x3, %esi
0000000000005532	movl	$0x18, %edx
0000000000005537	movl	$0x34, %ecx
000000000000553c	movl	%eax, %r8d
000000000000553f	xorl	%r9d, %r9d
0000000000005542	callq	_mach_msg
0000000000005547	movl	%eax, %ebx
0000000000005549	leal	-0x10000002(%rbx), %eax
000000000000554f	cmpl	$0xe, %eax
0000000000005552	ja	0x5568
0000000000005554	movl	$0x4003, %ecx
0000000000005559	btl	%eax, %ecx
000000000000555c	jae	0x5568
000000000000555e	movl	-0x3c(%rbp), %edi
0000000000005561	callq	_mig_put_reply_port
0000000000005566	jmp	0x55d0
0000000000005568	testl	%ebx, %ebx
000000000000556a	jne	0x55b1
000000000000556c	movl	-0x34(%rbp), %eax
000000000000556f	cmpl	$0x47, %eax
0000000000005572	je	0x55bb
0000000000005574	cmpl	$0x44c, %eax
0000000000005579	jne	0x55c2
000000000000557b	movl	$0xfffffed4, %ebx
0000000000005580	cmpl	$0x0, -0x48(%rbp)
0000000000005584	js	0x55c7
0000000000005586	movl	-0x44(%rbp), %eax
0000000000005589	cmpl	$0x2c, %eax
000000000000558c	je	0x5599
000000000000558e	cmpl	$0x24, %eax
0000000000005591	jne	0x55c7
0000000000005593	cmpl	$0x0, -0x28(%rbp)
0000000000005597	je	0x55c7
0000000000005599	cmpl	$0x0, -0x40(%rbp)
000000000000559d	jne	0x55c7
000000000000559f	movl	-0x28(%rbp), %ebx
00000000000055a2	testl	%ebx, %ebx
00000000000055a4	jne	0x55c7
00000000000055a6	movq	-0x24(%rbp), %rax
00000000000055aa	movq	%rax, (%r14)
00000000000055ad	xorl	%ebx, %ebx
00000000000055af	jmp	0x55d0
00000000000055b1	movl	-0x3c(%rbp), %edi
00000000000055b4	callq	_mig_dealloc_reply_port
00000000000055b9	jmp	0x55d0
00000000000055bb	movl	$0xfffffecc, %ebx
00000000000055c0	jmp	0x55c7
00000000000055c2	movl	$0xfffffed3, %ebx
00000000000055c7	leaq	-0x48(%rbp), %rdi
00000000000055cb	callq	_mach_msg_destroy
00000000000055d0	movl	%ebx, %eax
00000000000055d2	addq	$0x40, %rsp
00000000000055d6	popq	%rbx
00000000000055d7	popq	%r14
00000000000055d9	popq	%rbp
00000000000055da	retq
_mach_port_destroy:
00000000000055db	pushq	%rbp
00000000000055dc	movq	%rsp, %rbp
00000000000055df	pushq	%r14
00000000000055e1	pushq	%rbx
00000000000055e2	movl	%esi, %r14d
00000000000055e5	movl	%edi, %ebx
00000000000055e7	callq	__kernelrpc_mach_port_destroy_trap
00000000000055ec	cmpl	$0x10000003, %eax
00000000000055f1	jne	0x5601
00000000000055f3	movl	%ebx, %edi
00000000000055f5	movl	%r14d, %esi
00000000000055f8	popq	%rbx
00000000000055f9	popq	%r14
00000000000055fb	popq	%rbp
00000000000055fc	jmp	__kernelrpc_mach_port_destroy
0000000000005601	popq	%rbx
0000000000005602	popq	%r14
0000000000005604	popq	%rbp
0000000000005605	retq
_gethostuuid:
0000000000005606	pushq	%rbp
0000000000005607	movq	%rsp, %rbp
000000000000560a	pushq	%rbx
000000000000560b	pushq	%rax
000000000000560c	movq	%rdi, %rbx
000000000000560f	callq	___gethostuuid
0000000000005614	cmpl	$-0x1, %eax
0000000000005617	jne	0x5645
0000000000005619	callq	___error
000000000000561e	movq	%rax, %rcx
0000000000005621	movl	$0xffffffff, %eax
0000000000005626	cmpl	$0x1, (%rcx)
0000000000005629	jne	0x5645
000000000000562b	movq	__gethostuuid_callback(%rip), %rcx
0000000000005632	testq	%rcx, %rcx
0000000000005635	je	0x5642
0000000000005637	movq	%rbx, %rdi
000000000000563a	addq	$0x8, %rsp
000000000000563e	popq	%rbx
000000000000563f	popq	%rbp
0000000000005640	jmpq	*%rcx
0000000000005642	movb	$0x0, (%rbx)
0000000000005645	addq	$0x8, %rsp
0000000000005649	popq	%rbx
000000000000564a	popq	%rbp
000000000000564b	retq
___gethostuuid:
000000000000564c	movl	$0x200008e, %eax
0000000000005651	movq	%rcx, %r10
0000000000005654	syscall
0000000000005656	jae	0x5660
0000000000005658	movq	%rax, %rdi
000000000000565b	jmp	_cerror_nocancel
0000000000005660	retq
0000000000005661	nop
0000000000005662	nop
0000000000005663	nop
___stat64_extended:
0000000000005664	movl	$0x2000155, %eax
0000000000005669	movq	%rcx, %r10
000000000000566c	syscall
000000000000566e	jae	0x5678
0000000000005670	movq	%rax, %rdi
0000000000005673	jmp	_cerror_nocancel
0000000000005678	retq
0000000000005679	nop
000000000000567a	nop
000000000000567b	nop
___chmod_extended:
000000000000567c	movl	$0x200011a, %eax
0000000000005681	movq	%rcx, %r10
0000000000005684	syscall
0000000000005686	jae	0x5690
0000000000005688	movq	%rax, %rdi
000000000000568b	jmp	_cerror_nocancel
0000000000005690	retq
0000000000005691	nop
0000000000005692	nop
0000000000005693	nop
___lstat64_extended:
0000000000005694	movl	$0x2000156, %eax
0000000000005699	movq	%rcx, %r10
000000000000569c	syscall
000000000000569e	jae	0x56a8
00000000000056a0	movq	%rax, %rdi
00000000000056a3	jmp	_cerror_nocancel
00000000000056a8	retq
_open_dprotected_np:
00000000000056a9	pushq	%rbp
00000000000056aa	movq	%rsp, %rbp
00000000000056ad	subq	$0xd0, %rsp
00000000000056b4	testb	%al, %al
00000000000056b6	je	0x56de
00000000000056b8	movaps	%xmm0, -0xa0(%rbp)
00000000000056bf	movaps	%xmm1, -0x90(%rbp)
00000000000056c6	movaps	%xmm2, -0x80(%rbp)
00000000000056ca	movaps	%xmm3, -0x70(%rbp)
00000000000056ce	movaps	%xmm4, -0x60(%rbp)
00000000000056d2	movaps	%xmm5, -0x50(%rbp)
00000000000056d6	movaps	%xmm6, -0x40(%rbp)
00000000000056da	movaps	%xmm7, -0x30(%rbp)
00000000000056de	movq	%r9, -0xa8(%rbp)
00000000000056e5	movq	%r8, -0xb0(%rbp)
00000000000056ec	xorl	%r8d, %r8d
00000000000056ef	btl	$0x9, %esi
00000000000056f3	jae	0x5744
00000000000056f5	leaq	-0xd0(%rbp), %rax
00000000000056fc	movq	%rax, -0x10(%rbp)
0000000000005700	leaq	0x10(%rbp), %rax
0000000000005704	movq	%rax, -0x18(%rbp)
0000000000005708	movabsq	$0x3000000020, %rax
0000000000005712	movq	%rax, -0x20(%rbp)
0000000000005716	movl	$0x20, %r8d
000000000000571c	cmpq	$0x28, %r8
0000000000005720	ja	0x5735
0000000000005722	movl	$0x20, %r9d
0000000000005728	addq	-0x10(%rbp), %r9
000000000000572c	leal	0x8(%r8), %eax
0000000000005730	movl	%eax, -0x20(%rbp)
0000000000005733	jmp	0x5741
0000000000005735	movq	-0x18(%rbp), %r9
0000000000005739	leaq	0x8(%r9), %rax
000000000000573d	movq	%rax, -0x18(%rbp)
0000000000005741	movl	(%r9), %r8d
0000000000005744	callq	___open_dprotected_np
0000000000005749	addq	$0xd0, %rsp
0000000000005750	popq	%rbp
0000000000005751	retq
0000000000005752	nop
0000000000005753	nop
___open_dprotected_np:
0000000000005754	movl	$0x20000d8, %eax
0000000000005759	movq	%rcx, %r10
000000000000575c	syscall
000000000000575e	jae	0x5768
0000000000005760	movq	%rax, %rdi
0000000000005763	jmp	_cerror_nocancel
0000000000005768	retq
0000000000005769	nop
000000000000576a	nop
000000000000576b	nop
___fstat64_extended:
000000000000576c	movl	$0x2000157, %eax
0000000000005771	movq	%rcx, %r10
0000000000005774	syscall
0000000000005776	jae	0x5780
0000000000005778	movq	%rax, %rdi
000000000000577b	jmp	_cerror_nocancel
0000000000005780	retq
0000000000005781	nop
0000000000005782	nop
0000000000005783	nop
___fchmod_extended:
0000000000005784	movl	$0x200011b, %eax
0000000000005789	movq	%rcx, %r10
000000000000578c	syscall
000000000000578e	jae	0x5798
0000000000005790	movq	%rax, %rdi
0000000000005793	jmp	_cerror_nocancel
0000000000005798	retq
0000000000005799	nop
000000000000579a	nop
000000000000579b	nop
_fsetattrlist:
000000000000579c	movl	$0x20000e5, %eax
00000000000057a1	movq	%rcx, %r10
00000000000057a4	syscall
00000000000057a6	jae	0x57b0
00000000000057a8	movq	%rax, %rdi
00000000000057ab	jmp	_cerror_nocancel
00000000000057b0	retq
00000000000057b1	nop
00000000000057b2	nop
00000000000057b3	nop
_fchown:
00000000000057b4	movl	$0x200007b, %eax
00000000000057b9	movq	%rcx, %r10
00000000000057bc	syscall
00000000000057be	jae	0x57c8
00000000000057c0	movq	%rax, %rdi
00000000000057c3	jmp	_cerror_nocancel
00000000000057c8	retq
00000000000057c9	nop
00000000000057ca	nop
00000000000057cb	nop
_getgroups:
00000000000057cc	movl	$0x200004f, %eax
00000000000057d1	movq	%rcx, %r10
00000000000057d4	syscall
00000000000057d6	jae	0x57e0
00000000000057d8	movq	%rax, %rdi
00000000000057db	jmp	_cerror_nocancel
00000000000057e0	retq
00000000000057e1	nop
00000000000057e2	nop
00000000000057e3	nop
___lchown:
_lchown:
00000000000057e4	movl	$0x200016c, %eax
00000000000057e9	movq	%rcx, %r10
00000000000057ec	syscall
00000000000057ee	jae	0x57f8
00000000000057f0	movq	%rax, %rdi
00000000000057f3	jmp	_cerror_nocancel
00000000000057f8	retq
00000000000057f9	nop
00000000000057fa	nop
00000000000057fb	nop
_symlink:
00000000000057fc	movl	$0x2000039, %eax
0000000000005801	movq	%rcx, %r10
0000000000005804	syscall
0000000000005806	jae	0x5810
0000000000005808	movq	%rax, %rdi
000000000000580b	jmp	_cerror
0000000000005810	retq
0000000000005811	nop
0000000000005812	nop
0000000000005813	nop
_openat$NOCANCEL:
___openat_nocancel:
0000000000005814	movl	$0x20001d0, %eax
0000000000005819	movq	%rcx, %r10
000000000000581c	syscall
000000000000581e	jae	0x5828
0000000000005820	movq	%rax, %rdi
0000000000005823	jmp	_cerror_nocancel
0000000000005828	retq
0000000000005829	nop
000000000000582a	nop
000000000000582b	nop
___sendmsg:
_sendmsg:
000000000000582c	movl	$0x200001c, %eax
0000000000005831	movq	%rcx, %r10
0000000000005834	syscall
0000000000005836	jae	0x5840
0000000000005838	movq	%rax, %rdi
000000000000583b	jmp	_cerror
0000000000005840	retq
_mig_deallocate:
0000000000005841	movq	%rsi, %rdx
0000000000005844	movq	%rdi, %rsi
0000000000005847	leaq	_mach_task_self_(%rip), %rax
000000000000584e	movl	(%rax), %edi
0000000000005850	jmp	_vm_deallocate
0000000000005855	nop
0000000000005856	nop
0000000000005857	nop
___kdebug_typefilter:
0000000000005858	movl	$0x20000b1, %eax
000000000000585d	movq	%rcx, %r10
0000000000005860	syscall
0000000000005862	jae	0x586c
0000000000005864	movq	%rax, %rdi
0000000000005867	jmp	_cerror_nocancel
000000000000586c	retq
___libkernel_init:
000000000000586d	pushq	%rbp
000000000000586e	movq	%rsp, %rbp
0000000000005871	pushq	%r14
0000000000005873	pushq	%rbx
0000000000005874	movq	%rsi, %rbx
0000000000005877	movq	%rdi, __libkernel_functions(%rip)
000000000000587e	movq	0x8(%rdi), %rax
0000000000005882	testq	%rax, %rax
0000000000005885	je	0x588e
0000000000005887	movq	%rax, __dlsym(%rip)
000000000000588e	callq	_mach_init
0000000000005893	movq	(%rbx), %rsi
0000000000005896	testq	%rsi, %rsi
0000000000005899	je	0x58be
000000000000589b	addq	$0x8, %rbx
000000000000589f	leaq	0x1d45a(%rip), %r14 ## literal pool for: "XBS_IS_CHROOTED=1"
00000000000058a6	movq	%r14, %rdi
00000000000058a9	callq	_strcmp
00000000000058ae	testl	%eax, %eax
00000000000058b0	je	0x58d9
00000000000058b2	movq	(%rbx), %rsi
00000000000058b5	addq	$0x8, %rbx
00000000000058b9	testq	%rsi, %rsi
00000000000058bc	jne	0x58a6
00000000000058be	cmpb	$0x0, 0x29d4b(%rip)
00000000000058c5	jne	0x58e0
00000000000058c7	leaq	0x1d444(%rip), %rdi ## literal pool for: "/AppleInternal/XBS/.isChrooted"
00000000000058ce	xorl	%esi, %esi
00000000000058d0	callq	_access
00000000000058d5	testl	%eax, %eax
00000000000058d7	jne	0x58e0
00000000000058d9	movb	$0x1, 0x29d30(%rip)
00000000000058e0	popq	%rbx
00000000000058e1	popq	%r14
00000000000058e3	popq	%rbp
00000000000058e4	retq
_mach_init:
00000000000058e5	cmpb	$0x0, 0x2a3d4(%rip)
00000000000058ec	jne	0x58ff
00000000000058ee	pushq	%rbp
00000000000058ef	movq	%rsp, %rbp
00000000000058f2	callq	_mach_init_doit
00000000000058f7	movb	$0x1, 0x2a3c2(%rip)
00000000000058fe	popq	%rbp
00000000000058ff	xorl	%eax, %eax
0000000000005901	retq
_mach_init_doit:
0000000000005902	pushq	%rbp
0000000000005903	movq	%rsp, %rbp
0000000000005906	callq	_task_self_trap
000000000000590b	movl	%eax, _mach_task_self_(%rip)
0000000000005911	callq	_mach_reply_port
0000000000005916	leaq	__task_reply_port(%rip), %rcx
000000000000591d	movl	%eax, (%rcx)
000000000000591f	movl	_vm_kernel_page_shift(%rip), %ecx
0000000000005925	testl	%ecx, %ecx
0000000000005927	jne	0x594e
0000000000005929	movq	$0x1000, _mach_task_self_(%rip)
0000000000005934	movq	$0xfff, 0x29cf9(%rip)
000000000000593f	movl	$0xc, 0x29cf7(%rip)
0000000000005949	movl	$0xc, %ecx
000000000000594e	cmpl	$0x0, 0x29d03(%rip)
0000000000005955	jne	0x5977
0000000000005957	movl	%ecx, _vm_page_shift(%rip)
000000000000595d	movl	$0x1, %eax
0000000000005962	shll	%cl, %eax
0000000000005964	cltq
0000000000005966	movq	%rax, _vm_page_size(%rip)
000000000000596d	decq	%rax
0000000000005970	movq	%rax, _vm_page_mask(%rip)
0000000000005977	callq	__init_cpu_capabilities
000000000000597c	xorl	%edi, %edi
000000000000597e	popq	%rbp
000000000000597f	jmp	__pthread_set_self
__init_cpu_capabilities:
0000000000005984	pushq	%rbp
0000000000005985	movq	%rsp, %rbp
0000000000005988	callq	__get_cpu_capabilities
000000000000598d	movl	%eax, __cpu_capabilities(%rip)
0000000000005993	popq	%rbp
0000000000005994	retq
0000000000005995	nop
0000000000005996	nop
0000000000005997	nop
__get_cpu_capabilities:
0000000000005998	movabsq	$0x7fffffe00010, %rax
00000000000059a2	movq	(%rax), %rax
00000000000059a5	retq
__pthread_set_self:
00000000000059a6	retq
_strcmp:
00000000000059a7	movq	__libkernel_string_functions(%rip), %rax
00000000000059ae	movq	0x40(%rax), %rax
00000000000059b2	jmpq	*%rax
__libkernel_strcmp:
00000000000059b4	xorl	%ecx, %ecx
00000000000059b6	movzbl	(%rdi,%rcx), %eax
00000000000059ba	movzbl	(%rsi,%rcx), %edx
00000000000059be	cmpb	%dl, %al
00000000000059c0	jne	0x59cc
00000000000059c2	incq	%rcx
00000000000059c5	testb	%al, %al
00000000000059c7	jne	0x59b6
00000000000059c9	xorl	%eax, %eax
00000000000059cb	retq
00000000000059cc	subl	%edx, %eax
00000000000059ce	retq
___libkernel_platform_init:
00000000000059cf	movq	%rdi, __libkernel_string_functions(%rip)
00000000000059d6	xorl	%eax, %eax
00000000000059d8	retq
_mach_thread_self:
00000000000059d9	jmp	_thread_self_trap
00000000000059de	nop
00000000000059df	nop
___bsdthread_register:
00000000000059e0	movl	$0x200016e, %eax
00000000000059e5	movq	%rcx, %r10
00000000000059e8	syscall
00000000000059ea	jae	0x59f4
00000000000059ec	movq	%rax, %rdi
00000000000059ef	jmp	_cerror_nocancel
00000000000059f4	retq
_host_get_clock_service:
00000000000059f5	pushq	%rbp
00000000000059f6	movq	%rsp, %rbp
00000000000059f9	pushq	%r14
00000000000059fb	pushq	%rbx
00000000000059fc	subq	$0x40, %rsp
0000000000005a00	movq	%rdx, %r14
0000000000005a03	leaq	_NDR_record(%rip), %rax
0000000000005a0a	movq	(%rax), %rax
0000000000005a0d	leaq	-0x40(%rbp), %rbx
0000000000005a11	movq	%rax, 0x18(%rbx)
0000000000005a15	movl	%esi, 0x20(%rbx)
0000000000005a18	movl	$0x1513, (%rbx)
0000000000005a1e	movl	%edi, 0x8(%rbx)
0000000000005a21	callq	_mig_get_reply_port
0000000000005a26	movl	%eax, 0xc(%rbx)
0000000000005a29	movabsq	$0xce00000000, %rcx
0000000000005a33	movq	%rcx, 0x10(%rbx)
0000000000005a37	movl	$0x0, (%rsp)
0000000000005a3e	movq	%rbx, %rdi
0000000000005a41	movl	$0x3, %esi
0000000000005a46	movl	$0x24, %edx
0000000000005a4b	movl	$0x30, %ecx
0000000000005a50	movl	%eax, %r8d
0000000000005a53	xorl	%r9d, %r9d
0000000000005a56	callq	_mach_msg
0000000000005a5b	movl	%eax, %ebx
0000000000005a5d	leal	-0x10000002(%rbx), %eax
0000000000005a63	cmpl	$0xe, %eax
0000000000005a66	ja	0x5a7c
0000000000005a68	movl	$0x4003, %ecx
0000000000005a6d	btl	%eax, %ecx
0000000000005a70	jae	0x5a7c
0000000000005a72	movl	-0x34(%rbp), %edi
0000000000005a75	callq	_mig_put_reply_port
0000000000005a7a	jmp	0x5ae3
0000000000005a7c	testl	%ebx, %ebx
0000000000005a7e	jne	0x5aac
0000000000005a80	movl	-0x2c(%rbp), %eax
0000000000005a83	cmpl	$0x47, %eax
0000000000005a86	je	0x5ab6
0000000000005a88	cmpl	$0x132, %eax
0000000000005a8d	jne	0x5abd
0000000000005a8f	movl	-0x40(%rbp), %eax
0000000000005a92	movl	-0x3c(%rbp), %ecx
0000000000005a95	movl	$0xfffffed4, %ebx
0000000000005a9a	testl	%eax, %eax
0000000000005a9c	js	0x5ac4
0000000000005a9e	cmpl	$0x24, %ecx
0000000000005aa1	jne	0x5ada
0000000000005aa3	movl	-0x20(%rbp), %ecx
0000000000005aa6	testl	%ecx, %ecx
0000000000005aa8	jne	0x5acf
0000000000005aaa	jmp	0x5ada
0000000000005aac	movl	-0x34(%rbp), %edi
0000000000005aaf	callq	_mig_dealloc_reply_port
0000000000005ab4	jmp	0x5ae3
0000000000005ab6	movl	$0xfffffecc, %ebx
0000000000005abb	jmp	0x5ada
0000000000005abd	movl	$0xfffffed3, %ebx
0000000000005ac2	jmp	0x5ada
0000000000005ac4	cmpl	$0x28, %ecx
0000000000005ac7	jne	0x5ada
0000000000005ac9	cmpl	$0x1, -0x28(%rbp)
0000000000005acd	jne	0x5ada
0000000000005acf	movl	$0xfffffed4, %ebx
0000000000005ad4	cmpl	$0x0, -0x38(%rbp)
0000000000005ad8	je	0x5aee
0000000000005ada	leaq	-0x40(%rbp), %rdi
0000000000005ade	callq	_mach_msg_destroy
0000000000005ae3	movl	%ebx, %eax
0000000000005ae5	addq	$0x40, %rsp
0000000000005ae9	popq	%rbx
0000000000005aea	popq	%r14
0000000000005aec	popq	%rbp
0000000000005aed	retq
0000000000005aee	testl	%eax, %eax
0000000000005af0	js	0x5afb
0000000000005af2	movl	-0x20(%rbp), %ebx
0000000000005af5	testl	%ebx, %ebx
0000000000005af7	jne	0x5ada
0000000000005af9	jmp	0x5b09
0000000000005afb	movzwl	-0x1a(%rbp), %eax
0000000000005aff	shll	$0x10, %eax
0000000000005b02	cmpl	$0x110000, %eax
0000000000005b07	jne	0x5ada
0000000000005b09	movl	-0x24(%rbp), %eax
0000000000005b0c	movl	%eax, (%r14)
0000000000005b0f	xorl	%ebx, %ebx
0000000000005b11	jmp	0x5ae3
_proc_name:
0000000000005b13	pushq	%rbp
0000000000005b14	movq	%rsp, %rbp
0000000000005b17	pushq	%r14
0000000000005b19	pushq	%rbx
0000000000005b1a	subq	$0x90, %rsp
0000000000005b21	cmpl	$0x1f, %edx
0000000000005b24	ja	0x5b35
0000000000005b26	callq	___error
0000000000005b2b	movl	$0xc, (%rax)
0000000000005b31	xorl	%ebx, %ebx
0000000000005b33	jmp	0x5b8e
0000000000005b35	movq	%rsi, %r14
0000000000005b38	movl	%edi, %esi
0000000000005b3a	xorl	%ebx, %ebx
0000000000005b3c	leaq	-0x98(%rbp), %r8
0000000000005b43	movl	$0x2, %edi
0000000000005b48	movl	$0x3, %edx
0000000000005b4d	xorl	%ecx, %ecx
0000000000005b4f	movl	$0x88, %r9d
0000000000005b55	callq	___proc_info
0000000000005b5a	incl	%eax
0000000000005b5c	cmpl	$0x2, %eax
0000000000005b5f	jb	0x5b8e
0000000000005b61	cmpb	$0x0, -0x58(%rbp)
0000000000005b65	je	0x5b72
0000000000005b67	leaq	-0x58(%rbp), %rdi
0000000000005b6b	movl	$0x20, %edx
0000000000005b70	jmp	0x5b7b
0000000000005b72	leaq	-0x68(%rbp), %rdi
0000000000005b76	movl	$0x10, %edx
0000000000005b7b	movq	%r14, %rsi
0000000000005b7e	callq	_bcopy
0000000000005b83	movq	%r14, %rdi
0000000000005b86	callq	_strlen
0000000000005b8b	movq	%rax, %rbx
0000000000005b8e	movl	%ebx, %eax
0000000000005b90	addq	$0x90, %rsp
0000000000005b97	popq	%rbx
0000000000005b98	popq	%r14
0000000000005b9a	popq	%rbp
0000000000005b9b	retq
_bcopy:
0000000000005b9c	movq	%rdi, %rax
0000000000005b9f	movq	%rsi, %rdi
0000000000005ba2	movq	%rax, %rsi
0000000000005ba5	jmp	_memcpy
0000000000005baa	nop
0000000000005bab	nop
_kqueue:
0000000000005bac	movl	$0x200016a, %eax
0000000000005bb1	movq	%rcx, %r10
0000000000005bb4	syscall
0000000000005bb6	jae	0x5bc0
0000000000005bb8	movq	%rax, %rdi
0000000000005bbb	jmp	_cerror_nocancel
0000000000005bc0	retq
0000000000005bc1	nop
0000000000005bc2	nop
0000000000005bc3	nop
_kevent:
0000000000005bc4	movl	$0x200016b, %eax
0000000000005bc9	movq	%rcx, %r10
0000000000005bcc	syscall
0000000000005bce	jae	0x5bd8
0000000000005bd0	movq	%rax, %rdi
0000000000005bd3	jmp	_cerror_nocancel
0000000000005bd8	retq
_pselect$DARWIN_EXTSN:
0000000000005bd9	pushq	%rbp
0000000000005bda	movq	%rsp, %rbp
0000000000005bdd	pushq	%r15
0000000000005bdf	pushq	%r14
0000000000005be1	pushq	%r13
0000000000005be3	pushq	%r12
0000000000005be5	pushq	%rbx
0000000000005be6	subq	$0x28, %rsp
0000000000005bea	movq	%r9, %rbx
0000000000005bed	movq	%r8, %r15
0000000000005bf0	movq	%rsi, %r12
0000000000005bf3	movl	%edi, %r13d
0000000000005bf6	movq	%rdx, -0x38(%rbp)
0000000000005bfa	movq	%rcx, -0x40(%rbp)
0000000000005bfe	callq	___pselect
0000000000005c03	movl	%eax, %r14d
0000000000005c06	cmpl	$-0x1, %eax
0000000000005c09	jne	0x5cc7
0000000000005c0f	callq	___error
0000000000005c14	movl	$0xffffffff, %r14d
0000000000005c1a	cmpl	$0x4e, (%rax)
0000000000005c1d	jne	0x5cc7
0000000000005c23	testq	%r15, %r15
0000000000005c26	je	0x5c55
0000000000005c28	movq	(%r15), %rax
0000000000005c2b	leaq	-0x50(%rbp), %rcx
0000000000005c2f	movq	%rax, (%rcx)
0000000000005c32	movabsq	$0x20c49ba5e353f7cf, %rax
0000000000005c3c	imulq	0x8(%r15)
0000000000005c40	movq	%rcx, %r15
0000000000005c43	movq	%rdx, %rax
0000000000005c46	shrq	$0x3f, %rax
0000000000005c4a	shrq	$0x7, %rdx
0000000000005c4e	addl	%eax, %edx
0000000000005c50	movl	%edx, 0x8(%rcx)
0000000000005c53	jmp	0x5c58
0000000000005c55	xorl	%r15d, %r15d
0000000000005c58	testq	%rbx, %rbx
0000000000005c5b	je	0x5cae
0000000000005c5d	leaq	-0x2c(%rbp), %rdx
0000000000005c61	movl	$0x3, %edi
0000000000005c66	movq	%rbx, %rsi
0000000000005c69	callq	___pthread_sigmask
0000000000005c6e	movl	%eax, %r14d
0000000000005c71	testl	%eax, %eax
0000000000005c73	jne	0x5cc7
0000000000005c75	movl	%r13d, %edi
0000000000005c78	movq	%r12, %rsi
0000000000005c7b	movq	-0x38(%rbp), %rdx
0000000000005c7f	movq	-0x40(%rbp), %rcx
0000000000005c83	movq	%r15, %r8
0000000000005c86	callq	_select$DARWIN_EXTSN
0000000000005c8b	movl	%eax, %r14d
0000000000005c8e	callq	___error
0000000000005c93	movl	(%rax), %ebx
0000000000005c95	leaq	-0x2c(%rbp), %rsi
0000000000005c99	movl	$0x3, %edi
0000000000005c9e	xorl	%edx, %edx
0000000000005ca0	callq	___pthread_sigmask
0000000000005ca5	callq	___error
0000000000005caa	movl	%ebx, (%rax)
0000000000005cac	jmp	0x5cc7
0000000000005cae	movl	%r13d, %edi
0000000000005cb1	movq	%r12, %rsi
0000000000005cb4	movq	-0x38(%rbp), %rdx
0000000000005cb8	movq	-0x40(%rbp), %rcx
0000000000005cbc	movq	%r15, %r8
0000000000005cbf	callq	_select$DARWIN_EXTSN
0000000000005cc4	movl	%eax, %r14d
0000000000005cc7	movl	%r14d, %eax
0000000000005cca	addq	$0x28, %rsp
0000000000005cce	popq	%rbx
0000000000005ccf	popq	%r12
0000000000005cd1	popq	%r13
0000000000005cd3	popq	%r14
0000000000005cd5	popq	%r15
0000000000005cd7	popq	%rbp
0000000000005cd8	retq
0000000000005cd9	nop
0000000000005cda	nop
0000000000005cdb	nop
___pselect:
0000000000005cdc	movl	$0x200018a, %eax
0000000000005ce1	movq	%rcx, %r10
0000000000005ce4	syscall
0000000000005ce6	jae	0x5cf0
0000000000005ce8	movq	%rax, %rdi
0000000000005ceb	jmp	_cerror
0000000000005cf0	retq
0000000000005cf1	nop
0000000000005cf2	nop
0000000000005cf3	nop
_quotactl:
0000000000005cf4	movl	$0x20000a5, %eax
0000000000005cf9	movq	%rcx, %r10
0000000000005cfc	syscall
0000000000005cfe	jae	0x5d08
0000000000005d00	movq	%rax, %rdi
0000000000005d03	jmp	_cerror_nocancel
0000000000005d08	retq
0000000000005d09	nop
0000000000005d0a	nop
0000000000005d0b	nop
_fileport_makefd:
0000000000005d0c	movl	$0x20001af, %eax
0000000000005d11	movq	%rcx, %r10
0000000000005d14	syscall
0000000000005d16	jae	0x5d20
0000000000005d18	movq	%rax, %rdi
0000000000005d1b	jmp	_cerror_nocancel
0000000000005d20	retq
_thread_policy_set:
0000000000005d21	pushq	%rbp
0000000000005d22	movq	%rsp, %rbp
0000000000005d25	pushq	%rbx
0000000000005d26	pushq	%rax
0000000000005d27	movl	%edi, %ebx
0000000000005d29	callq	__kernelrpc_thread_policy_set
0000000000005d2e	cmpl	$0x33, %eax
0000000000005d31	je	0x5d3e
0000000000005d33	testl	%eax, %eax
0000000000005d35	jne	0x5d40
0000000000005d37	movl	%ebx, %edi
0000000000005d39	callq	__pthread_clear_qos_tsd
0000000000005d3e	xorl	%eax, %eax
0000000000005d40	addq	$0x8, %rsp
0000000000005d44	popq	%rbx
0000000000005d45	popq	%rbp
0000000000005d46	retq
__kernelrpc_thread_policy_set:
0000000000005d47	pushq	%rbp
0000000000005d48	movq	%rsp, %rbp
0000000000005d4b	pushq	%r15
0000000000005d4d	pushq	%r14
0000000000005d4f	pushq	%rbx
0000000000005d50	subq	$0x78, %rsp
0000000000005d54	leaq	_NDR_record(%rip), %rax
0000000000005d5b	movq	(%rax), %rax
0000000000005d5e	movq	%rax, -0x68(%rbp)
0000000000005d62	movl	%esi, -0x60(%rbp)
0000000000005d65	movl	$0xfffffecd, %r14d
0000000000005d6b	cmpl	$0x10, %ecx
0000000000005d6e	ja	0x5e61
0000000000005d74	movl	%ecx, %ebx
0000000000005d76	movl	%edi, %r15d
0000000000005d79	leaq	-0x58(%rbp), %r14
0000000000005d7d	leal	(,%rbx,4), %eax
0000000000005d84	movq	%r14, %rdi
0000000000005d87	movq	%rdx, %rsi
0000000000005d8a	movq	%rax, %rdx
0000000000005d8d	callq	_memcpy
0000000000005d92	movl	%ebx, -0x4(%r14)
0000000000005d96	leal	0x28(,%rbx,4), %ebx
0000000000005d9d	movl	$0x1513, -0x28(%r14)
0000000000005da5	movl	%r15d, -0x20(%r14)
0000000000005da9	callq	_mig_get_reply_port
0000000000005dae	movl	%eax, -0x1c(%r14)
0000000000005db2	movabsq	$0xe2100000000, %rcx
0000000000005dbc	movq	%rcx, -0x18(%r14)
0000000000005dc0	movl	$0x0, (%rsp)
0000000000005dc7	leaq	-0x80(%rbp), %rdi
0000000000005dcb	movl	$0x3, %esi
0000000000005dd0	movl	%ebx, %edx
0000000000005dd2	movl	$0x2c, %ecx
0000000000005dd7	movl	%eax, %r8d
0000000000005dda	xorl	%r9d, %r9d
0000000000005ddd	callq	_mach_msg
0000000000005de2	movl	%eax, %r14d
0000000000005de5	leal	-0x10000002(%r14), %eax
0000000000005dec	cmpl	$0xe, %eax
0000000000005def	ja	0x5e05
0000000000005df1	movl	$0x4003, %ecx
0000000000005df6	btl	%eax, %ecx
0000000000005df9	jae	0x5e05
0000000000005dfb	movl	-0x74(%rbp), %edi
0000000000005dfe	callq	_mig_put_reply_port
0000000000005e03	jmp	0x5e61
0000000000005e05	testl	%r14d, %r14d
0000000000005e08	jne	0x5e40
0000000000005e0a	movl	-0x6c(%rbp), %eax
0000000000005e0d	cmpl	$0x47, %eax
0000000000005e10	je	0x5e4a
0000000000005e12	cmpl	$0xe85, %eax
0000000000005e17	jne	0x5e52
0000000000005e19	movl	$0xfffffed4, %r14d
0000000000005e1f	cmpl	$0x0, -0x80(%rbp)
0000000000005e23	js	0x5e58
0000000000005e25	cmpl	$0x24, -0x7c(%rbp)
0000000000005e29	jne	0x5e58
0000000000005e2b	movl	-0x78(%rbp), %eax
0000000000005e2e	testl	%eax, %eax
0000000000005e30	jne	0x5e58
0000000000005e32	movl	-0x60(%rbp), %r14d
0000000000005e36	testl	%r14d, %r14d
0000000000005e39	jne	0x5e58
0000000000005e3b	xorl	%r14d, %r14d
0000000000005e3e	jmp	0x5e61
0000000000005e40	movl	-0x74(%rbp), %edi
0000000000005e43	callq	_mig_dealloc_reply_port
0000000000005e48	jmp	0x5e61
0000000000005e4a	movl	$0xfffffecc, %r14d
0000000000005e50	jmp	0x5e58
0000000000005e52	movl	$0xfffffed3, %r14d
0000000000005e58	leaq	-0x80(%rbp), %rdi
0000000000005e5c	callq	_mach_msg_destroy
0000000000005e61	movl	%r14d, %eax
0000000000005e64	addq	$0x78, %rsp
0000000000005e68	popq	%rbx
0000000000005e69	popq	%r14
0000000000005e6b	popq	%r15
0000000000005e6d	popq	%rbp
0000000000005e6e	retq
0000000000005e6f	nop
___msync:
_msync:
0000000000005e70	movl	$0x2000041, %eax
0000000000005e75	movq	%rcx, %r10
0000000000005e78	syscall
0000000000005e7a	jae	0x5e84
0000000000005e7c	movq	%rax, %rdi
0000000000005e7f	jmp	_cerror
0000000000005e84	retq
0000000000005e85	nop
0000000000005e86	nop
0000000000005e87	nop
___pipe:
_pipe:
0000000000005e88	movl	$0x200002a, %eax
0000000000005e8d	movq	%rcx, %r10
0000000000005e90	syscall
0000000000005e92	jae	0x5e9c
0000000000005e94	movq	%rax, %rdi
0000000000005e97	jmp	_cerror_nocancel
0000000000005e9c	movl	%eax, (%rdi)
0000000000005e9e	movl	%edx, 0x4(%rdi)
0000000000005ea1	xorl	%eax, %eax
0000000000005ea3	retq
_fileport_makeport:
0000000000005ea4	movl	$0x20001ae, %eax
0000000000005ea9	movq	%rcx, %r10
0000000000005eac	syscall
0000000000005eae	jae	0x5eb8
0000000000005eb0	movq	%rax, %rdi
0000000000005eb3	jmp	_cerror_nocancel
0000000000005eb8	retq
0000000000005eb9	nop
0000000000005eba	nop
0000000000005ebb	nop
___kqueue_workloop_ctl:
0000000000005ebc	movl	$0x2000212, %eax
0000000000005ec1	movq	%rcx, %r10
0000000000005ec4	syscall
0000000000005ec6	jae	0x5ed0
0000000000005ec8	movq	%rax, %rdi
0000000000005ecb	jmp	_cerror_nocancel
0000000000005ed0	retq
0000000000005ed1	nop
0000000000005ed2	nop
0000000000005ed3	nop
___sigaction:
0000000000005ed4	movl	$0x200002e, %eax
0000000000005ed9	movq	%rcx, %r10
0000000000005edc	syscall
0000000000005ede	jae	0x5ee8
0000000000005ee0	movq	%rax, %rdi
0000000000005ee3	jmp	_cerror_nocancel
0000000000005ee8	retq
0000000000005ee9	nop
0000000000005eea	nop
0000000000005eeb	nop
_getppid:
0000000000005eec	movl	$0x2000027, %eax
0000000000005ef1	movq	%rcx, %r10
0000000000005ef4	syscall
0000000000005ef6	jae	0x5f00
0000000000005ef8	movq	%rax, %rdi
0000000000005efb	jmp	_cerror_nocancel
0000000000005f00	retq
_thread_set_exception_ports:
0000000000005f01	pushq	%rbp
0000000000005f02	movq	%rsp, %rbp
0000000000005f05	pushq	%rbx
0000000000005f06	subq	$0x48, %rsp
0000000000005f0a	leaq	-0x48(%rbp), %rbx
0000000000005f0e	movl	$0x1, 0x18(%rbx)
0000000000005f15	movl	%edx, 0x1c(%rbx)
0000000000005f18	movl	$0x130000, 0x24(%rbx)
0000000000005f1f	leaq	_NDR_record(%rip), %rax
0000000000005f26	movq	(%rax), %rax
0000000000005f29	movq	%rax, 0x28(%rbx)
0000000000005f2d	movl	%esi, 0x30(%rbx)
0000000000005f30	movl	%ecx, 0x34(%rbx)
0000000000005f33	movl	%r8d, 0x38(%rbx)
0000000000005f37	movl	$0x80001513, (%rbx)
0000000000005f3d	movl	%edi, 0x8(%rbx)
0000000000005f40	callq	_mig_get_reply_port
0000000000005f45	movl	%eax, 0xc(%rbx)
0000000000005f48	movabsq	$0xe1d00000000, %rcx
0000000000005f52	movq	%rcx, 0x10(%rbx)
0000000000005f56	movl	$0x0, (%rsp)
0000000000005f5d	movq	%rbx, %rdi
0000000000005f60	movl	$0x3, %esi
0000000000005f65	movl	$0x3c, %edx
0000000000005f6a	movl	$0x2c, %ecx
0000000000005f6f	movl	%eax, %r8d
0000000000005f72	xorl	%r9d, %r9d
0000000000005f75	callq	_mach_msg
0000000000005f7a	movl	%eax, %ebx
0000000000005f7c	leal	-0x10000002(%rbx), %eax
0000000000005f82	cmpl	$0xe, %eax
0000000000005f85	ja	0x5f9b
0000000000005f87	movl	$0x4003, %ecx
0000000000005f8c	btl	%eax, %ecx
0000000000005f8f	jae	0x5f9b
0000000000005f91	movl	-0x3c(%rbp), %edi
0000000000005f94	callq	_mig_put_reply_port
0000000000005f99	jmp	0x5ff0
0000000000005f9b	testl	%ebx, %ebx
0000000000005f9d	jne	0x5fd1
0000000000005f9f	movl	-0x34(%rbp), %eax
0000000000005fa2	cmpl	$0x47, %eax
0000000000005fa5	je	0x5fdb
0000000000005fa7	cmpl	$0xe81, %eax
0000000000005fac	jne	0x5fe2
0000000000005fae	movl	$0xfffffed4, %ebx
0000000000005fb3	cmpl	$0x0, -0x48(%rbp)
0000000000005fb7	js	0x5fe7
0000000000005fb9	cmpl	$0x24, -0x44(%rbp)
0000000000005fbd	jne	0x5fe7
0000000000005fbf	movl	-0x40(%rbp), %eax
0000000000005fc2	testl	%eax, %eax
0000000000005fc4	jne	0x5fe7
0000000000005fc6	movl	-0x28(%rbp), %ebx
0000000000005fc9	testl	%ebx, %ebx
0000000000005fcb	jne	0x5fe7
0000000000005fcd	xorl	%ebx, %ebx
0000000000005fcf	jmp	0x5ff0
0000000000005fd1	movl	-0x3c(%rbp), %edi
0000000000005fd4	callq	_mig_dealloc_reply_port
0000000000005fd9	jmp	0x5ff0
0000000000005fdb	movl	$0xfffffecc, %ebx
0000000000005fe0	jmp	0x5fe7
0000000000005fe2	movl	$0xfffffed3, %ebx
0000000000005fe7	leaq	-0x48(%rbp), %rdi
0000000000005feb	callq	_mach_msg_destroy
0000000000005ff0	movl	%ebx, %eax
0000000000005ff2	addq	$0x48, %rsp
0000000000005ff6	popq	%rbx
0000000000005ff7	popq	%rbp
0000000000005ff8	retq
_mach_error_string:
0000000000005ff9	pushq	%rbp
0000000000005ffa	movq	%rsp, %rbp
0000000000005ffd	subq	$0x10, %rsp
0000000000006001	leaq	-0x4(%rbp), %rsi
0000000000006005	callq	_mach_error_string_int
000000000000600a	addq	$0x10, %rsp
000000000000600e	popq	%rbp
000000000000600f	retq
_mach_error_string_int:
0000000000006010	pushq	%rbp
0000000000006011	movq	%rsp, %rbp
0000000000006014	pushq	%r15
0000000000006016	pushq	%r14
0000000000006018	pushq	%r13
000000000000601a	pushq	%r12
000000000000601c	pushq	%rbx
000000000000601d	pushq	%rax
000000000000601e	movq	%rsi, %r14
0000000000006021	leaq	-0x2c(%rbp), %rbx
0000000000006025	movl	%edi, (%rbx)
0000000000006027	movq	%rbx, %rdi
000000000000602a	callq	_do_compat
000000000000602f	movl	(%rbx), %r13d
0000000000006032	movq	%r13, %rcx
0000000000006035	shrq	$0x1a, %rcx
0000000000006039	movl	%r13d, %eax
000000000000603c	shrl	$0xe, %eax
000000000000603f	andl	$0xfff, %eax
0000000000006044	movl	$0x1, (%r14)
000000000000604b	leaq	(%rcx,%rcx,4), %rbx
000000000000604f	leaq	__mach_errors(%rip), %r15
0000000000006056	movq	0x18(%r15,%rbx,8), %rsi
000000000000605b	testq	%rsi, %rsi
000000000000605e	je	0x606c
0000000000006060	movl	0x20(%r15,%rbx,8), %edx
0000000000006065	movl	%eax, %edi
0000000000006067	callq	_err_sparse_mapit
000000000000606c	cmpl	(%r15,%rbx,8), %eax
0000000000006070	jge	0x60bc
0000000000006072	andl	$0x3fff, %r13d
0000000000006079	movq	0x10(%r15,%rbx,8), %r15
000000000000607e	cltq
0000000000006080	leaq	(%rax,%rax,4), %r12
0000000000006084	movq	0x18(%r15,%r12,8), %rsi
0000000000006089	testq	%rsi, %rsi
000000000000608c	je	0x609e
000000000000608e	movl	0x20(%r15,%r12,8), %edx
0000000000006093	movl	%r13d, %edi
0000000000006096	callq	_err_sparse_mapit
000000000000609b	movl	%eax, %r13d
000000000000609e	cmpl	0x8(%r15,%r12,8), %r13d
00000000000060a3	jge	0x60c6
00000000000060a5	movl	_mach_error_full_diag(%rip), %eax
00000000000060ab	movl	%eax, (%r14)
00000000000060ae	movslq	%r13d, %rax
00000000000060b1	shlq	$0x3, %rax
00000000000060b5	addq	0x10(%r15,%r12,8), %rax
00000000000060ba	jmp	0x60c1
00000000000060bc	leaq	0x8(%r15,%rbx,8), %rax
00000000000060c1	movq	(%rax), %rax
00000000000060c4	jmp	0x60cd
00000000000060c6	leaq	0x1d87d(%rip), %rax ## literal pool for: "unknown error code"
00000000000060cd	addq	$0x8, %rsp
00000000000060d1	popq	%rbx
00000000000060d2	popq	%r12
00000000000060d4	popq	%r13
00000000000060d6	popq	%r14
00000000000060d8	popq	%r15
00000000000060da	popq	%rbp
00000000000060db	retq
_do_compat:
00000000000060dc	movl	(%rdi), %eax
00000000000060de	leal	0xc7(%rax), %ecx
00000000000060e4	cmpl	$0x63, %ecx
00000000000060e7	ja	0x60f8
00000000000060e9	movl	$0xffffff9c, %ecx
00000000000060ee	subl	%eax, %ecx
00000000000060f0	orl	$0xc000000, %ecx
00000000000060f6	jmp	0x6168
00000000000060f8	leal	0x12b(%rax), %ecx
00000000000060fe	cmpl	$0x63, %ecx
0000000000006101	ja	0x6112
0000000000006103	movl	$0xffffff38, %ecx
0000000000006108	subl	%eax, %ecx
000000000000610a	orl	$0xc004000, %ecx
0000000000006110	jmp	0x6168
0000000000006112	leal	0x18f(%rax), %ecx
0000000000006118	cmpl	$0x63, %ecx
000000000000611b	ja	0x612c
000000000000611d	movl	$0xfffffed4, %ecx
0000000000006122	subl	%eax, %ecx
0000000000006124	orl	$0x10008000, %ecx
000000000000612a	jmp	0x6168
000000000000612c	leal	-0x3e8(%rax), %ecx
0000000000006132	cmpl	$0x63, %ecx
0000000000006135	ja	0x613f
0000000000006137	orl	$0x8000000, %ecx
000000000000613d	jmp	0x6168
000000000000613f	leal	-0x640(%rax), %ecx
0000000000006145	cmpl	$0x63, %ecx
0000000000006148	ja	0x6152
000000000000614a	orl	$0x8004000, %ecx
0000000000006150	jmp	0x6168
0000000000006152	leal	-0x6bd0(%rax), %ecx
0000000000006158	movl	%ecx, %edx
000000000000615a	orl	$0x8008000, %edx
0000000000006160	cmpl	$0x64, %ecx
0000000000006163	cmovbl	%edx, %eax
0000000000006166	movl	%eax, %ecx
0000000000006168	movl	%ecx, (%rdi)
000000000000616a	retq
_posix_spawn_file_actions_init:
000000000000616b	pushq	%rbp
000000000000616c	movq	%rsp, %rbp
000000000000616f	pushq	%rbx
0000000000006170	pushq	%rax
0000000000006171	movq	%rdi, %rbx
0000000000006174	movl	$0x828, %edi
0000000000006179	callq	_malloc
000000000000617e	movq	%rax, (%rbx)
0000000000006181	testq	%rax, %rax
0000000000006184	je	0x6191
0000000000006186	movq	$0x2, (%rax)
000000000000618d	xorl	%eax, %eax
000000000000618f	jmp	0x6196
0000000000006191	movl	$0xc, %eax
0000000000006196	addq	$0x8, %rsp
000000000000619a	popq	%rbx
000000000000619b	popq	%rbp
000000000000619c	retq
_malloc:
000000000000619d	leaq	__libkernel_functions(%rip), %rax
00000000000061a4	movq	(%rax), %rax
00000000000061a7	jmpq	*0x10(%rax)
_posix_spawn_file_actions_adddup2:
00000000000061aa	pushq	%rbp
00000000000061ab	movq	%rsp, %rbp
00000000000061ae	pushq	%r15
00000000000061b0	pushq	%r14
00000000000061b2	pushq	%rbx
00000000000061b3	pushq	%rax
00000000000061b4	movl	$0x16, %eax
00000000000061b9	testq	%rdi, %rdi
00000000000061bc	je	0x6227
00000000000061be	movq	%rdi, %rbx
00000000000061c1	movq	(%rdi), %rcx
00000000000061c4	testq	%rcx, %rcx
00000000000061c7	je	0x6227
00000000000061c9	movl	%esi, %r15d
00000000000061cc	movl	$0x9, %eax
00000000000061d1	cmpl	$0x27ff, %esi
00000000000061d7	ja	0x6227
00000000000061d9	movl	%edx, %r14d
00000000000061dc	cmpl	$0x27ff, %edx
00000000000061e2	ja	0x6227
00000000000061e4	movl	0x4(%rcx), %eax
00000000000061e7	cmpl	(%rcx), %eax
00000000000061e9	jne	0x6204
00000000000061eb	movq	%rbx, %rdi
00000000000061ee	callq	__posix_spawn_file_actions_grow
00000000000061f3	movl	%eax, %ecx
00000000000061f5	movl	$0xc, %eax
00000000000061fa	testl	%ecx, %ecx
00000000000061fc	jne	0x6227
00000000000061fe	movq	(%rbx), %rcx
0000000000006201	movl	0x4(%rcx), %eax
0000000000006204	leal	0x1(%rax), %edx
0000000000006207	movl	%edx, 0x4(%rcx)
000000000000620a	cltq
000000000000620c	imulq	$0x410, %rax, %rax
0000000000006213	movl	$0x2, 0x8(%rcx,%rax)
000000000000621b	movl	%r15d, 0xc(%rcx,%rax)
0000000000006220	movl	%r14d, 0x10(%rcx,%rax)
0000000000006225	xorl	%eax, %eax
0000000000006227	addq	$0x8, %rsp
000000000000622b	popq	%rbx
000000000000622c	popq	%r14
000000000000622e	popq	%r15
0000000000006230	popq	%rbp
0000000000006231	retq
__posix_spawn_file_actions_grow:
0000000000006232	pushq	%rbp
0000000000006233	movq	%rsp, %rbp
0000000000006236	pushq	%r15
0000000000006238	pushq	%r14
000000000000623a	pushq	%rbx
000000000000623b	pushq	%rax
000000000000623c	movq	%rdi, %r15
000000000000623f	movq	(%rdi), %rdi
0000000000006242	movl	(%rdi), %ebx
0000000000006244	addl	%ebx, %ebx
0000000000006246	movl	$0xc, %r14d
000000000000624c	jo	0x6280
000000000000624e	movslq	%ebx, %rax
0000000000006251	movl	$0x410, %ecx
0000000000006256	mulq	%rcx
0000000000006259	seto	%dl
000000000000625c	addq	$0x8, %rax
0000000000006260	setb	%cl
0000000000006263	testb	%dl, %dl
0000000000006265	jne	0x6280
0000000000006267	testb	%cl, %cl
0000000000006269	jne	0x6280
000000000000626b	movq	%rax, %rsi
000000000000626e	callq	_realloc
0000000000006273	testq	%rax, %rax
0000000000006276	je	0x6280
0000000000006278	movl	%ebx, (%rax)
000000000000627a	movq	%rax, (%r15)
000000000000627d	xorl	%r14d, %r14d
0000000000006280	movl	%r14d, %eax
0000000000006283	addq	$0x8, %rsp
0000000000006287	popq	%rbx
0000000000006288	popq	%r14
000000000000628a	popq	%r15
000000000000628c	popq	%rbp
000000000000628d	retq
_realloc:
000000000000628e	leaq	__libkernel_functions(%rip), %rax
0000000000006295	movq	(%rax), %rax
0000000000006298	movq	0x20(%rax), %rax
000000000000629c	jmpq	*%rax
_posix_spawnattr_init:
000000000000629e	pushq	%rbp
000000000000629f	movq	%rsp, %rbp
00000000000062a2	pushq	%rbx
00000000000062a3	pushq	%rax
00000000000062a4	movq	%rdi, %rbx
00000000000062a7	movl	$0x98, %edi
00000000000062ac	callq	_malloc
00000000000062b1	movq	%rax, (%rbx)
00000000000062b4	testq	%rax, %rax
00000000000062b7	je	0x6321
00000000000062b9	movq	%rax, %rcx
00000000000062bc	xorl	%eax, %eax
00000000000062be	movq	%rax, 0x70(%rcx)
00000000000062c2	movl	%eax, 0x40(%rcx)
00000000000062c5	movq	%rax, 0x20(%rcx)
00000000000062c9	movq	%rax, 0x18(%rcx)
00000000000062cd	movq	%rax, 0x10(%rcx)
00000000000062d1	movq	%rax, 0x8(%rcx)
00000000000062d5	movq	%rax, (%rcx)
00000000000062d8	movq	$-0x1, 0x44(%rcx)
00000000000062e0	movl	$0xffffffff, 0x4c(%rcx)
00000000000062e7	movl	%eax, 0x60(%rcx)
00000000000062ea	movq	%rax, 0x30(%rcx)
00000000000062ee	movq	%rax, 0x28(%rcx)
00000000000062f2	movq	%rax, 0x90(%rcx)
00000000000062f9	movq	%rax, 0x88(%rcx)
0000000000006300	movq	%rax, 0x80(%rcx)
0000000000006307	movq	%rax, 0x78(%rcx)
000000000000630b	movq	$0x1, 0x38(%rcx)
0000000000006313	movq	%rax, 0x68(%rcx)
0000000000006317	movq	%rax, 0x58(%rcx)
000000000000631b	movq	%rax, 0x50(%rcx)
000000000000631f	jmp	0x6326
0000000000006321	movl	$0xc, %eax
0000000000006326	addq	$0x8, %rsp
000000000000632a	popq	%rbx
000000000000632b	popq	%rbp
000000000000632c	retq
_posix_spawnattr_setsigmask:
000000000000632d	movl	$0x16, %eax
0000000000006332	testq	%rdi, %rdi
0000000000006335	je	0x6346
0000000000006337	movq	(%rdi), %rcx
000000000000633a	testq	%rcx, %rcx
000000000000633d	je	0x6346
000000000000633f	movl	(%rsi), %eax
0000000000006341	movl	%eax, 0x8(%rcx)
0000000000006344	xorl	%eax, %eax
0000000000006346	retq
_posix_spawnattr_setsigdefault:
0000000000006347	movl	$0x16, %eax
000000000000634c	testq	%rdi, %rdi
000000000000634f	je	0x6360
0000000000006351	movq	(%rdi), %rcx
0000000000006354	testq	%rcx, %rcx
0000000000006357	je	0x6360
0000000000006359	movl	(%rsi), %eax
000000000000635b	movl	%eax, 0x4(%rcx)
000000000000635e	xorl	%eax, %eax
0000000000006360	retq
_posix_spawnattr_setflags:
0000000000006361	movl	$0x16, %eax
0000000000006366	testq	%rdi, %rdi
0000000000006369	je	0x6378
000000000000636b	movq	(%rdi), %rcx
000000000000636e	testq	%rcx, %rcx
0000000000006371	je	0x6378
0000000000006373	movw	%si, (%rcx)
0000000000006376	xorl	%eax, %eax
0000000000006378	retq
_posix_spawnattr_getmacpolicyinfo_np:
0000000000006379	pushq	%rbp
000000000000637a	movq	%rsp, %rbp
000000000000637d	pushq	%r14
000000000000637f	pushq	%rbx
0000000000006380	movl	$0x16, %eax
0000000000006385	testq	%rdi, %rdi
0000000000006388	je	0x63d5
000000000000638a	movq	%rdx, %rbx
000000000000638d	testq	%rdx, %rdx
0000000000006390	je	0x63d5
0000000000006392	testq	%rsi, %rsi
0000000000006395	je	0x63d5
0000000000006397	movq	%rcx, %r14
000000000000639a	movq	(%rdi), %rcx
000000000000639d	testq	%rcx, %rcx
00000000000063a0	je	0x63d5
00000000000063a2	movq	0x78(%rcx), %rdi
00000000000063a6	callq	_posix_spawnattr_macpolicyinfo_lookup
00000000000063ab	testq	%rax, %rax
00000000000063ae	je	0x63d0
00000000000063b0	movq	%rax, %rcx
00000000000063b3	movq	0x80(%rax), %rax
00000000000063ba	movq	%rax, (%rbx)
00000000000063bd	xorl	%eax, %eax
00000000000063bf	testq	%r14, %r14
00000000000063c2	je	0x63d5
00000000000063c4	movq	0x88(%rcx), %rcx
00000000000063cb	movq	%rcx, (%r14)
00000000000063ce	jmp	0x63d5
00000000000063d0	movl	$0x3, %eax
00000000000063d5	popq	%rbx
00000000000063d6	popq	%r14
00000000000063d8	popq	%rbp
00000000000063d9	retq
_posix_spawnattr_macpolicyinfo_lookup:
00000000000063da	pushq	%rbp
00000000000063db	movq	%rsp, %rbp
00000000000063de	pushq	%r15
00000000000063e0	pushq	%r14
00000000000063e2	pushq	%r13
00000000000063e4	pushq	%r12
00000000000063e6	pushq	%rbx
00000000000063e7	pushq	%rax
00000000000063e8	testq	%rdi, %rdi
00000000000063eb	je	0x6425
00000000000063ed	movq	%rdi, %r13
00000000000063f0	movslq	0x4(%rdi), %r12
00000000000063f4	testq	%r12, %r12
00000000000063f7	jle	0x6425
00000000000063f9	movq	%rsi, %r15
00000000000063fc	addq	$0x8, %r13
0000000000006400	xorl	%r14d, %r14d
0000000000006403	xorl	%ebx, %ebx
0000000000006405	movq	%r13, %rdi
0000000000006408	movq	%r15, %rsi
000000000000640b	callq	_strcmp
0000000000006410	testl	%eax, %eax
0000000000006412	je	0x642a
0000000000006414	incq	%rbx
0000000000006417	addq	$0x90, %r13
000000000000641e	cmpq	%r12, %rbx
0000000000006421	jl	0x6405
0000000000006423	jmp	0x642d
0000000000006425	xorl	%r14d, %r14d
0000000000006428	jmp	0x642d
000000000000642a	movq	%r13, %r14
000000000000642d	movq	%r14, %rax
0000000000006430	addq	$0x8, %rsp
0000000000006434	popq	%rbx
0000000000006435	popq	%r12
0000000000006437	popq	%r13
0000000000006439	popq	%r14
000000000000643b	popq	%r15
000000000000643d	popq	%rbp
000000000000643e	retq
_posix_spawnattr_setmacpolicyinfo_np:
000000000000643f	pushq	%rbp
0000000000006440	movq	%rsp, %rbp
0000000000006443	pushq	%r15
0000000000006445	pushq	%r14
0000000000006447	pushq	%r13
0000000000006449	pushq	%r12
000000000000644b	pushq	%rbx
000000000000644c	subq	$0x18, %rsp
0000000000006450	movl	$0x16, %ebx
0000000000006455	testq	%rdi, %rdi
0000000000006458	je	0x655d
000000000000645e	movq	%rsi, %r13
0000000000006461	testq	%rsi, %rsi
0000000000006464	je	0x655d
000000000000646a	movq	(%rdi), %r14
000000000000646d	testq	%r14, %r14
0000000000006470	je	0x655d
0000000000006476	movq	%rdx, %r15
0000000000006479	movq	%rcx, -0x38(%rbp)
000000000000647d	movq	0x78(%r14), %r12
0000000000006481	movq	%r12, %rdi
0000000000006484	movq	%r13, %rsi
0000000000006487	callq	_posix_spawnattr_macpolicyinfo_lookup
000000000000648c	testq	%rax, %rax
000000000000648f	je	0x64a8
0000000000006491	movq	%r15, 0x80(%rax)
0000000000006498	movq	-0x38(%rbp), %rcx
000000000000649c	movq	%rcx, 0x88(%rax)
00000000000064a3	jmp	0x655b
00000000000064a8	testq	%r12, %r12
00000000000064ab	je	0x6505
00000000000064ad	movl	0x4(%r12), %esi
00000000000064b2	cmpl	(%r12), %esi
00000000000064b6	jne	0x6522
00000000000064b8	addl	%esi, %esi
00000000000064ba	movl	$0xc, %ebx
00000000000064bf	jo	0x655d
00000000000064c5	movslq	%esi, %rax
00000000000064c8	movl	$0x90, %ecx
00000000000064cd	mulq	%rcx
00000000000064d0	seto	%dl
00000000000064d3	addq	$0x8, %rax
00000000000064d7	setb	%cl
00000000000064da	testb	%dl, %dl
00000000000064dc	jne	0x655d
00000000000064de	testb	%cl, %cl
00000000000064e0	jne	0x655d
00000000000064e2	movl	%esi, -0x2c(%rbp)
00000000000064e5	movq	%r12, %rdi
00000000000064e8	movq	%rax, %rsi
00000000000064eb	callq	_reallocf
00000000000064f0	movq	%rax, 0x78(%r14)
00000000000064f4	testq	%rax, %rax
00000000000064f7	je	0x655d
00000000000064f9	movq	%rax, %r12
00000000000064fc	movl	-0x2c(%rbp), %eax
00000000000064ff	movl	%eax, (%r12)
0000000000006503	jmp	0x6522
0000000000006505	movl	$0x128, %edi
000000000000650a	callq	_malloc
000000000000650f	movq	%rax, 0x78(%r14)
0000000000006513	testq	%rax, %rax
0000000000006516	je	0x656e
0000000000006518	movq	%rax, %r12
000000000000651b	movq	$0x2, (%rax)
0000000000006522	movslq	0x4(%r12), %rax
0000000000006527	leaq	(%rax,%rax,8), %rax
000000000000652b	shlq	$0x4, %rax
000000000000652f	leaq	0x8(%r12,%rax), %rbx
0000000000006534	movl	$0x80, %edx
0000000000006539	movq	%rbx, %rdi
000000000000653c	movq	%r13, %rsi
000000000000653f	callq	_strlcpy
0000000000006544	movq	%r15, 0x80(%rbx)
000000000000654b	movq	-0x38(%rbp), %rax
000000000000654f	movq	%rax, 0x88(%rbx)
0000000000006556	incl	0x4(%r12)
000000000000655b	xorl	%ebx, %ebx
000000000000655d	movl	%ebx, %eax
000000000000655f	addq	$0x18, %rsp
0000000000006563	popq	%rbx
0000000000006564	popq	%r12
0000000000006566	popq	%r13
0000000000006568	popq	%r14
000000000000656a	popq	%r15
000000000000656c	popq	%rbp
000000000000656d	retq
000000000000656e	movl	$0xc, %ebx
0000000000006573	jmp	0x655d
_strlcpy:
0000000000006575	movq	__libkernel_string_functions(%rip), %rax
000000000000657c	movq	0x58(%rax), %rax
0000000000006580	jmpq	*%rax
0000000000006582	nop
0000000000006583	nop
___pthread_fchdir:
0000000000006584	movl	$0x200015d, %eax
0000000000006589	movq	%rcx, %r10
000000000000658c	syscall
000000000000658e	jae	0x6598
0000000000006590	movq	%rax, %rdi
0000000000006593	jmp	_cerror_nocancel
0000000000006598	retq
0000000000006599	nop
000000000000659a	nop
000000000000659b	nop
___pthread_chdir:
000000000000659c	movl	$0x200015c, %eax
00000000000065a1	movq	%rcx, %r10
00000000000065a4	syscall
00000000000065a6	jae	0x65b0
00000000000065a8	movq	%rax, %rdi
00000000000065ab	jmp	_cerror_nocancel
00000000000065b0	retq
_posix_spawn:
00000000000065b1	pushq	%rbp
00000000000065b2	movq	%rsp, %rbp
00000000000065b5	pushq	%r15
00000000000065b7	pushq	%r14
00000000000065b9	pushq	%r13
00000000000065bb	pushq	%r12
00000000000065bd	pushq	%rbx
00000000000065be	subq	$0x88, %rsp
00000000000065c5	movq	%r9, -0x38(%rbp)
00000000000065c9	movq	%r8, -0x30(%rbp)
00000000000065cd	movq	%rcx, %r14
00000000000065d0	movq	%rdx, %rbx
00000000000065d3	movq	%rsi, %r12
00000000000065d6	movq	%rdi, %r13
00000000000065d9	callq	___error
00000000000065de	movl	(%rax), %r15d
00000000000065e1	testq	%rbx, %rbx
00000000000065e4	je	0x6630
00000000000065e6	movq	(%rbx), %rcx
00000000000065e9	testq	%rcx, %rcx
00000000000065ec	je	0x6630
00000000000065ee	testq	%r14, %r14
00000000000065f1	jne	0x65fe
00000000000065f3	movl	0x4(%rcx), %eax
00000000000065f6	testl	%eax, %eax
00000000000065f8	jle	0x679f
00000000000065fe	xorps	%xmm0, %xmm0
0000000000006601	movaps	%xmm0, -0x50(%rbp)
0000000000006605	movaps	%xmm0, -0x60(%rbp)
0000000000006609	movaps	%xmm0, -0x70(%rbp)
000000000000660d	movaps	%xmm0, -0x80(%rbp)
0000000000006611	movaps	%xmm0, -0x90(%rbp)
0000000000006618	movaps	%xmm0, -0xa0(%rbp)
000000000000661f	movaps	%xmm0, -0xb0(%rbp)
0000000000006626	testq	%r14, %r14
0000000000006629	jne	0x6661
000000000000662b	jmp	0x675f
0000000000006630	testq	%r14, %r14
0000000000006633	je	0x679f
0000000000006639	xorps	%xmm0, %xmm0
000000000000663c	movaps	%xmm0, -0x50(%rbp)
0000000000006640	movaps	%xmm0, -0x60(%rbp)
0000000000006644	movaps	%xmm0, -0x70(%rbp)
0000000000006648	movaps	%xmm0, -0x80(%rbp)
000000000000664c	movaps	%xmm0, -0x90(%rbp)
0000000000006653	movaps	%xmm0, -0xa0(%rbp)
000000000000665a	movaps	%xmm0, -0xb0(%rbp)
0000000000006661	movq	(%r14), %rsi
0000000000006664	testq	%rsi, %rsi
0000000000006667	je	0x6752
000000000000666d	movq	$0x98, -0xb0(%rbp)
0000000000006678	movq	%rsi, -0xa8(%rbp)
000000000000667f	movq	0x70(%rsi), %rdi
0000000000006683	testq	%rdi, %rdi
0000000000006686	je	0x66c7
0000000000006688	movslq	0x4(%rdi), %rcx
000000000000668c	movl	$0x18, %edx
0000000000006691	movq	%rcx, %rax
0000000000006694	mulq	%rdx
0000000000006697	seto	%dl
000000000000669a	xorl	%r8d, %r8d
000000000000669d	addq	$0x8, %rax
00000000000066a1	cmovbq	%r8, %rax
00000000000066a5	testb	%dl, %dl
00000000000066a7	cmovneq	%r8, %rax
00000000000066ab	testq	%rcx, %rcx
00000000000066ae	je	0x66b9
00000000000066b0	testq	%rax, %rax
00000000000066b3	je	0x67b8
00000000000066b9	movq	%rdi, -0x88(%rbp)
00000000000066c0	movq	%rax, -0x90(%rbp)
00000000000066c7	movq	0x78(%rsi), %rdi
00000000000066cb	testq	%rdi, %rdi
00000000000066ce	je	0x670a
00000000000066d0	movslq	0x4(%rdi), %rcx
00000000000066d4	movl	$0x90, %edx
00000000000066d9	movq	%rcx, %rax
00000000000066dc	mulq	%rdx
00000000000066df	seto	%r8b
00000000000066e3	addq	$0x8, %rax
00000000000066e7	setb	%dl
00000000000066ea	orb	%r8b, %dl
00000000000066ed	testq	%rcx, %rcx
00000000000066f0	je	0x66fa
00000000000066f2	testb	%dl, %dl
00000000000066f4	jne	0x67b8
00000000000066fa	xorl	%ecx, %ecx
00000000000066fc	testb	%dl, %dl
00000000000066fe	cmovneq	%rcx, %rax
0000000000006702	movq	%rdi, -0x78(%rbp)
0000000000006706	movq	%rax, -0x80(%rbp)
000000000000670a	movq	0x80(%rsi), %rax
0000000000006711	testq	%rax, %rax
0000000000006714	je	0x6722
0000000000006716	movq	$0x30, -0x70(%rbp)
000000000000671e	movq	%rax, -0x68(%rbp)
0000000000006722	movq	0x88(%rsi), %rax
0000000000006729	testq	%rax, %rax
000000000000672c	je	0x673a
000000000000672e	movq	$0x58, -0x60(%rbp)
0000000000006736	movq	%rax, -0x58(%rbp)
000000000000673a	movq	0x90(%rsi), %rax
0000000000006741	testq	%rax, %rax
0000000000006744	je	0x6752
0000000000006746	movq	$0x154, -0x50(%rbp)
000000000000674e	movq	%rax, -0x48(%rbp)
0000000000006752	testq	%rbx, %rbx
0000000000006755	je	0x6790
0000000000006757	movq	(%rbx), %rcx
000000000000675a	testq	%rcx, %rcx
000000000000675d	je	0x6790
000000000000675f	movslq	0x4(%rcx), %rax
0000000000006763	testq	%rax, %rax
0000000000006766	jle	0x6790
0000000000006768	movl	$0x410, %edx
000000000000676d	mulq	%rdx
0000000000006770	seto	%bl
0000000000006773	addq	$0x8, %rax
0000000000006777	setb	%dl
000000000000677a	testb	%bl, %bl
000000000000677c	jne	0x67b8
000000000000677e	testb	%dl, %dl
0000000000006780	jne	0x67b8
0000000000006782	movq	%rax, -0xa0(%rbp)
0000000000006789	movq	%rcx, -0x98(%rbp)
0000000000006790	leaq	-0xb0(%rbp), %rdx
0000000000006797	movq	%r13, %rdi
000000000000679a	movq	%r12, %rsi
000000000000679d	jmp	0x67a7
000000000000679f	movq	%r13, %rdi
00000000000067a2	movq	%r12, %rsi
00000000000067a5	xorl	%edx, %edx
00000000000067a7	movq	-0x30(%rbp), %rcx
00000000000067ab	movq	-0x38(%rbp), %r8
00000000000067af	callq	___posix_spawn
00000000000067b4	movl	%eax, %ebx
00000000000067b6	jmp	0x67c8
00000000000067b8	callq	___error
00000000000067bd	movl	$0x16, (%rax)
00000000000067c3	movl	$0xffffffff, %ebx
00000000000067c8	testl	%ebx, %ebx
00000000000067ca	jns	0x67d3
00000000000067cc	callq	___error
00000000000067d1	movl	(%rax), %ebx
00000000000067d3	callq	___error
00000000000067d8	movl	%r15d, (%rax)
00000000000067db	movl	%ebx, %eax
00000000000067dd	addq	$0x88, %rsp
00000000000067e4	popq	%rbx
00000000000067e5	popq	%r12
00000000000067e7	popq	%r13
00000000000067e9	popq	%r14
00000000000067eb	popq	%r15
00000000000067ed	popq	%rbp
00000000000067ee	retq
00000000000067ef	nop
___posix_spawn:
00000000000067f0	movl	$0x20000f4, %eax
00000000000067f5	movq	%rcx, %r10
00000000000067f8	syscall
00000000000067fa	jae	0x6804
00000000000067fc	movq	%rax, %rdi
00000000000067ff	jmp	_cerror
0000000000006804	retq
_posix_spawnattr_destroy:
0000000000006805	pushq	%rbp
0000000000006806	movq	%rsp, %rbp
0000000000006809	pushq	%r14
000000000000680b	pushq	%rbx
000000000000680c	movl	$0x16, %eax
0000000000006811	testq	%rdi, %rdi
0000000000006814	je	0x68d9
000000000000681a	movq	%rdi, %rbx
000000000000681d	movq	(%rdi), %r14
0000000000006820	testq	%r14, %r14
0000000000006823	je	0x68d9
0000000000006829	movq	0x70(%r14), %rdi
000000000000682d	movq	%r14, %rax
0000000000006830	testq	%rdi, %rdi
0000000000006833	je	0x6846
0000000000006835	callq	_free
000000000000683a	movq	(%rbx), %rax
000000000000683d	testq	%rax, %rax
0000000000006840	je	0x68c8
0000000000006846	movq	0x80(%rax), %rdi
000000000000684d	testq	%rdi, %rdi
0000000000006850	je	0x686a
0000000000006852	movq	$0x0, 0x80(%rax)
000000000000685d	callq	_free
0000000000006862	movq	(%rbx), %rax
0000000000006865	testq	%rax, %rax
0000000000006868	je	0x68c8
000000000000686a	movq	0x88(%rax), %rdi
0000000000006871	testq	%rdi, %rdi
0000000000006874	je	0x688e
0000000000006876	movq	$0x0, 0x88(%rax)
0000000000006881	callq	_free
0000000000006886	movq	(%rbx), %rax
0000000000006889	testq	%rax, %rax
000000000000688c	je	0x68c8
000000000000688e	movq	0x90(%rax), %rdi
0000000000006895	testq	%rdi, %rdi
0000000000006898	je	0x68b2
000000000000689a	movq	$0x0, 0x90(%rax)
00000000000068a5	callq	_free
00000000000068aa	movq	(%rbx), %rax
00000000000068ad	testq	%rax, %rax
00000000000068b0	je	0x68c8
00000000000068b2	movq	0x78(%rax), %rdi
00000000000068b6	testq	%rdi, %rdi
00000000000068b9	je	0x68c8
00000000000068bb	movq	$0x0, 0x78(%rax)
00000000000068c3	callq	_free
00000000000068c8	movq	%r14, %rdi
00000000000068cb	callq	_free
00000000000068d0	movq	$0x0, (%rbx)
00000000000068d7	xorl	%eax, %eax
00000000000068d9	popq	%rbx
00000000000068da	popq	%r14
00000000000068dc	popq	%rbp
00000000000068dd	retq
_free:
00000000000068de	leaq	__libkernel_functions(%rip), %rax
00000000000068e5	movq	(%rax), %rax
00000000000068e8	jmpq	*0x18(%rax)
_posix_spawn_file_actions_destroy:
00000000000068eb	pushq	%rbp
00000000000068ec	movq	%rsp, %rbp
00000000000068ef	pushq	%rbx
00000000000068f0	pushq	%rax
00000000000068f1	movl	$0x16, %eax
00000000000068f6	testq	%rdi, %rdi
00000000000068f9	je	0x6914
00000000000068fb	movq	%rdi, %rbx
00000000000068fe	movq	(%rdi), %rdi
0000000000006901	testq	%rdi, %rdi
0000000000006904	je	0x6914
0000000000006906	callq	_free
000000000000690b	movq	$0x0, (%rbx)
0000000000006912	xorl	%eax, %eax
0000000000006914	addq	$0x8, %rsp
0000000000006918	popq	%rbx
0000000000006919	popq	%rbp
000000000000691a	retq
000000000000691b	nop
___wait4:
000000000000691c	movl	$0x2000007, %eax
0000000000006921	movq	%rcx, %r10
0000000000006924	syscall
0000000000006926	jae	0x6930
0000000000006928	movq	%rax, %rdi
000000000000692b	jmp	_cerror
0000000000006930	retq
_mach_continuous_approximate_time:
0000000000006931	pushq	%rbp
0000000000006932	movq	%rsp, %rbp
0000000000006935	pushq	%rbx
0000000000006936	pushq	%rax
0000000000006937	movabsq	$0x7fffffe000c0, %rax
0000000000006941	movq	(%rax), %rax
0000000000006944	movq	%rax, -0x10(%rbp)
0000000000006948	movq	-0x10(%rbp), %rbx
000000000000694c	callq	_mach_approximate_time
0000000000006951	addq	%rbx, %rax
0000000000006954	addq	$0x8, %rsp
0000000000006958	popq	%rbx
0000000000006959	popq	%rbp
000000000000695a	retq
000000000000695b	nop
___pthread_sigmask:
000000000000695c	movl	$0x2000149, %eax
0000000000006961	movq	%rcx, %r10
0000000000006964	syscall
0000000000006966	jae	0x6970
0000000000006968	movq	%rax, %rdi
000000000000696b	jmp	_cerror_nocancel
0000000000006970	retq
0000000000006971	nop
0000000000006972	nop
0000000000006973	nop
___semwait_signal_nocancel:
0000000000006974	movl	$0x20001a7, %eax
0000000000006979	movq	%rcx, %r10
000000000000697c	syscall
000000000000697e	jae	0x6988
0000000000006980	movq	%rax, %rdi
0000000000006983	jmp	_cerror_nocancel
0000000000006988	retq
_sigsuspend$NOCANCEL:
0000000000006989	testq	%rdi, %rdi
000000000000698c	je	0x6995
000000000000698e	movl	(%rdi), %edi
0000000000006990	jmp	___sigsuspend_nocancel
0000000000006995	xorl	%edi, %edi
0000000000006997	jmp	___sigsuspend_nocancel
___sigsuspend_nocancel:
000000000000699c	movl	$0x200019a, %eax
00000000000069a1	movq	%rcx, %r10
00000000000069a4	syscall
00000000000069a6	jae	0x69b0
00000000000069a8	movq	%rax, %rdi
00000000000069ab	jmp	_cerror_nocancel
00000000000069b0	retq
00000000000069b1	nop
00000000000069b2	nop
00000000000069b3	nop
___exit:
__exit:
00000000000069b4	movl	$0x2000001, %eax
00000000000069b9	movq	%rcx, %r10
00000000000069bc	syscall
00000000000069be	jae	0x69c8
00000000000069c0	movq	%rax, %rdi
00000000000069c3	jmp	_cerror_nocancel
00000000000069c8	retq
_thread_info:
00000000000069c9	pushq	%rbp
00000000000069ca	movq	%rsp, %rbp
00000000000069cd	pushq	%r15
00000000000069cf	pushq	%r14
00000000000069d1	pushq	%r12
00000000000069d3	pushq	%rbx
00000000000069d4	subq	$0xc0, %rsp
00000000000069db	movq	%rcx, %r15
00000000000069de	leaq	_NDR_record(%rip), %rax
00000000000069e5	movq	(%rax), %rax
00000000000069e8	leaq	-0xd0(%rbp), %rbx
00000000000069ef	movq	%rax, 0x18(%rbx)
00000000000069f3	movl	%esi, 0x20(%rbx)
00000000000069f6	movl	(%rcx), %eax
00000000000069f8	movl	$0x20, %ecx
00000000000069fd	cmpl	%ecx, %eax
00000000000069ff	cmovbl	%eax, %ecx
0000000000006a02	movq	%rdx, %r14
0000000000006a05	movl	%ecx, 0x24(%rbx)
0000000000006a08	movl	$0x1513, (%rbx)
0000000000006a0e	movl	%edi, 0x8(%rbx)
0000000000006a11	callq	_mig_get_reply_port
0000000000006a16	movl	%eax, 0xc(%rbx)
0000000000006a19	movabsq	$0xe1c00000000, %rcx
0000000000006a23	movq	%rcx, 0x10(%rbx)
0000000000006a27	movl	$0x0, (%rsp)
0000000000006a2e	movq	%rbx, %rdi
0000000000006a31	movl	$0x3, %esi
0000000000006a36	movl	$0x28, %edx
0000000000006a3b	movl	$0xb0, %ecx
0000000000006a40	movl	%eax, %r8d
0000000000006a43	xorl	%r9d, %r9d
0000000000006a46	callq	_mach_msg
0000000000006a4b	movl	%eax, %ebx
0000000000006a4d	leal	-0x10000002(%rbx), %eax
0000000000006a53	cmpl	$0xe, %eax
0000000000006a56	ja	0x6a6f
0000000000006a58	movl	$0x4003, %ecx
0000000000006a5d	btl	%eax, %ecx
0000000000006a60	jae	0x6a6f
0000000000006a62	movl	-0xc4(%rbp), %edi
0000000000006a68	callq	_mig_put_reply_port
0000000000006a6d	jmp	0x6ae3
0000000000006a6f	testl	%ebx, %ebx
0000000000006a71	jne	0x6abe
0000000000006a73	movl	-0xbc(%rbp), %eax
0000000000006a79	cmpl	$0x47, %eax
0000000000006a7c	je	0x6acb
0000000000006a7e	cmpl	$0xe80, %eax
0000000000006a83	jne	0x6ad2
0000000000006a85	cmpl	$0x0, -0xd0(%rbp)
0000000000006a8c	js	0x6ab7
0000000000006a8e	movl	-0xcc(%rbp), %eax
0000000000006a94	leal	-0x28(%rax), %ecx
0000000000006a97	cmpl	$0x81, %ecx
0000000000006a9d	jb	0x6aae
0000000000006a9f	cmpl	$0x24, %eax
0000000000006aa2	jne	0x6ab7
0000000000006aa4	movl	-0xb0(%rbp), %edx
0000000000006aaa	testl	%edx, %edx
0000000000006aac	je	0x6ab7
0000000000006aae	cmpl	$0x0, -0xc8(%rbp)
0000000000006ab5	je	0x6af5
0000000000006ab7	movl	$0xfffffed4, %ebx
0000000000006abc	jmp	0x6ad7
0000000000006abe	movl	-0xc4(%rbp), %edi
0000000000006ac4	callq	_mig_dealloc_reply_port
0000000000006ac9	jmp	0x6ae3
0000000000006acb	movl	$0xfffffecc, %ebx
0000000000006ad0	jmp	0x6ad7
0000000000006ad2	movl	$0xfffffed3, %ebx
0000000000006ad7	leaq	-0xd0(%rbp), %rdi
0000000000006ade	callq	_mach_msg_destroy
0000000000006ae3	movl	%ebx, %eax
0000000000006ae5	addq	$0xc0, %rsp
0000000000006aec	popq	%rbx
0000000000006aed	popq	%r12
0000000000006aef	popq	%r14
0000000000006af1	popq	%r15
0000000000006af3	popq	%rbp
0000000000006af4	retq
0000000000006af5	movl	-0xb0(%rbp), %ebx
0000000000006afb	testl	%ebx, %ebx
0000000000006afd	jne	0x6ad7
0000000000006aff	movl	-0xac(%rbp), %r12d
0000000000006b06	cmpl	$0x20, %r12d
0000000000006b0a	ja	0x6ab7
0000000000006b0c	shrl	$0x2, %ecx
0000000000006b0f	cmpl	%r12d, %ecx
0000000000006b12	jb	0x6ab7
0000000000006b14	leal	0x28(,%r12,4), %ecx
0000000000006b1c	movl	$0xfffffed4, %ebx
0000000000006b21	cmpl	%ecx, %eax
0000000000006b23	jne	0x6ad7
0000000000006b25	movl	(%r15), %edx
0000000000006b28	leaq	-0xa8(%rbp), %rsi
0000000000006b2f	cmpl	%edx, %r12d
0000000000006b32	jbe	0x6b49
0000000000006b34	shll	$0x2, %edx
0000000000006b37	movq	%r14, %rdi
0000000000006b3a	callq	_memcpy
0000000000006b3f	movl	%r12d, (%r15)
0000000000006b42	movl	$0xfffffecd, %ebx
0000000000006b47	jmp	0x6ae3
0000000000006b49	leal	(,%r12,4), %eax
0000000000006b51	movl	%eax, %edx
0000000000006b53	movq	%r14, %rdi
0000000000006b56	callq	_memcpy
0000000000006b5b	movl	%r12d, (%r15)
0000000000006b5e	xorl	%ebx, %ebx
0000000000006b60	jmp	0x6ae3
_proc_pidoriginatorinfo:
0000000000006b62	pushq	%rbp
0000000000006b63	movq	%rsp, %rbp
0000000000006b66	pushq	%r15
0000000000006b68	pushq	%r14
0000000000006b6a	pushq	%r12
0000000000006b6c	pushq	%rbx
0000000000006b6d	movl	%edx, %r14d
0000000000006b70	movq	%rsi, %r15
0000000000006b73	movl	%edi, %ebx
0000000000006b75	callq	_getpid
0000000000006b7a	xorl	%r12d, %r12d
0000000000006b7d	movl	$0xa, %edi
0000000000006b82	movl	%eax, %esi
0000000000006b84	movl	%ebx, %edx
0000000000006b86	xorl	%ecx, %ecx
0000000000006b88	movq	%r15, %r8
0000000000006b8b	movl	%r14d, %r9d
0000000000006b8e	callq	___proc_info
0000000000006b93	cmpl	$-0x1, %eax
0000000000006b96	cmovel	%r12d, %eax
0000000000006b9a	popq	%rbx
0000000000006b9b	popq	%r12
0000000000006b9d	popq	%r14
0000000000006b9f	popq	%r15
0000000000006ba1	popq	%rbp
0000000000006ba2	retq
0000000000006ba3	nop
_getrusage:
0000000000006ba4	movl	$0x2000075, %eax
0000000000006ba9	movq	%rcx, %r10
0000000000006bac	syscall
0000000000006bae	jae	0x6bb8
0000000000006bb0	movq	%rax, %rdi
0000000000006bb3	jmp	_cerror_nocancel
0000000000006bb8	retq
_mach_ports_register:
0000000000006bb9	pushq	%rbp
0000000000006bba	movq	%rsp, %rbp
0000000000006bbd	pushq	%rbx
0000000000006bbe	subq	$0x48, %rsp
0000000000006bc2	leaq	-0x40(%rbp), %rbx
0000000000006bc6	movl	$0x1, 0x18(%rbx)
0000000000006bcd	movq	%rsi, 0x1c(%rbx)
0000000000006bd1	movl	%edx, 0x28(%rbx)
0000000000006bd4	movl	$0x2130000, 0x24(%rbx)
0000000000006bdb	leaq	_NDR_record(%rip), %rax
0000000000006be2	movq	(%rax), %rax
0000000000006be5	movq	%rax, 0x2c(%rbx)
0000000000006be9	movl	%edx, 0x34(%rbx)
0000000000006bec	movl	$0x80001513, (%rbx)
0000000000006bf2	movl	%edi, 0x8(%rbx)
0000000000006bf5	callq	_mig_get_reply_port
0000000000006bfa	movl	%eax, 0xc(%rbx)
0000000000006bfd	movabsq	$0xd4b00000000, %rcx
0000000000006c07	movq	%rcx, 0x10(%rbx)
0000000000006c0b	movl	$0x0, (%rsp)
0000000000006c12	movq	%rbx, %rdi
0000000000006c15	movl	$0x3, %esi
0000000000006c1a	movl	$0x38, %edx
0000000000006c1f	movl	$0x2c, %ecx
0000000000006c24	movl	%eax, %r8d
0000000000006c27	xorl	%r9d, %r9d
0000000000006c2a	callq	_mach_msg
0000000000006c2f	movl	%eax, %ebx
0000000000006c31	leal	-0x10000002(%rbx), %eax
0000000000006c37	cmpl	$0xe, %eax
0000000000006c3a	ja	0x6c50
0000000000006c3c	movl	$0x4003, %ecx
0000000000006c41	btl	%eax, %ecx
0000000000006c44	jae	0x6c50
0000000000006c46	movl	-0x34(%rbp), %edi
0000000000006c49	callq	_mig_put_reply_port
0000000000006c4e	jmp	0x6ca5
0000000000006c50	testl	%ebx, %ebx
0000000000006c52	jne	0x6c86
0000000000006c54	movl	-0x2c(%rbp), %eax
0000000000006c57	cmpl	$0x47, %eax
0000000000006c5a	je	0x6c90
0000000000006c5c	cmpl	$0xdaf, %eax
0000000000006c61	jne	0x6c97
0000000000006c63	movl	$0xfffffed4, %ebx
0000000000006c68	cmpl	$0x0, -0x40(%rbp)
0000000000006c6c	js	0x6c9c
0000000000006c6e	cmpl	$0x24, -0x3c(%rbp)
0000000000006c72	jne	0x6c9c
0000000000006c74	movl	-0x38(%rbp), %eax
0000000000006c77	testl	%eax, %eax
0000000000006c79	jne	0x6c9c
0000000000006c7b	movl	-0x20(%rbp), %ebx
0000000000006c7e	testl	%ebx, %ebx
0000000000006c80	jne	0x6c9c
0000000000006c82	xorl	%ebx, %ebx
0000000000006c84	jmp	0x6ca5
0000000000006c86	movl	-0x34(%rbp), %edi
0000000000006c89	callq	_mig_dealloc_reply_port
0000000000006c8e	jmp	0x6ca5
0000000000006c90	movl	$0xfffffecc, %ebx
0000000000006c95	jmp	0x6c9c
0000000000006c97	movl	$0xfffffed3, %ebx
0000000000006c9c	leaq	-0x40(%rbp), %rdi
0000000000006ca0	callq	_mach_msg_destroy
0000000000006ca5	movl	%ebx, %eax
0000000000006ca7	addq	$0x48, %rsp
0000000000006cab	popq	%rbx
0000000000006cac	popq	%rbp
0000000000006cad	retq
0000000000006cae	nop
0000000000006caf	nop
___fork:
0000000000006cb0	subq	$0x18, %rsp
0000000000006cb4	movl	$0x2000002, %eax
0000000000006cb9	syscall
0000000000006cbb	jae	0x6cd1
0000000000006cbd	movq	%rax, %rdi
0000000000006cc0	callq	_cerror
0000000000006cc5	movq	$-0x1, %rax
0000000000006ccc	addq	$0x18, %rsp
0000000000006cd0	retq
0000000000006cd1	orl	%edx, %edx
0000000000006cd3	je	0x6ce2
0000000000006cd5	xorq	%rax, %rax
0000000000006cd8	leaq	__current_pid(%rip), %r11
0000000000006cdf	movl	%eax, (%r11)
0000000000006ce2	addq	$0x18, %rsp
0000000000006ce6	retq
_setiopolicy_np:
0000000000006ce7	pushq	%rbp
0000000000006ce8	movq	%rsp, %rbp
0000000000006ceb	pushq	%rbx
0000000000006cec	subq	$0x18, %rsp
0000000000006cf0	leaq	-0x18(%rbp), %rax
0000000000006cf4	movl	%esi, (%rax)
0000000000006cf6	movl	%edi, 0x4(%rax)
0000000000006cf9	movl	%edx, 0x8(%rax)
0000000000006cfc	movl	$0x2, %edi
0000000000006d01	movq	%rax, %rsi
0000000000006d04	callq	___iopolicysys
0000000000006d09	movl	%eax, %ebx
0000000000006d0b	cmpl	$-0x2, %eax
0000000000006d0e	jne	0x6d19
0000000000006d10	xorl	%ebx, %ebx
0000000000006d12	xorl	%edi, %edi
0000000000006d14	callq	__pthread_clear_qos_tsd
0000000000006d19	movl	%ebx, %eax
0000000000006d1b	addq	$0x18, %rsp
0000000000006d1f	popq	%rbx
0000000000006d20	popq	%rbp
0000000000006d21	retq
0000000000006d22	nop
0000000000006d23	nop
_ffsctl:
0000000000006d24	movl	$0x20000f5, %eax
0000000000006d29	movq	%rcx, %r10
0000000000006d2c	syscall
0000000000006d2e	jae	0x6d38
0000000000006d30	movq	%rax, %rdi
0000000000006d33	jmp	_cerror_nocancel
0000000000006d38	retq
0000000000006d39	nop
0000000000006d3a	nop
0000000000006d3b	nop
___getsockname:
_getsockname:
0000000000006d3c	movl	$0x2000020, %eax
0000000000006d41	movq	%rcx, %r10
0000000000006d44	syscall
0000000000006d46	jae	0x6d50
0000000000006d48	movq	%rax, %rdi
0000000000006d4b	jmp	_cerror_nocancel
0000000000006d50	retq
_proc_set_cpumon_params:
0000000000006d51	pushq	%rbp
0000000000006d52	movq	%rsp, %rbp
0000000000006d55	subq	$0x20, %rsp
0000000000006d59	movl	%edi, %r9d
0000000000006d5c	leaq	-0x18(%rbp), %r8
0000000000006d60	movl	$0x5, (%r8)
0000000000006d67	movl	%esi, 0x4(%r8)
0000000000006d6b	movslq	%edx, %rax
0000000000006d6e	movq	%rax, 0x8(%r8)
0000000000006d72	xorl	%eax, %eax
0000000000006d74	movq	%rax, 0x10(%r8)
0000000000006d78	movq	%rax, (%rsp)
0000000000006d7c	movl	$0x1, %edi
0000000000006d81	movl	$0xa, %esi
0000000000006d86	movl	$0x4, %edx
0000000000006d8b	movl	$0x3, %ecx
0000000000006d90	callq	___process_policy
0000000000006d95	addq	$0x20, %rsp
0000000000006d99	popq	%rbp
0000000000006d9a	retq
0000000000006d9b	nop
___process_policy:
0000000000006d9c	movl	$0x2000143, %eax
0000000000006da1	movq	%rcx, %r10
0000000000006da4	syscall
0000000000006da6	jae	0x6db0
0000000000006da8	movq	%rax, %rdi
0000000000006dab	jmp	_cerror_nocancel
0000000000006db0	retq
_proc_set_cpumon_defaults:
0000000000006db1	pushq	%rbp
0000000000006db2	movq	%rsp, %rbp
0000000000006db5	subq	$0x20, %rsp
0000000000006db9	movl	%edi, %r9d
0000000000006dbc	movabsq	$0xfe00000005, %rax
0000000000006dc6	leaq	-0x18(%rbp), %r8
0000000000006dca	movq	%rax, (%r8)
0000000000006dcd	xorl	%eax, %eax
0000000000006dcf	movq	%rax, 0x10(%r8)
0000000000006dd3	movq	%rax, 0x8(%r8)
0000000000006dd7	movq	%rax, (%rsp)
0000000000006ddb	movl	$0x1, %edi
0000000000006de0	movl	$0xa, %esi
0000000000006de5	movl	$0x4, %edx
0000000000006dea	movl	$0x3, %ecx
0000000000006def	callq	___process_policy
0000000000006df4	addq	$0x20, %rsp
0000000000006df8	popq	%rbp
0000000000006df9	retq
_proc_pid_rusage:
0000000000006dfa	movq	%rdx, %r8
0000000000006dfd	movl	%esi, %edx
0000000000006dff	movl	%edi, %esi
0000000000006e01	movl	$0x9, %edi
0000000000006e06	xorl	%ecx, %ecx
0000000000006e08	xorl	%r9d, %r9d
0000000000006e0b	jmp	___proc_info
_chown:
0000000000006e10	movl	$0x2000010, %eax
0000000000006e15	movq	%rcx, %r10
0000000000006e18	syscall
0000000000006e1a	jae	0x6e24
0000000000006e1c	movq	%rax, %rdi
0000000000006e1f	jmp	_cerror_nocancel
0000000000006e24	retq
0000000000006e25	nop
0000000000006e26	nop
0000000000006e27	nop
_bind:
___bind:
0000000000006e28	movl	$0x2000068, %eax
0000000000006e2d	movq	%rcx, %r10
0000000000006e30	syscall
0000000000006e32	jae	0x6e3c
0000000000006e34	movq	%rax, %rdi
0000000000006e37	jmp	_cerror_nocancel
0000000000006e3c	retq
_pselect$1050:
0000000000006e3d	pushq	%rbp
0000000000006e3e	movq	%rsp, %rbp
0000000000006e41	pushq	%r15
0000000000006e43	pushq	%r14
0000000000006e45	pushq	%r13
0000000000006e47	pushq	%r12
0000000000006e49	pushq	%rbx
0000000000006e4a	subq	$0x28, %rsp
0000000000006e4e	cmpl	$0x401, %edi
0000000000006e54	jl	0x6e6c
0000000000006e56	callq	___error
0000000000006e5b	movl	$0x16, (%rax)
0000000000006e61	movl	$0xffffffff, %r14d
0000000000006e67	jmp	0x6f46
0000000000006e6c	movq	%r9, %r13
0000000000006e6f	movq	%r8, %r15
0000000000006e72	movq	%rsi, %r12
0000000000006e75	movl	%edi, %ebx
0000000000006e77	movq	%rdx, -0x30(%rbp)
0000000000006e7b	movq	%rcx, -0x38(%rbp)
0000000000006e7f	callq	___pselect
0000000000006e84	movl	%eax, %r14d
0000000000006e87	cmpl	$-0x1, %eax
0000000000006e8a	jne	0x6f46
0000000000006e90	callq	___error
0000000000006e95	movl	$0xffffffff, %r14d
0000000000006e9b	cmpl	$0x4e, (%rax)
0000000000006e9e	jne	0x6f46
0000000000006ea4	testq	%r15, %r15
0000000000006ea7	je	0x6ed6
0000000000006ea9	movq	(%r15), %rax
0000000000006eac	leaq	-0x50(%rbp), %rcx
0000000000006eb0	movq	%rax, (%rcx)
0000000000006eb3	movabsq	$0x20c49ba5e353f7cf, %rax
0000000000006ebd	imulq	0x8(%r15)
0000000000006ec1	movq	%rcx, %r15
0000000000006ec4	movq	%rdx, %rax
0000000000006ec7	shrq	$0x3f, %rax
0000000000006ecb	shrq	$0x7, %rdx
0000000000006ecf	addl	%eax, %edx
0000000000006ed1	movl	%edx, 0x8(%rcx)
0000000000006ed4	jmp	0x6ed9
0000000000006ed6	xorl	%r15d, %r15d
0000000000006ed9	movq	-0x38(%rbp), %rcx
0000000000006edd	movq	-0x30(%rbp), %rdx
0000000000006ee1	testq	%r13, %r13
0000000000006ee4	je	0x6f36
0000000000006ee6	leaq	-0x3c(%rbp), %rdx
0000000000006eea	movl	$0x3, %edi
0000000000006eef	movq	%r13, %rsi
0000000000006ef2	callq	___pthread_sigmask
0000000000006ef7	movl	%eax, %r14d
0000000000006efa	testl	%eax, %eax
0000000000006efc	jne	0x6f46
0000000000006efe	movl	%ebx, %edi
0000000000006f00	movq	%r12, %rsi
0000000000006f03	movq	-0x30(%rbp), %rdx
0000000000006f07	movq	-0x38(%rbp), %rcx
0000000000006f0b	movq	%r15, %r8
0000000000006f0e	callq	_select$DARWIN_EXTSN
0000000000006f13	movl	%eax, %r14d
0000000000006f16	callq	___error
0000000000006f1b	movl	(%rax), %ebx
0000000000006f1d	leaq	-0x3c(%rbp), %rsi
0000000000006f21	movl	$0x3, %edi
0000000000006f26	xorl	%edx, %edx
0000000000006f28	callq	___pthread_sigmask
0000000000006f2d	callq	___error
0000000000006f32	movl	%ebx, (%rax)
0000000000006f34	jmp	0x6f46
0000000000006f36	movl	%ebx, %edi
0000000000006f38	movq	%r12, %rsi
0000000000006f3b	movq	%r15, %r8
0000000000006f3e	callq	_select$DARWIN_EXTSN
0000000000006f43	movl	%eax, %r14d
0000000000006f46	movl	%r14d, %eax
0000000000006f49	addq	$0x28, %rsp
0000000000006f4d	popq	%rbx
0000000000006f4e	popq	%r12
0000000000006f50	popq	%r13
0000000000006f52	popq	%r14
0000000000006f54	popq	%r15
0000000000006f56	popq	%rbp
0000000000006f57	retq
_guarded_write_np:
0000000000006f58	movl	$0x20001e5, %eax
0000000000006f5d	movq	%rcx, %r10
0000000000006f60	syscall
0000000000006f62	jae	0x6f6c
0000000000006f64	movq	%rax, %rdi
0000000000006f67	jmp	_cerror_nocancel
0000000000006f6c	retq
_mach_vm_copy:
0000000000006f6d	pushq	%rbp
0000000000006f6e	movq	%rsp, %rbp
0000000000006f71	pushq	%rbx
0000000000006f72	subq	$0x48, %rsp
0000000000006f76	leaq	_NDR_record(%rip), %rax
0000000000006f7d	movq	(%rax), %rax
0000000000006f80	leaq	-0x40(%rbp), %rbx
0000000000006f84	movq	%rax, 0x18(%rbx)
0000000000006f88	movq	%rsi, 0x20(%rbx)
0000000000006f8c	movq	%rdx, 0x28(%rbx)
0000000000006f90	movq	%rcx, 0x30(%rbx)
0000000000006f94	movl	$0x1513, (%rbx)
0000000000006f9a	movl	%edi, 0x8(%rbx)
0000000000006f9d	callq	_mig_get_reply_port
0000000000006fa2	movl	%eax, 0xc(%rbx)
0000000000006fa5	movabsq	$0x12c700000000, %rcx
0000000000006faf	movq	%rcx, 0x10(%rbx)
0000000000006fb3	movl	$0x0, (%rsp)
0000000000006fba	movq	%rbx, %rdi
0000000000006fbd	movl	$0x3, %esi
0000000000006fc2	movl	$0x38, %edx
0000000000006fc7	movl	$0x2c, %ecx
0000000000006fcc	movl	%eax, %r8d
0000000000006fcf	xorl	%r9d, %r9d
0000000000006fd2	callq	_mach_msg
0000000000006fd7	movl	%eax, %ebx
0000000000006fd9	leal	-0x10000002(%rbx), %eax
0000000000006fdf	cmpl	$0xe, %eax
0000000000006fe2	ja	0x6ff8
0000000000006fe4	movl	$0x4003, %ecx
0000000000006fe9	btl	%eax, %ecx
0000000000006fec	jae	0x6ff8
0000000000006fee	movl	-0x34(%rbp), %edi
0000000000006ff1	callq	_mig_put_reply_port
0000000000006ff6	jmp	0x704d
0000000000006ff8	testl	%ebx, %ebx
0000000000006ffa	jne	0x702e
0000000000006ffc	movl	-0x2c(%rbp), %eax
0000000000006fff	cmpl	$0x47, %eax
0000000000007002	je	0x7038
0000000000007004	cmpl	$0x132b, %eax
0000000000007009	jne	0x703f
000000000000700b	movl	$0xfffffed4, %ebx
0000000000007010	cmpl	$0x0, -0x40(%rbp)
0000000000007014	js	0x7044
0000000000007016	cmpl	$0x24, -0x3c(%rbp)
000000000000701a	jne	0x7044
000000000000701c	movl	-0x38(%rbp), %eax
000000000000701f	testl	%eax, %eax
0000000000007021	jne	0x7044
0000000000007023	movl	-0x20(%rbp), %ebx
0000000000007026	testl	%ebx, %ebx
0000000000007028	jne	0x7044
000000000000702a	xorl	%ebx, %ebx
000000000000702c	jmp	0x704d
000000000000702e	movl	-0x34(%rbp), %edi
0000000000007031	callq	_mig_dealloc_reply_port
0000000000007036	jmp	0x704d
0000000000007038	movl	$0xfffffecc, %ebx
000000000000703d	jmp	0x7044
000000000000703f	movl	$0xfffffed3, %ebx
0000000000007044	leaq	-0x40(%rbp), %rdi
0000000000007048	callq	_mach_msg_destroy
000000000000704d	movl	%ebx, %eax
000000000000704f	addq	$0x48, %rsp
0000000000007053	popq	%rbx
0000000000007054	popq	%rbp
0000000000007055	retq
0000000000007056	nop
_mach_msg_server:
0000000000007057	pushq	%rbp
0000000000007058	movq	%rsp, %rbp
000000000000705b	pushq	%r15
000000000000705d	pushq	%r14
000000000000705f	pushq	%r13
0000000000007061	pushq	%r12
0000000000007063	pushq	%rbx
0000000000007064	subq	$0x68, %rsp
0000000000007068	movl	%edx, -0x38(%rbp)
000000000000706b	movl	%esi, %r13d
000000000000706e	movq	%rdi, -0x70(%rbp)
0000000000007072	movl	$0xffffffff, %edx
0000000000007077	leaq	_mach_task_self_(%rip), %rax
000000000000707e	leal	0x44(%r13), %esi
0000000000007082	movl	%ecx, -0x4c(%rbp)
0000000000007085	btl	$0x11, %ecx
0000000000007089	cmovael	%r13d, %esi
000000000000708d	movl	(%rax), %ebx
000000000000708f	leaq	_vm_page_size(%rip), %rax
0000000000007096	movq	(%rax), %r15
0000000000007099	addq	%r15, %rsi
000000000000709c	addq	%rdx, %rsi
000000000000709f	negq	%r15
00000000000070a2	andq	%rsi, %r15
00000000000070a5	movl	%r15d, %r14d
00000000000070a8	leaq	-0x48(%rbp), %rsi
00000000000070ac	movl	%ebx, %edi
00000000000070ae	movq	%r14, %rdx
00000000000070b1	movl	$0x14000001, %ecx
00000000000070b6	callq	_vm_allocate
00000000000070bb	movl	%eax, %r12d
00000000000070be	testl	%eax, %eax
00000000000070c0	jne	0x7342
00000000000070c6	movq	%r15, -0x58(%rbp)
00000000000070ca	movq	%r14, -0x60(%rbp)
00000000000070ce	movl	%ebx, -0x34(%rbp)
00000000000070d1	movl	-0x4c(%rbp), %edx
00000000000070d4	movl	%edx, %esi
00000000000070d6	andl	$0xfffff7fc, %esi
00000000000070dc	movl	%edx, %eax
00000000000070de	shrl	$0x18, %eax
00000000000070e1	andl	$0xf, %eax
00000000000070e4	movl	$0x44, %ecx
00000000000070e9	cmpl	$0x4, %eax
00000000000070ec	ja	0x70fa
00000000000070ee	movl	%eax, %eax
00000000000070f0	leaq	0x1bb11(%rip), %rcx
00000000000070f7	movl	(%rcx,%rax,4), %ecx
00000000000070fa	movl	%ecx, -0x64(%rbp)
00000000000070fd	addl	%ecx, %r13d
0000000000007100	leaq	_vm_page_size(%rip), %rax
0000000000007107	movl	(%rax), %r14d
000000000000710a	movl	$0xffffffff, %eax
000000000000710f	leal	(%rax,%r14), %eax
0000000000007113	addl	%r13d, %eax
0000000000007116	negl	%r14d
0000000000007119	andl	%eax, %r14d
000000000000711c	testb	$0x4, %dl
000000000000711f	cmovnel	%r14d, %r13d
0000000000007123	orl	$0x802, %esi
0000000000007129	xorl	%ebx, %ebx
000000000000712b	movl	-0x38(%rbp), %r15d
000000000000712f	movl	%esi, -0x50(%rbp)
0000000000007132	jmp	0x7176
0000000000007134	testb	$0x4, -0x4c(%rbp)
0000000000007138	je	0x7320
000000000000713e	movq	-0x30(%rbp), %rsi
0000000000007142	movl	0x4(%rsi), %eax
0000000000007145	addl	-0x64(%rbp), %eax
0000000000007148	leaq	_vm_page_size(%rip), %rcx
000000000000714f	movl	(%rcx), %r14d
0000000000007152	movl	$0xffffffff, %ecx
0000000000007157	leal	(%rcx,%r14), %ecx
000000000000715b	addl	%eax, %ecx
000000000000715d	negl	%r14d
0000000000007160	andl	%ecx, %r14d
0000000000007163	movl	-0x3c(%rbp), %ebx
0000000000007166	movl	%ebx, %edx
0000000000007168	movl	-0x34(%rbp), %edi
000000000000716b	callq	_vm_deallocate
0000000000007170	movl	%r14d, %r13d
0000000000007173	movl	-0x50(%rbp), %esi
0000000000007176	movl	%ebx, -0x3c(%rbp)
0000000000007179	cmpl	%r14d, %ebx
000000000000717c	jae	0x71a9
000000000000717e	movl	%r14d, %edx
0000000000007181	movl	-0x34(%rbp), %edi
0000000000007184	movl	%esi, %ebx
0000000000007186	leaq	-0x30(%rbp), %rsi
000000000000718a	movl	$0x14000001, %ecx
000000000000718f	callq	_vm_allocate
0000000000007194	movl	%ebx, %esi
0000000000007196	movl	%eax, %r12d
0000000000007199	movl	%r14d, %eax
000000000000719c	movl	%r14d, -0x3c(%rbp)
00000000000071a0	testl	%r12d, %r12d
00000000000071a3	jne	0x7354
00000000000071a9	movq	-0x30(%rbp), %rdi
00000000000071ad	movl	$0x0, (%rsp)
00000000000071b4	xorl	%edx, %edx
00000000000071b6	movl	%r13d, %ecx
00000000000071b9	movl	%r15d, %r8d
00000000000071bc	xorl	%r9d, %r9d
00000000000071bf	callq	_mach_msg
00000000000071c4	movl	%eax, %r12d
00000000000071c7	jmp	0x71d1
00000000000071c9	movq	%r14, %rdi
00000000000071cc	callq	_voucher_mach_msg_revert
00000000000071d1	movq	-0x60(%rbp), %rbx
00000000000071d5	testl	%r12d, %r12d
00000000000071d8	jne	0x7313
00000000000071de	movq	-0x30(%rbp), %rdi
00000000000071e2	callq	_voucher_mach_msg_adopt
00000000000071e7	movq	%rax, %r14
00000000000071ea	movq	-0x48(%rbp), %rsi
00000000000071ee	xorl	%eax, %eax
00000000000071f0	movq	%rax, 0x10(%rsi)
00000000000071f4	movq	%rax, 0x8(%rsi)
00000000000071f8	movq	%rax, (%rsi)
00000000000071fb	movq	-0x30(%rbp), %rdi
00000000000071ff	callq	*-0x70(%rbp)
0000000000007202	movq	-0x48(%rbp), %rdi
0000000000007206	cmpl	$0x0, (%rdi)
0000000000007209	js	0x7236
000000000000720b	movl	0x20(%rdi), %eax
000000000000720e	testl	%eax, %eax
0000000000007210	je	0x7236
0000000000007212	cmpl	$0xfffffecf, %eax
0000000000007217	jne	0x7222
0000000000007219	movl	$0x0, 0x8(%rdi)
0000000000007220	jmp	0x7236
0000000000007222	movq	-0x30(%rbp), %rdi
0000000000007226	movl	$0x0, 0x8(%rdi)
000000000000722d	callq	_mach_msg_destroy
0000000000007232	movq	-0x48(%rbp), %rdi
0000000000007236	movq	-0x58(%rbp), %rcx
000000000000723a	cmpl	$0x0, 0x8(%rdi)
000000000000723e	je	0x72f8
0000000000007244	movl	(%rdi), %eax
0000000000007246	movl	0x4(%rdi), %edx
0000000000007249	andl	$0x1f, %eax
000000000000724c	xorl	%esi, %esi
000000000000724e	cmpl	$0x12, %eax
0000000000007251	setne	%sil
0000000000007255	shll	$0x4, %esi
0000000000007258	orl	-0x4c(%rbp), %esi
000000000000725b	orl	$0x903, %esi
0000000000007261	cmpl	%ecx, -0x3c(%rbp)
0000000000007264	jne	0x7295
0000000000007266	movl	$0x0, (%rsp)
000000000000726d	movl	%r13d, %ecx
0000000000007270	movl	%r15d, %r8d
0000000000007273	xorl	%r9d, %r9d
0000000000007276	callq	_mach_msg
000000000000727b	movl	%eax, %r12d
000000000000727e	movq	-0x30(%rbp), %rax
0000000000007282	movq	-0x48(%rbp), %rcx
0000000000007286	movq	%rcx, -0x30(%rbp)
000000000000728a	movq	%rax, -0x48(%rbp)
000000000000728e	movl	$0x1, %ebx
0000000000007293	jmp	0x72b8
0000000000007295	movq	-0x30(%rbp), %rax
0000000000007299	xorl	%ebx, %ebx
000000000000729b	movl	%ebx, 0x10(%rsp)
000000000000729f	movq	%rax, 0x8(%rsp)
00000000000072a4	movl	%ebx, (%rsp)
00000000000072a7	movl	%r13d, %ecx
00000000000072aa	movl	%r15d, %r8d
00000000000072ad	xorl	%r9d, %r9d
00000000000072b0	callq	_mach_msg_overwrite
00000000000072b5	movl	%eax, %r12d
00000000000072b8	leal	-0x10000003(%r12), %eax
00000000000072c0	cmpl	$0x4, %eax
00000000000072c3	ja	0x72cf
00000000000072c5	movl	$0x13, %ecx
00000000000072ca	btl	%eax, %ecx
00000000000072cd	jb	0x72e1
00000000000072cf	cmpl	$0x10004003, %r12d
00000000000072d6	movl	-0x38(%rbp), %r15d
00000000000072da	je	0x72f8
00000000000072dc	jmp	0x71c9
00000000000072e1	testl	%ebx, %ebx
00000000000072e3	je	0x72eb
00000000000072e5	movq	-0x30(%rbp), %rdi
00000000000072e9	jmp	0x72ef
00000000000072eb	movq	-0x48(%rbp), %rdi
00000000000072ef	callq	_mach_msg_server_consume_unsent_message
00000000000072f4	movl	-0x38(%rbp), %r15d
00000000000072f8	movq	%r14, %rdi
00000000000072fb	callq	_voucher_mach_msg_revert
0000000000007300	movq	-0x30(%rbp), %rdi
0000000000007304	movl	$0x0, (%rsp)
000000000000730b	movl	-0x50(%rbp), %esi
000000000000730e	jmp	0x71b4
0000000000007313	cmpl	$0x10004004, %r12d
000000000000731a	je	0x7134
0000000000007320	movq	-0x30(%rbp), %rsi
0000000000007324	movl	-0x3c(%rbp), %edx
0000000000007327	movl	-0x34(%rbp), %r14d
000000000000732b	movl	%r14d, %edi
000000000000732e	callq	_vm_deallocate
0000000000007333	movq	-0x48(%rbp), %rsi
0000000000007337	movl	%r14d, %edi
000000000000733a	movq	%rbx, %rdx
000000000000733d	callq	_vm_deallocate
0000000000007342	movl	%r12d, %eax
0000000000007345	addq	$0x68, %rsp
0000000000007349	popq	%rbx
000000000000734a	popq	%r12
000000000000734c	popq	%r13
000000000000734e	popq	%r14
0000000000007350	popq	%r15
0000000000007352	popq	%rbp
0000000000007353	retq
0000000000007354	movq	-0x48(%rbp), %rsi
0000000000007358	movl	-0x34(%rbp), %edi
000000000000735b	movq	-0x60(%rbp), %rdx
000000000000735f	jmp	0x733d
_kill:
0000000000007361	movl	$0x1, %edx
0000000000007366	jmp	___kill
000000000000736b	nop
___kill:
000000000000736c	movl	$0x2000025, %eax
0000000000007371	movq	%rcx, %r10
0000000000007374	syscall
0000000000007376	jae	0x7380
0000000000007378	movq	%rax, %rdi
000000000000737b	jmp	_cerror_nocancel
0000000000007380	retq
0000000000007381	nop
0000000000007382	nop
0000000000007383	nop
_chflags:
0000000000007384	movl	$0x2000022, %eax
0000000000007389	movq	%rcx, %r10
000000000000738c	syscall
000000000000738e	jae	0x7398
0000000000007390	movq	%rax, %rdi
0000000000007393	jmp	_cerror_nocancel
0000000000007398	retq
0000000000007399	nop
000000000000739a	nop
000000000000739b	nop
_pathconf:
000000000000739c	movl	$0x20000bf, %eax
00000000000073a1	movq	%rcx, %r10
00000000000073a4	syscall
00000000000073a6	jae	0x73b0
00000000000073a8	movq	%rax, %rdi
00000000000073ab	jmp	_cerror
00000000000073b0	retq
_setpriority:
00000000000073b1	pushq	%rbp
00000000000073b2	movq	%rsp, %rbp
00000000000073b5	pushq	%r14
00000000000073b7	pushq	%rbx
00000000000073b8	movl	%edi, %ebx
00000000000073ba	callq	___setpriority
00000000000073bf	movl	%eax, %r14d
00000000000073c2	cmpl	$0x3, %ebx
00000000000073c5	jne	0x73d7
00000000000073c7	cmpl	$-0x2, %r14d
00000000000073cb	jne	0x73d7
00000000000073cd	xorl	%r14d, %r14d
00000000000073d0	xorl	%edi, %edi
00000000000073d2	callq	__pthread_clear_qos_tsd
00000000000073d7	movl	%r14d, %eax
00000000000073da	popq	%rbx
00000000000073db	popq	%r14
00000000000073dd	popq	%rbp
00000000000073de	retq
00000000000073df	nop
___setpriority:
00000000000073e0	movl	$0x2000060, %eax
00000000000073e5	movq	%rcx, %r10
00000000000073e8	syscall
00000000000073ea	jae	0x73f4
00000000000073ec	movq	%rax, %rdi
00000000000073ef	jmp	_cerror_nocancel
00000000000073f4	retq
_vm_region_64:
00000000000073f5	pushq	%rbp
00000000000073f6	movq	%rsp, %rbp
00000000000073f9	pushq	%r15
00000000000073fb	pushq	%r14
00000000000073fd	pushq	%r13
00000000000073ff	pushq	%r12
0000000000007401	pushq	%rbx
0000000000007402	subq	$0x88, %rsp
0000000000007409	movq	%r9, %r15
000000000000740c	movq	%rsi, %r13
000000000000740f	leaq	_NDR_record(%rip), %rax
0000000000007416	movq	(%rax), %rax
0000000000007419	leaq	-0xa0(%rbp), %rbx
0000000000007420	movq	%rax, 0x18(%rbx)
0000000000007424	movq	(%rsi), %rax
0000000000007427	movq	%rax, 0x20(%rbx)
000000000000742b	movl	%ecx, 0x28(%rbx)
000000000000742e	movl	(%r9), %eax
0000000000007431	movl	$0xa, %ecx
0000000000007436	cmpl	%ecx, %eax
0000000000007438	cmovbl	%eax, %ecx
000000000000743b	movq	%r8, %r14
000000000000743e	movq	%rdx, %r12
0000000000007441	movl	%ecx, 0x2c(%rbx)
0000000000007444	movl	$0x1513, (%rbx)
000000000000744a	movl	%edi, 0x8(%rbx)
000000000000744d	callq	_mig_get_reply_port
0000000000007452	movl	%eax, 0xc(%rbx)
0000000000007455	movabsq	$0x12d000000000, %rcx
000000000000745f	movq	%rcx, 0x10(%rbx)
0000000000007463	movl	$0x0, (%rsp)
000000000000746a	movq	%rbx, %rdi
000000000000746d	movl	$0x3, %esi
0000000000007472	movl	$0x30, %edx
0000000000007477	movl	$0x74, %ecx
000000000000747c	movl	%eax, %r8d
000000000000747f	xorl	%r9d, %r9d
0000000000007482	callq	_mach_msg
0000000000007487	movl	%eax, %ebx
0000000000007489	leal	-0x10000002(%rbx), %eax
000000000000748f	cmpl	$0xe, %eax
0000000000007492	ja	0x74ab
0000000000007494	movl	$0x4003, %ecx
0000000000007499	btl	%eax, %ecx
000000000000749c	jae	0x74ab
000000000000749e	movl	-0x94(%rbp), %edi
00000000000074a4	callq	_mig_put_reply_port
00000000000074a9	jmp	0x7508
00000000000074ab	testl	%ebx, %ebx
00000000000074ad	jne	0x74e3
00000000000074af	movl	-0x8c(%rbp), %eax
00000000000074b5	cmpl	$0x47, %eax
00000000000074b8	je	0x74f0
00000000000074ba	cmpl	$_macx_triggers, %eax
00000000000074bf	jne	0x74f7
00000000000074c1	movl	-0xa0(%rbp), %ecx
00000000000074c7	movl	-0x9c(%rbp), %eax
00000000000074cd	testl	%ecx, %ecx
00000000000074cf	js	0x751c
00000000000074d1	movl	$0xfffffed4, %ebx
00000000000074d6	cmpl	$0x24, %eax
00000000000074d9	jne	0x74fc
00000000000074db	cmpl	$0x0, -0x80(%rbp)
00000000000074df	jne	0x7532
00000000000074e1	jmp	0x74fc
00000000000074e3	movl	-0x94(%rbp), %edi
00000000000074e9	callq	_mig_dealloc_reply_port
00000000000074ee	jmp	0x7508
00000000000074f0	movl	$0xfffffecc, %ebx
00000000000074f5	jmp	0x74fc
00000000000074f7	movl	$0xfffffed3, %ebx
00000000000074fc	leaq	-0xa0(%rbp), %rdi
0000000000007503	callq	_mach_msg_destroy
0000000000007508	movl	%ebx, %eax
000000000000750a	addq	$0x88, %rsp
0000000000007511	popq	%rbx
0000000000007512	popq	%r12
0000000000007514	popq	%r13
0000000000007516	popq	%r14
0000000000007518	popq	%r15
000000000000751a	popq	%rbp
000000000000751b	retq
000000000000751c	leal	-0x44(%rax), %edx
000000000000751f	movl	$0xfffffed4, %ebx
0000000000007524	cmpl	$0x28, %edx
0000000000007527	ja	0x74fc
0000000000007529	cmpl	$0x1, -0x88(%rbp)
0000000000007530	jne	0x74fc
0000000000007532	movl	$0xfffffed4, %ebx
0000000000007537	cmpl	$0x0, -0x98(%rbp)
000000000000753e	jne	0x74fc
0000000000007540	testl	%ecx, %ecx
0000000000007542	js	0x7581
0000000000007544	movl	-0x80(%rbp), %ebx
0000000000007547	testl	%ebx, %ebx
0000000000007549	jne	0x74fc
000000000000754b	movl	-0x60(%rbp), %edi
000000000000754e	leaq	-0x5c(%rbp), %rsi
0000000000007552	movq	-0x14(%rsi), %rax
0000000000007556	movq	%rax, (%r13)
000000000000755a	movq	-0xc(%rsi), %rax
000000000000755e	movq	%rax, (%r12)
0000000000007562	movl	(%r15), %edx
0000000000007565	cmpl	%edx, %edi
0000000000007567	jbe	0x75bf
0000000000007569	shll	$0x2, %edx
000000000000756c	movq	%rdi, %rbx
000000000000756f	movq	%r14, %rdi
0000000000007572	callq	_memcpy
0000000000007577	movl	%ebx, (%r15)
000000000000757a	movl	$0xfffffecd, %ebx
000000000000757f	jmp	0x7508
0000000000007581	movzwl	-0x7a(%rbp), %ecx
0000000000007585	shll	$0x10, %ecx
0000000000007588	cmpl	$0x110000, %ecx
000000000000758e	jne	0x74fc
0000000000007594	movl	-0x60(%rbp), %edi
0000000000007597	cmpl	$0xa, %edi
000000000000759a	ja	0x74fc
00000000000075a0	leal	-0x44(%rax), %ecx
00000000000075a3	shrl	$0x2, %ecx
00000000000075a6	cmpl	%edi, %ecx
00000000000075a8	jb	0x74fc
00000000000075ae	leal	0x44(,%rdi,4), %ecx
00000000000075b5	cmpl	%ecx, %eax
00000000000075b7	jne	0x74fc
00000000000075bd	jmp	0x754e
00000000000075bf	movq	0x10(%rbp), %r12
00000000000075c3	leal	(,%rdi,4), %edx
00000000000075ca	movq	%rdi, %rbx
00000000000075cd	movq	%r14, %rdi
00000000000075d0	callq	_memcpy
00000000000075d5	movl	%ebx, (%r15)
00000000000075d8	movl	-0x84(%rbp), %eax
00000000000075de	movl	%eax, (%r12)
00000000000075e2	xorl	%ebx, %ebx
00000000000075e4	jmp	0x7508
_vm_region_recurse_64:
00000000000075e9	pushq	%rbp
00000000000075ea	movq	%rsp, %rbp
00000000000075ed	pushq	%r15
00000000000075ef	pushq	%r14
00000000000075f1	pushq	%r13
00000000000075f3	pushq	%r12
00000000000075f5	pushq	%rbx
00000000000075f6	subq	$0xa8, %rsp
00000000000075fd	movq	%r9, %r14
0000000000007600	movq	%rcx, %r12
0000000000007603	movq	%rsi, %r13
0000000000007606	leaq	_NDR_record(%rip), %rax
000000000000760d	movq	(%rax), %rax
0000000000007610	leaq	-0xc8(%rbp), %rbx
0000000000007617	movq	%rax, 0x18(%rbx)
000000000000761b	movq	(%rsi), %rax
000000000000761e	movq	%rax, 0x20(%rbx)
0000000000007622	movl	(%rcx), %eax
0000000000007624	movl	%eax, 0x28(%rbx)
0000000000007627	movl	(%r9), %eax
000000000000762a	movl	$0x13, %ecx
000000000000762f	cmpl	%ecx, %eax
0000000000007631	cmovbl	%eax, %ecx
0000000000007634	movq	%r8, -0x30(%rbp)
0000000000007638	movq	%rdx, -0x38(%rbp)
000000000000763c	movl	%ecx, 0x2c(%rbx)
000000000000763f	movl	$0x1513, (%rbx)
0000000000007645	movl	%edi, 0x8(%rbx)
0000000000007648	callq	_mig_get_reply_port
000000000000764d	movl	%eax, 0xc(%rbx)
0000000000007650	movabsq	$0x12cf00000000, %rcx
000000000000765a	movq	%rcx, 0x10(%rbx)
000000000000765e	movl	$0x0, (%rsp)
0000000000007665	movq	%rbx, %rdi
0000000000007668	movl	$0x3, %esi
000000000000766d	movl	$0x30, %edx
0000000000007672	movl	$0x90, %ecx
0000000000007677	movl	%eax, %r8d
000000000000767a	xorl	%r9d, %r9d
000000000000767d	callq	_mach_msg
0000000000007682	movl	%eax, %r15d
0000000000007685	leal	-0x10000002(%r15), %eax
000000000000768c	cmpl	$0xe, %eax
000000000000768f	ja	0x76a8
0000000000007691	movl	$0x4003, %ecx
0000000000007696	btl	%eax, %ecx
0000000000007699	jae	0x76a8
000000000000769b	movl	-0xbc(%rbp), %edi
00000000000076a1	callq	_mig_put_reply_port
00000000000076a6	jmp	0x771c
00000000000076a8	testl	%r15d, %r15d
00000000000076ab	jne	0x76f5
00000000000076ad	movl	-0xb4(%rbp), %eax
00000000000076b3	cmpl	$0x47, %eax
00000000000076b6	je	0x7702
00000000000076b8	cmpl	$0x1333, %eax
00000000000076bd	jne	0x770a
00000000000076bf	cmpl	$0x0, -0xc8(%rbp)
00000000000076c6	js	0x76ed
00000000000076c8	movl	-0xc4(%rbp), %eax
00000000000076ce	leal	-0x3c(%rax), %ecx
00000000000076d1	cmpl	$0x4d, %ecx
00000000000076d4	jb	0x76e4
00000000000076d6	cmpl	$0x24, %eax
00000000000076d9	jne	0x76ed
00000000000076db	cmpl	$0x0, -0xa8(%rbp)
00000000000076e2	je	0x76ed
00000000000076e4	cmpl	$0x0, -0xc0(%rbp)
00000000000076eb	je	0x7731
00000000000076ed	movl	$0xfffffed4, %r15d
00000000000076f3	jmp	0x7710
00000000000076f5	movl	-0xbc(%rbp), %edi
00000000000076fb	callq	_mig_dealloc_reply_port
0000000000007700	jmp	0x771c
0000000000007702	movl	$0xfffffecc, %r15d
0000000000007708	jmp	0x7710
000000000000770a	movl	$0xfffffed3, %r15d
0000000000007710	leaq	-0xc8(%rbp), %rdi
0000000000007717	callq	_mach_msg_destroy
000000000000771c	movl	%r15d, %eax
000000000000771f	addq	$0xa8, %rsp
0000000000007726	popq	%rbx
0000000000007727	popq	%r12
0000000000007729	popq	%r13
000000000000772b	popq	%r14
000000000000772d	popq	%r15
000000000000772f	popq	%rbp
0000000000007730	retq
0000000000007731	movl	-0xa8(%rbp), %r15d
0000000000007738	testl	%r15d, %r15d
000000000000773b	jne	0x7710
000000000000773d	movl	-0x90(%rbp), %ebx
0000000000007743	cmpl	$0x13, %ebx
0000000000007746	ja	0x76ed
0000000000007748	shrl	$0x2, %ecx
000000000000774b	cmpl	%ebx, %ecx
000000000000774d	jb	0x76ed
000000000000774f	leal	0x3c(,%rbx,4), %ecx
0000000000007756	movl	$0xfffffed4, %r15d
000000000000775c	cmpl	%ecx, %eax
000000000000775e	jne	0x7710
0000000000007760	leaq	-0x8c(%rbp), %rsi
0000000000007767	movq	-0x18(%rsi), %rax
000000000000776b	movq	%rax, (%r13)
000000000000776f	movq	-0x10(%rsi), %rax
0000000000007773	movq	-0x38(%rbp), %rcx
0000000000007777	movq	%rax, (%rcx)
000000000000777a	movl	-0x8(%rsi), %eax
000000000000777d	movl	%eax, (%r12)
0000000000007781	movl	(%r14), %edx
0000000000007784	cmpl	%edx, %ebx
0000000000007786	jbe	0x77a2
0000000000007788	shll	$0x2, %edx
000000000000778b	movq	-0x30(%rbp), %rdi
000000000000778f	callq	_memcpy
0000000000007794	movl	%ebx, (%r14)
0000000000007797	movl	$0xfffffecd, %r15d
000000000000779d	jmp	0x771c
00000000000077a2	leal	(,%rbx,4), %eax
00000000000077a9	movl	%eax, %edx
00000000000077ab	movq	-0x30(%rbp), %rdi
00000000000077af	callq	_memcpy
00000000000077b4	movl	%ebx, (%r14)
00000000000077b7	xorl	%r15d, %r15d
00000000000077ba	jmp	0x771c
00000000000077bf	nop
_getpriority:
00000000000077c0	movl	$0x2000064, %eax
00000000000077c5	movq	%rcx, %r10
00000000000077c8	syscall
00000000000077ca	jae	0x77d4
00000000000077cc	movq	%rax, %rdi
00000000000077cf	jmp	_cerror_nocancel
00000000000077d4	retq
00000000000077d5	nop
00000000000077d6	nop
00000000000077d7	nop
_proc_rlimit_control:
00000000000077d8	movl	$0x20001be, %eax
00000000000077dd	movq	%rcx, %r10
00000000000077e0	syscall
00000000000077e2	jae	0x77ec
00000000000077e4	movq	%rax, %rdi
00000000000077e7	jmp	_cerror_nocancel
00000000000077ec	retq
00000000000077ed	nop
00000000000077ee	nop
00000000000077ef	nop
___pthread_kill:
00000000000077f0	movl	$0x2000148, %eax
00000000000077f5	movq	%rcx, %r10
00000000000077f8	syscall
00000000000077fa	jae	0x7804
00000000000077fc	movq	%rax, %rdi
00000000000077ff	jmp	_cerror_nocancel
0000000000007804	retq
0000000000007805	nop
0000000000007806	nop
0000000000007807	nop
_setitimer:
0000000000007808	movl	$0x2000053, %eax
000000000000780d	movq	%rcx, %r10
0000000000007810	syscall
0000000000007812	jae	0x781c
0000000000007814	movq	%rax, %rdi
0000000000007817	jmp	_cerror_nocancel
000000000000781c	retq
000000000000781d	nop
000000000000781e	nop
000000000000781f	nop
___sandbox_msp:
___mac_set_proc:
0000000000007820	movl	$0x2000183, %eax
0000000000007825	movq	%rcx, %r10
0000000000007828	syscall
000000000000782a	jae	0x7834
000000000000782c	movq	%rax, %rdi
000000000000782f	jmp	_cerror_nocancel
0000000000007834	retq
_fs_snapshot_list:
0000000000007835	testl	%r8d, %r8d
0000000000007838	je	0x7850
000000000000783a	pushq	%rbp
000000000000783b	movq	%rsp, %rbp
000000000000783e	callq	___error
0000000000007843	movl	$0x16, (%rax)
0000000000007849	movl	$0xffffffff, %eax
000000000000784e	popq	%rbp
000000000000784f	retq
0000000000007850	movl	$0x40, %r8d
0000000000007856	jmp	_getattrlistbulk
000000000000785b	nop
_listen:
___listen:
000000000000785c	movl	$0x200006a, %eax
0000000000007861	movq	%rcx, %r10
0000000000007864	syscall
0000000000007866	jae	0x7870
0000000000007868	movq	%rax, %rdi
000000000000786b	jmp	_cerror_nocancel
0000000000007870	retq
0000000000007871	nop
0000000000007872	nop
0000000000007873	nop
_accept:
___accept:
0000000000007874	movl	$0x200001e, %eax
0000000000007879	movq	%rcx, %r10
000000000000787c	syscall
000000000000787e	jae	0x7888
0000000000007880	movq	%rax, %rdi
0000000000007883	jmp	_cerror
0000000000007888	retq
0000000000007889	nop
000000000000788a	nop
000000000000788b	nop
_poll:
000000000000788c	movl	$0x20000e6, %eax
0000000000007891	movq	%rcx, %r10
0000000000007894	syscall
0000000000007896	jae	0x78a0
0000000000007898	movq	%rax, %rdi
000000000000789b	jmp	_cerror
00000000000078a0	retq
_posix_spawnattr_setjetsam_ext:
00000000000078a1	movl	$0x16, %eax
00000000000078a6	testq	%rdi, %rdi
00000000000078a9	je	0x78c9
00000000000078ab	movq	(%rdi), %rdi
00000000000078ae	testq	%rdi, %rdi
00000000000078b1	je	0x78c9
00000000000078b3	orl	$0x8000, %esi
00000000000078b9	movw	%si, 0x40(%rdi)
00000000000078bd	movl	%edx, 0x44(%rdi)
00000000000078c0	movl	%ecx, 0x48(%rdi)
00000000000078c3	movl	%r8d, 0x4c(%rdi)
00000000000078c7	xorl	%eax, %eax
00000000000078c9	retq
00000000000078ca	nop
00000000000078cb	nop
_getpgrp:
00000000000078cc	movl	$0x2000051, %eax
00000000000078d1	movq	%rcx, %r10
00000000000078d4	syscall
00000000000078d6	jae	0x78e0
00000000000078d8	movq	%rax, %rdi
00000000000078db	jmp	_cerror_nocancel
00000000000078e0	retq
00000000000078e1	nop
00000000000078e2	nop
00000000000078e3	nop
_execve:
00000000000078e4	movl	$0x200003b, %eax
00000000000078e9	movq	%rcx, %r10
00000000000078ec	syscall
00000000000078ee	jae	0x78f8
00000000000078f0	movq	%rax, %rdi
00000000000078f3	jmp	_cerror_nocancel
00000000000078f8	retq
00000000000078f9	nop
00000000000078fa	nop
00000000000078fb	nop
_setsid:
00000000000078fc	movl	$0x2000093, %eax
0000000000007901	movq	%rcx, %r10
0000000000007904	syscall
0000000000007906	jae	0x7910
0000000000007908	movq	%rax, %rdi
000000000000790b	jmp	_cerror_nocancel
0000000000007910	retq
0000000000007911	nop
0000000000007912	nop
0000000000007913	nop
_dup2:
0000000000007914	movl	$0x200005a, %eax
0000000000007919	movq	%rcx, %r10
000000000000791c	syscall
000000000000791e	jae	0x7928
0000000000007920	movq	%rax, %rdi
0000000000007923	jmp	_cerror_nocancel
0000000000007928	retq
0000000000007929	nop
000000000000792a	nop
_mach_msg_overwrite:
000000000000792b	pushq	%rbp
000000000000792c	movq	%rsp, %rbp
000000000000792f	pushq	%r15
0000000000007931	pushq	%r14
0000000000007933	pushq	%r13
0000000000007935	pushq	%r12
0000000000007937	pushq	%rbx
0000000000007938	subq	$0x18, %rsp
000000000000793c	movl	%ecx, %r13d
000000000000793f	movl	%esi, %ebx
0000000000007941	movq	%rdi, %r14
0000000000007944	movl	0x20(%rbp), %eax
0000000000007947	movl	0x10(%rbp), %r10d
000000000000794b	movl	%esi, %r12d
000000000000794e	andl	$0xfffffbbf, %r12d
0000000000007955	subq	$0x8, %rsp
0000000000007959	movl	%r12d, %esi
000000000000795c	movl	%edx, %r15d
000000000000795f	movl	%r8d, -0x2c(%rbp)
0000000000007963	movl	%r9d, -0x30(%rbp)
0000000000007967	pushq	%rax
0000000000007968	pushq	0x18(%rbp)
000000000000796b	pushq	%r10
000000000000796d	callq	_mach_msg_overwrite_trap
0000000000007972	addq	$0x20, %rsp
0000000000007976	testl	%eax, %eax
0000000000007978	je	0x7a21
000000000000797e	movl	%ebx, -0x34(%rbp)
0000000000007981	testb	$0x40, %bl
0000000000007984	jne	0x79cf
0000000000007986	cmpl	$0x10000007, %eax
000000000000798b	jne	0x79cf
000000000000798d	movq	%r14, %rbx
0000000000007990	movl	%r13d, %r14d
0000000000007993	movl	-0x2c(%rbp), %r13d
0000000000007997	subq	$0x8, %rsp
000000000000799b	movq	%rbx, %rdi
000000000000799e	movl	%r12d, %esi
00000000000079a1	movl	%r15d, %edx
00000000000079a4	movl	%r14d, %ecx
00000000000079a7	movl	%r13d, %r8d
00000000000079aa	movl	-0x30(%rbp), %r9d
00000000000079ae	movl	0x20(%rbp), %eax
00000000000079b1	pushq	%rax
00000000000079b2	pushq	0x18(%rbp)
00000000000079b5	movl	0x10(%rbp), %eax
00000000000079b8	pushq	%rax
00000000000079b9	callq	_mach_msg_overwrite_trap
00000000000079be	addq	$0x20, %rsp
00000000000079c2	cmpl	$0x10000007, %eax
00000000000079c7	je	0x7997
00000000000079c9	movl	%r14d, %r13d
00000000000079cc	movq	%rbx, %r14
00000000000079cf	movl	-0x34(%rbp), %r12d
00000000000079d3	btl	$0xa, %r12d
00000000000079d8	jb	0x7a23
00000000000079da	cmpl	$0x10004005, %eax
00000000000079df	jne	0x7a23
00000000000079e1	andl	$0xfffffbbe, %r12d
00000000000079e8	movl	-0x30(%rbp), %r15d
00000000000079ec	movl	-0x2c(%rbp), %ebx
00000000000079ef	subq	$0x8, %rsp
00000000000079f3	movq	%r14, %rdi
00000000000079f6	movl	%r12d, %esi
00000000000079f9	xorl	%edx, %edx
00000000000079fb	movl	%r13d, %ecx
00000000000079fe	movl	%ebx, %r8d
0000000000007a01	movl	%r15d, %r9d
0000000000007a04	movl	0x20(%rbp), %eax
0000000000007a07	pushq	%rax
0000000000007a08	pushq	0x18(%rbp)
0000000000007a0b	movl	0x10(%rbp), %eax
0000000000007a0e	pushq	%rax
0000000000007a0f	callq	_mach_msg_overwrite_trap
0000000000007a14	addq	$0x20, %rsp
0000000000007a18	cmpl	$0x10004005, %eax
0000000000007a1d	je	0x79ef
0000000000007a1f	jmp	0x7a23
0000000000007a21	xorl	%eax, %eax
0000000000007a23	addq	$0x18, %rsp
0000000000007a27	popq	%rbx
0000000000007a28	popq	%r12
0000000000007a2a	popq	%r13
0000000000007a2c	popq	%r14
0000000000007a2e	popq	%r15
0000000000007a30	popq	%rbp
0000000000007a31	retq
_csr_get_active_config:
0000000000007a32	movq	%rdi, %rsi
0000000000007a35	movl	$0x4, %edx
0000000000007a3a	movl	$0x1, %edi
0000000000007a3f	jmp	___csrctl
___ptrace:
_ptrace:
0000000000007a44	xorq	%rax, %rax
0000000000007a47	leaq	_errno(%rip), %r11
0000000000007a4e	movl	%eax, (%r11)
0000000000007a51	movl	$0x200001a, %eax
0000000000007a56	movq	%rcx, %r10
0000000000007a59	syscall
0000000000007a5b	jae	0x7a65
0000000000007a5d	movq	%rax, %rdi
0000000000007a60	jmp	_cerror
0000000000007a65	retq
0000000000007a66	nop
0000000000007a67	nop
_mach_msg_server_consume_unsent_message:
0000000000007a68	pushq	%rbp
0000000000007a69	movq	%rsp, %rbp
0000000000007a6c	pushq	%rbx
0000000000007a6d	pushq	%rax
0000000000007a6e	movq	%rdi, %rbx
0000000000007a71	movl	0xc(%rdi), %esi
0000000000007a74	leal	0x1(%rsi), %eax
0000000000007a77	cmpl	$0x2, %eax
0000000000007a7a	jb	0x7aa1
0000000000007a7c	movl	(%rbx), %eax
0000000000007a7e	shrl	$0x8, %eax
0000000000007a81	andl	$0x1f, %eax
0000000000007a84	addl	$-0x11, %eax
0000000000007a87	cmpl	$0x1, %eax
0000000000007a8a	ja	0x7aa1
0000000000007a8c	leaq	_mach_task_self_(%rip), %rax
0000000000007a93	movl	(%rax), %edi
0000000000007a95	callq	_mach_port_deallocate
0000000000007a9a	movl	$0x0, 0xc(%rbx)
0000000000007aa1	movq	%rbx, %rdi
0000000000007aa4	addq	$0x8, %rsp
0000000000007aa8	popq	%rbx
0000000000007aa9	popq	%rbp
0000000000007aaa	jmp	_mach_msg_destroy
0000000000007aaf	nop
_getdtablesize:
0000000000007ab0	movl	$0x2000059, %eax
0000000000007ab5	movq	%rcx, %r10
0000000000007ab8	syscall
0000000000007aba	jae	0x7ac4
0000000000007abc	movq	%rax, %rdi
0000000000007abf	jmp	_cerror_nocancel
0000000000007ac4	retq
_work_interval_create:
0000000000007ac5	pushq	%rbp
0000000000007ac6	movq	%rsp, %rbp
0000000000007ac9	pushq	%r15
0000000000007acb	pushq	%r14
0000000000007acd	pushq	%rbx
0000000000007ace	subq	$0x18, %rsp
0000000000007ad2	testq	%rdi, %rdi
0000000000007ad5	je	0x7b41
0000000000007ad7	movq	%rdi, %r14
0000000000007ada	leaq	-0x28(%rbp), %rdx
0000000000007ade	movq	$0x0, (%rdx)
0000000000007ae5	movl	$0x0, 0x8(%rdx)
0000000000007aec	movl	%esi, 0xc(%rdx)
0000000000007aef	movl	$0x10, %ecx
0000000000007af4	movl	$0x4, %edi
0000000000007af9	xorl	%esi, %esi
0000000000007afb	callq	___work_interval_ctl
0000000000007b00	movl	$0xffffffff, %r15d
0000000000007b06	cmpl	$-0x1, %eax
0000000000007b09	je	0x7b5f
0000000000007b0b	movl	$0x18, %edi
0000000000007b10	callq	_malloc
0000000000007b15	testq	%rax, %rax
0000000000007b18	je	0x7b54
0000000000007b1a	movq	%rax, %rbx
0000000000007b1d	callq	___thread_selfid
0000000000007b22	movq	%rax, (%rbx)
0000000000007b25	movq	-0x28(%rbp), %rax
0000000000007b29	movq	%rax, 0x8(%rbx)
0000000000007b2d	movl	-0x1c(%rbp), %eax
0000000000007b30	movl	%eax, 0x10(%rbx)
0000000000007b33	movl	-0x20(%rbp), %eax
0000000000007b36	movl	%eax, 0x14(%rbx)
0000000000007b39	movq	%rbx, (%r14)
0000000000007b3c	xorl	%r15d, %r15d
0000000000007b3f	jmp	0x7b5f
0000000000007b41	callq	___error
0000000000007b46	movl	$0x16, (%rax)
0000000000007b4c	movl	$0xffffffff, %r15d
0000000000007b52	jmp	0x7b5f
0000000000007b54	callq	___error
0000000000007b59	movl	$0xc, (%rax)
0000000000007b5f	movl	%r15d, %eax
0000000000007b62	addq	$0x18, %rsp
0000000000007b66	popq	%rbx
0000000000007b67	popq	%r14
0000000000007b69	popq	%r15
0000000000007b6b	popq	%rbp
0000000000007b6c	retq
0000000000007b6d	nop
0000000000007b6e	nop
0000000000007b6f	nop
___work_interval_ctl:
0000000000007b70	movl	$0x20001f3, %eax
0000000000007b75	movq	%rcx, %r10
0000000000007b78	syscall
0000000000007b7a	jae	0x7b84
0000000000007b7c	movq	%rax, %rdi
0000000000007b7f	jmp	_cerror_nocancel
0000000000007b84	retq
_work_interval_instance_alloc:
0000000000007b85	pushq	%rbp
0000000000007b86	movq	%rsp, %rbp
0000000000007b89	pushq	%rbx
0000000000007b8a	pushq	%rax
0000000000007b8b	movq	%rdi, %rbx
0000000000007b8e	movl	$0x38, %edi
0000000000007b93	callq	_malloc
0000000000007b98	xorl	%ecx, %ecx
0000000000007b9a	movq	%rcx, 0x30(%rax)
0000000000007b9e	movq	%rcx, 0x28(%rax)
0000000000007ba2	movq	%rcx, 0x20(%rax)
0000000000007ba6	movq	%rcx, 0x18(%rax)
0000000000007baa	movq	%rcx, 0x10(%rax)
0000000000007bae	movq	%rcx, 0x8(%rax)
0000000000007bb2	movl	0x10(%rbx), %ecx
0000000000007bb5	movl	%ecx, 0x30(%rax)
0000000000007bb8	movq	0x8(%rbx), %rcx
0000000000007bbc	movq	%rcx, (%rax)
0000000000007bbf	addq	$0x8, %rsp
0000000000007bc3	popq	%rbx
0000000000007bc4	popq	%rbp
0000000000007bc5	retq
_work_interval_instance_get_id:
0000000000007bc6	movq	0x8(%rdi), %rax
0000000000007bca	retq
0000000000007bcb	nop
_memorystatus_control:
0000000000007bcc	movl	$0x20001b8, %eax
0000000000007bd1	movq	%rcx, %r10
0000000000007bd4	syscall
0000000000007bd6	jae	0x7be0
0000000000007bd8	movq	%rax, %rdi
0000000000007bdb	jmp	_cerror_nocancel
0000000000007be0	retq
0000000000007be1	nop
0000000000007be2	nop
0000000000007be3	nop
_lstat$INODE64:
_lstat64:
0000000000007be4	movl	$0x2000154, %eax
0000000000007be9	movq	%rcx, %r10
0000000000007bec	syscall
0000000000007bee	jae	0x7bf8
0000000000007bf0	movq	%rax, %rdi
0000000000007bf3	jmp	_cerror_nocancel
0000000000007bf8	retq
__kernelrpc_mach_port_type:
0000000000007bf9	pushq	%rbp
0000000000007bfa	movq	%rsp, %rbp
0000000000007bfd	pushq	%r14
0000000000007bff	pushq	%rbx
0000000000007c00	subq	$0x40, %rsp
0000000000007c04	movq	%rdx, %r14
0000000000007c07	leaq	_NDR_record(%rip), %rax
0000000000007c0e	movq	(%rax), %rax
0000000000007c11	leaq	-0x40(%rbp), %rbx
0000000000007c15	movq	%rax, 0x18(%rbx)
0000000000007c19	movl	%esi, 0x20(%rbx)
0000000000007c1c	movl	$0x1513, (%rbx)
0000000000007c22	movl	%edi, 0x8(%rbx)
0000000000007c25	callq	_mig_get_reply_port
0000000000007c2a	movl	%eax, 0xc(%rbx)
0000000000007c2d	movabsq	$0xc8100000000, %rcx
0000000000007c37	movq	%rcx, 0x10(%rbx)
0000000000007c3b	movl	$0x0, (%rsp)
0000000000007c42	movq	%rbx, %rdi
0000000000007c45	movl	$0x3, %esi
0000000000007c4a	movl	$0x24, %edx
0000000000007c4f	movl	$0x30, %ecx
0000000000007c54	movl	%eax, %r8d
0000000000007c57	xorl	%r9d, %r9d
0000000000007c5a	callq	_mach_msg
0000000000007c5f	movl	%eax, %ebx
0000000000007c61	leal	-0x10000002(%rbx), %eax
0000000000007c67	cmpl	$0xe, %eax
0000000000007c6a	ja	0x7c80
0000000000007c6c	movl	$0x4003, %ecx
0000000000007c71	btl	%eax, %ecx
0000000000007c74	jae	0x7c80
0000000000007c76	movl	-0x34(%rbp), %edi
0000000000007c79	callq	_mig_put_reply_port
0000000000007c7e	jmp	0x7ce7
0000000000007c80	testl	%ebx, %ebx
0000000000007c82	jne	0x7cc8
0000000000007c84	movl	-0x2c(%rbp), %eax
0000000000007c87	cmpl	$0x47, %eax
0000000000007c8a	je	0x7cd2
0000000000007c8c	cmpl	$0xce5, %eax
0000000000007c91	jne	0x7cd9
0000000000007c93	movl	$0xfffffed4, %ebx
0000000000007c98	cmpl	$0x0, -0x40(%rbp)
0000000000007c9c	js	0x7cde
0000000000007c9e	movl	-0x3c(%rbp), %eax
0000000000007ca1	cmpl	$0x28, %eax
0000000000007ca4	je	0x7cb1
0000000000007ca6	cmpl	$0x24, %eax
0000000000007ca9	jne	0x7cde
0000000000007cab	cmpl	$0x0, -0x20(%rbp)
0000000000007caf	je	0x7cde
0000000000007cb1	cmpl	$0x0, -0x38(%rbp)
0000000000007cb5	jne	0x7cde
0000000000007cb7	movl	-0x20(%rbp), %ebx
0000000000007cba	testl	%ebx, %ebx
0000000000007cbc	jne	0x7cde
0000000000007cbe	movl	-0x1c(%rbp), %eax
0000000000007cc1	movl	%eax, (%r14)
0000000000007cc4	xorl	%ebx, %ebx
0000000000007cc6	jmp	0x7ce7
0000000000007cc8	movl	-0x34(%rbp), %edi
0000000000007ccb	callq	_mig_dealloc_reply_port
0000000000007cd0	jmp	0x7ce7
0000000000007cd2	movl	$0xfffffecc, %ebx
0000000000007cd7	jmp	0x7cde
0000000000007cd9	movl	$0xfffffed3, %ebx
0000000000007cde	leaq	-0x40(%rbp), %rdi
0000000000007ce2	callq	_mach_msg_destroy
0000000000007ce7	movl	%ebx, %eax
0000000000007ce9	addq	$0x40, %rsp
0000000000007ced	popq	%rbx
0000000000007cee	popq	%r14
0000000000007cf0	popq	%rbp
0000000000007cf1	retq
_task_threads:
0000000000007cf2	pushq	%rbp
0000000000007cf3	movq	%rsp, %rbp
0000000000007cf6	pushq	%r15
0000000000007cf8	pushq	%r14
0000000000007cfa	pushq	%rbx
0000000000007cfb	subq	$0x48, %rsp
0000000000007cff	movq	%rdx, %r14
0000000000007d02	movq	%rsi, %r15
0000000000007d05	leaq	-0x58(%rbp), %rbx
0000000000007d09	movl	$0x1513, (%rbx)
0000000000007d0f	movl	%edi, 0x8(%rbx)
0000000000007d12	callq	_mig_get_reply_port
0000000000007d17	movl	%eax, 0xc(%rbx)
0000000000007d1a	movabsq	$0xd4a00000000, %rcx
0000000000007d24	movq	%rcx, 0x10(%rbx)
0000000000007d28	movl	$0x0, (%rsp)
0000000000007d2f	movq	%rbx, %rdi
0000000000007d32	movl	$0x3, %esi
0000000000007d37	movl	$0x18, %edx
0000000000007d3c	movl	$0x40, %ecx
0000000000007d41	movl	%eax, %r8d
0000000000007d44	xorl	%r9d, %r9d
0000000000007d47	callq	_mach_msg
0000000000007d4c	movl	%eax, %ebx
0000000000007d4e	leal	-0x10000002(%rbx), %eax
0000000000007d54	cmpl	$0xe, %eax
0000000000007d57	ja	0x7d6d
0000000000007d59	movl	$0x4003, %ecx
0000000000007d5e	btl	%eax, %ecx
0000000000007d61	jae	0x7d6d
0000000000007d63	movl	-0x4c(%rbp), %edi
0000000000007d66	callq	_mig_put_reply_port
0000000000007d6b	jmp	0x7dbb
0000000000007d6d	testl	%ebx, %ebx
0000000000007d6f	jne	0x7d9c
0000000000007d71	movl	-0x44(%rbp), %eax
0000000000007d74	cmpl	$0x47, %eax
0000000000007d77	je	0x7da6
0000000000007d79	cmpl	$0xdae, %eax
0000000000007d7e	jne	0x7dad
0000000000007d80	movl	-0x58(%rbp), %eax
0000000000007d83	movl	-0x54(%rbp), %ecx
0000000000007d86	movl	$0xfffffed4, %ebx
0000000000007d8b	testl	%eax, %eax
0000000000007d8d	js	0x7dc8
0000000000007d8f	cmpl	$0x24, %ecx
0000000000007d92	jne	0x7db2
0000000000007d94	cmpl	$0x0, -0x38(%rbp)
0000000000007d98	jne	0x7dd3
0000000000007d9a	jmp	0x7db2
0000000000007d9c	movl	-0x4c(%rbp), %edi
0000000000007d9f	callq	_mig_dealloc_reply_port
0000000000007da4	jmp	0x7dbb
0000000000007da6	movl	$0xfffffecc, %ebx
0000000000007dab	jmp	0x7db2
0000000000007dad	movl	$0xfffffed3, %ebx
0000000000007db2	leaq	-0x58(%rbp), %rdi
0000000000007db6	callq	_mach_msg_destroy
0000000000007dbb	movl	%ebx, %eax
0000000000007dbd	addq	$0x48, %rsp
0000000000007dc1	popq	%rbx
0000000000007dc2	popq	%r14
0000000000007dc4	popq	%r15
0000000000007dc6	popq	%rbp
0000000000007dc7	retq
0000000000007dc8	cmpl	$0x38, %ecx
0000000000007dcb	jne	0x7db2
0000000000007dcd	cmpl	$0x1, -0x40(%rbp)
0000000000007dd1	jne	0x7db2
0000000000007dd3	movl	$0xfffffed4, %ebx
0000000000007dd8	cmpl	$0x0, -0x50(%rbp)
0000000000007ddc	jne	0x7db2
0000000000007dde	testl	%eax, %eax
0000000000007de0	js	0x7dee
0000000000007de2	movl	-0x38(%rbp), %ebx
0000000000007de5	testl	%ebx, %ebx
0000000000007de7	jne	0x7db2
0000000000007de9	movl	-0x24(%rbp), %eax
0000000000007dec	jmp	0x7e04
0000000000007dee	movzwl	-0x32(%rbp), %eax
0000000000007df2	shll	$0x10, %eax
0000000000007df5	cmpl	$0x2110000, %eax
0000000000007dfa	jne	0x7db2
0000000000007dfc	movl	-0x30(%rbp), %eax
0000000000007dff	cmpl	-0x24(%rbp), %eax
0000000000007e02	jne	0x7db2
0000000000007e04	movq	-0x3c(%rbp), %rcx
0000000000007e08	movq	%rcx, (%r15)
0000000000007e0b	movl	%eax, (%r14)
0000000000007e0e	xorl	%ebx, %ebx
0000000000007e10	jmp	0x7dbb
_thread_get_state:
0000000000007e12	pushq	%rbp
0000000000007e13	movq	%rsp, %rbp
0000000000007e16	pushq	%r15
0000000000007e18	pushq	%r14
0000000000007e1a	pushq	%r12
0000000000007e1c	pushq	%rbx
0000000000007e1d	subq	$0x9d0, %rsp
0000000000007e24	movq	%rcx, %r15
0000000000007e27	leaq	_NDR_record(%rip), %rax
0000000000007e2e	movq	(%rax), %rax
0000000000007e31	leaq	-0x9e8(%rbp), %rbx
0000000000007e38	movq	%rax, 0x18(%rbx)
0000000000007e3c	movl	%esi, 0x20(%rbx)
0000000000007e3f	movl	(%rcx), %eax
0000000000007e41	movl	$0x266, %ecx
0000000000007e46	cmpl	%ecx, %eax
0000000000007e48	cmovbl	%eax, %ecx
0000000000007e4b	movq	%rdx, %r14
0000000000007e4e	movl	%ecx, 0x24(%rbx)
0000000000007e51	movl	$0x1513, (%rbx)
0000000000007e57	movl	%edi, 0x8(%rbx)
0000000000007e5a	callq	_mig_get_reply_port
0000000000007e5f	movl	%eax, 0xc(%rbx)
0000000000007e62	movabsq	$0xe1300000000, %rcx
0000000000007e6c	movq	%rcx, 0x10(%rbx)
0000000000007e70	movl	$0x0, (%rsp)
0000000000007e77	movq	%rbx, %rdi
0000000000007e7a	movl	$0x3, %esi
0000000000007e7f	movl	$0x28, %edx
0000000000007e84	movl	$0x9c8, %ecx
0000000000007e89	movl	%eax, %r8d
0000000000007e8c	xorl	%r9d, %r9d
0000000000007e8f	callq	_mach_msg
0000000000007e94	movl	%eax, %ebx
0000000000007e96	leal	-0x10000002(%rbx), %eax
0000000000007e9c	cmpl	$0xe, %eax
0000000000007e9f	ja	0x7eb8
0000000000007ea1	movl	$0x4003, %ecx
0000000000007ea6	btl	%eax, %ecx
0000000000007ea9	jae	0x7eb8
0000000000007eab	movl	-0x9dc(%rbp), %edi
0000000000007eb1	callq	_mig_put_reply_port
0000000000007eb6	jmp	0x7f2c
0000000000007eb8	testl	%ebx, %ebx
0000000000007eba	jne	0x7f07
0000000000007ebc	movl	-0x9d4(%rbp), %eax
0000000000007ec2	cmpl	$0x47, %eax
0000000000007ec5	je	0x7f14
0000000000007ec7	cmpl	$0xe77, %eax
0000000000007ecc	jne	0x7f1b
0000000000007ece	cmpl	$0x0, -0x9e8(%rbp)
0000000000007ed5	js	0x7f00
0000000000007ed7	movl	-0x9e4(%rbp), %eax
0000000000007edd	leal	-0x28(%rax), %ecx
0000000000007ee0	cmpl	$0x999, %ecx
0000000000007ee6	jb	0x7ef7
0000000000007ee8	cmpl	$0x24, %eax
0000000000007eeb	jne	0x7f00
0000000000007eed	movl	-0x9c8(%rbp), %edx
0000000000007ef3	testl	%edx, %edx
0000000000007ef5	je	0x7f00
0000000000007ef7	cmpl	$0x0, -0x9e0(%rbp)
0000000000007efe	je	0x7f3e
0000000000007f00	movl	$0xfffffed4, %ebx
0000000000007f05	jmp	0x7f20
0000000000007f07	movl	-0x9dc(%rbp), %edi
0000000000007f0d	callq	_mig_dealloc_reply_port
0000000000007f12	jmp	0x7f2c
0000000000007f14	movl	$0xfffffecc, %ebx
0000000000007f19	jmp	0x7f20
0000000000007f1b	movl	$0xfffffed3, %ebx
0000000000007f20	leaq	-0x9e8(%rbp), %rdi
0000000000007f27	callq	_mach_msg_destroy
0000000000007f2c	movl	%ebx, %eax
0000000000007f2e	addq	$0x9d0, %rsp
0000000000007f35	popq	%rbx
0000000000007f36	popq	%r12
0000000000007f38	popq	%r14
0000000000007f3a	popq	%r15
0000000000007f3c	popq	%rbp
0000000000007f3d	retq
0000000000007f3e	movl	-0x9c8(%rbp), %ebx
0000000000007f44	testl	%ebx, %ebx
0000000000007f46	jne	0x7f20
0000000000007f48	movl	-0x9c4(%rbp), %r12d
0000000000007f4f	cmpl	$0x266, %r12d
0000000000007f56	ja	0x7f00
0000000000007f58	shrl	$0x2, %ecx
0000000000007f5b	cmpl	%r12d, %ecx
0000000000007f5e	jb	0x7f00
0000000000007f60	leal	0x28(,%r12,4), %ecx
0000000000007f68	movl	$0xfffffed4, %ebx
0000000000007f6d	cmpl	%ecx, %eax
0000000000007f6f	jne	0x7f20
0000000000007f71	movl	(%r15), %edx
0000000000007f74	leaq	-0x9c0(%rbp), %rsi
0000000000007f7b	cmpl	%edx, %r12d
0000000000007f7e	jbe	0x7f95
0000000000007f80	shll	$0x2, %edx
0000000000007f83	movq	%r14, %rdi
0000000000007f86	callq	_memcpy
0000000000007f8b	movl	%r12d, (%r15)
0000000000007f8e	movl	$0xfffffecd, %ebx
0000000000007f93	jmp	0x7f2c
0000000000007f95	leal	(,%r12,4), %eax
0000000000007f9d	movl	%eax, %edx
0000000000007f9f	movq	%r14, %rdi
0000000000007fa2	callq	_memcpy
0000000000007fa7	movl	%r12d, (%r15)
0000000000007faa	xorl	%ebx, %ebx
0000000000007fac	jmp	0x7f2c
0000000000007fb1	nop
0000000000007fb2	nop
0000000000007fb3	nop
_setgid:
0000000000007fb4	movl	$0x20000b5, %eax
0000000000007fb9	movq	%rcx, %r10
0000000000007fbc	syscall
0000000000007fbe	jae	0x7fc8
0000000000007fc0	movq	%rax, %rdi
0000000000007fc3	jmp	_cerror_nocancel
0000000000007fc8	retq
0000000000007fc9	nop
0000000000007fca	nop
0000000000007fcb	nop
_setuid:
0000000000007fcc	movl	$0x2000017, %eax
0000000000007fd1	movq	%rcx, %r10
0000000000007fd4	syscall
0000000000007fd6	jae	0x7fe0
0000000000007fd8	movq	%rax, %rdi
0000000000007fdb	jmp	_cerror_nocancel
0000000000007fe0	retq
_thread_policy_get:
0000000000007fe1	pushq	%rbp
0000000000007fe2	movq	%rsp, %rbp
0000000000007fe5	pushq	%r15
0000000000007fe7	pushq	%r14
0000000000007fe9	pushq	%r13
0000000000007feb	pushq	%r12
0000000000007fed	pushq	%rbx
0000000000007fee	subq	$0x88, %rsp
0000000000007ff5	movq	%r8, %r12
0000000000007ff8	movq	%rcx, %r14
0000000000007ffb	movq	%rdx, %r15
0000000000007ffe	leaq	_NDR_record(%rip), %rax
0000000000008005	movq	(%rax), %rax
0000000000008008	leaq	-0xa0(%rbp), %rbx
000000000000800f	movq	%rax, 0x18(%rbx)
0000000000008013	movl	%esi, 0x20(%rbx)
0000000000008016	movl	(%rcx), %eax
0000000000008018	movl	$0x10, %ecx
000000000000801d	cmpl	%ecx, %eax
000000000000801f	cmovbl	%eax, %ecx
0000000000008022	movl	%ecx, 0x24(%rbx)
0000000000008025	movl	(%r8), %eax
0000000000008028	movl	%eax, 0x28(%rbx)
000000000000802b	movl	$0x1513, (%rbx)
0000000000008031	movl	%edi, 0x8(%rbx)
0000000000008034	callq	_mig_get_reply_port
0000000000008039	movl	%eax, 0xc(%rbx)
000000000000803c	movabsq	$0xe2200000000, %rcx
0000000000008046	movq	%rcx, 0x10(%rbx)
000000000000804a	movl	$0x0, (%rsp)
0000000000008051	movq	%rbx, %rdi
0000000000008054	movl	$0x3, %esi
0000000000008059	movl	$0x2c, %edx
000000000000805e	movl	$0x74, %ecx
0000000000008063	movl	%eax, %r8d
0000000000008066	xorl	%r9d, %r9d
0000000000008069	callq	_mach_msg
000000000000806e	movl	%eax, %ebx
0000000000008070	leal	-0x10000002(%rbx), %eax
0000000000008076	cmpl	$0xe, %eax
0000000000008079	ja	0x8092
000000000000807b	movl	$0x4003, %ecx
0000000000008080	btl	%eax, %ecx
0000000000008083	jae	0x8092
0000000000008085	movl	-0x94(%rbp), %edi
000000000000808b	callq	_mig_put_reply_port
0000000000008090	jmp	0x8100
0000000000008092	testl	%ebx, %ebx
0000000000008094	jne	0x80db
0000000000008096	movl	-0x8c(%rbp), %eax
000000000000809c	cmpl	$0x47, %eax
000000000000809f	je	0x80e8
00000000000080a1	cmpl	$0xe86, %eax
00000000000080a6	jne	0x80ef
00000000000080a8	cmpl	$0x0, -0xa0(%rbp)
00000000000080af	js	0x80d4
00000000000080b1	movl	-0x9c(%rbp), %eax
00000000000080b7	leal	-0x2c(%rax), %ecx
00000000000080ba	cmpl	$0x41, %ecx
00000000000080bd	jb	0x80cb
00000000000080bf	cmpl	$0x24, %eax
00000000000080c2	jne	0x80d4
00000000000080c4	movl	-0x80(%rbp), %edx
00000000000080c7	testl	%edx, %edx
00000000000080c9	je	0x80d4
00000000000080cb	cmpl	$0x0, -0x98(%rbp)
00000000000080d2	je	0x8114
00000000000080d4	movl	$0xfffffed4, %ebx
00000000000080d9	jmp	0x80f4
00000000000080db	movl	-0x94(%rbp), %edi
00000000000080e1	callq	_mig_dealloc_reply_port
00000000000080e6	jmp	0x8100
00000000000080e8	movl	$0xfffffecc, %ebx
00000000000080ed	jmp	0x80f4
00000000000080ef	movl	$0xfffffed3, %ebx
00000000000080f4	leaq	-0xa0(%rbp), %rdi
00000000000080fb	callq	_mach_msg_destroy
0000000000008100	movl	%ebx, %eax
0000000000008102	addq	$0x88, %rsp
0000000000008109	popq	%rbx
000000000000810a	popq	%r12
000000000000810c	popq	%r13
000000000000810e	popq	%r14
0000000000008110	popq	%r15
0000000000008112	popq	%rbp
0000000000008113	retq
0000000000008114	movl	-0x80(%rbp), %ebx
0000000000008117	testl	%ebx, %ebx
0000000000008119	jne	0x80f4
000000000000811b	movl	-0x7c(%rbp), %r13d
000000000000811f	cmpl	$0x10, %r13d
0000000000008123	ja	0x80d4
0000000000008125	shrl	$0x2, %ecx
0000000000008128	cmpl	%r13d, %ecx
000000000000812b	jb	0x80d4
000000000000812d	leal	(,%r13,4), %ecx
0000000000008135	leal	0x2c(%rcx), %edx
0000000000008138	movl	$0xfffffed4, %ebx
000000000000813d	cmpl	%edx, %eax
000000000000813f	jne	0x80f4
0000000000008141	leaq	-0x78(%rbp), %rsi
0000000000008145	movl	(%r14), %edx
0000000000008148	cmpl	%edx, %r13d
000000000000814b	jbe	0x8162
000000000000814d	shll	$0x2, %edx
0000000000008150	movq	%r15, %rdi
0000000000008153	callq	_memcpy
0000000000008158	movl	%r13d, (%r14)
000000000000815b	movl	$0xfffffecd, %ebx
0000000000008160	jmp	0x8100
0000000000008162	movl	%ecx, %ebx
0000000000008164	movq	%r15, %rdi
0000000000008167	movq	%rbx, %rdx
000000000000816a	callq	_memcpy
000000000000816f	movl	%r13d, (%r14)
0000000000008172	movl	-0x78(%rbp,%rbx), %eax
0000000000008176	movl	%eax, (%r12)
000000000000817a	xorl	%ebx, %ebx
000000000000817c	jmp	0x8100
___get_remove_counter:
000000000000817e	mfence
0000000000008181	movq	___remove_counter(%rip), %rax
0000000000008188	retq
0000000000008189	nop
000000000000818a	nop
000000000000818b	nop
___settid:
_pthread_setugid_np:
000000000000818c	movl	$0x200011d, %eax
0000000000008191	movq	%rcx, %r10
0000000000008194	syscall
0000000000008196	jae	0x81a0
0000000000008198	movq	%rax, %rdi
000000000000819b	jmp	_cerror_nocancel
00000000000081a0	retq
00000000000081a1	nop
00000000000081a2	nop
00000000000081a3	nop
_seteuid:
00000000000081a4	movl	$0x20000b7, %eax
00000000000081a9	movq	%rcx, %r10
00000000000081ac	syscall
00000000000081ae	jae	0x81b8
00000000000081b0	movq	%rax, %rdi
00000000000081b3	jmp	_cerror_nocancel
00000000000081b8	retq
00000000000081b9	nop
00000000000081ba	nop
00000000000081bb	nop
_setegid:
00000000000081bc	movl	$0x20000b6, %eax
00000000000081c1	movq	%rcx, %r10
00000000000081c4	syscall
00000000000081c6	jae	0x81d0
00000000000081c8	movq	%rax, %rdi
00000000000081cb	jmp	_cerror_nocancel
00000000000081d0	retq
_vm_read:
00000000000081d1	pushq	%rbp
00000000000081d2	movq	%rsp, %rbp
00000000000081d5	pushq	%r15
00000000000081d7	pushq	%r14
00000000000081d9	pushq	%rbx
00000000000081da	pushq	%rax
00000000000081db	movq	%r8, %r15
00000000000081de	movq	%rcx, %r14
00000000000081e1	callq	__kernelrpc_vm_read
00000000000081e6	movl	%eax, %ebx
00000000000081e8	testl	%eax, %eax
00000000000081ea	jne	0x8213
00000000000081ec	movq	___syscall_logger(%rip), %rax
00000000000081f3	testq	%rax, %rax
00000000000081f6	je	0x8213
00000000000081f8	leaq	_mach_task_self_(%rip), %rcx
00000000000081ff	movl	(%rcx), %esi
0000000000008201	movl	(%r15), %edx
0000000000008204	movq	(%r14), %r8
0000000000008207	movl	$0x90, %edi
000000000000820c	xorl	%ecx, %ecx
000000000000820e	xorl	%r9d, %r9d
0000000000008211	callq	*%rax
0000000000008213	movl	%ebx, %eax
0000000000008215	addq	$0x8, %rsp
0000000000008219	popq	%rbx
000000000000821a	popq	%r14
000000000000821c	popq	%r15
000000000000821e	popq	%rbp
000000000000821f	retq
__kernelrpc_vm_read:
0000000000008220	pushq	%rbp
0000000000008221	movq	%rsp, %rbp
0000000000008224	pushq	%r15
0000000000008226	pushq	%r14
0000000000008228	pushq	%rbx
0000000000008229	subq	$0x48, %rsp
000000000000822d	movq	%r8, %r14
0000000000008230	movq	%rcx, %r15
0000000000008233	leaq	_NDR_record(%rip), %rax
000000000000823a	movq	(%rax), %rax
000000000000823d	leaq	-0x58(%rbp), %rbx
0000000000008241	movq	%rax, 0x18(%rbx)
0000000000008245	movq	%rsi, 0x20(%rbx)
0000000000008249	movq	%rdx, 0x28(%rbx)
000000000000824d	movl	$0x1513, (%rbx)
0000000000008253	movl	%edi, 0x8(%rbx)
0000000000008256	callq	_mig_get_reply_port
000000000000825b	movl	%eax, 0xc(%rbx)
000000000000825e	movabsq	$0x12c400000000, %rcx
0000000000008268	movq	%rcx, 0x10(%rbx)
000000000000826c	movl	$0x0, (%rsp)
0000000000008273	movq	%rbx, %rdi
0000000000008276	movl	$0x3, %esi
000000000000827b	movl	$0x30, %edx
0000000000008280	movl	$0x40, %ecx
0000000000008285	movl	%eax, %r8d
0000000000008288	xorl	%r9d, %r9d
000000000000828b	callq	_mach_msg
0000000000008290	movl	%eax, %ebx
0000000000008292	leal	-0x10000002(%rbx), %eax
0000000000008298	cmpl	$0xe, %eax
000000000000829b	ja	0x82b1
000000000000829d	movl	$0x4003, %ecx
00000000000082a2	btl	%eax, %ecx
00000000000082a5	jae	0x82b1
00000000000082a7	movl	-0x4c(%rbp), %edi
00000000000082aa	callq	_mig_put_reply_port
00000000000082af	jmp	0x82ff
00000000000082b1	testl	%ebx, %ebx
00000000000082b3	jne	0x82e0
00000000000082b5	movl	-0x44(%rbp), %eax
00000000000082b8	cmpl	$0x47, %eax
00000000000082bb	je	0x82ea
00000000000082bd	cmpl	$_thread_get_special_reply_port, %eax
00000000000082c2	jne	0x82f1
00000000000082c4	movl	-0x58(%rbp), %eax
00000000000082c7	movl	-0x54(%rbp), %ecx
00000000000082ca	movl	$0xfffffed4, %ebx
00000000000082cf	testl	%eax, %eax
00000000000082d1	js	0x830c
00000000000082d3	cmpl	$0x24, %ecx
00000000000082d6	jne	0x82f6
00000000000082d8	cmpl	$0x0, -0x38(%rbp)
00000000000082dc	jne	0x8317
00000000000082de	jmp	0x82f6
00000000000082e0	movl	-0x4c(%rbp), %edi
00000000000082e3	callq	_mig_dealloc_reply_port
00000000000082e8	jmp	0x82ff
00000000000082ea	movl	$0xfffffecc, %ebx
00000000000082ef	jmp	0x82f6
00000000000082f1	movl	$0xfffffed3, %ebx
00000000000082f6	leaq	-0x58(%rbp), %rdi
00000000000082fa	callq	_mach_msg_destroy
00000000000082ff	movl	%ebx, %eax
0000000000008301	addq	$0x48, %rsp
0000000000008305	popq	%rbx
0000000000008306	popq	%r14
0000000000008308	popq	%r15
000000000000830a	popq	%rbp
000000000000830b	retq
000000000000830c	cmpl	$0x38, %ecx
000000000000830f	jne	0x82f6
0000000000008311	cmpl	$0x1, -0x40(%rbp)
0000000000008315	jne	0x82f6
0000000000008317	movl	$0xfffffed4, %ebx
000000000000831c	cmpl	$0x0, -0x50(%rbp)
0000000000008320	jne	0x82f6
0000000000008322	testl	%eax, %eax
0000000000008324	js	0x8332
0000000000008326	movl	-0x38(%rbp), %ebx
0000000000008329	testl	%ebx, %ebx
000000000000832b	jne	0x82f6
000000000000832d	movl	-0x24(%rbp), %eax
0000000000008330	jmp	0x8348
0000000000008332	movzbl	-0x31(%rbp), %eax
0000000000008336	shll	$0x18, %eax
0000000000008339	cmpl	$0x1000000, %eax
000000000000833e	jne	0x82f6
0000000000008340	movl	-0x30(%rbp), %eax
0000000000008343	cmpl	-0x24(%rbp), %eax
0000000000008346	jne	0x82f6
0000000000008348	movq	-0x3c(%rbp), %rcx
000000000000834c	movq	%rcx, (%r15)
000000000000834f	movl	%eax, (%r14)
0000000000008352	xorl	%ebx, %ebx
0000000000008354	jmp	0x82ff
0000000000008356	nop
0000000000008357	nop
_sem_open:
___sem_open:
0000000000008358	movl	$0x200010c, %eax
000000000000835d	movq	%rcx, %r10
0000000000008360	syscall
0000000000008362	jae	0x836c
0000000000008364	movq	%rax, %rdi
0000000000008367	jmp	_cerror_nocancel
000000000000836c	retq
000000000000836d	nop
000000000000836e	nop
000000000000836f	nop
_sem_close:
0000000000008370	movl	$0x200010d, %eax
0000000000008375	movq	%rcx, %r10
0000000000008378	syscall
000000000000837a	jae	0x8384
000000000000837c	movq	%rax, %rdi
000000000000837f	jmp	_cerror_nocancel
0000000000008384	retq
0000000000008385	nop
0000000000008386	nop
0000000000008387	nop
_auditon:
0000000000008388	movl	$0x200015f, %eax
000000000000838d	movq	%rcx, %r10
0000000000008390	syscall
0000000000008392	jae	0x839c
0000000000008394	movq	%rax, %rdi
0000000000008397	jmp	_cerror_nocancel
000000000000839c	retq
_sfi_set_class_offtime:
000000000000839d	movq	%rsi, %rdx
00000000000083a0	movl	%edi, %esi
00000000000083a2	movl	$0x3, %edi
00000000000083a7	xorl	%ecx, %ecx
00000000000083a9	jmp	___sfi_ctl
00000000000083ae	nop
00000000000083af	nop
___sfi_ctl:
00000000000083b0	movl	$0x20001c8, %eax
00000000000083b5	movq	%rcx, %r10
00000000000083b8	syscall
00000000000083ba	jae	0x83c4
00000000000083bc	movq	%rax, %rdi
00000000000083bf	jmp	_cerror_nocancel
00000000000083c4	retq
_system_set_sfi_window:
00000000000083c5	movq	%rdi, %rdx
00000000000083c8	movl	$0x1, %edi
00000000000083cd	xorl	%esi, %esi
00000000000083cf	xorl	%ecx, %ecx
00000000000083d1	jmp	___sfi_ctl
_thread_get_exception_ports:
00000000000083d6	pushq	%rbp
00000000000083d7	movq	%rsp, %rbp
00000000000083da	pushq	%r15
00000000000083dc	pushq	%r14
00000000000083de	pushq	%r13
00000000000083e0	pushq	%r12
00000000000083e2	pushq	%rbx
00000000000083e3	subq	$0x358, %rsp
00000000000083ea	movq	%r9, -0x40(%rbp)
00000000000083ee	movq	%r8, %r15
00000000000083f1	movq	%rcx, %r12
00000000000083f4	movq	%rdx, %r13
00000000000083f7	leaq	_NDR_record(%rip), %rax
00000000000083fe	movq	(%rax), %rax
0000000000008401	movq	%rax, -0x358(%rbp)
0000000000008408	movl	%esi, -0x350(%rbp)
000000000000840e	movl	$0x1513, -0x370(%rbp)
0000000000008418	movl	%edi, -0x368(%rbp)
000000000000841e	callq	_mig_get_reply_port
0000000000008423	movl	%eax, -0x364(%rbp)
0000000000008429	movabsq	$0xe1e00000000, %rcx
0000000000008433	movq	%rcx, -0x360(%rbp)
000000000000843a	movl	$0x0, (%rsp)
0000000000008441	leaq	-0x370(%rbp), %r14
0000000000008448	movq	%r14, %rdi
000000000000844b	movl	$0x3, %esi
0000000000008450	movl	$0x24, %edx
0000000000008455	movl	$0x330, %ecx
000000000000845a	movl	%eax, %r8d
000000000000845d	xorl	%r9d, %r9d
0000000000008460	callq	_mach_msg
0000000000008465	movl	%eax, %ebx
0000000000008467	leal	-0x10000002(%rbx), %eax
000000000000846d	cmpl	$0xe, %eax
0000000000008470	ja	0x848c
0000000000008472	movl	$0x4003, %ecx
0000000000008477	btl	%eax, %ecx
000000000000847a	jae	0x848c
000000000000847c	movl	-0x364(%rbp), %edi
0000000000008482	callq	_mig_put_reply_port
0000000000008487	jmp	0x8519
000000000000848c	testl	%ebx, %ebx
000000000000848e	jne	0x84c8
0000000000008490	movl	-0x35c(%rbp), %eax
0000000000008496	cmpl	$0x47, %eax
0000000000008499	je	0x84d5
000000000000849b	cmpl	$0xe82, %eax
00000000000084a0	jne	0x84dc
00000000000084a2	movl	-0x370(%rbp), %ecx
00000000000084a8	movl	-0x36c(%rbp), %eax
00000000000084ae	testl	%ecx, %ecx
00000000000084b0	js	0x84e3
00000000000084b2	movl	$0xfffffed4, %ebx
00000000000084b7	cmpl	$0x24, %eax
00000000000084ba	jne	0x850d
00000000000084bc	movl	-0x350(%rbp), %edx
00000000000084c2	testl	%edx, %edx
00000000000084c4	jne	0x84ff
00000000000084c6	jmp	0x850d
00000000000084c8	movl	-0x364(%rbp), %edi
00000000000084ce	callq	_mig_dealloc_reply_port
00000000000084d3	jmp	0x8519
00000000000084d5	movl	$0xfffffecc, %ebx
00000000000084da	jmp	0x850d
00000000000084dc	movl	$0xfffffed3, %ebx
00000000000084e1	jmp	0x850d
00000000000084e3	leal	-0x1a8(%rax), %edx
00000000000084e9	movl	$0xfffffed4, %ebx
00000000000084ee	cmpl	$0x180, %edx
00000000000084f4	ja	0x850d
00000000000084f6	cmpl	$0x20, -0x358(%rbp)
00000000000084fd	jne	0x850d
00000000000084ff	movl	$0xfffffed4, %ebx
0000000000008504	cmpl	$0x0, -0x368(%rbp)
000000000000850b	je	0x852d
000000000000850d	leaq	-0x370(%rbp), %rdi
0000000000008514	callq	_mach_msg_destroy
0000000000008519	movl	%ebx, %eax
000000000000851b	addq	$0x358, %rsp
0000000000008522	popq	%rbx
0000000000008523	popq	%r12
0000000000008525	popq	%r13
0000000000008527	popq	%r14
0000000000008529	popq	%r15
000000000000852b	popq	%rbp
000000000000852c	retq
000000000000852d	testl	%ecx, %ecx
000000000000852f	js	0x8569
0000000000008531	movl	-0x350(%rbp), %ebx
0000000000008537	testl	%ebx, %ebx
0000000000008539	jne	0x850d
000000000000853b	leaq	-0x1c8(%rbp), %rsi
0000000000008542	movl	-0x4(%rsi), %edi
0000000000008545	cmpl	$0x21, %edi
0000000000008548	jb	0x8611
000000000000854e	movl	$0x80, %edx
0000000000008553	movq	%rdi, %rbx
0000000000008556	movq	%r13, %rdi
0000000000008559	callq	_memcpy
000000000000855e	movl	%ebx, (%r12)
0000000000008562	movl	$0xfffffecd, %ebx
0000000000008567	jmp	0x8519
0000000000008569	leaq	-0x34c(%rbp), %rcx
0000000000008570	xorl	%edx, %edx
0000000000008572	cmpl	$0xffffff, (%rcx)
0000000000008578	ja	0x850d
000000000000857a	incl	%edx
000000000000857c	addq	$0xc, %rcx
0000000000008580	cmpl	$0x20, %edx
0000000000008583	jb	0x8572
0000000000008585	movl	-0x1cc(%rbp), %edi
000000000000858b	cmpl	$0x20, %edi
000000000000858e	ja	0x850d
0000000000008594	leal	-0x1a8(%rax), %ecx
000000000000859a	shrl	$0x2, %ecx
000000000000859d	cmpl	%edi, %ecx
000000000000859f	jb	0x850d
00000000000085a5	leal	(,%rdi,4), %ecx
00000000000085ac	leal	0x1a8(%rcx), %edx
00000000000085b2	cmpl	%edx, %eax
00000000000085b4	jb	0x850d
00000000000085ba	subl	%ecx, %eax
00000000000085bc	cmpl	%edx, %eax
00000000000085be	jb	0x850d
00000000000085c4	leal	-0x1a8(%rax), %esi
00000000000085ca	shrl	$0x2, %esi
00000000000085cd	cmpl	%edi, %esi
00000000000085cf	jb	0x850d
00000000000085d5	subl	%ecx, %eax
00000000000085d7	cmpl	%edx, %eax
00000000000085d9	jne	0x850d
00000000000085df	addl	$0xfffffe58, %eax
00000000000085e4	shrl	$0x2, %eax
00000000000085e7	cmpl	%edi, %eax
00000000000085e9	jb	0x850d
00000000000085ef	movl	%ecx, %eax
00000000000085f1	leaq	-0x80(%rax,%r14), %rdx
00000000000085f6	addq	$-0x80, %rax
00000000000085fa	movq	%rdx, %rcx
00000000000085fd	movq	%rdx, -0x30(%rbp)
0000000000008601	addq	%rdx, %rax
0000000000008604	movq	%rax, -0x38(%rbp)
0000000000008608	leaq	-0x1c8(%rbp), %rsi
000000000000860f	jmp	0x861d
0000000000008611	xorl	%eax, %eax
0000000000008613	movq	%rax, -0x30(%rbp)
0000000000008617	xorl	%eax, %eax
0000000000008619	movq	%rax, -0x38(%rbp)
000000000000861d	leal	(,%rdi,4), %r14d
0000000000008625	movq	%rdi, %rbx
0000000000008628	movq	%r13, %rdi
000000000000862b	movq	%r14, %rdx
000000000000862e	callq	_memcpy
0000000000008633	movl	%ebx, (%r12)
0000000000008637	testl	%ebx, %ebx
0000000000008639	je	0x8659
000000000000863b	leaq	-0x354(%rbp), %rax
0000000000008642	movslq	%ebx, %rcx
0000000000008645	xorl	%edx, %edx
0000000000008647	movl	(%rax), %esi
0000000000008649	movl	%esi, (%r15,%rdx,4)
000000000000864d	addq	$0xc, %rax
0000000000008651	incq	%rdx
0000000000008654	cmpq	%rcx, %rdx
0000000000008657	jl	0x8647
0000000000008659	movq	-0x30(%rbp), %rsi
000000000000865d	addq	$0x228, %rsi
0000000000008664	movq	-0x40(%rbp), %rdi
0000000000008668	movq	%r14, %rdx
000000000000866b	callq	_memcpy
0000000000008670	movq	-0x38(%rbp), %rsi
0000000000008674	addq	$0x2a8, %rsi
000000000000867b	movq	0x10(%rbp), %rdi
000000000000867f	movq	%r14, %rdx
0000000000008682	callq	_memcpy
0000000000008687	xorl	%ebx, %ebx
0000000000008689	jmp	0x8519
_unlinkat:
000000000000868e	pushq	%rbp
000000000000868f	movq	%rsp, %rbp
0000000000008692	pushq	%rbx
0000000000008693	pushq	%rax
0000000000008694	callq	___unlinkat
0000000000008699	movl	%eax, %ebx
000000000000869b	testl	%eax, %eax
000000000000869d	jne	0x86a4
000000000000869f	callq	___inc_remove_counter
00000000000086a4	movl	%ebx, %eax
00000000000086a6	addq	$0x8, %rsp
00000000000086aa	popq	%rbx
00000000000086ab	popq	%rbp
00000000000086ac	retq
00000000000086ad	nop
00000000000086ae	nop
00000000000086af	nop
___unlinkat:
00000000000086b0	movl	$0x20001d8, %eax
00000000000086b5	movq	%rcx, %r10
00000000000086b8	syscall
00000000000086ba	jae	0x86c4
00000000000086bc	movq	%rax, %rdi
00000000000086bf	jmp	_cerror
00000000000086c4	retq
_proc_get_cpumon_params:
00000000000086c5	pushq	%rbp
00000000000086c6	movq	%rsp, %rbp
00000000000086c9	pushq	%r14
00000000000086cb	pushq	%rbx
00000000000086cc	subq	$0x20, %rsp
00000000000086d0	movq	%rdx, %r14
00000000000086d3	movq	%rsi, %rbx
00000000000086d6	movl	%edi, %r9d
00000000000086d9	movq	$0x0, (%rsp)
00000000000086e1	leaq	-0x28(%rbp), %r8
00000000000086e5	movl	$0x1, %edi
00000000000086ea	movl	$0xb, %esi
00000000000086ef	movl	$0x4, %edx
00000000000086f4	movl	$0x3, %ecx
00000000000086f9	callq	___process_policy
00000000000086fe	testl	%eax, %eax
0000000000008700	jne	0x8712
0000000000008702	cmpl	$0x5, -0x28(%rbp)
0000000000008706	jne	0x8712
0000000000008708	movl	-0x24(%rbp), %ecx
000000000000870b	movl	%ecx, (%rbx)
000000000000870d	movl	-0x20(%rbp), %ecx
0000000000008710	jmp	0x871a
0000000000008712	movl	$0x0, (%rbx)
0000000000008718	xorl	%ecx, %ecx
000000000000871a	movl	%ecx, (%r14)
000000000000871d	addq	$0x20, %rsp
0000000000008721	popq	%rbx
0000000000008722	popq	%r14
0000000000008724	popq	%rbp
0000000000008725	retq
_proc_disable_wakemon:
0000000000008726	pushq	%rbp
0000000000008727	movq	%rsp, %rbp
000000000000872a	subq	$0x10, %rsp
000000000000872e	movabsq	$-0xfffffffe, %rax
0000000000008738	leaq	-0x8(%rbp), %rdx
000000000000873c	movq	%rax, (%rdx)
000000000000873f	movl	$0x1, %esi
0000000000008744	callq	_proc_rlimit_control
0000000000008749	addq	$0x10, %rsp
000000000000874d	popq	%rbp
000000000000874e	retq
000000000000874f	nop
_mlock:
0000000000008750	movl	$0x20000cb, %eax
0000000000008755	movq	%rcx, %r10
0000000000008758	syscall
000000000000875a	jae	0x8764
000000000000875c	movq	%rax, %rdi
000000000000875f	jmp	_cerror_nocancel
0000000000008764	retq
0000000000008765	nop
0000000000008766	nop
0000000000008767	nop
_munlock:
0000000000008768	movl	$0x20000cc, %eax
000000000000876d	movq	%rcx, %r10
0000000000008770	syscall
0000000000008772	jae	0x877c
0000000000008774	movq	%rax, %rdi
0000000000008777	jmp	_cerror_nocancel
000000000000877c	retq
_proc_set_wakemon_defaults:
000000000000877d	pushq	%rbp
000000000000877e	movq	%rsp, %rbp
0000000000008781	subq	$0x10, %rsp
0000000000008785	movabsq	$-0xfffffff7, %rax
000000000000878f	leaq	-0x8(%rbp), %rdx
0000000000008793	movq	%rax, (%rdx)
0000000000008796	movl	$0x1, %esi
000000000000879b	callq	_proc_rlimit_control
00000000000087a0	addq	$0x10, %rsp
00000000000087a4	popq	%rbp
00000000000087a5	retq
_host_statistics64:
00000000000087a6	pushq	%rbp
00000000000087a7	movq	%rsp, %rbp
00000000000087aa	pushq	%r15
00000000000087ac	pushq	%r14
00000000000087ae	pushq	%r12
00000000000087b0	pushq	%rbx
00000000000087b1	subq	$0x440, %rsp
00000000000087b8	movq	%rcx, %r15
00000000000087bb	leaq	_NDR_record(%rip), %rax
00000000000087c2	movq	(%rax), %rax
00000000000087c5	leaq	-0x450(%rbp), %rbx
00000000000087cc	movq	%rax, 0x18(%rbx)
00000000000087d0	movl	%esi, 0x20(%rbx)
00000000000087d3	movl	(%rcx), %eax
00000000000087d5	movl	$0x100, %ecx
00000000000087da	cmpl	%ecx, %eax
00000000000087dc	cmovbl	%eax, %ecx
00000000000087df	movq	%rdx, %r14
00000000000087e2	movl	%ecx, 0x24(%rbx)
00000000000087e5	movl	$0x1513, (%rbx)
00000000000087eb	movl	%edi, 0x8(%rbx)
00000000000087ee	callq	_mig_get_reply_port
00000000000087f3	movl	%eax, 0xc(%rbx)
00000000000087f6	movabsq	$0xdb00000000, %rcx
0000000000008800	movq	%rcx, 0x10(%rbx)
0000000000008804	movl	$0x0, (%rsp)
000000000000880b	movq	%rbx, %rdi
000000000000880e	movl	$0x3, %esi
0000000000008813	movl	$0x28, %edx
0000000000008818	movl	$0x430, %ecx
000000000000881d	movl	%eax, %r8d
0000000000008820	xorl	%r9d, %r9d
0000000000008823	callq	_mach_msg
0000000000008828	movl	%eax, %ebx
000000000000882a	leal	-0x10000002(%rbx), %eax
0000000000008830	cmpl	$0xe, %eax
0000000000008833	ja	0x884c
0000000000008835	movl	$0x4003, %ecx
000000000000883a	btl	%eax, %ecx
000000000000883d	jae	0x884c
000000000000883f	movl	-0x444(%rbp), %edi
0000000000008845	callq	_mig_put_reply_port
000000000000884a	jmp	0x88c0
000000000000884c	testl	%ebx, %ebx
000000000000884e	jne	0x889b
0000000000008850	movl	-0x43c(%rbp), %eax
0000000000008856	cmpl	$0x47, %eax
0000000000008859	je	0x88a8
000000000000885b	cmpl	$0x13f, %eax
0000000000008860	jne	0x88af
0000000000008862	cmpl	$0x0, -0x450(%rbp)
0000000000008869	js	0x8894
000000000000886b	movl	-0x44c(%rbp), %eax
0000000000008871	leal	-0x28(%rax), %ecx
0000000000008874	cmpl	$0x401, %ecx
000000000000887a	jb	0x888b
000000000000887c	cmpl	$0x24, %eax
000000000000887f	jne	0x8894
0000000000008881	movl	-0x430(%rbp), %edx
0000000000008887	testl	%edx, %edx
0000000000008889	je	0x8894
000000000000888b	cmpl	$0x0, -0x448(%rbp)
0000000000008892	je	0x88d2
0000000000008894	movl	$0xfffffed4, %ebx
0000000000008899	jmp	0x88b4
000000000000889b	movl	-0x444(%rbp), %edi
00000000000088a1	callq	_mig_dealloc_reply_port
00000000000088a6	jmp	0x88c0
00000000000088a8	movl	$0xfffffecc, %ebx
00000000000088ad	jmp	0x88b4
00000000000088af	movl	$0xfffffed3, %ebx
00000000000088b4	leaq	-0x450(%rbp), %rdi
00000000000088bb	callq	_mach_msg_destroy
00000000000088c0	movl	%ebx, %eax
00000000000088c2	addq	$0x440, %rsp
00000000000088c9	popq	%rbx
00000000000088ca	popq	%r12
00000000000088cc	popq	%r14
00000000000088ce	popq	%r15
00000000000088d0	popq	%rbp
00000000000088d1	retq
00000000000088d2	movl	-0x430(%rbp), %ebx
00000000000088d8	testl	%ebx, %ebx
00000000000088da	jne	0x88b4
00000000000088dc	movl	-0x42c(%rbp), %r12d
00000000000088e3	cmpl	$0x100, %r12d
00000000000088ea	ja	0x8894
00000000000088ec	shrl	$0x2, %ecx
00000000000088ef	cmpl	%r12d, %ecx
00000000000088f2	jb	0x8894
00000000000088f4	leal	0x28(,%r12,4), %ecx
00000000000088fc	movl	$0xfffffed4, %ebx
0000000000008901	cmpl	%ecx, %eax
0000000000008903	jne	0x88b4
0000000000008905	movl	(%r15), %edx
0000000000008908	leaq	-0x428(%rbp), %rsi
000000000000890f	cmpl	%edx, %r12d
0000000000008912	jbe	0x8929
0000000000008914	shll	$0x2, %edx
0000000000008917	movq	%r14, %rdi
000000000000891a	callq	_memcpy
000000000000891f	movl	%r12d, (%r15)
0000000000008922	movl	$0xfffffecd, %ebx
0000000000008927	jmp	0x88c0
0000000000008929	leal	(,%r12,4), %eax
0000000000008931	movl	%eax, %edx
0000000000008933	movq	%r14, %rdi
0000000000008936	callq	_memcpy
000000000000893b	movl	%r12d, (%r15)
000000000000893e	xorl	%ebx, %ebx
0000000000008940	jmp	0x88c0
_proc_listpids:
0000000000008945	pushq	%rbp
0000000000008946	movq	%rsp, %rbp
0000000000008949	pushq	%rbx
000000000000894a	pushq	%rax
000000000000894b	movl	%ecx, %r9d
000000000000894e	movq	%rdx, %r8
0000000000008951	movl	%esi, %edx
0000000000008953	movl	%edi, %esi
0000000000008955	xorl	%ebx, %ebx
0000000000008957	movl	$0x1, %edi
000000000000895c	xorl	%ecx, %ecx
000000000000895e	callq	___proc_info
0000000000008963	cmpl	$-0x1, %eax
0000000000008966	cmovel	%ebx, %eax
0000000000008969	addq	$0x8, %rsp
000000000000896d	popq	%rbx
000000000000896e	popq	%rbp
000000000000896f	retq
_clonefile:
0000000000008970	movl	%edx, %r8d
0000000000008973	movq	%rsi, %rcx
0000000000008976	movq	%rdi, %rsi
0000000000008979	movl	$0xfffffffe, %edi
000000000000897e	movl	$0xfffffffe, %edx
0000000000008983	jmp	_clonefileat
_proc_denap_assertion_begin_with_msg:
0000000000008988	movq	%rsi, %rdx
000000000000898b	jmp	_proc_importance_assertion_begin_with_msg
_proc_importance_assertion_begin_with_msg:
0000000000008990	pushq	%rbp
0000000000008991	movq	%rsp, %rbp
0000000000008994	pushq	%r14
0000000000008996	pushq	%rbx
0000000000008997	subq	$0x10, %rsp
000000000000899b	testq	%rdx, %rdx
000000000000899e	je	0x89d5
00000000000089a0	movl	(%rdi), %eax
00000000000089a2	movl	%eax, %ecx
00000000000089a4	andl	$0x201f0000, %ecx
00000000000089aa	movl	$0x5, %ebx
00000000000089af	cmpl	$0x20000000, %ecx
00000000000089b5	jne	0x8a26
00000000000089b7	movq	%rdx, %r14
00000000000089ba	btl	$0x1c, %eax
00000000000089be	jb	0x89dc
00000000000089c0	orl	$0x10000000, %eax
00000000000089c5	movl	%eax, (%rdi)
00000000000089c7	leaq	_important_boost_assertion_token(%rip), %rax
00000000000089ce	movq	%rax, (%r14)
00000000000089d1	xorl	%ebx, %ebx
00000000000089d3	jmp	0x8a26
00000000000089d5	movl	$0x16, %ebx
00000000000089da	jmp	0x8a26
00000000000089dc	callq	_getpid
00000000000089e1	movq	$0x0, (%rsp)
00000000000089e9	xorl	%ebx, %ebx
00000000000089eb	movl	$0x1, %edi
00000000000089f0	movl	$0xe, %esi
00000000000089f5	movl	$0x7, %edx
00000000000089fa	movl	$0x1, %ecx
00000000000089ff	xorl	%r8d, %r8d
0000000000008a02	movl	%eax, %r9d
0000000000008a05	callq	___process_policy
0000000000008a0a	testl	%eax, %eax
0000000000008a0c	je	0x8a1c
0000000000008a0e	callq	___error
0000000000008a13	callq	___error
0000000000008a18	movl	(%rax), %ebx
0000000000008a1a	jmp	0x8a26
0000000000008a1c	leaq	_important_boost_assertion_token(%rip), %rax
0000000000008a23	movq	%rax, (%r14)
0000000000008a26	movl	%ebx, %eax
0000000000008a28	addq	$0x10, %rsp
0000000000008a2c	popq	%rbx
0000000000008a2d	popq	%r14
0000000000008a2f	popq	%rbp
0000000000008a30	retq
_proc_denap_assertion_complete:
0000000000008a31	jmp	_proc_importance_assertion_complete
_proc_importance_assertion_complete:
0000000000008a36	pushq	%rbp
0000000000008a37	movq	%rsp, %rbp
0000000000008a3a	pushq	%rbx
0000000000008a3b	pushq	%rax
0000000000008a3c	testq	%rdi, %rdi
0000000000008a3f	je	0x8a92
0000000000008a41	movl	$0x5, %ebx
0000000000008a46	leaq	_important_boost_assertion_token(%rip), %rax
0000000000008a4d	cmpq	%rax, %rdi
0000000000008a50	jne	0x8a94
0000000000008a52	callq	_getpid
0000000000008a57	movq	$0x0, (%rsp)
0000000000008a5f	xorl	%ebx, %ebx
0000000000008a61	movl	$0x1, %edi
0000000000008a66	movl	$0xf, %esi
0000000000008a6b	movl	$0x7, %edx
0000000000008a70	movl	$0x1, %ecx
0000000000008a75	xorl	%r8d, %r8d
0000000000008a78	movl	%eax, %r9d
0000000000008a7b	callq	___process_policy
0000000000008a80	testl	%eax, %eax
0000000000008a82	je	0x8a94
0000000000008a84	callq	___error
0000000000008a89	callq	___error
0000000000008a8e	movl	(%rax), %ebx
0000000000008a90	jmp	0x8a94
0000000000008a92	xorl	%ebx, %ebx
0000000000008a94	movl	%ebx, %eax
0000000000008a96	addq	$0x8, %rsp
0000000000008a9a	popq	%rbx
0000000000008a9b	popq	%rbp
0000000000008a9c	retq
_mach_port_extract_right:
0000000000008a9d	jmp	__kernelrpc_mach_port_extract_right
__kernelrpc_mach_port_extract_right:
0000000000008aa2	pushq	%rbp
0000000000008aa3	movq	%rsp, %rbp
0000000000008aa6	pushq	%r15
0000000000008aa8	pushq	%r14
0000000000008aaa	pushq	%rbx
0000000000008aab	subq	$0x38, %rsp
0000000000008aaf	movq	%r8, %r14
0000000000008ab2	movq	%rcx, %r15
0000000000008ab5	leaq	_NDR_record(%rip), %rax
0000000000008abc	movq	(%rax), %rax
0000000000008abf	leaq	-0x48(%rbp), %rbx
0000000000008ac3	movq	%rax, 0x18(%rbx)
0000000000008ac7	movl	%esi, 0x20(%rbx)
0000000000008aca	movl	%edx, 0x24(%rbx)
0000000000008acd	movl	$0x1513, (%rbx)
0000000000008ad3	movl	%edi, 0x8(%rbx)
0000000000008ad6	callq	_mig_get_reply_port
0000000000008adb	movl	%eax, 0xc(%rbx)
0000000000008ade	movabsq	$0xc8f00000000, %rcx
0000000000008ae8	movq	%rcx, 0x10(%rbx)
0000000000008aec	movl	$0x0, (%rsp)
0000000000008af3	movq	%rbx, %rdi
0000000000008af6	movl	$0x3, %esi
0000000000008afb	movl	$0x28, %edx
0000000000008b00	movl	$0x30, %ecx
0000000000008b05	movl	%eax, %r8d
0000000000008b08	xorl	%r9d, %r9d
0000000000008b0b	callq	_mach_msg
0000000000008b10	movl	%eax, %ebx
0000000000008b12	leal	-0x10000002(%rbx), %eax
0000000000008b18	cmpl	$0xe, %eax
0000000000008b1b	ja	0x8b31
0000000000008b1d	movl	$0x4003, %ecx
0000000000008b22	btl	%eax, %ecx
0000000000008b25	jae	0x8b31
0000000000008b27	movl	-0x3c(%rbp), %edi
0000000000008b2a	callq	_mig_put_reply_port
0000000000008b2f	jmp	0x8b98
0000000000008b31	testl	%ebx, %ebx
0000000000008b33	jne	0x8b61
0000000000008b35	movl	-0x34(%rbp), %eax
0000000000008b38	cmpl	$0x47, %eax
0000000000008b3b	je	0x8b6b
0000000000008b3d	cmpl	$0xcf3, %eax
0000000000008b42	jne	0x8b72
0000000000008b44	movl	-0x48(%rbp), %eax
0000000000008b47	movl	-0x44(%rbp), %ecx
0000000000008b4a	movl	$0xfffffed4, %ebx
0000000000008b4f	testl	%eax, %eax
0000000000008b51	js	0x8b79
0000000000008b53	cmpl	$0x24, %ecx
0000000000008b56	jne	0x8b8f
0000000000008b58	movl	-0x28(%rbp), %ecx
0000000000008b5b	testl	%ecx, %ecx
0000000000008b5d	jne	0x8b84
0000000000008b5f	jmp	0x8b8f
0000000000008b61	movl	-0x3c(%rbp), %edi
0000000000008b64	callq	_mig_dealloc_reply_port
0000000000008b69	jmp	0x8b98
0000000000008b6b	movl	$0xfffffecc, %ebx
0000000000008b70	jmp	0x8b8f
0000000000008b72	movl	$0xfffffed3, %ebx
0000000000008b77	jmp	0x8b8f
0000000000008b79	cmpl	$0x28, %ecx
0000000000008b7c	jne	0x8b8f
0000000000008b7e	cmpl	$0x1, -0x30(%rbp)
0000000000008b82	jne	0x8b8f
0000000000008b84	movl	$0xfffffed4, %ebx
0000000000008b89	cmpl	$0x0, -0x40(%rbp)
0000000000008b8d	je	0x8ba5
0000000000008b8f	leaq	-0x48(%rbp), %rdi
0000000000008b93	callq	_mach_msg_destroy
0000000000008b98	movl	%ebx, %eax
0000000000008b9a	addq	$0x38, %rsp
0000000000008b9e	popq	%rbx
0000000000008b9f	popq	%r14
0000000000008ba1	popq	%r15
0000000000008ba3	popq	%rbp
0000000000008ba4	retq
0000000000008ba5	testl	%eax, %eax
0000000000008ba7	js	0x8bb5
0000000000008ba9	movl	-0x28(%rbp), %ebx
0000000000008bac	testl	%ebx, %ebx
0000000000008bae	jne	0x8b8f
0000000000008bb0	movl	-0x24(%rbp), %eax
0000000000008bb3	jmp	0x8bbf
0000000000008bb5	movl	-0x24(%rbp), %eax
0000000000008bb8	cmpl	$0xffffff, %eax
0000000000008bbd	ja	0x8b8f
0000000000008bbf	movl	-0x2c(%rbp), %ecx
0000000000008bc2	movl	%ecx, (%r15)
0000000000008bc5	shrl	$0x10, %eax
0000000000008bc8	movzbl	%al, %eax
0000000000008bcb	movl	%eax, (%r14)
0000000000008bce	xorl	%ebx, %ebx
0000000000008bd0	jmp	0x8b98
_task_set_exception_ports:
0000000000008bd2	pushq	%rbp
0000000000008bd3	movq	%rsp, %rbp
0000000000008bd6	pushq	%rbx
0000000000008bd7	subq	$0x48, %rsp
0000000000008bdb	leaq	-0x48(%rbp), %rbx
0000000000008bdf	movl	$0x1, 0x18(%rbx)
0000000000008be6	movl	%edx, 0x1c(%rbx)
0000000000008be9	movl	$0x130000, 0x24(%rbx)
0000000000008bf0	leaq	_NDR_record(%rip), %rax
0000000000008bf7	movq	(%rax), %rax
0000000000008bfa	movq	%rax, 0x28(%rbx)
0000000000008bfe	movl	%esi, 0x30(%rbx)
0000000000008c01	movl	%ecx, 0x34(%rbx)
0000000000008c04	movl	%r8d, 0x38(%rbx)
0000000000008c08	movl	$0x80001513, (%rbx)
0000000000008c0e	movl	%edi, 0x8(%rbx)
0000000000008c11	callq	_mig_get_reply_port
0000000000008c16	movl	%eax, 0xc(%rbx)
0000000000008c19	movabsq	$0xd5500000000, %rcx
0000000000008c23	movq	%rcx, 0x10(%rbx)
0000000000008c27	movl	$0x0, (%rsp)
0000000000008c2e	movq	%rbx, %rdi
0000000000008c31	movl	$0x3, %esi
0000000000008c36	movl	$0x3c, %edx
0000000000008c3b	movl	$0x2c, %ecx
0000000000008c40	movl	%eax, %r8d
0000000000008c43	xorl	%r9d, %r9d
0000000000008c46	callq	_mach_msg
0000000000008c4b	movl	%eax, %ebx
0000000000008c4d	leal	-0x10000002(%rbx), %eax
0000000000008c53	cmpl	$0xe, %eax
0000000000008c56	ja	0x8c6c
0000000000008c58	movl	$0x4003, %ecx
0000000000008c5d	btl	%eax, %ecx
0000000000008c60	jae	0x8c6c
0000000000008c62	movl	-0x3c(%rbp), %edi
0000000000008c65	callq	_mig_put_reply_port
0000000000008c6a	jmp	0x8cc1
0000000000008c6c	testl	%ebx, %ebx
0000000000008c6e	jne	0x8ca2
0000000000008c70	movl	-0x34(%rbp), %eax
0000000000008c73	cmpl	$0x47, %eax
0000000000008c76	je	0x8cac
0000000000008c78	cmpl	$0xdb9, %eax
0000000000008c7d	jne	0x8cb3
0000000000008c7f	movl	$0xfffffed4, %ebx
0000000000008c84	cmpl	$0x0, -0x48(%rbp)
0000000000008c88	js	0x8cb8
0000000000008c8a	cmpl	$0x24, -0x44(%rbp)
0000000000008c8e	jne	0x8cb8
0000000000008c90	movl	-0x40(%rbp), %eax
0000000000008c93	testl	%eax, %eax
0000000000008c95	jne	0x8cb8
0000000000008c97	movl	-0x28(%rbp), %ebx
0000000000008c9a	testl	%ebx, %ebx
0000000000008c9c	jne	0x8cb8
0000000000008c9e	xorl	%ebx, %ebx
0000000000008ca0	jmp	0x8cc1
0000000000008ca2	movl	-0x3c(%rbp), %edi
0000000000008ca5	callq	_mig_dealloc_reply_port
0000000000008caa	jmp	0x8cc1
0000000000008cac	movl	$0xfffffecc, %ebx
0000000000008cb1	jmp	0x8cb8
0000000000008cb3	movl	$0xfffffed3, %ebx
0000000000008cb8	leaq	-0x48(%rbp), %rdi
0000000000008cbc	callq	_mach_msg_destroy
0000000000008cc1	movl	%ebx, %eax
0000000000008cc3	addq	$0x48, %rsp
0000000000008cc7	popq	%rbx
0000000000008cc8	popq	%rbp
0000000000008cc9	retq
0000000000008cca	nop
0000000000008ccb	nop
_getpgid:
0000000000008ccc	movl	$0x2000097, %eax
0000000000008cd1	movq	%rcx, %r10
0000000000008cd4	syscall
0000000000008cd6	jae	0x8ce0
0000000000008cd8	movq	%rax, %rdi
0000000000008cdb	jmp	_cerror_nocancel
0000000000008ce0	retq
_kdebug_signpost_start:
0000000000008ce1	leal	0x1(,%rdi,4), %edi
0000000000008ce8	jmp	_kdebug_signpost_internal
_kdebug_signpost_internal:
0000000000008ced	pushq	%rbp
0000000000008cee	movq	%rsp, %rbp
0000000000008cf1	pushq	%r15
0000000000008cf3	pushq	%r14
0000000000008cf5	pushq	%r13
0000000000008cf7	pushq	%r12
0000000000008cf9	pushq	%rbx
0000000000008cfa	pushq	%rax
0000000000008cfb	cmpl	$0x10000, %edi
0000000000008d01	jb	0x8d15
0000000000008d03	callq	___error
0000000000008d08	movl	$0x16, (%rax)
0000000000008d0e	movl	$0xffffffff, %eax
0000000000008d13	jmp	0x8d59
0000000000008d15	movq	%r8, %r14
0000000000008d18	movq	%rcx, %r15
0000000000008d1b	movq	%rdx, %r12
0000000000008d1e	movq	%rsi, %r13
0000000000008d21	movl	%edi, %ebx
0000000000008d23	orl	$0x210a0000, %ebx
0000000000008d29	movl	%ebx, %edi
0000000000008d2b	callq	_kdebug_is_enabled
0000000000008d30	movl	%eax, %ecx
0000000000008d32	xorl	%eax, %eax
0000000000008d34	testb	%cl, %cl
0000000000008d36	je	0x8d59
0000000000008d38	movl	%ebx, %edi
0000000000008d3a	movq	%r13, %rsi
0000000000008d3d	movq	%r12, %rdx
0000000000008d40	movq	%r15, %rcx
0000000000008d43	movq	%r14, %r8
0000000000008d46	addq	$0x8, %rsp
0000000000008d4a	popq	%rbx
0000000000008d4b	popq	%r12
0000000000008d4d	popq	%r13
0000000000008d4f	popq	%r14
0000000000008d51	popq	%r15
0000000000008d53	popq	%rbp
0000000000008d54	jmp	___kdebug_trace64
0000000000008d59	addq	$0x8, %rsp
0000000000008d5d	popq	%rbx
0000000000008d5e	popq	%r12
0000000000008d60	popq	%r13
0000000000008d62	popq	%r14
0000000000008d64	popq	%r15
0000000000008d66	popq	%rbp
0000000000008d67	retq
_kdebug_signpost_end:
0000000000008d68	leal	0x2(,%rdi,4), %edi
0000000000008d6f	jmp	_kdebug_signpost_internal
_host_statistics:
0000000000008d74	pushq	%rbp
0000000000008d75	movq	%rsp, %rbp
0000000000008d78	pushq	%r15
0000000000008d7a	pushq	%r14
0000000000008d7c	pushq	%r12
0000000000008d7e	pushq	%rbx
0000000000008d7f	subq	$0x150, %rsp
0000000000008d86	movq	%rcx, %r15
0000000000008d89	leaq	_NDR_record(%rip), %rax
0000000000008d90	movq	(%rax), %rax
0000000000008d93	leaq	-0x160(%rbp), %rbx
0000000000008d9a	movq	%rax, 0x18(%rbx)
0000000000008d9e	movl	%esi, 0x20(%rbx)
0000000000008da1	movl	(%rcx), %eax
0000000000008da3	movl	$0x44, %ecx
0000000000008da8	cmpl	%ecx, %eax
0000000000008daa	cmovbl	%eax, %ecx
0000000000008dad	movq	%rdx, %r14
0000000000008db0	movl	%ecx, 0x24(%rbx)
0000000000008db3	movl	$0x1513, (%rbx)
0000000000008db9	movl	%edi, 0x8(%rbx)
0000000000008dbc	callq	_mig_get_reply_port
0000000000008dc1	movl	%eax, 0xc(%rbx)
0000000000008dc4	movabsq	$0xd800000000, %rcx
0000000000008dce	movq	%rcx, 0x10(%rbx)
0000000000008dd2	movl	$0x0, (%rsp)
0000000000008dd9	movq	%rbx, %rdi
0000000000008ddc	movl	$0x3, %esi
0000000000008de1	movl	$0x28, %edx
0000000000008de6	movl	$0x140, %ecx
0000000000008deb	movl	%eax, %r8d
0000000000008dee	xorl	%r9d, %r9d
0000000000008df1	callq	_mach_msg
0000000000008df6	movl	%eax, %ebx
0000000000008df8	leal	-0x10000002(%rbx), %eax
0000000000008dfe	cmpl	$0xe, %eax
0000000000008e01	ja	0x8e1a
0000000000008e03	movl	$0x4003, %ecx
0000000000008e08	btl	%eax, %ecx
0000000000008e0b	jae	0x8e1a
0000000000008e0d	movl	-0x154(%rbp), %edi
0000000000008e13	callq	_mig_put_reply_port
0000000000008e18	jmp	0x8e8e
0000000000008e1a	testl	%ebx, %ebx
0000000000008e1c	jne	0x8e69
0000000000008e1e	movl	-0x14c(%rbp), %eax
0000000000008e24	cmpl	$0x47, %eax
0000000000008e27	je	0x8e76
0000000000008e29	cmpl	$0x13c, %eax
0000000000008e2e	jne	0x8e7d
0000000000008e30	cmpl	$0x0, -0x160(%rbp)
0000000000008e37	js	0x8e62
0000000000008e39	movl	-0x15c(%rbp), %eax
0000000000008e3f	leal	-0x28(%rax), %ecx
0000000000008e42	cmpl	$0x111, %ecx
0000000000008e48	jb	0x8e59
0000000000008e4a	cmpl	$0x24, %eax
0000000000008e4d	jne	0x8e62
0000000000008e4f	movl	-0x140(%rbp), %edx
0000000000008e55	testl	%edx, %edx
0000000000008e57	je	0x8e62
0000000000008e59	cmpl	$0x0, -0x158(%rbp)
0000000000008e60	je	0x8ea0
0000000000008e62	movl	$0xfffffed4, %ebx
0000000000008e67	jmp	0x8e82
0000000000008e69	movl	-0x154(%rbp), %edi
0000000000008e6f	callq	_mig_dealloc_reply_port
0000000000008e74	jmp	0x8e8e
0000000000008e76	movl	$0xfffffecc, %ebx
0000000000008e7b	jmp	0x8e82
0000000000008e7d	movl	$0xfffffed3, %ebx
0000000000008e82	leaq	-0x160(%rbp), %rdi
0000000000008e89	callq	_mach_msg_destroy
0000000000008e8e	movl	%ebx, %eax
0000000000008e90	addq	$0x150, %rsp
0000000000008e97	popq	%rbx
0000000000008e98	popq	%r12
0000000000008e9a	popq	%r14
0000000000008e9c	popq	%r15
0000000000008e9e	popq	%rbp
0000000000008e9f	retq
0000000000008ea0	movl	-0x140(%rbp), %ebx
0000000000008ea6	testl	%ebx, %ebx
0000000000008ea8	jne	0x8e82
0000000000008eaa	movl	-0x13c(%rbp), %r12d
0000000000008eb1	cmpl	$0x44, %r12d
0000000000008eb5	ja	0x8e62
0000000000008eb7	shrl	$0x2, %ecx
0000000000008eba	cmpl	%r12d, %ecx
0000000000008ebd	jb	0x8e62
0000000000008ebf	leal	0x28(,%r12,4), %ecx
0000000000008ec7	movl	$0xfffffed4, %ebx
0000000000008ecc	cmpl	%ecx, %eax
0000000000008ece	jne	0x8e82
0000000000008ed0	movl	(%r15), %edx
0000000000008ed3	leaq	-0x138(%rbp), %rsi
0000000000008eda	cmpl	%edx, %r12d
0000000000008edd	jbe	0x8ef4
0000000000008edf	shll	$0x2, %edx
0000000000008ee2	movq	%r14, %rdi
0000000000008ee5	callq	_memcpy
0000000000008eea	movl	%r12d, (%r15)
0000000000008eed	movl	$0xfffffecd, %ebx
0000000000008ef2	jmp	0x8e8e
0000000000008ef4	leal	(,%r12,4), %eax
0000000000008efc	movl	%eax, %edx
0000000000008efe	movq	%r14, %rdi
0000000000008f01	callq	_memcpy
0000000000008f06	movl	%r12d, (%r15)
0000000000008f09	xorl	%ebx, %ebx
0000000000008f0b	jmp	0x8e8e
_terminate_with_reason:
0000000000008f0d	pushq	%rbp
0000000000008f0e	movq	%rsp, %rbp
0000000000008f11	subq	$0x10, %rsp
0000000000008f15	movq	%rcx, %r9
0000000000008f18	movq	%r8, (%rsp)
0000000000008f1c	xorl	%ecx, %ecx
0000000000008f1e	xorl	%r8d, %r8d
0000000000008f21	callq	___terminate_with_payload
0000000000008f26	addq	$0x10, %rsp
0000000000008f2a	popq	%rbp
0000000000008f2b	retq
___terminate_with_payload:
0000000000008f2c	movl	$0x2000208, %eax
0000000000008f31	movq	%rcx, %r10
0000000000008f34	syscall
0000000000008f36	jae	0x8f40
0000000000008f38	movq	%rax, %rdi
0000000000008f3b	jmp	_cerror_nocancel
0000000000008f40	retq
_task_set_info:
0000000000008f41	pushq	%rbp
0000000000008f42	movq	%rsp, %rbp
0000000000008f45	pushq	%r15
0000000000008f47	pushq	%r14
0000000000008f49	pushq	%rbx
0000000000008f4a	subq	$0x198, %rsp
0000000000008f51	leaq	_NDR_record(%rip), %rax
0000000000008f58	movq	(%rax), %rax
0000000000008f5b	movq	%rax, -0x188(%rbp)
0000000000008f62	movl	%esi, -0x180(%rbp)
0000000000008f68	movl	$0xfffffecd, %r14d
0000000000008f6e	cmpl	$0x57, %ecx
0000000000008f71	ja	0x9082
0000000000008f77	movl	%ecx, %ebx
0000000000008f79	movl	%edi, %r15d
0000000000008f7c	leaq	-0x178(%rbp), %r14
0000000000008f83	leal	(,%rbx,4), %eax
0000000000008f8a	movq	%r14, %rdi
0000000000008f8d	movq	%rdx, %rsi
0000000000008f90	movq	%rax, %rdx
0000000000008f93	callq	_memcpy
0000000000008f98	movl	%ebx, -0x4(%r14)
0000000000008f9c	leal	0x28(,%rbx,4), %ebx
0000000000008fa3	movl	$0x1513, -0x28(%r14)
0000000000008fab	movl	%r15d, -0x20(%r14)
0000000000008faf	callq	_mig_get_reply_port
0000000000008fb4	movl	%eax, -0x1c(%r14)
0000000000008fb8	movabsq	$0xd4e00000000, %rcx
0000000000008fc2	movq	%rcx, -0x18(%r14)
0000000000008fc6	movl	$0x0, (%rsp)
0000000000008fcd	leaq	-0x1a0(%rbp), %rdi
0000000000008fd4	movl	$0x3, %esi
0000000000008fd9	movl	%ebx, %edx
0000000000008fdb	movl	$0x2c, %ecx
0000000000008fe0	movl	%eax, %r8d
0000000000008fe3	xorl	%r9d, %r9d
0000000000008fe6	callq	_mach_msg
0000000000008feb	movl	%eax, %r14d
0000000000008fee	leal	-0x10000002(%r14), %eax
0000000000008ff5	cmpl	$0xe, %eax
0000000000008ff8	ja	0x9011
0000000000008ffa	movl	$0x4003, %ecx
0000000000008fff	btl	%eax, %ecx
0000000000009002	jae	0x9011
0000000000009004	movl	-0x194(%rbp), %edi
000000000000900a	callq	_mig_put_reply_port
000000000000900f	jmp	0x9082
0000000000009011	testl	%r14d, %r14d
0000000000009014	jne	0x905b
0000000000009016	movl	-0x18c(%rbp), %eax
000000000000901c	cmpl	$0x47, %eax
000000000000901f	je	0x9068
0000000000009021	cmpl	$0xdb2, %eax
0000000000009026	jne	0x9070
0000000000009028	movl	$0xfffffed4, %r14d
000000000000902e	cmpl	$0x0, -0x1a0(%rbp)
0000000000009035	js	0x9076
0000000000009037	cmpl	$0x24, -0x19c(%rbp)
000000000000903e	jne	0x9076
0000000000009040	movl	-0x198(%rbp), %eax
0000000000009046	testl	%eax, %eax
0000000000009048	jne	0x9076
000000000000904a	movl	-0x180(%rbp), %r14d
0000000000009051	testl	%r14d, %r14d
0000000000009054	jne	0x9076
0000000000009056	xorl	%r14d, %r14d
0000000000009059	jmp	0x9082
000000000000905b	movl	-0x194(%rbp), %edi
0000000000009061	callq	_mig_dealloc_reply_port
0000000000009066	jmp	0x9082
0000000000009068	movl	$0xfffffecc, %r14d
000000000000906e	jmp	0x9076
0000000000009070	movl	$0xfffffed3, %r14d
0000000000009076	leaq	-0x1a0(%rbp), %rdi
000000000000907d	callq	_mach_msg_destroy
0000000000009082	movl	%r14d, %eax
0000000000009085	addq	$0x198, %rsp
000000000000908c	popq	%rbx
000000000000908d	popq	%r14
000000000000908f	popq	%r15
0000000000009091	popq	%rbp
0000000000009092	retq
_mach_voucher_extract_attr_content:
0000000000009093	pushq	%rbp
0000000000009094	movq	%rsp, %rbp
0000000000009097	pushq	%r15
0000000000009099	pushq	%r14
000000000000909b	pushq	%r12
000000000000909d	pushq	%rbx
000000000000909e	subq	$0x1040, %rsp
00000000000090a5	movq	%rcx, %r15
00000000000090a8	leaq	_NDR_record(%rip), %rax
00000000000090af	movq	(%rax), %rax
00000000000090b2	leaq	-0x1050(%rbp), %rbx
00000000000090b9	movq	%rax, 0x18(%rbx)
00000000000090bd	movl	%esi, 0x20(%rbx)
00000000000090c0	movl	(%rcx), %eax
00000000000090c2	movl	$0x1000, %ecx
00000000000090c7	cmpl	%ecx, %eax
00000000000090c9	cmovbl	%eax, %ecx
00000000000090cc	movq	%rdx, %r14
00000000000090cf	movl	%ecx, 0x24(%rbx)
00000000000090d2	movl	$0x1513, (%rbx)
00000000000090d8	movl	%edi, 0x8(%rbx)
00000000000090db	callq	_mig_get_reply_port
00000000000090e0	movl	%eax, 0xc(%rbx)
00000000000090e3	movabsq	$0x151800000000, %rcx
00000000000090ed	movq	%rcx, 0x10(%rbx)
00000000000090f1	movl	$0x0, (%rsp)
00000000000090f8	movq	%rbx, %rdi
00000000000090fb	movl	$0x3, %esi
0000000000009100	movl	$0x28, %edx
0000000000009105	movl	$0x1030, %ecx
000000000000910a	movl	%eax, %r8d
000000000000910d	xorl	%r9d, %r9d
0000000000009110	callq	_mach_msg
0000000000009115	movl	%eax, %ebx
0000000000009117	leal	-0x10000002(%rbx), %eax
000000000000911d	cmpl	$0xe, %eax
0000000000009120	ja	0x9139
0000000000009122	movl	$0x4003, %ecx
0000000000009127	btl	%eax, %ecx
000000000000912a	jae	0x9139
000000000000912c	movl	-0x1044(%rbp), %edi
0000000000009132	callq	_mig_put_reply_port
0000000000009137	jmp	0x91ad
0000000000009139	testl	%ebx, %ebx
000000000000913b	jne	0x9188
000000000000913d	movl	-0x103c(%rbp), %eax
0000000000009143	cmpl	$0x47, %eax
0000000000009146	je	0x9195
0000000000009148	cmpl	$0x157c, %eax
000000000000914d	jne	0x919c
000000000000914f	cmpl	$0x0, -0x1050(%rbp)
0000000000009156	js	0x9181
0000000000009158	movl	-0x104c(%rbp), %eax
000000000000915e	leal	-0x28(%rax), %ecx
0000000000009161	cmpl	$0x1001, %ecx
0000000000009167	jb	0x9178
0000000000009169	cmpl	$0x24, %eax
000000000000916c	jne	0x9181
000000000000916e	movl	-0x1030(%rbp), %edx
0000000000009174	testl	%edx, %edx
0000000000009176	je	0x9181
0000000000009178	cmpl	$0x0, -0x1048(%rbp)
000000000000917f	je	0x91bf
0000000000009181	movl	$0xfffffed4, %ebx
0000000000009186	jmp	0x91a1
0000000000009188	movl	-0x1044(%rbp), %edi
000000000000918e	callq	_mig_dealloc_reply_port
0000000000009193	jmp	0x91ad
0000000000009195	movl	$0xfffffecc, %ebx
000000000000919a	jmp	0x91a1
000000000000919c	movl	$0xfffffed3, %ebx
00000000000091a1	leaq	-0x1050(%rbp), %rdi
00000000000091a8	callq	_mach_msg_destroy
00000000000091ad	movl	%ebx, %eax
00000000000091af	addq	$0x1040, %rsp
00000000000091b6	popq	%rbx
00000000000091b7	popq	%r12
00000000000091b9	popq	%r14
00000000000091bb	popq	%r15
00000000000091bd	popq	%rbp
00000000000091be	retq
00000000000091bf	movl	-0x1030(%rbp), %ebx
00000000000091c5	testl	%ebx, %ebx
00000000000091c7	jne	0x91a1
00000000000091c9	movl	-0x102c(%rbp), %r12d
00000000000091d0	cmpq	$0x1000, %r12
00000000000091d7	ja	0x9181
00000000000091d9	cmpl	%r12d, %ecx
00000000000091dc	jb	0x9181
00000000000091de	leal	0x2b(%r12), %ecx
00000000000091e3	andl	$-0x4, %ecx
00000000000091e6	movl	$0xfffffed4, %ebx
00000000000091eb	cmpl	%ecx, %eax
00000000000091ed	jne	0x91a1
00000000000091ef	movl	(%r15), %edx
00000000000091f2	leaq	-0x1028(%rbp), %rsi
00000000000091f9	movq	%r14, %rdi
00000000000091fc	cmpl	%edx, %r12d
00000000000091ff	jbe	0x9210
0000000000009201	callq	_memcpy
0000000000009206	movl	%r12d, (%r15)
0000000000009209	movl	$0xfffffecd, %ebx
000000000000920e	jmp	0x91ad
0000000000009210	movq	%r12, %rdx
0000000000009213	callq	_memcpy
0000000000009218	movl	%r12d, (%r15)
000000000000921b	xorl	%ebx, %ebx
000000000000921d	jmp	0x91ad
000000000000921f	nop
_guarded_kqueue_np:
0000000000009220	movl	$0x20001bb, %eax
0000000000009225	movq	%rcx, %r10
0000000000009228	syscall
000000000000922a	jae	0x9234
000000000000922c	movq	%rax, %rdi
000000000000922f	jmp	_cerror_nocancel
0000000000009234	retq
__kernelrpc_mach_port_get_attributes:
0000000000009235	pushq	%rbp
0000000000009236	movq	%rsp, %rbp
0000000000009239	pushq	%r15
000000000000923b	pushq	%r14
000000000000923d	pushq	%r12
000000000000923f	pushq	%rbx
0000000000009240	subq	$0x80, %rsp
0000000000009247	movq	%r8, %r15
000000000000924a	leaq	_NDR_record(%rip), %rax
0000000000009251	movq	(%rax), %rax
0000000000009254	leaq	-0x98(%rbp), %rbx
000000000000925b	movq	%rax, 0x18(%rbx)
000000000000925f	movl	%esi, 0x20(%rbx)
0000000000009262	movl	%edx, 0x24(%rbx)
0000000000009265	movl	(%r8), %eax
0000000000009268	movl	$0x11, %edx
000000000000926d	cmpl	%edx, %eax
000000000000926f	cmovbl	%eax, %edx
0000000000009272	movq	%rcx, %r14
0000000000009275	movl	%edx, 0x28(%rbx)
0000000000009278	movl	$0x1513, (%rbx)
000000000000927e	movl	%edi, 0x8(%rbx)
0000000000009281	callq	_mig_get_reply_port
0000000000009286	movl	%eax, 0xc(%rbx)
0000000000009289	movabsq	$0xc9100000000, %rcx
0000000000009293	movq	%rcx, 0x10(%rbx)
0000000000009297	movl	$0x0, (%rsp)
000000000000929e	movq	%rbx, %rdi
00000000000092a1	movl	$0x3, %esi
00000000000092a6	movl	$0x2c, %edx
00000000000092ab	movl	$0x74, %ecx
00000000000092b0	movl	%eax, %r8d
00000000000092b3	xorl	%r9d, %r9d
00000000000092b6	callq	_mach_msg
00000000000092bb	movl	%eax, %ebx
00000000000092bd	leal	-0x10000002(%rbx), %eax
00000000000092c3	cmpl	$0xe, %eax
00000000000092c6	ja	0x92df
00000000000092c8	movl	$0x4003, %ecx
00000000000092cd	btl	%eax, %ecx
00000000000092d0	jae	0x92df
00000000000092d2	movl	-0x8c(%rbp), %edi
00000000000092d8	callq	_mig_put_reply_port
00000000000092dd	jmp	0x934d
00000000000092df	testl	%ebx, %ebx
00000000000092e1	jne	0x9328
00000000000092e3	movl	-0x84(%rbp), %eax
00000000000092e9	cmpl	$0x47, %eax
00000000000092ec	je	0x9335
00000000000092ee	cmpl	$0xcf5, %eax
00000000000092f3	jne	0x933c
00000000000092f5	cmpl	$0x0, -0x98(%rbp)
00000000000092fc	js	0x9321
00000000000092fe	movl	-0x94(%rbp), %eax
0000000000009304	leal	-0x28(%rax), %ecx
0000000000009307	cmpl	$0x45, %ecx
000000000000930a	jb	0x9318
000000000000930c	cmpl	$0x24, %eax
000000000000930f	jne	0x9321
0000000000009311	movl	-0x78(%rbp), %edx
0000000000009314	testl	%edx, %edx
0000000000009316	je	0x9321
0000000000009318	cmpl	$0x0, -0x90(%rbp)
000000000000931f	je	0x935f
0000000000009321	movl	$0xfffffed4, %ebx
0000000000009326	jmp	0x9341
0000000000009328	movl	-0x8c(%rbp), %edi
000000000000932e	callq	_mig_dealloc_reply_port
0000000000009333	jmp	0x934d
0000000000009335	movl	$0xfffffecc, %ebx
000000000000933a	jmp	0x9341
000000000000933c	movl	$0xfffffed3, %ebx
0000000000009341	leaq	-0x98(%rbp), %rdi
0000000000009348	callq	_mach_msg_destroy
000000000000934d	movl	%ebx, %eax
000000000000934f	addq	$0x80, %rsp
0000000000009356	popq	%rbx
0000000000009357	popq	%r12
0000000000009359	popq	%r14
000000000000935b	popq	%r15
000000000000935d	popq	%rbp
000000000000935e	retq
000000000000935f	movl	-0x78(%rbp), %ebx
0000000000009362	testl	%ebx, %ebx
0000000000009364	jne	0x9341
0000000000009366	movl	-0x74(%rbp), %r12d
000000000000936a	cmpl	$0x11, %r12d
000000000000936e	ja	0x9321
0000000000009370	shrl	$0x2, %ecx
0000000000009373	cmpl	%r12d, %ecx
0000000000009376	jb	0x9321
0000000000009378	leal	0x28(,%r12,4), %ecx
0000000000009380	movl	$0xfffffed4, %ebx
0000000000009385	cmpl	%ecx, %eax
0000000000009387	jne	0x9341
0000000000009389	leaq	-0x70(%rbp), %rsi
000000000000938d	movl	(%r15), %edx
0000000000009390	cmpl	%edx, %r12d
0000000000009393	jbe	0x93aa
0000000000009395	shll	$0x2, %edx
0000000000009398	movq	%r14, %rdi
000000000000939b	callq	_memcpy
00000000000093a0	movl	%r12d, (%r15)
00000000000093a3	movl	$0xfffffecd, %ebx
00000000000093a8	jmp	0x934d
00000000000093aa	leal	(,%r12,4), %eax
00000000000093b2	movl	%eax, %edx
00000000000093b4	movq	%r14, %rdi
00000000000093b7	callq	_memcpy
00000000000093bc	movl	%r12d, (%r15)
00000000000093bf	xorl	%ebx, %ebx
00000000000093c1	jmp	0x934d
_mach_vm_region_recurse:
00000000000093c3	pushq	%rbp
00000000000093c4	movq	%rsp, %rbp
00000000000093c7	pushq	%r15
00000000000093c9	pushq	%r14
00000000000093cb	pushq	%r13
00000000000093cd	pushq	%r12
00000000000093cf	pushq	%rbx
00000000000093d0	subq	$0xa8, %rsp
00000000000093d7	movq	%r9, %r14
00000000000093da	movq	%rcx, %r12
00000000000093dd	movq	%rsi, %r13
00000000000093e0	leaq	_NDR_record(%rip), %rax
00000000000093e7	movq	(%rax), %rax
00000000000093ea	leaq	-0xc8(%rbp), %rbx
00000000000093f1	movq	%rax, 0x18(%rbx)
00000000000093f5	movq	(%rsi), %rax
00000000000093f8	movq	%rax, 0x20(%rbx)
00000000000093fc	movl	(%rcx), %eax
00000000000093fe	movl	%eax, 0x28(%rbx)
0000000000009401	movl	(%r9), %eax
0000000000009404	movl	$0x13, %ecx
0000000000009409	cmpl	%ecx, %eax
000000000000940b	cmovbl	%eax, %ecx
000000000000940e	movq	%r8, -0x30(%rbp)
0000000000009412	movq	%rdx, -0x38(%rbp)
0000000000009416	movl	%ecx, 0x2c(%rbx)
0000000000009419	movl	$0x1513, (%rbx)
000000000000941f	movl	%edi, 0x8(%rbx)
0000000000009422	callq	_mig_get_reply_port
0000000000009427	movl	%eax, 0xc(%rbx)
000000000000942a	movabsq	$0x12cf00000000, %rcx
0000000000009434	movq	%rcx, 0x10(%rbx)
0000000000009438	movl	$0x0, (%rsp)
000000000000943f	movq	%rbx, %rdi
0000000000009442	movl	$0x3, %esi
0000000000009447	movl	$0x30, %edx
000000000000944c	movl	$0x90, %ecx
0000000000009451	movl	%eax, %r8d
0000000000009454	xorl	%r9d, %r9d
0000000000009457	callq	_mach_msg
000000000000945c	movl	%eax, %r15d
000000000000945f	leal	-0x10000002(%r15), %eax
0000000000009466	cmpl	$0xe, %eax
0000000000009469	ja	0x9482
000000000000946b	movl	$0x4003, %ecx
0000000000009470	btl	%eax, %ecx
0000000000009473	jae	0x9482
0000000000009475	movl	-0xbc(%rbp), %edi
000000000000947b	callq	_mig_put_reply_port
0000000000009480	jmp	0x94f6
0000000000009482	testl	%r15d, %r15d
0000000000009485	jne	0x94cf
0000000000009487	movl	-0xb4(%rbp), %eax
000000000000948d	cmpl	$0x47, %eax
0000000000009490	je	0x94dc
0000000000009492	cmpl	$0x1333, %eax
0000000000009497	jne	0x94e4
0000000000009499	cmpl	$0x0, -0xc8(%rbp)
00000000000094a0	js	0x94c7
00000000000094a2	movl	-0xc4(%rbp), %eax
00000000000094a8	leal	-0x3c(%rax), %ecx
00000000000094ab	cmpl	$0x4d, %ecx
00000000000094ae	jb	0x94be
00000000000094b0	cmpl	$0x24, %eax
00000000000094b3	jne	0x94c7
00000000000094b5	cmpl	$0x0, -0xa8(%rbp)
00000000000094bc	je	0x94c7
00000000000094be	cmpl	$0x0, -0xc0(%rbp)
00000000000094c5	je	0x950b
00000000000094c7	movl	$0xfffffed4, %r15d
00000000000094cd	jmp	0x94ea
00000000000094cf	movl	-0xbc(%rbp), %edi
00000000000094d5	callq	_mig_dealloc_reply_port
00000000000094da	jmp	0x94f6
00000000000094dc	movl	$0xfffffecc, %r15d
00000000000094e2	jmp	0x94ea
00000000000094e4	movl	$0xfffffed3, %r15d
00000000000094ea	leaq	-0xc8(%rbp), %rdi
00000000000094f1	callq	_mach_msg_destroy
00000000000094f6	movl	%r15d, %eax
00000000000094f9	addq	$0xa8, %rsp
0000000000009500	popq	%rbx
0000000000009501	popq	%r12
0000000000009503	popq	%r13
0000000000009505	popq	%r14
0000000000009507	popq	%r15
0000000000009509	popq	%rbp
000000000000950a	retq
000000000000950b	movl	-0xa8(%rbp), %r15d
0000000000009512	testl	%r15d, %r15d
0000000000009515	jne	0x94ea
0000000000009517	movl	-0x90(%rbp), %ebx
000000000000951d	cmpl	$0x13, %ebx
0000000000009520	ja	0x94c7
0000000000009522	shrl	$0x2, %ecx
0000000000009525	cmpl	%ebx, %ecx
0000000000009527	jb	0x94c7
0000000000009529	leal	0x3c(,%rbx,4), %ecx
0000000000009530	movl	$0xfffffed4, %r15d
0000000000009536	cmpl	%ecx, %eax
0000000000009538	jne	0x94ea
000000000000953a	leaq	-0x8c(%rbp), %rsi
0000000000009541	movq	-0x18(%rsi), %rax
0000000000009545	movq	%rax, (%r13)
0000000000009549	movq	-0x10(%rsi), %rax
000000000000954d	movq	-0x38(%rbp), %rcx
0000000000009551	movq	%rax, (%rcx)
0000000000009554	movl	-0x8(%rsi), %eax
0000000000009557	movl	%eax, (%r12)
000000000000955b	movl	(%r14), %edx
000000000000955e	cmpl	%edx, %ebx
0000000000009560	jbe	0x957c
0000000000009562	shll	$0x2, %edx
0000000000009565	movq	-0x30(%rbp), %rdi
0000000000009569	callq	_memcpy
000000000000956e	movl	%ebx, (%r14)
0000000000009571	movl	$0xfffffecd, %r15d
0000000000009577	jmp	0x94f6
000000000000957c	leal	(,%rbx,4), %eax
0000000000009583	movl	%eax, %edx
0000000000009585	movq	-0x30(%rbp), %rdi
0000000000009589	callq	_memcpy
000000000000958e	movl	%ebx, (%r14)
0000000000009591	xorl	%r15d, %r15d
0000000000009594	jmp	0x94f6
0000000000009599	nop
000000000000959a	nop
000000000000959b	nop
_necp_match_policy:
000000000000959c	movl	$0x20001cc, %eax
00000000000095a1	movq	%rcx, %r10
00000000000095a4	syscall
00000000000095a6	jae	0x95b0
00000000000095a8	movq	%rax, %rdi
00000000000095ab	jmp	_cerror_nocancel
00000000000095b0	retq
00000000000095b1	nop
00000000000095b2	nop
00000000000095b3	nop
___select:
_select$DARWIN_EXTSN:
00000000000095b4	movl	$0x200005d, %eax
00000000000095b9	movq	%rcx, %r10
00000000000095bc	syscall
00000000000095be	jae	0x95c8
00000000000095c0	movq	%rax, %rdi
00000000000095c3	jmp	_cerror
00000000000095c8	retq
_mach_vm_read_overwrite:
00000000000095c9	pushq	%rbp
00000000000095ca	movq	%rsp, %rbp
00000000000095cd	pushq	%r14
00000000000095cf	pushq	%rbx
00000000000095d0	subq	$0x40, %rsp
00000000000095d4	movq	%r8, %r14
00000000000095d7	leaq	_NDR_record(%rip), %rax
00000000000095de	movq	(%rax), %rax
00000000000095e1	leaq	-0x48(%rbp), %rbx
00000000000095e5	movq	%rax, 0x18(%rbx)
00000000000095e9	movq	%rsi, 0x20(%rbx)
00000000000095ed	movq	%rdx, 0x28(%rbx)
00000000000095f1	movq	%rcx, 0x30(%rbx)
00000000000095f5	movl	$0x1513, (%rbx)
00000000000095fb	movl	%edi, 0x8(%rbx)
00000000000095fe	callq	_mig_get_reply_port
0000000000009603	movl	%eax, 0xc(%rbx)
0000000000009606	movabsq	$0x12c800000000, %rcx
0000000000009610	movq	%rcx, 0x10(%rbx)
0000000000009614	movl	$0x0, (%rsp)
000000000000961b	movq	%rbx, %rdi
000000000000961e	movl	$0x3, %esi
0000000000009623	movl	$0x38, %edx
0000000000009628	movl	$0x34, %ecx
000000000000962d	movl	%eax, %r8d
0000000000009630	xorl	%r9d, %r9d
0000000000009633	callq	_mach_msg
0000000000009638	movl	%eax, %ebx
000000000000963a	leal	-0x10000002(%rbx), %eax
0000000000009640	cmpl	$0xe, %eax
0000000000009643	ja	0x9659
0000000000009645	movl	$0x4003, %ecx
000000000000964a	btl	%eax, %ecx
000000000000964d	jae	0x9659
000000000000964f	movl	-0x3c(%rbp), %edi
0000000000009652	callq	_mig_put_reply_port
0000000000009657	jmp	0x96c1
0000000000009659	testl	%ebx, %ebx
000000000000965b	jne	0x96a2
000000000000965d	movl	-0x34(%rbp), %eax
0000000000009660	cmpl	$0x47, %eax
0000000000009663	je	0x96ac
0000000000009665	cmpl	$0x132c, %eax
000000000000966a	jne	0x96b3
000000000000966c	movl	$0xfffffed4, %ebx
0000000000009671	cmpl	$0x0, -0x48(%rbp)
0000000000009675	js	0x96b8
0000000000009677	movl	-0x44(%rbp), %eax
000000000000967a	cmpl	$0x2c, %eax
000000000000967d	je	0x968a
000000000000967f	cmpl	$0x24, %eax
0000000000009682	jne	0x96b8
0000000000009684	cmpl	$0x0, -0x28(%rbp)
0000000000009688	je	0x96b8
000000000000968a	cmpl	$0x0, -0x40(%rbp)
000000000000968e	jne	0x96b8
0000000000009690	movl	-0x28(%rbp), %ebx
0000000000009693	testl	%ebx, %ebx
0000000000009695	jne	0x96b8
0000000000009697	movq	-0x24(%rbp), %rax
000000000000969b	movq	%rax, (%r14)
000000000000969e	xorl	%ebx, %ebx
00000000000096a0	jmp	0x96c1
00000000000096a2	movl	-0x3c(%rbp), %edi
00000000000096a5	callq	_mig_dealloc_reply_port
00000000000096aa	jmp	0x96c1
00000000000096ac	movl	$0xfffffecc, %ebx
00000000000096b1	jmp	0x96b8
00000000000096b3	movl	$0xfffffed3, %ebx
00000000000096b8	leaq	-0x48(%rbp), %rdi
00000000000096bc	callq	_mach_msg_destroy
00000000000096c1	movl	%ebx, %eax
00000000000096c3	addq	$0x40, %rsp
00000000000096c7	popq	%rbx
00000000000096c8	popq	%r14
00000000000096ca	popq	%rbp
00000000000096cb	retq
_mach_msg_server_once:
00000000000096cc	pushq	%rbp
00000000000096cd	movq	%rsp, %rbp
00000000000096d0	pushq	%r15
00000000000096d2	pushq	%r14
00000000000096d4	pushq	%r13
00000000000096d6	pushq	%r12
00000000000096d8	pushq	%rbx
00000000000096d9	subq	$0x48, %rsp
00000000000096dd	movl	%ecx, %ebx
00000000000096df	movl	%edx, -0x44(%rbp)
00000000000096e2	movq	%rdi, -0x60(%rbp)
00000000000096e6	leaq	_mach_task_self_(%rip), %rax
00000000000096ed	movl	(%rax), %edi
00000000000096ef	movl	%ecx, %eax
00000000000096f1	shrl	$0x18, %eax
00000000000096f4	andl	$0xf, %eax
00000000000096f7	movl	$0x44, %ecx
00000000000096fc	cmpl	$0x4, %eax
00000000000096ff	ja	0x970d
0000000000009701	movl	%eax, %eax
0000000000009703	leaq	0x194fe(%rip), %rcx
000000000000970a	movl	(%rcx,%rax,4), %ecx
000000000000970d	movq	%rcx, -0x68(%rbp)
0000000000009711	movl	$0xffffffff, %edx
0000000000009716	leal	(%rcx,%rsi), %eax
0000000000009719	leaq	_vm_page_size(%rip), %r8
0000000000009720	movq	(%r8), %r13
0000000000009723	leaq	(%r13,%rdx), %rcx
0000000000009728	leaq	(%rax,%rcx), %r15
000000000000972c	negq	%r13
000000000000972f	andq	%r13, %r15
0000000000009732	testb	$0x4, %bl
0000000000009735	movl	%r15d, %r14d
0000000000009738	cmovel	%eax, %r14d
000000000000973c	leal	0x44(%rsi), %eax
000000000000973f	btl	$0x11, %ebx
0000000000009743	cmovael	%esi, %eax
0000000000009746	addl	%eax, %ecx
0000000000009748	andl	%ecx, %r13d
000000000000974b	leaq	-0x40(%rbp), %rsi
000000000000974f	movq	%r13, %rdx
0000000000009752	movl	$0x14000001, %ecx
0000000000009757	movl	%edi, -0x2c(%rbp)
000000000000975a	callq	_vm_allocate
000000000000975f	movl	%eax, %r12d
0000000000009762	testl	%eax, %eax
0000000000009764	jne	0x9952
000000000000976a	movl	%r14d, -0x4c(%rbp)
000000000000976e	movq	%r13, -0x58(%rbp)
0000000000009772	movl	-0x2c(%rbp), %r14d
0000000000009776	movl	%r15d, %r13d
0000000000009779	leaq	-0x38(%rbp), %rsi
000000000000977d	movl	%r14d, %edi
0000000000009780	movq	%r13, %rdx
0000000000009783	movl	$0x14000001, %ecx
0000000000009788	callq	_vm_allocate
000000000000978d	movl	%eax, %r12d
0000000000009790	testl	%eax, %eax
0000000000009792	je	0x97a4
0000000000009794	movq	-0x40(%rbp), %rsi
0000000000009798	movl	%r14d, %edi
000000000000979b	movq	-0x58(%rbp), %rdx
000000000000979f	jmp	0x994d
00000000000097a4	movl	%ebx, %eax
00000000000097a6	andl	$0xfffff7fc, %eax
00000000000097ab	testb	$0x4, %bl
00000000000097ae	sete	%r14b
00000000000097b2	movl	%eax, -0x48(%rbp)
00000000000097b5	movl	%eax, %esi
00000000000097b7	orl	$0x802, %esi
00000000000097bd	movq	-0x38(%rbp), %rdi
00000000000097c1	xorl	%eax, %eax
00000000000097c3	movl	%eax, (%rsp)
00000000000097c6	movl	%esi, -0x50(%rbp)
00000000000097c9	xorl	%edx, %edx
00000000000097cb	movl	-0x4c(%rbp), %ecx
00000000000097ce	movl	-0x44(%rbp), %r8d
00000000000097d2	xorl	%r9d, %r9d
00000000000097d5	callq	_mach_msg
00000000000097da	movl	%eax, %r12d
00000000000097dd	cmpl	$0x10004004, %eax
00000000000097e2	jne	0x9869
00000000000097e8	testb	%r14b, %r14b
00000000000097eb	jne	0x9869
00000000000097ed	movl	-0x2c(%rbp), %ebx
00000000000097f0	movq	-0x38(%rbp), %rsi
00000000000097f4	movl	0x4(%rsi), %eax
00000000000097f7	addl	-0x68(%rbp), %eax
00000000000097fa	leaq	_vm_page_size(%rip), %rcx
0000000000009801	movq	(%rcx), %r15
0000000000009804	movl	$0xffffffff, %ecx
0000000000009809	leaq	(%r15,%rcx), %rcx
000000000000980d	addq	%rax, %rcx
0000000000009810	negq	%r15
0000000000009813	andq	%rcx, %r15
0000000000009816	movl	%ebx, %edi
0000000000009818	movq	%r13, %rdx
000000000000981b	callq	_vm_deallocate
0000000000009820	movl	%r15d, %r13d
0000000000009823	movl	%ebx, %edi
0000000000009825	leaq	-0x38(%rbp), %rsi
0000000000009829	movq	%r13, %rdx
000000000000982c	movl	$0x14000001, %ecx
0000000000009831	callq	_vm_allocate
0000000000009836	testl	%eax, %eax
0000000000009838	jne	0x98b4
000000000000983a	movq	-0x38(%rbp), %rdi
000000000000983e	movl	$0x0, (%rsp)
0000000000009845	movl	-0x50(%rbp), %esi
0000000000009848	xorl	%edx, %edx
000000000000984a	movl	%r15d, %ecx
000000000000984d	movl	-0x44(%rbp), %r8d
0000000000009851	xorl	%r9d, %r9d
0000000000009854	callq	_mach_msg
0000000000009859	movl	%eax, %r12d
000000000000985c	cmpl	$0x10004004, %eax
0000000000009861	setne	%al
0000000000009864	orb	%r14b, %al
0000000000009867	je	0x97f0
0000000000009869	movq	$-0x1, %r13
0000000000009870	testl	%r12d, %r12d
0000000000009873	movq	-0x58(%rbp), %r14
0000000000009877	jne	0x992b
000000000000987d	movq	-0x38(%rbp), %rdi
0000000000009881	callq	_voucher_mach_msg_adopt
0000000000009886	movq	%rax, %r13
0000000000009889	movq	-0x38(%rbp), %rdi
000000000000988d	movq	-0x40(%rbp), %rsi
0000000000009891	callq	*-0x60(%rbp)
0000000000009894	movq	-0x40(%rbp), %rdi
0000000000009898	cmpl	$0x0, (%rdi)
000000000000989b	js	0x98d4
000000000000989d	movl	0x20(%rdi), %eax
00000000000098a0	testl	%eax, %eax
00000000000098a2	je	0x98d4
00000000000098a4	cmpl	$0xfffffecf, %eax
00000000000098a9	jne	0x98c0
00000000000098ab	movl	$0x0, 0x8(%rdi)
00000000000098b2	jmp	0x98d4
00000000000098b4	movl	%eax, %r12d
00000000000098b7	movl	-0x2c(%rbp), %r14d
00000000000098bb	jmp	0x9794
00000000000098c0	movq	-0x38(%rbp), %rdi
00000000000098c4	movl	$0x0, 0x8(%rdi)
00000000000098cb	callq	_mach_msg_destroy
00000000000098d0	movq	-0x40(%rbp), %rdi
00000000000098d4	cmpl	$0x0, 0x8(%rdi)
00000000000098d8	je	0x9928
00000000000098da	movl	(%rdi), %eax
00000000000098dc	movl	0x4(%rdi), %edx
00000000000098df	andl	$0x1f, %eax
00000000000098e2	xorl	%esi, %esi
00000000000098e4	cmpl	$0x12, %eax
00000000000098e7	setne	%sil
00000000000098eb	shll	$0x4, %esi
00000000000098ee	orl	-0x48(%rbp), %esi
00000000000098f1	orl	$0x1, %esi
00000000000098f4	movl	$0x0, (%rsp)
00000000000098fb	xorl	%ecx, %ecx
00000000000098fd	xorl	%r8d, %r8d
0000000000009900	xorl	%r9d, %r9d
0000000000009903	callq	_mach_msg
0000000000009908	movl	%eax, %r12d
000000000000990b	addl	$0xeffffffd, %eax
0000000000009910	cmpl	$0x4, %eax
0000000000009913	ja	0x992b
0000000000009915	movl	$0x13, %ecx
000000000000991a	btl	%eax, %ecx
000000000000991d	jae	0x992b
000000000000991f	movq	-0x40(%rbp), %rdi
0000000000009923	callq	_mach_msg_server_consume_unsent_message
0000000000009928	xorl	%r12d, %r12d
000000000000992b	movq	%r13, %rdi
000000000000992e	callq	_voucher_mach_msg_revert
0000000000009933	movq	-0x38(%rbp), %rsi
0000000000009937	movl	%r15d, %edx
000000000000993a	movl	-0x2c(%rbp), %ebx
000000000000993d	movl	%ebx, %edi
000000000000993f	callq	_vm_deallocate
0000000000009944	movq	-0x40(%rbp), %rsi
0000000000009948	movl	%ebx, %edi
000000000000994a	movq	%r14, %rdx
000000000000994d	callq	_vm_deallocate
0000000000009952	movl	%r12d, %eax
0000000000009955	addq	$0x48, %rsp
0000000000009959	popq	%rbx
000000000000995a	popq	%r12
000000000000995c	popq	%r13
000000000000995e	popq	%r14
0000000000009960	popq	%r15
0000000000009962	popq	%rbp
0000000000009963	retq
_proc_disable_cpumon:
0000000000009964	pushq	%rbp
0000000000009965	movq	%rsp, %rbp
0000000000009968	subq	$0x20, %rsp
000000000000996c	movl	%edi, %r9d
000000000000996f	movabsq	$0xff00000005, %rax
0000000000009979	leaq	-0x18(%rbp), %r8
000000000000997d	movq	%rax, (%r8)
0000000000009980	xorl	%eax, %eax
0000000000009982	movq	%rax, 0x10(%r8)
0000000000009986	movq	%rax, 0x8(%r8)
000000000000998a	movq	%rax, (%rsp)
000000000000998e	movl	$0x1, %edi
0000000000009993	movl	$0xa, %esi
0000000000009998	movl	$0x4, %edx
000000000000999d	movl	$0x3, %ecx
00000000000099a2	callq	___process_policy
00000000000099a7	addq	$0x20, %rsp
00000000000099ab	popq	%rbp
00000000000099ac	retq
_task_get_exception_ports:
00000000000099ad	pushq	%rbp
00000000000099ae	movq	%rsp, %rbp
00000000000099b1	pushq	%r15
00000000000099b3	pushq	%r14
00000000000099b5	pushq	%r13
00000000000099b7	pushq	%r12
00000000000099b9	pushq	%rbx
00000000000099ba	subq	$0x358, %rsp
00000000000099c1	movq	%r9, -0x40(%rbp)
00000000000099c5	movq	%r8, %r15
00000000000099c8	movq	%rcx, %r12
00000000000099cb	movq	%rdx, %r13
00000000000099ce	leaq	_NDR_record(%rip), %rax
00000000000099d5	movq	(%rax), %rax
00000000000099d8	movq	%rax, -0x358(%rbp)
00000000000099df	movl	%esi, -0x350(%rbp)
00000000000099e5	movl	$0x1513, -0x370(%rbp)
00000000000099ef	movl	%edi, -0x368(%rbp)
00000000000099f5	callq	_mig_get_reply_port
00000000000099fa	movl	%eax, -0x364(%rbp)
0000000000009a00	movabsq	$0xd5600000000, %rcx
0000000000009a0a	movq	%rcx, -0x360(%rbp)
0000000000009a11	movl	$0x0, (%rsp)
0000000000009a18	leaq	-0x370(%rbp), %r14
0000000000009a1f	movq	%r14, %rdi
0000000000009a22	movl	$0x3, %esi
0000000000009a27	movl	$0x24, %edx
0000000000009a2c	movl	$0x330, %ecx
0000000000009a31	movl	%eax, %r8d
0000000000009a34	xorl	%r9d, %r9d
0000000000009a37	callq	_mach_msg
0000000000009a3c	movl	%eax, %ebx
0000000000009a3e	leal	-0x10000002(%rbx), %eax
0000000000009a44	cmpl	$0xe, %eax
0000000000009a47	ja	0x9a63
0000000000009a49	movl	$0x4003, %ecx
0000000000009a4e	btl	%eax, %ecx
0000000000009a51	jae	0x9a63
0000000000009a53	movl	-0x364(%rbp), %edi
0000000000009a59	callq	_mig_put_reply_port
0000000000009a5e	jmp	0x9af0
0000000000009a63	testl	%ebx, %ebx
0000000000009a65	jne	0x9a9f
0000000000009a67	movl	-0x35c(%rbp), %eax
0000000000009a6d	cmpl	$0x47, %eax
0000000000009a70	je	0x9aac
0000000000009a72	cmpl	$0xdba, %eax
0000000000009a77	jne	0x9ab3
0000000000009a79	movl	-0x370(%rbp), %ecx
0000000000009a7f	movl	-0x36c(%rbp), %eax
0000000000009a85	testl	%ecx, %ecx
0000000000009a87	js	0x9aba
0000000000009a89	movl	$0xfffffed4, %ebx
0000000000009a8e	cmpl	$0x24, %eax
0000000000009a91	jne	0x9ae4
0000000000009a93	movl	-0x350(%rbp), %edx
0000000000009a99	testl	%edx, %edx
0000000000009a9b	jne	0x9ad6
0000000000009a9d	jmp	0x9ae4
0000000000009a9f	movl	-0x364(%rbp), %edi
0000000000009aa5	callq	_mig_dealloc_reply_port
0000000000009aaa	jmp	0x9af0
0000000000009aac	movl	$0xfffffecc, %ebx
0000000000009ab1	jmp	0x9ae4
0000000000009ab3	movl	$0xfffffed3, %ebx
0000000000009ab8	jmp	0x9ae4
0000000000009aba	leal	-0x1a8(%rax), %edx
0000000000009ac0	movl	$0xfffffed4, %ebx
0000000000009ac5	cmpl	$0x180, %edx
0000000000009acb	ja	0x9ae4
0000000000009acd	cmpl	$0x20, -0x358(%rbp)
0000000000009ad4	jne	0x9ae4
0000000000009ad6	movl	$0xfffffed4, %ebx
0000000000009adb	cmpl	$0x0, -0x368(%rbp)
0000000000009ae2	je	0x9b04
0000000000009ae4	leaq	-0x370(%rbp), %rdi
0000000000009aeb	callq	_mach_msg_destroy
0000000000009af0	movl	%ebx, %eax
0000000000009af2	addq	$0x358, %rsp
0000000000009af9	popq	%rbx
0000000000009afa	popq	%r12
0000000000009afc	popq	%r13
0000000000009afe	popq	%r14
0000000000009b00	popq	%r15
0000000000009b02	popq	%rbp
0000000000009b03	retq
0000000000009b04	testl	%ecx, %ecx
0000000000009b06	js	0x9b40
0000000000009b08	movl	-0x350(%rbp), %ebx
0000000000009b0e	testl	%ebx, %ebx
0000000000009b10	jne	0x9ae4
0000000000009b12	leaq	-0x1c8(%rbp), %rsi
0000000000009b19	movl	-0x4(%rsi), %edi
0000000000009b1c	cmpl	$0x21, %edi
0000000000009b1f	jb	0x9be8
0000000000009b25	movl	$0x80, %edx
0000000000009b2a	movq	%rdi, %rbx
0000000000009b2d	movq	%r13, %rdi
0000000000009b30	callq	_memcpy
0000000000009b35	movl	%ebx, (%r12)
0000000000009b39	movl	$0xfffffecd, %ebx
0000000000009b3e	jmp	0x9af0
0000000000009b40	leaq	-0x34c(%rbp), %rcx
0000000000009b47	xorl	%edx, %edx
0000000000009b49	cmpl	$0xffffff, (%rcx)
0000000000009b4f	ja	0x9ae4
0000000000009b51	incl	%edx
0000000000009b53	addq	$0xc, %rcx
0000000000009b57	cmpl	$0x20, %edx
0000000000009b5a	jb	0x9b49
0000000000009b5c	movl	-0x1cc(%rbp), %edi
0000000000009b62	cmpl	$0x20, %edi
0000000000009b65	ja	0x9ae4
0000000000009b6b	leal	-0x1a8(%rax), %ecx
0000000000009b71	shrl	$0x2, %ecx
0000000000009b74	cmpl	%edi, %ecx
0000000000009b76	jb	0x9ae4
0000000000009b7c	leal	(,%rdi,4), %ecx
0000000000009b83	leal	0x1a8(%rcx), %edx
0000000000009b89	cmpl	%edx, %eax
0000000000009b8b	jb	0x9ae4
0000000000009b91	subl	%ecx, %eax
0000000000009b93	cmpl	%edx, %eax
0000000000009b95	jb	0x9ae4
0000000000009b9b	leal	-0x1a8(%rax), %esi
0000000000009ba1	shrl	$0x2, %esi
0000000000009ba4	cmpl	%edi, %esi
0000000000009ba6	jb	0x9ae4
0000000000009bac	subl	%ecx, %eax
0000000000009bae	cmpl	%edx, %eax
0000000000009bb0	jne	0x9ae4
0000000000009bb6	addl	$0xfffffe58, %eax
0000000000009bbb	shrl	$0x2, %eax
0000000000009bbe	cmpl	%edi, %eax
0000000000009bc0	jb	0x9ae4
0000000000009bc6	movl	%ecx, %eax
0000000000009bc8	leaq	-0x80(%rax,%r14), %rdx
0000000000009bcd	addq	$-0x80, %rax
0000000000009bd1	movq	%rdx, %rcx
0000000000009bd4	movq	%rdx, -0x30(%rbp)
0000000000009bd8	addq	%rdx, %rax
0000000000009bdb	movq	%rax, -0x38(%rbp)
0000000000009bdf	leaq	-0x1c8(%rbp), %rsi
0000000000009be6	jmp	0x9bf4
0000000000009be8	xorl	%eax, %eax
0000000000009bea	movq	%rax, -0x30(%rbp)
0000000000009bee	xorl	%eax, %eax
0000000000009bf0	movq	%rax, -0x38(%rbp)
0000000000009bf4	leal	(,%rdi,4), %r14d
0000000000009bfc	movq	%rdi, %rbx
0000000000009bff	movq	%r13, %rdi
0000000000009c02	movq	%r14, %rdx
0000000000009c05	callq	_memcpy
0000000000009c0a	movl	%ebx, (%r12)
0000000000009c0e	testl	%ebx, %ebx
0000000000009c10	je	0x9c30
0000000000009c12	leaq	-0x354(%rbp), %rax
0000000000009c19	movslq	%ebx, %rcx
0000000000009c1c	xorl	%edx, %edx
0000000000009c1e	movl	(%rax), %esi
0000000000009c20	movl	%esi, (%r15,%rdx,4)
0000000000009c24	addq	$0xc, %rax
0000000000009c28	incq	%rdx
0000000000009c2b	cmpq	%rcx, %rdx
0000000000009c2e	jl	0x9c1e
0000000000009c30	movq	-0x30(%rbp), %rsi
0000000000009c34	addq	$0x228, %rsi
0000000000009c3b	movq	-0x40(%rbp), %rdi
0000000000009c3f	movq	%r14, %rdx
0000000000009c42	callq	_memcpy
0000000000009c47	movq	-0x38(%rbp), %rsi
0000000000009c4b	addq	$0x2a8, %rsi
0000000000009c52	movq	0x10(%rbp), %rdi
0000000000009c56	movq	%r14, %rdx
0000000000009c59	callq	_memcpy
0000000000009c5e	xorl	%ebx, %ebx
0000000000009c60	jmp	0x9af0
0000000000009c65	nop
0000000000009c66	nop
0000000000009c67	nop
_audit_session_port:
0000000000009c68	movl	$0x20001b0, %eax
0000000000009c6d	movq	%rcx, %r10
0000000000009c70	syscall
0000000000009c72	jae	0x9c7c
0000000000009c74	movq	%rax, %rdi
0000000000009c77	jmp	_cerror_nocancel
0000000000009c7c	retq
_posix_spawnattr_setauditsessionport_np:
0000000000009c7d	pushq	%rbp
0000000000009c7e	movq	%rsp, %rbp
0000000000009c81	subq	$0x20, %rsp
0000000000009c85	leaq	-0x18(%rbp), %rax
0000000000009c89	movq	$0x2, (%rax)
0000000000009c90	movl	%esi, 0x8(%rax)
0000000000009c93	movq	$0x0, 0xc(%rax)
0000000000009c9b	movl	$0x0, 0x14(%rax)
0000000000009ca2	movq	%rax, %rsi
0000000000009ca5	callq	_posix_spawn_appendportaction_np
0000000000009caa	addq	$0x20, %rsp
0000000000009cae	popq	%rbp
0000000000009caf	retq
_posix_spawn_appendportaction_np:
0000000000009cb0	pushq	%rbp
0000000000009cb1	movq	%rsp, %rbp
0000000000009cb4	pushq	%r15
0000000000009cb6	pushq	%r14
0000000000009cb8	pushq	%r13
0000000000009cba	pushq	%r12
0000000000009cbc	pushq	%rbx
0000000000009cbd	pushq	%rax
0000000000009cbe	movl	$0x16, %r15d
0000000000009cc4	testq	%rdi, %rdi
0000000000009cc7	je	0x9d9f
0000000000009ccd	movq	%rsi, %r14
0000000000009cd0	testq	%rsi, %rsi
0000000000009cd3	je	0x9d9f
0000000000009cd9	movq	%rdi, %rbx
0000000000009cdc	movq	(%rdi), %r12
0000000000009cdf	testq	%r12, %r12
0000000000009ce2	je	0x9d9f
0000000000009ce8	movq	0x70(%r12), %rax
0000000000009ced	testq	%rax, %rax
0000000000009cf0	jne	0x9d11
0000000000009cf2	movl	$0x38, %edi
0000000000009cf7	callq	_malloc
0000000000009cfc	testq	%rax, %rax
0000000000009cff	je	0x9d99
0000000000009d05	movq	$0x2, (%rax)
0000000000009d0c	movq	%rax, 0x70(%r12)
0000000000009d11	movl	0x4(%rax), %ecx
0000000000009d14	cmpl	%ecx, (%rax)
0000000000009d16	jne	0x9d70
0000000000009d18	movq	(%rbx), %rbx
0000000000009d1b	testq	%rbx, %rbx
0000000000009d1e	je	0x9d9f
0000000000009d20	movq	0x70(%rbx), %rdi
0000000000009d24	testq	%rdi, %rdi
0000000000009d27	je	0x9d9f
0000000000009d29	movl	(%rdi), %r13d
0000000000009d2c	addl	%r13d, %r13d
0000000000009d2f	movl	$0xc, %r15d
0000000000009d35	jo	0x9d9f
0000000000009d37	movslq	%r13d, %rax
0000000000009d3a	movl	$0x18, %ecx
0000000000009d3f	mulq	%rcx
0000000000009d42	seto	%dl
0000000000009d45	addq	$0x8, %rax
0000000000009d49	setb	%cl
0000000000009d4c	testb	%dl, %dl
0000000000009d4e	jne	0x9d9f
0000000000009d50	testb	%cl, %cl
0000000000009d52	jne	0x9d9f
0000000000009d54	movq	%rax, %rsi
0000000000009d57	callq	_realloc
0000000000009d5c	testq	%rax, %rax
0000000000009d5f	je	0x9d9f
0000000000009d61	movl	%r13d, (%rax)
0000000000009d64	movq	%rax, 0x70(%rbx)
0000000000009d68	movq	0x70(%r12), %rax
0000000000009d6d	movl	0x4(%rax), %ecx
0000000000009d70	movslq	%ecx, %rcx
0000000000009d73	leaq	(%rcx,%rcx,2), %rcx
0000000000009d77	movq	0x10(%r14), %rdx
0000000000009d7b	movq	%rdx, 0x18(%rax,%rcx,8)
0000000000009d80	movq	(%r14), %rdx
0000000000009d83	movq	0x8(%r14), %rsi
0000000000009d87	movq	%rsi, 0x10(%rax,%rcx,8)
0000000000009d8c	movq	%rdx, 0x8(%rax,%rcx,8)
0000000000009d91	incl	0x4(%rax)
0000000000009d94	xorl	%r15d, %r15d
0000000000009d97	jmp	0x9d9f
0000000000009d99	movl	$0xc, %r15d
0000000000009d9f	movl	%r15d, %eax
0000000000009da2	addq	$0x8, %rsp
0000000000009da6	popq	%rbx
0000000000009da7	popq	%r12
0000000000009da9	popq	%r13
0000000000009dab	popq	%r14
0000000000009dad	popq	%r15
0000000000009daf	popq	%rbp
0000000000009db0	retq
0000000000009db1	nop
0000000000009db2	nop
0000000000009db3	nop
___sigreturn:
0000000000009db4	movl	$0x20000b8, %eax
0000000000009db9	movq	%rcx, %r10
0000000000009dbc	syscall
0000000000009dbe	jae	0x9dc8
0000000000009dc0	movq	%rax, %rdi
0000000000009dc3	jmp	_cerror
0000000000009dc8	retq
0000000000009dc9	nop
0000000000009dca	nop
0000000000009dcb	nop
_audit_session_join:
0000000000009dcc	movl	$0x20001ad, %eax
0000000000009dd1	movq	%rcx, %r10
0000000000009dd4	syscall
0000000000009dd6	jae	0x9de0
0000000000009dd8	movq	%rax, %rdi
0000000000009ddb	jmp	_cerror_nocancel
0000000000009de0	retq
0000000000009de1	nop
0000000000009de2	nop
0000000000009de3	nop
___sigwait:
0000000000009de4	movl	$0x200014a, %eax
0000000000009de9	movq	%rcx, %r10
0000000000009dec	syscall
0000000000009dee	jae	0x9df8
0000000000009df0	movq	%rax, %rdi
0000000000009df3	jmp	_cerror
0000000000009df8	retq
0000000000009df9	nop
0000000000009dfa	nop
0000000000009dfb	nop
_setpgid:
0000000000009dfc	movl	$0x2000052, %eax
0000000000009e01	movq	%rcx, %r10
0000000000009e04	syscall
0000000000009e06	jae	0x9e10
0000000000009e08	movq	%rax, %rdi
0000000000009e0b	jmp	_cerror_nocancel
0000000000009e10	retq
0000000000009e11	nop
0000000000009e12	nop
0000000000009e13	nop
_lstat:
0000000000009e14	movl	$0x20000be, %eax
0000000000009e19	movq	%rcx, %r10
0000000000009e1c	syscall
0000000000009e1e	jae	0x9e28
0000000000009e20	movq	%rax, %rdi
0000000000009e23	jmp	_cerror
0000000000009e28	retq
0000000000009e29	nop
0000000000009e2a	nop
0000000000009e2b	nop
_stat:
0000000000009e2c	movl	$0x20000bc, %eax
0000000000009e31	movq	%rcx, %r10
0000000000009e34	syscall
0000000000009e36	jae	0x9e40
0000000000009e38	movq	%rax, %rdi
0000000000009e3b	jmp	_cerror
0000000000009e40	retq
0000000000009e41	nop
0000000000009e42	nop
0000000000009e43	nop
_fstatfs:
0000000000009e44	movl	$0x200009e, %eax
0000000000009e49	movq	%rcx, %r10
0000000000009e4c	syscall
0000000000009e4e	jae	0x9e58
0000000000009e50	movq	%rax, %rdi
0000000000009e53	jmp	_cerror_nocancel
0000000000009e58	retq
_mach_ports_lookup:
0000000000009e59	pushq	%rbp
0000000000009e5a	movq	%rsp, %rbp
0000000000009e5d	pushq	%r15
0000000000009e5f	pushq	%r14
0000000000009e61	pushq	%rbx
0000000000009e62	subq	$0x48, %rsp
0000000000009e66	movq	%rdx, %r14
0000000000009e69	movq	%rsi, %r15
0000000000009e6c	leaq	-0x58(%rbp), %rbx
0000000000009e70	movl	$0x1513, (%rbx)
0000000000009e76	movl	%edi, 0x8(%rbx)
0000000000009e79	callq	_mig_get_reply_port
0000000000009e7e	movl	%eax, 0xc(%rbx)
0000000000009e81	movabsq	$0xd4c00000000, %rcx
0000000000009e8b	movq	%rcx, 0x10(%rbx)
0000000000009e8f	movl	$0x0, (%rsp)
0000000000009e96	movq	%rbx, %rdi
0000000000009e99	movl	$0x3, %esi
0000000000009e9e	movl	$0x18, %edx
0000000000009ea3	movl	$0x40, %ecx
0000000000009ea8	movl	%eax, %r8d
0000000000009eab	xorl	%r9d, %r9d
0000000000009eae	callq	_mach_msg
0000000000009eb3	movl	%eax, %ebx
0000000000009eb5	leal	-0x10000002(%rbx), %eax
0000000000009ebb	cmpl	$0xe, %eax
0000000000009ebe	ja	0x9ed4
0000000000009ec0	movl	$0x4003, %ecx
0000000000009ec5	btl	%eax, %ecx
0000000000009ec8	jae	0x9ed4
0000000000009eca	movl	-0x4c(%rbp), %edi
0000000000009ecd	callq	_mig_put_reply_port
0000000000009ed2	jmp	0x9f22
0000000000009ed4	testl	%ebx, %ebx
0000000000009ed6	jne	0x9f03
0000000000009ed8	movl	-0x44(%rbp), %eax
0000000000009edb	cmpl	$0x47, %eax
0000000000009ede	je	0x9f0d
0000000000009ee0	cmpl	$0xdb0, %eax
0000000000009ee5	jne	0x9f14
0000000000009ee7	movl	-0x58(%rbp), %eax
0000000000009eea	movl	-0x54(%rbp), %ecx
0000000000009eed	movl	$0xfffffed4, %ebx
0000000000009ef2	testl	%eax, %eax
0000000000009ef4	js	0x9f2f
0000000000009ef6	cmpl	$0x24, %ecx
0000000000009ef9	jne	0x9f19
0000000000009efb	cmpl	$0x0, -0x38(%rbp)
0000000000009eff	jne	0x9f3a
0000000000009f01	jmp	0x9f19
0000000000009f03	movl	-0x4c(%rbp), %edi
0000000000009f06	callq	_mig_dealloc_reply_port
0000000000009f0b	jmp	0x9f22
0000000000009f0d	movl	$0xfffffecc, %ebx
0000000000009f12	jmp	0x9f19
0000000000009f14	movl	$0xfffffed3, %ebx
0000000000009f19	leaq	-0x58(%rbp), %rdi
0000000000009f1d	callq	_mach_msg_destroy
0000000000009f22	movl	%ebx, %eax
0000000000009f24	addq	$0x48, %rsp
0000000000009f28	popq	%rbx
0000000000009f29	popq	%r14
0000000000009f2b	popq	%r15
0000000000009f2d	popq	%rbp
0000000000009f2e	retq
0000000000009f2f	cmpl	$0x38, %ecx
0000000000009f32	jne	0x9f19
0000000000009f34	cmpl	$0x1, -0x40(%rbp)
0000000000009f38	jne	0x9f19
0000000000009f3a	movl	$0xfffffed4, %ebx
0000000000009f3f	cmpl	$0x0, -0x50(%rbp)
0000000000009f43	jne	0x9f19
0000000000009f45	testl	%eax, %eax
0000000000009f47	js	0x9f55
0000000000009f49	movl	-0x38(%rbp), %ebx
0000000000009f4c	testl	%ebx, %ebx
0000000000009f4e	jne	0x9f19
0000000000009f50	movl	-0x24(%rbp), %eax
0000000000009f53	jmp	0x9f6b
0000000000009f55	movzwl	-0x32(%rbp), %eax
0000000000009f59	shll	$0x10, %eax
0000000000009f5c	cmpl	$0x2110000, %eax
0000000000009f61	jne	0x9f19
0000000000009f63	movl	-0x30(%rbp), %eax
0000000000009f66	cmpl	-0x24(%rbp), %eax
0000000000009f69	jne	0x9f19
0000000000009f6b	movq	-0x3c(%rbp), %rcx
0000000000009f6f	movq	%rcx, (%r15)
0000000000009f72	movl	%eax, (%r14)
0000000000009f75	xorl	%ebx, %ebx
0000000000009f77	jmp	0x9f22
_posix_spawnattr_setcpumonitor_default:
0000000000009f79	movl	$0x16, %eax
0000000000009f7e	testq	%rdi, %rdi
0000000000009f81	je	0x9f9c
0000000000009f83	movq	(%rdi), %rcx
0000000000009f86	testq	%rcx, %rcx
0000000000009f89	je	0x9f9c
0000000000009f8b	movl	$0xfe, %eax
0000000000009f90	movq	%rax, %xmm0
0000000000009f95	movdqu	%xmm0, 0x28(%rcx)
0000000000009f9a	xorl	%eax, %eax
0000000000009f9c	retq
_posix_spawnattr_setspecialport_np:
0000000000009f9d	pushq	%rbp
0000000000009f9e	movq	%rsp, %rbp
0000000000009fa1	subq	$0x20, %rsp
0000000000009fa5	xorl	%ecx, %ecx
0000000000009fa7	leaq	-0x18(%rbp), %rax
0000000000009fab	movq	%rcx, (%rax)
0000000000009fae	movl	%esi, 0x8(%rax)
0000000000009fb1	movq	%rcx, 0xc(%rax)
0000000000009fb5	movl	%edx, 0x14(%rax)
0000000000009fb8	movq	%rax, %rsi
0000000000009fbb	callq	_posix_spawn_appendportaction_np
0000000000009fc0	addq	$0x20, %rsp
0000000000009fc4	popq	%rbp
0000000000009fc5	retq
_posix_spawn_file_actions_addopen:
0000000000009fc6	pushq	%rbp
0000000000009fc7	movq	%rsp, %rbp
0000000000009fca	pushq	%r15
0000000000009fcc	pushq	%r14
0000000000009fce	pushq	%r13
0000000000009fd0	pushq	%r12
0000000000009fd2	pushq	%rbx
0000000000009fd3	pushq	%rax
0000000000009fd4	movl	$0x16, %eax
0000000000009fd9	testq	%rdi, %rdi
0000000000009fdc	je	0xa059
0000000000009fde	movl	%ecx, %r12d
0000000000009fe1	movq	%rdi, %rbx
0000000000009fe4	movq	(%rdi), %rcx
0000000000009fe7	testq	%rcx, %rcx
0000000000009fea	je	0xa059
0000000000009fec	movl	%esi, %r13d
0000000000009fef	movl	$0x9, %eax
0000000000009ff4	cmpl	$0x27ff, %esi
0000000000009ffa	ja	0xa059
0000000000009ffc	movl	%r8d, %r15d
0000000000009fff	movq	%rdx, %r14
000000000000a002	movl	0x4(%rcx), %eax
000000000000a005	cmpl	(%rcx), %eax
000000000000a007	jne	0xa022
000000000000a009	movq	%rbx, %rdi
000000000000a00c	callq	__posix_spawn_file_actions_grow
000000000000a011	movl	%eax, %ecx
000000000000a013	movl	$0xc, %eax
000000000000a018	testl	%ecx, %ecx
000000000000a01a	jne	0xa059
000000000000a01c	movq	(%rbx), %rcx
000000000000a01f	movl	0x4(%rcx), %eax
000000000000a022	leal	0x1(%rax), %edx
000000000000a025	movl	%edx, 0x4(%rcx)
000000000000a028	cltq
000000000000a02a	imulq	$0x410, %rax, %rax
000000000000a031	leaq	0x16(%rcx,%rax), %rdi
000000000000a036	movl	$0x0, -0xe(%rdi)
000000000000a03d	movl	%r13d, -0xa(%rdi)
000000000000a041	movl	%r12d, -0x6(%rdi)
000000000000a045	movw	%r15w, -0x2(%rdi)
000000000000a04a	movl	$0x400, %edx
000000000000a04f	movq	%r14, %rsi
000000000000a052	callq	_strlcpy
000000000000a057	xorl	%eax, %eax
000000000000a059	addq	$0x8, %rsp
000000000000a05d	popq	%rbx
000000000000a05e	popq	%r12
000000000000a060	popq	%r13
000000000000a062	popq	%r14
000000000000a064	popq	%r15
000000000000a066	popq	%rbp
000000000000a067	retq
_kevent64:
000000000000a068	movl	$0x2000171, %eax
000000000000a06d	movq	%rcx, %r10
000000000000a070	syscall
000000000000a072	jae	0xa07c
000000000000a074	movq	%rax, %rdi
000000000000a077	jmp	_cerror_nocancel
000000000000a07c	retq
_posix_spawnattr_setbinpref_np:
000000000000a07d	movl	$0x16, %eax
000000000000a082	testq	%rdi, %rdi
000000000000a085	je	0xa0b8
000000000000a087	movq	(%rdi), %r8
000000000000a08a	testq	%r8, %r8
000000000000a08d	je	0xa0b8
000000000000a08f	xorl	%eax, %eax
000000000000a091	xorl	%r9d, %r9d
000000000000a094	testq	%rsi, %rsi
000000000000a097	je	0xa0b0
000000000000a099	movl	(%rdx,%r9,4), %edi
000000000000a09d	movl	%edi, 0x10(%r8,%r9,4)
000000000000a0a2	incq	%r9
000000000000a0a5	cmpq	$0x3, %r9
000000000000a0a9	ja	0xa0b0
000000000000a0ab	cmpq	%rsi, %r9
000000000000a0ae	jb	0xa099
000000000000a0b0	testq	%rcx, %rcx
000000000000a0b3	je	0xa0b8
000000000000a0b5	movq	%r9, (%rcx)
000000000000a0b8	retq
000000000000a0b9	nop
000000000000a0ba	nop
000000000000a0bb	nop
___setlogin:
000000000000a0bc	movl	$0x2000032, %eax
000000000000a0c1	movq	%rcx, %r10
000000000000a0c4	syscall
000000000000a0c6	jae	0xa0d0
000000000000a0c8	movq	%rax, %rdi
000000000000a0cb	jmp	_cerror_nocancel
000000000000a0d0	retq
000000000000a0d1	nop
000000000000a0d2	nop
000000000000a0d3	nop
___initgroups:
000000000000a0d4	movl	$0x20000f3, %eax
000000000000a0d9	movq	%rcx, %r10
000000000000a0dc	syscall
000000000000a0de	jae	0xa0e8
000000000000a0e0	movq	%rax, %rdi
000000000000a0e3	jmp	_cerror_nocancel
000000000000a0e8	retq
000000000000a0e9	nop
000000000000a0ea	nop
000000000000a0eb	nop
___getlogin:
000000000000a0ec	movl	$0x2000031, %eax
000000000000a0f1	movq	%rcx, %r10
000000000000a0f4	syscall
000000000000a0f6	jae	0xa100
000000000000a0f8	movq	%rax, %rdi
000000000000a0fb	jmp	_cerror
000000000000a100	retq
_mach_port_set_context:
000000000000a101	jmp	__kernelrpc_mach_port_set_context
__kernelrpc_mach_port_set_context:
000000000000a106	pushq	%rbp
000000000000a107	movq	%rsp, %rbp
000000000000a10a	pushq	%rbx
000000000000a10b	subq	$0x38, %rsp
000000000000a10f	leaq	_NDR_record(%rip), %rax
000000000000a116	movq	(%rax), %rax
000000000000a119	leaq	-0x38(%rbp), %rbx
000000000000a11d	movq	%rax, 0x18(%rbx)
000000000000a121	movl	%esi, 0x20(%rbx)
000000000000a124	movq	%rdx, 0x24(%rbx)
000000000000a128	movl	$0x1513, (%rbx)
000000000000a12e	movl	%edi, 0x8(%rbx)
000000000000a131	callq	_mig_get_reply_port
000000000000a136	movl	%eax, 0xc(%rbx)
000000000000a139	movabsq	$0xc9d00000000, %rcx
000000000000a143	movq	%rcx, 0x10(%rbx)
000000000000a147	movl	$0x0, (%rsp)
000000000000a14e	movq	%rbx, %rdi
000000000000a151	movl	$0x3, %esi
000000000000a156	movl	$0x2c, %edx
000000000000a15b	movl	$0x2c, %ecx
000000000000a160	movl	%eax, %r8d
000000000000a163	xorl	%r9d, %r9d
000000000000a166	callq	_mach_msg
000000000000a16b	movl	%eax, %ebx
000000000000a16d	leal	-0x10000002(%rbx), %eax
000000000000a173	cmpl	$0xe, %eax
000000000000a176	ja	0xa18c
000000000000a178	movl	$0x4003, %ecx
000000000000a17d	btl	%eax, %ecx
000000000000a180	jae	0xa18c
000000000000a182	movl	-0x2c(%rbp), %edi
000000000000a185	callq	_mig_put_reply_port
000000000000a18a	jmp	0xa1e1
000000000000a18c	testl	%ebx, %ebx
000000000000a18e	jne	0xa1c2
000000000000a190	movl	-0x24(%rbp), %eax
000000000000a193	cmpl	$0x47, %eax
000000000000a196	je	0xa1cc
000000000000a198	cmpl	$0xd01, %eax
000000000000a19d	jne	0xa1d3
000000000000a19f	movl	$0xfffffed4, %ebx
000000000000a1a4	cmpl	$0x0, -0x38(%rbp)
000000000000a1a8	js	0xa1d8
000000000000a1aa	cmpl	$0x24, -0x34(%rbp)
000000000000a1ae	jne	0xa1d8
000000000000a1b0	movl	-0x30(%rbp), %eax
000000000000a1b3	testl	%eax, %eax
000000000000a1b5	jne	0xa1d8
000000000000a1b7	movl	-0x18(%rbp), %ebx
000000000000a1ba	testl	%ebx, %ebx
000000000000a1bc	jne	0xa1d8
000000000000a1be	xorl	%ebx, %ebx
000000000000a1c0	jmp	0xa1e1
000000000000a1c2	movl	-0x2c(%rbp), %edi
000000000000a1c5	callq	_mig_dealloc_reply_port
000000000000a1ca	jmp	0xa1e1
000000000000a1cc	movl	$0xfffffecc, %ebx
000000000000a1d1	jmp	0xa1d8
000000000000a1d3	movl	$0xfffffed3, %ebx
000000000000a1d8	leaq	-0x38(%rbp), %rdi
000000000000a1dc	callq	_mach_msg_destroy
000000000000a1e1	movl	%ebx, %eax
000000000000a1e3	addq	$0x38, %rsp
000000000000a1e7	popq	%rbx
000000000000a1e8	popq	%rbp
000000000000a1e9	retq
_mach_port_get_set_status:
000000000000a1ea	jmp	__kernelrpc_mach_port_get_set_status
__kernelrpc_mach_port_get_set_status:
000000000000a1ef	pushq	%rbp
000000000000a1f0	movq	%rsp, %rbp
000000000000a1f3	pushq	%r15
000000000000a1f5	pushq	%r14
000000000000a1f7	pushq	%rbx
000000000000a1f8	subq	$0x48, %rsp
000000000000a1fc	movq	%rcx, %r14
000000000000a1ff	movq	%rdx, %r15
000000000000a202	leaq	_NDR_record(%rip), %rax
000000000000a209	movq	(%rax), %rax
000000000000a20c	leaq	-0x58(%rbp), %rbx
000000000000a210	movq	%rax, 0x18(%rbx)
000000000000a214	movl	%esi, 0x20(%rbx)
000000000000a217	movl	$0x1513, (%rbx)
000000000000a21d	movl	%edi, 0x8(%rbx)
000000000000a220	callq	_mig_get_reply_port
000000000000a225	movl	%eax, 0xc(%rbx)
000000000000a228	movabsq	$0xc8b00000000, %rcx
000000000000a232	movq	%rcx, 0x10(%rbx)
000000000000a236	movl	$0x0, (%rsp)
000000000000a23d	movq	%rbx, %rdi
000000000000a240	movl	$0x3, %esi
000000000000a245	movl	$0x24, %edx
000000000000a24a	movl	$0x40, %ecx
000000000000a24f	movl	%eax, %r8d
000000000000a252	xorl	%r9d, %r9d
000000000000a255	callq	_mach_msg
000000000000a25a	movl	%eax, %ebx
000000000000a25c	leal	-0x10000002(%rbx), %eax
000000000000a262	cmpl	$0xe, %eax
000000000000a265	ja	0xa27b
000000000000a267	movl	$0x4003, %ecx
000000000000a26c	btl	%eax, %ecx
000000000000a26f	jae	0xa27b
000000000000a271	movl	-0x4c(%rbp), %edi
000000000000a274	callq	_mig_put_reply_port
000000000000a279	jmp	0xa2e2
000000000000a27b	testl	%ebx, %ebx
000000000000a27d	jne	0xa2ab
000000000000a27f	movl	-0x44(%rbp), %eax
000000000000a282	cmpl	$0x47, %eax
000000000000a285	je	0xa2b5
000000000000a287	cmpl	$0xcef, %eax
000000000000a28c	jne	0xa2bc
000000000000a28e	movl	-0x58(%rbp), %eax
000000000000a291	movl	-0x54(%rbp), %ecx
000000000000a294	movl	$0xfffffed4, %ebx
000000000000a299	testl	%eax, %eax
000000000000a29b	js	0xa2c3
000000000000a29d	cmpl	$0x24, %ecx
000000000000a2a0	jne	0xa2d9
000000000000a2a2	movl	-0x38(%rbp), %ecx
000000000000a2a5	testl	%ecx, %ecx
000000000000a2a7	jne	0xa2ce
000000000000a2a9	jmp	0xa2d9
000000000000a2ab	movl	-0x4c(%rbp), %edi
000000000000a2ae	callq	_mig_dealloc_reply_port
000000000000a2b3	jmp	0xa2e2
000000000000a2b5	movl	$0xfffffecc, %ebx
000000000000a2ba	jmp	0xa2d9
000000000000a2bc	movl	$0xfffffed3, %ebx
000000000000a2c1	jmp	0xa2d9
000000000000a2c3	cmpl	$0x38, %ecx
000000000000a2c6	jne	0xa2d9
000000000000a2c8	cmpl	$0x1, -0x40(%rbp)
000000000000a2cc	jne	0xa2d9
000000000000a2ce	movl	$0xfffffed4, %ebx
000000000000a2d3	cmpl	$0x0, -0x50(%rbp)
000000000000a2d7	je	0xa2ef
000000000000a2d9	leaq	-0x58(%rbp), %rdi
000000000000a2dd	callq	_mach_msg_destroy
000000000000a2e2	movl	%ebx, %eax
000000000000a2e4	addq	$0x48, %rsp
000000000000a2e8	popq	%rbx
000000000000a2e9	popq	%r14
000000000000a2eb	popq	%r15
000000000000a2ed	popq	%rbp
000000000000a2ee	retq
000000000000a2ef	testl	%eax, %eax
000000000000a2f1	js	0xa2ff
000000000000a2f3	movl	-0x38(%rbp), %ebx
000000000000a2f6	testl	%ebx, %ebx
000000000000a2f8	jne	0xa2d9
000000000000a2fa	movl	-0x24(%rbp), %eax
000000000000a2fd	jmp	0xa318
000000000000a2ff	movzbl	-0x31(%rbp), %eax
000000000000a303	shll	$0x18, %eax
000000000000a306	cmpl	$0x1000000, %eax
000000000000a30b	jne	0xa2d9
000000000000a30d	movl	-0x30(%rbp), %eax
000000000000a310	shrl	$0x2, %eax
000000000000a313	cmpl	-0x24(%rbp), %eax
000000000000a316	jne	0xa2d9
000000000000a318	movq	-0x3c(%rbp), %rcx
000000000000a31c	movq	%rcx, (%r15)
000000000000a31f	movl	%eax, (%r14)
000000000000a322	xorl	%ebx, %ebx
000000000000a324	jmp	0xa2e2
000000000000a326	nop
000000000000a327	nop
___pthread_canceled:
000000000000a328	movl	$0x200014d, %eax
000000000000a32d	movq	%rcx, %r10
000000000000a330	syscall
000000000000a332	jae	0xa33c
000000000000a334	movq	%rax, %rdi
000000000000a337	jmp	_cerror_nocancel
000000000000a33c	retq
_clock_sleep:
000000000000a33d	movq	%rcx, %r8
000000000000a340	movq	%rdx, %rcx
000000000000a343	shrq	$0x20, %rcx
000000000000a347	jmp	_clock_sleep_trap
_vm_map:
000000000000a34c	pushq	%rbp
000000000000a34d	movq	%rsp, %rbp
000000000000a350	pushq	%r15
000000000000a352	pushq	%r14
000000000000a354	pushq	%r13
000000000000a356	pushq	%r12
000000000000a358	pushq	%rbx
000000000000a359	pushq	%rax
000000000000a35a	movl	%r8d, %ebx
000000000000a35d	movq	%rdx, %r14
000000000000a360	movq	%rsi, %r15
000000000000a363	movl	%edi, %r12d
000000000000a366	movl	0x18(%rbp), %r10d
000000000000a36a	movl	0x20(%rbp), %r11d
000000000000a36e	movl	0x28(%rbp), %r13d
000000000000a372	movl	0x30(%rbp), %eax
000000000000a375	subq	$0x8, %rsp
000000000000a379	pushq	%rax
000000000000a37a	pushq	%r13
000000000000a37c	pushq	%r11
000000000000a37e	pushq	%r10
000000000000a380	pushq	0x10(%rbp)
000000000000a383	callq	__kernelrpc_vm_map
000000000000a388	addq	$0x30, %rsp
000000000000a38c	movl	%eax, %r13d
000000000000a38f	testl	%eax, %eax
000000000000a391	jne	0xa3bd
000000000000a393	movq	___syscall_logger(%rip), %rax
000000000000a39a	testq	%rax, %rax
000000000000a39d	je	0xa3bd
000000000000a39f	andl	$0xff000000, %ebx
000000000000a3a5	orl	$0x90, %ebx
000000000000a3ab	movl	%r12d, %esi
000000000000a3ae	movq	(%r15), %r8
000000000000a3b1	movl	%ebx, %edi
000000000000a3b3	movq	%r14, %rdx
000000000000a3b6	xorl	%ecx, %ecx
000000000000a3b8	xorl	%r9d, %r9d
000000000000a3bb	callq	*%rax
000000000000a3bd	movl	%r13d, %eax
000000000000a3c0	addq	$0x8, %rsp
000000000000a3c4	popq	%rbx
000000000000a3c5	popq	%r12
000000000000a3c7	popq	%r13
000000000000a3c9	popq	%r14
000000000000a3cb	popq	%r15
000000000000a3cd	popq	%rbp
000000000000a3ce	retq
__kernelrpc_vm_map:
000000000000a3cf	pushq	%rbp
000000000000a3d0	movq	%rsp, %rbp
000000000000a3d3	pushq	%r15
000000000000a3d5	pushq	%r14
000000000000a3d7	pushq	%r12
000000000000a3d9	pushq	%rbx
000000000000a3da	subq	$0x70, %rsp
000000000000a3de	movq	%rsi, %r14
000000000000a3e1	movl	0x30(%rbp), %r10d
000000000000a3e5	movl	0x28(%rbp), %r11d
000000000000a3e9	movl	0x20(%rbp), %r15d
000000000000a3ed	movl	0x18(%rbp), %r12d
000000000000a3f1	movq	0x10(%rbp), %rax
000000000000a3f5	leaq	-0x88(%rbp), %rbx
000000000000a3fc	movl	$0x1, 0x18(%rbx)
000000000000a403	movl	%r9d, 0x1c(%rbx)
000000000000a407	movl	$0x130000, 0x24(%rbx)
000000000000a40e	leaq	_NDR_record(%rip), %rsi
000000000000a415	movq	(%rsi), %rsi
000000000000a418	movq	%rsi, 0x28(%rbx)
000000000000a41c	movq	(%r14), %rsi
000000000000a41f	movq	%rsi, 0x30(%rbx)
000000000000a423	movq	%rdx, 0x38(%rbx)
000000000000a427	movq	%rcx, 0x40(%rbx)
000000000000a42b	movl	%r8d, 0x48(%rbx)
000000000000a42f	movq	%rax, 0x4c(%rbx)
000000000000a433	movl	%r12d, 0x54(%rbx)
000000000000a437	movl	%r15d, 0x58(%rbx)
000000000000a43b	movl	%r11d, 0x5c(%rbx)
000000000000a43f	movl	%r10d, 0x60(%rbx)
000000000000a443	movl	$0x80001513, (%rbx)
000000000000a449	movl	%edi, 0x8(%rbx)
000000000000a44c	callq	_mig_get_reply_port
000000000000a451	movl	%eax, 0xc(%rbx)
000000000000a454	movabsq	$0x12cb00000000, %rcx
000000000000a45e	movq	%rcx, 0x10(%rbx)
000000000000a462	movl	$0x0, (%rsp)
000000000000a469	movq	%rbx, %rdi
000000000000a46c	movl	$0x3, %esi
000000000000a471	movl	$0x64, %edx
000000000000a476	movl	$0x34, %ecx
000000000000a47b	movl	%eax, %r8d
000000000000a47e	xorl	%r9d, %r9d
000000000000a481	callq	_mach_msg
000000000000a486	movl	%eax, %ebx
000000000000a488	leal	-0x10000002(%rbx), %eax
000000000000a48e	cmpl	$0xe, %eax
000000000000a491	ja	0xa4a7
000000000000a493	movl	$0x4003, %ecx
000000000000a498	btl	%eax, %ecx
000000000000a49b	jae	0xa4a7
000000000000a49d	movl	-0x7c(%rbp), %edi
000000000000a4a0	callq	_mig_put_reply_port
000000000000a4a5	jmp	0xa518
000000000000a4a7	testl	%ebx, %ebx
000000000000a4a9	jne	0xa4f6
000000000000a4ab	movl	-0x74(%rbp), %eax
000000000000a4ae	cmpl	$0x47, %eax
000000000000a4b1	je	0xa500
000000000000a4b3	cmpl	$0x132f, %eax
000000000000a4b8	jne	0xa507
000000000000a4ba	movl	$0xfffffed4, %ebx
000000000000a4bf	cmpl	$0x0, -0x88(%rbp)
000000000000a4c6	js	0xa50c
000000000000a4c8	movl	-0x84(%rbp), %eax
000000000000a4ce	cmpl	$0x2c, %eax
000000000000a4d1	je	0xa4de
000000000000a4d3	cmpl	$0x24, %eax
000000000000a4d6	jne	0xa50c
000000000000a4d8	cmpl	$0x0, -0x68(%rbp)
000000000000a4dc	je	0xa50c
000000000000a4de	cmpl	$0x0, -0x80(%rbp)
000000000000a4e2	jne	0xa50c
000000000000a4e4	movl	-0x68(%rbp), %ebx
000000000000a4e7	testl	%ebx, %ebx
000000000000a4e9	jne	0xa50c
000000000000a4eb	movq	-0x64(%rbp), %rax
000000000000a4ef	movq	%rax, (%r14)
000000000000a4f2	xorl	%ebx, %ebx
000000000000a4f4	jmp	0xa518
000000000000a4f6	movl	-0x7c(%rbp), %edi
000000000000a4f9	callq	_mig_dealloc_reply_port
000000000000a4fe	jmp	0xa518
000000000000a500	movl	$0xfffffecc, %ebx
000000000000a505	jmp	0xa50c
000000000000a507	movl	$0xfffffed3, %ebx
000000000000a50c	leaq	-0x88(%rbp), %rdi
000000000000a513	callq	_mach_msg_destroy
000000000000a518	movl	%ebx, %eax
000000000000a51a	addq	$0x70, %rsp
000000000000a51e	popq	%rbx
000000000000a51f	popq	%r12
000000000000a521	popq	%r14
000000000000a523	popq	%r15
000000000000a525	popq	%rbp
000000000000a526	retq
000000000000a527	nop
_flistxattr:
000000000000a528	movl	$0x20000f1, %eax
000000000000a52d	movq	%rcx, %r10
000000000000a530	syscall
000000000000a532	jae	0xa53c
000000000000a534	movq	%rax, %rdi
000000000000a537	jmp	_cerror_nocancel
000000000000a53c	retq
000000000000a53d	nop
000000000000a53e	nop
000000000000a53f	nop
_mach_msg_receive:
000000000000a540	pushq	%rbp
000000000000a541	movq	%rsp, %rbp
000000000000a544	subq	$0x10, %rsp
000000000000a548	movl	0x4(%rdi), %ecx
000000000000a54b	movl	0xc(%rdi), %r8d
000000000000a54f	movl	$0x0, (%rsp)
000000000000a556	movl	$0x2, %esi
000000000000a55b	xorl	%edx, %edx
000000000000a55d	xorl	%r9d, %r9d
000000000000a560	callq	_mach_msg
000000000000a565	addq	$0x10, %rsp
000000000000a569	popq	%rbp
000000000000a56a	retq
000000000000a56b	nop
_mount:
000000000000a56c	movl	$0x20000a7, %eax
000000000000a571	movq	%rcx, %r10
000000000000a574	syscall
000000000000a576	jae	0xa580
000000000000a578	movq	%rax, %rdi
000000000000a57b	jmp	_cerror_nocancel
000000000000a580	retq
000000000000a581	nop
000000000000a582	nop
000000000000a583	nop
_wait4:
___wait4_nocancel:
000000000000a584	movl	$0x2000190, %eax
000000000000a589	movq	%rcx, %r10
000000000000a58c	syscall
000000000000a58e	jae	0xa598
000000000000a590	movq	%rax, %rdi
000000000000a593	jmp	_cerror_nocancel
000000000000a598	retq
000000000000a599	nop
000000000000a59a	nop
000000000000a59b	nop
___open_extended:
000000000000a59c	movl	$0x2000115, %eax
000000000000a5a1	movq	%rcx, %r10
000000000000a5a4	syscall
000000000000a5a6	jae	0xa5b0
000000000000a5a8	movq	%rax, %rdi
000000000000a5ab	jmp	_cerror_nocancel
000000000000a5b0	retq
000000000000a5b1	nop
000000000000a5b2	nop
000000000000a5b3	nop
_exchangedata:
000000000000a5b4	movl	$0x20000df, %eax
000000000000a5b9	movq	%rcx, %r10
000000000000a5bc	syscall
000000000000a5be	jae	0xa5c8
000000000000a5c0	movq	%rax, %rdi
000000000000a5c3	jmp	_cerror_nocancel
000000000000a5c8	retq
___carbon_delete:
000000000000a5c9	pushq	%rbp
000000000000a5ca	movq	%rsp, %rbp
000000000000a5cd	pushq	%rbx
000000000000a5ce	pushq	%rax
000000000000a5cf	callq	___delete
000000000000a5d4	movl	%eax, %ebx
000000000000a5d6	testl	%eax, %eax
000000000000a5d8	jne	0xa5df
000000000000a5da	callq	___inc_remove_counter
000000000000a5df	movl	%ebx, %eax
000000000000a5e1	addq	$0x8, %rsp
000000000000a5e5	popq	%rbx
000000000000a5e6	popq	%rbp
000000000000a5e7	retq
___delete:
000000000000a5e8	movl	$0x20000e2, %eax
000000000000a5ed	movq	%rcx, %r10
000000000000a5f0	syscall
000000000000a5f2	jae	0xa5fc
000000000000a5f4	movq	%rax, %rdi
000000000000a5f7	jmp	_cerror_nocancel
000000000000a5fc	retq
000000000000a5fd	nop
000000000000a5fe	nop
000000000000a5ff	nop
_unmount:
000000000000a600	movl	$0x200009f, %eax
000000000000a605	movq	%rcx, %r10
000000000000a608	syscall
000000000000a60a	jae	0xa614
000000000000a60c	movq	%rax, %rdi
000000000000a60f	jmp	_cerror_nocancel
000000000000a614	retq
_posix_spawn_file_actions_addinherit_np:
000000000000a615	pushq	%rbp
000000000000a616	movq	%rsp, %rbp
000000000000a619	pushq	%r14
000000000000a61b	pushq	%rbx
000000000000a61c	movl	$0x16, %eax
000000000000a621	testq	%rdi, %rdi
000000000000a624	je	0xa67f
000000000000a626	movq	%rdi, %rbx
000000000000a629	movq	(%rdi), %rcx
000000000000a62c	testq	%rcx, %rcx
000000000000a62f	je	0xa67f
000000000000a631	movl	%esi, %r14d
000000000000a634	movl	$0x9, %eax
000000000000a639	cmpl	$0x27ff, %esi
000000000000a63f	ja	0xa67f
000000000000a641	movl	0x4(%rcx), %eax
000000000000a644	cmpl	(%rcx), %eax
000000000000a646	jne	0xa661
000000000000a648	movq	%rbx, %rdi
000000000000a64b	callq	__posix_spawn_file_actions_grow
000000000000a650	movl	%eax, %ecx
000000000000a652	movl	$0xc, %eax
000000000000a657	testl	%ecx, %ecx
000000000000a659	jne	0xa67f
000000000000a65b	movq	(%rbx), %rcx
000000000000a65e	movl	0x4(%rcx), %eax
000000000000a661	leal	0x1(%rax), %edx
000000000000a664	movl	%edx, 0x4(%rcx)
000000000000a667	cltq
000000000000a669	imulq	$0x410, %rax, %rax
000000000000a670	movl	$0x3, 0x8(%rcx,%rax)
000000000000a678	movl	%r14d, 0xc(%rcx,%rax)
000000000000a67d	xorl	%eax, %eax
000000000000a67f	popq	%rbx
000000000000a680	popq	%r14
000000000000a682	popq	%rbp
000000000000a683	retq
_posix_spawn_file_actions_addclose:
000000000000a684	pushq	%rbp
000000000000a685	movq	%rsp, %rbp
000000000000a688	pushq	%r14
000000000000a68a	pushq	%rbx
000000000000a68b	movl	$0x16, %eax
000000000000a690	testq	%rdi, %rdi
000000000000a693	je	0xa6ef
000000000000a695	movq	%rdi, %rbx
000000000000a698	movq	(%rdi), %rcx
000000000000a69b	testq	%rcx, %rcx
000000000000a69e	je	0xa6ef
000000000000a6a0	movl	%esi, %r14d
000000000000a6a3	movl	$0x9, %eax
000000000000a6a8	cmpl	$0x27ff, %esi
000000000000a6ae	ja	0xa6ef
000000000000a6b0	movl	0x4(%rcx), %eax
000000000000a6b3	cmpl	(%rcx), %eax
000000000000a6b5	jne	0xa6d0
000000000000a6b7	movq	%rbx, %rdi
000000000000a6ba	callq	__posix_spawn_file_actions_grow
000000000000a6bf	movl	%eax, %ecx
000000000000a6c1	movl	$0xc, %eax
000000000000a6c6	testl	%ecx, %ecx
000000000000a6c8	jne	0xa6ef
000000000000a6ca	movq	(%rbx), %rcx
000000000000a6cd	movl	0x4(%rcx), %eax
000000000000a6d0	leal	0x1(%rax), %edx
000000000000a6d3	movl	%edx, 0x4(%rcx)
000000000000a6d6	cltq
000000000000a6d8	imulq	$0x410, %rax, %rax
000000000000a6df	movl	$0x1, %edx
000000000000a6e4	movl	%edx, 0x8(%rcx,%rax)
000000000000a6e8	movl	%r14d, 0xc(%rcx,%rax)
000000000000a6ed	xorl	%eax, %eax
000000000000a6ef	popq	%rbx
000000000000a6f0	popq	%r14
000000000000a6f2	popq	%rbp
000000000000a6f3	retq
_posix_spawnattr_setexceptionports_np:
000000000000a6f4	pushq	%rbp
000000000000a6f5	movq	%rsp, %rbp
000000000000a6f8	subq	$0x20, %rsp
000000000000a6fc	leaq	-0x18(%rbp), %rax
000000000000a700	movl	$0x1, (%rax)
000000000000a706	movl	%esi, 0x4(%rax)
000000000000a709	movl	%edx, 0x8(%rax)
000000000000a70c	movl	%ecx, 0xc(%rax)
000000000000a70f	movl	%r8d, 0x10(%rax)
000000000000a713	movl	$0x0, 0x14(%rax)
000000000000a71a	movq	%rax, %rsi
000000000000a71d	callq	_posix_spawn_appendportaction_np
000000000000a722	addq	$0x20, %rsp
000000000000a726	popq	%rbp
000000000000a727	retq
_reallocf:
000000000000a728	pushq	%rbp
000000000000a729	movq	%rsp, %rbp
000000000000a72c	pushq	%r15
000000000000a72e	pushq	%r14
000000000000a730	pushq	%rbx
000000000000a731	pushq	%rax
000000000000a732	movq	%rdi, %rbx
000000000000a735	leaq	__libkernel_functions(%rip), %r15
000000000000a73c	movq	(%r15), %rax
000000000000a73f	callq	*0x20(%rax)
000000000000a742	movq	%rax, %r14
000000000000a745	testq	%rbx, %rbx
000000000000a748	je	0xa758
000000000000a74a	testq	%r14, %r14
000000000000a74d	jne	0xa758
000000000000a74f	movq	(%r15), %rax
000000000000a752	movq	%rbx, %rdi
000000000000a755	callq	*0x18(%rax)
000000000000a758	movq	%r14, %rax
000000000000a75b	addq	$0x8, %rsp
000000000000a75f	popq	%rbx
000000000000a760	popq	%r14
000000000000a762	popq	%r15
000000000000a764	popq	%rbp
000000000000a765	retq
_bzero:
000000000000a766	movq	__libkernel_string_functions(%rip), %rax
000000000000a76d	movq	0x8(%rax), %rax
000000000000a771	jmpq	*%rax
__libkernel_strlen:
000000000000a773	movq	%rdi, %rax
000000000000a776	testb	$0x7, %dil
000000000000a77a	je	0xa797
000000000000a77c	cmpb	$0x0, (%rdi)
000000000000a77f	je	0xa7f3
000000000000a781	leaq	0x1(%rdi), %rax
000000000000a785	testb	$0x7, %al
000000000000a787	je	0xa797
000000000000a789	cmpb	$0x0, (%rax)
000000000000a78c	leaq	0x1(%rax), %rax
000000000000a790	jne	0xa785
000000000000a792	decq	%rax
000000000000a795	jmp	0xa7f6
000000000000a797	movabsq	$-0x101010101010101, %r8
000000000000a7a1	movabsq	$-0x7f7f7f7f7f7f7f80, %rdx
000000000000a7ab	jmp	0xa7c9
000000000000a7ad	cmpb	$0x0, 0x4(%rax)
000000000000a7b1	je	0xa808
000000000000a7b3	cmpb	$0x0, 0x5(%rax)
000000000000a7b7	je	0xa80f
000000000000a7b9	cmpb	$0x0, 0x6(%rax)
000000000000a7bd	je	0xa816
000000000000a7bf	cmpb	$0x0, 0x7(%rax)
000000000000a7c3	je	0xa81d
000000000000a7c5	addq	$0x8, %rax
000000000000a7c9	movq	(%rax), %rsi
000000000000a7cc	leaq	(%rsi,%r8), %rcx
000000000000a7d0	testq	%rdx, %rcx
000000000000a7d3	je	0xa7c5
000000000000a7d5	testb	%sil, %sil
000000000000a7d8	je	0xa7f6
000000000000a7da	cmpb	$0x0, 0x1(%rax)
000000000000a7de	je	0xa7fa
000000000000a7e0	cmpb	$0x0, 0x2(%rax)
000000000000a7e4	je	0xa801
000000000000a7e6	cmpb	$0x0, 0x3(%rax)
000000000000a7ea	jne	0xa7ad
000000000000a7ec	movl	$0x3, %ecx
000000000000a7f1	jmp	0xa822
000000000000a7f3	movq	%rdi, %rax
000000000000a7f6	subq	%rdi, %rax
000000000000a7f9	retq
000000000000a7fa	movl	$0x1, %ecx
000000000000a7ff	jmp	0xa822
000000000000a801	movl	$0x2, %ecx
000000000000a806	jmp	0xa822
000000000000a808	movl	$0x4, %ecx
000000000000a80d	jmp	0xa822
000000000000a80f	movl	$0x5, %ecx
000000000000a814	jmp	0xa822
000000000000a816	movl	$0x6, %ecx
000000000000a81b	jmp	0xa822
000000000000a81d	movl	$0x7, %ecx
000000000000a822	subq	%rdi, %rcx
000000000000a825	addq	%rcx, %rax
000000000000a828	retq
__libkernel_strchr:
000000000000a829	movq	%rdi, %rax
000000000000a82c	movsbl	(%rdi), %edx
000000000000a82f	movsbl	%sil, %ecx
000000000000a833	jmp	0xa840
000000000000a835	testb	%dl, %dl
000000000000a837	je	0xa845
000000000000a839	movsbl	0x1(%rax), %edx
000000000000a83d	incq	%rax
000000000000a840	cmpl	%edx, %ecx
000000000000a842	jne	0xa835
000000000000a844	retq
000000000000a845	xorl	%eax, %eax
000000000000a847	retq
__libkernel_bzero:
000000000000a848	movq	%rsi, %rdx
000000000000a84b	xorl	%esi, %esi
000000000000a84d	jmp	__libkernel_memset
__libkernel_memset:
000000000000a852	movq	%rdi, %rax
000000000000a855	cmpq	$0xb, %rdx
000000000000a859	ja	0xa870
000000000000a85b	testq	%rdx, %rdx
000000000000a85e	je	0xa8da
000000000000a860	xorl	%ecx, %ecx
000000000000a862	movb	%sil, (%rax,%rcx)
000000000000a866	incq	%rcx
000000000000a869	cmpq	%rcx, %rdx
000000000000a86c	jne	0xa862
000000000000a86e	jmp	0xa8da
000000000000a870	movzbl	%sil, %ecx
000000000000a874	movl	%ecx, %r8d
000000000000a877	shll	$0x8, %r8d
000000000000a87b	orl	%ecx, %r8d
000000000000a87e	testl	%ecx, %ecx
000000000000a880	cmovel	%ecx, %r8d
000000000000a884	movq	%rax, %rcx
000000000000a887	andq	$0x3, %rcx
000000000000a88b	je	0xa8ad
000000000000a88d	movl	$0x4, %r9d
000000000000a893	subq	%rcx, %r9
000000000000a896	addq	$-0x4, %rcx
000000000000a89a	movq	%rax, %rdi
000000000000a89d	movb	%sil, (%rdi)
000000000000a8a0	incq	%rdi
000000000000a8a3	incq	%rcx
000000000000a8a6	jne	0xa89d
000000000000a8a8	subq	%r9, %rdx
000000000000a8ab	jmp	0xa8b0
000000000000a8ad	movq	%rax, %rdi
000000000000a8b0	movq	%rdx, %rcx
000000000000a8b3	shrq	$0x2, %rcx
000000000000a8b7	negq	%rcx
000000000000a8ba	movl	%r8d, (%rdi)
000000000000a8bd	addq	$0x4, %rdi
000000000000a8c1	incq	%rcx
000000000000a8c4	jne	0xa8ba
000000000000a8c6	andq	$0x3, %rdx
000000000000a8ca	je	0xa8da
000000000000a8cc	xorl	%ecx, %ecx
000000000000a8ce	movb	%sil, (%rdi,%rcx)
000000000000a8d2	incq	%rcx
000000000000a8d5	cmpq	%rcx, %rdx
000000000000a8d8	jne	0xa8ce
000000000000a8da	retq
__libkernel_memmove:
000000000000a8db	movq	%rdi, %rax
000000000000a8de	cmpq	%rsi, %rdi
000000000000a8e1	je	0xaa14
000000000000a8e7	testq	%rdx, %rdx
000000000000a8ea	je	0xaa14
000000000000a8f0	cmpq	%rsi, %rax
000000000000a8f3	jae	0xa945
000000000000a8f5	movl	%esi, %ecx
000000000000a8f7	orl	%eax, %ecx
000000000000a8f9	testb	$0x3, %cl
000000000000a8fc	je	0xa9d3
000000000000a902	movl	%esi, %ecx
000000000000a904	xorl	%eax, %ecx
000000000000a906	movl	%esi, %edi
000000000000a908	andl	$0x3, %edi
000000000000a90b	movl	$0x4, %r8d
000000000000a911	subq	%rdi, %r8
000000000000a914	testb	$0x3, %cl
000000000000a917	cmovneq	%rdx, %r8
000000000000a91b	movl	$0x4, %ecx
000000000000a920	cmpq	%rcx, %rdx
000000000000a923	cmovbq	%rdx, %r8
000000000000a927	movq	%rax, %r9
000000000000a92a	movq	%r8, %rdi
000000000000a92d	movb	(%rsi), %cl
000000000000a92f	incq	%rsi
000000000000a932	movb	%cl, (%r9)
000000000000a935	incq	%r9
000000000000a938	decq	%rdi
000000000000a93b	jne	0xa92d
000000000000a93d	subq	%r8, %rdx
000000000000a940	jmp	0xa9d6
000000000000a945	addq	%rdx, %rsi
000000000000a948	leaq	(%rax,%rdx), %r9
000000000000a94c	movl	%esi, %ecx
000000000000a94e	orl	%r9d, %ecx
000000000000a951	testb	$0x3, %cl
000000000000a954	je	0xa989
000000000000a956	movl	%esi, %ecx
000000000000a958	xorl	%r9d, %ecx
000000000000a95b	movl	%esi, %r8d
000000000000a95e	andl	$0x3, %r8d
000000000000a962	testb	$0x3, %cl
000000000000a965	cmovneq	%rdx, %r8
000000000000a969	cmpq	$0x5, %rdx
000000000000a96d	cmovbq	%rdx, %r8
000000000000a971	movq	%r8, %rdi
000000000000a974	movb	-0x1(%rsi), %cl
000000000000a977	decq	%rsi
000000000000a97a	movb	%cl, -0x1(%r9)
000000000000a97e	decq	%r9
000000000000a981	decq	%rdi
000000000000a984	jne	0xa974
000000000000a986	subq	%r8, %rdx
000000000000a989	movq	%rdx, %r8
000000000000a98c	shrq	$0x2, %r8
000000000000a990	je	0xa9b5
000000000000a992	negq	%r8
000000000000a995	xorl	%ecx, %ecx
000000000000a997	xorl	%r10d, %r10d
000000000000a99a	movl	-0x4(%rsi,%rcx,4), %edi
000000000000a99e	movl	%edi, -0x4(%r9,%rcx,4)
000000000000a9a3	addq	$0x4, %r10
000000000000a9a7	decq	%rcx
000000000000a9aa	cmpq	%rcx, %r8
000000000000a9ad	jne	0xa99a
000000000000a9af	subq	%r10, %r9
000000000000a9b2	subq	%r10, %rsi
000000000000a9b5	andq	$0x3, %rdx
000000000000a9b9	je	0xaa14
000000000000a9bb	negq	%rdx
000000000000a9be	xorl	%edi, %edi
000000000000a9c0	movb	-0x1(%rsi,%rdi), %cl
000000000000a9c4	movb	%cl, -0x1(%r9,%rdi)
000000000000a9c9	decq	%rdi
000000000000a9cc	cmpq	%rdi, %rdx
000000000000a9cf	jne	0xa9c0
000000000000a9d1	jmp	0xaa14
000000000000a9d3	movq	%rax, %r9
000000000000a9d6	movq	%rdx, %r8
000000000000a9d9	shrq	$0x2, %r8
000000000000a9dd	je	0xa9fd
000000000000a9df	xorl	%ecx, %ecx
000000000000a9e1	xorl	%r10d, %r10d
000000000000a9e4	movl	(%rsi,%rcx,4), %edi
000000000000a9e7	movl	%edi, (%r9,%rcx,4)
000000000000a9eb	addq	$-0x4, %r10
000000000000a9ef	incq	%rcx
000000000000a9f2	cmpq	%rcx, %r8
000000000000a9f5	jne	0xa9e4
000000000000a9f7	subq	%r10, %r9
000000000000a9fa	subq	%r10, %rsi
000000000000a9fd	andq	$0x3, %rdx
000000000000aa01	je	0xaa14
000000000000aa03	xorl	%edi, %edi
000000000000aa05	movb	(%rsi,%rdi), %cl
000000000000aa08	movb	%cl, (%r9,%rdi)
000000000000aa0c	incq	%rdi
000000000000aa0f	cmpq	%rdi, %rdx
000000000000aa12	jne	0xaa05
000000000000aa14	retq
__libkernel_strcpy:
000000000000aa15	pushq	%rbp
000000000000aa16	movq	%rsp, %rbp
000000000000aa19	pushq	%r14
000000000000aa1b	pushq	%rbx
000000000000aa1c	movq	%rsi, %rbx
000000000000aa1f	movq	%rdi, %r14
000000000000aa22	movq	%rsi, %rdi
000000000000aa25	callq	__libkernel_strlen
000000000000aa2a	leaq	0x1(%rax), %rdx
000000000000aa2e	movq	%r14, %rdi
000000000000aa31	movq	%rbx, %rsi
000000000000aa34	callq	__libkernel_memmove
000000000000aa39	movq	%r14, %rax
000000000000aa3c	popq	%rbx
000000000000aa3d	popq	%r14
000000000000aa3f	popq	%rbp
000000000000aa40	retq
__libkernel_strlcpy:
000000000000aa41	pushq	%rbp
000000000000aa42	movq	%rsp, %rbp
000000000000aa45	pushq	%r15
000000000000aa47	pushq	%r14
000000000000aa49	pushq	%r12
000000000000aa4b	pushq	%rbx
000000000000aa4c	movq	%rdx, %r12
000000000000aa4f	movq	%rsi, %r15
000000000000aa52	movq	%rdi, %r14
000000000000aa55	movq	%rsi, %rdi
000000000000aa58	callq	__libkernel_strlen
000000000000aa5d	movq	%rax, %rbx
000000000000aa60	cmpq	%r12, %rax
000000000000aa63	jae	0xaa78
000000000000aa65	movq	%rbx, %rdx
000000000000aa68	incq	%rdx
000000000000aa6b	movq	%r14, %rdi
000000000000aa6e	movq	%r15, %rsi
000000000000aa71	callq	__libkernel_memmove
000000000000aa76	jmp	0xaa93
000000000000aa78	testq	%r12, %r12
000000000000aa7b	je	0xaa93
000000000000aa7d	leaq	-0x1(%r12), %rdx
000000000000aa82	movq	%r14, %rdi
000000000000aa85	movq	%r15, %rsi
000000000000aa88	callq	__libkernel_memmove
000000000000aa8d	movb	$0x0, -0x1(%r14,%r12)
000000000000aa93	movq	%rbx, %rax
000000000000aa96	popq	%rbx
000000000000aa97	popq	%r12
000000000000aa99	popq	%r14
000000000000aa9b	popq	%r15
000000000000aa9d	popq	%rbp
000000000000aa9e	retq
_mach_host_special_port_description:
000000000000aa9f	cmpl	$0x1f, %edi
000000000000aaa2	jbe	0xaaa7
000000000000aaa4	xorl	%eax, %eax
000000000000aaa6	retq
000000000000aaa7	movslq	%edi, %rax
000000000000aaaa	leaq	_mach_host_special_port_description.hsp_descs(%rip), %rcx
000000000000aab1	movq	(%rcx,%rax,8), %rax
000000000000aab5	retq
_mach_task_special_port_description:
000000000000aab6	cmpl	$0xb, %edi
000000000000aab9	jbe	0xaabe
000000000000aabb	xorl	%eax, %eax
000000000000aabd	retq
000000000000aabe	movslq	%edi, %rax
000000000000aac1	leaq	_mach_task_special_port_description.tsp_descs(%rip), %rcx
000000000000aac8	movq	(%rcx,%rax,8), %rax
000000000000aacc	retq
_mach_host_special_port_for_id:
000000000000aacd	leaq	_mach_host_special_port_for_id.hsp_ids(%rip), %rsi
000000000000aad4	movl	$0x1f, %edx
000000000000aad9	jmp	_port_for_id_internal
_port_for_id_internal:
000000000000aade	pushq	%rbp
000000000000aadf	movq	%rsp, %rbp
000000000000aae2	pushq	%r15
000000000000aae4	pushq	%r14
000000000000aae6	pushq	%r12
000000000000aae8	pushq	%rbx
000000000000aae9	testq	%rdi, %rdi
000000000000aaec	je	0xab27
000000000000aaee	testl	%edx, %edx
000000000000aaf0	jle	0xab1a
000000000000aaf2	movq	%rsi, %r14
000000000000aaf5	movq	%rdi, %r15
000000000000aaf8	movslq	%edx, %r12
000000000000aafb	xorl	%ebx, %ebx
000000000000aafd	movq	(%r14,%rbx,8), %rdi
000000000000ab01	testq	%rdi, %rdi
000000000000ab04	je	0xab12
000000000000ab06	movq	%r15, %rsi
000000000000ab09	callq	_strcmp
000000000000ab0e	testl	%eax, %eax
000000000000ab10	je	0xab37
000000000000ab12	incq	%rbx
000000000000ab15	cmpq	%r12, %rbx
000000000000ab18	jl	0xaafd
000000000000ab1a	callq	___error
000000000000ab1f	movl	$0x2, (%rax)
000000000000ab25	jmp	0xab32
000000000000ab27	callq	___error
000000000000ab2c	movl	$0x16, (%rax)
000000000000ab32	movl	$0xffffffff, %ebx
000000000000ab37	movl	%ebx, %eax
000000000000ab39	popq	%rbx
000000000000ab3a	popq	%r12
000000000000ab3c	popq	%r14
000000000000ab3e	popq	%r15
000000000000ab40	popq	%rbp
000000000000ab41	retq
_mach_task_special_port_for_id:
000000000000ab42	leaq	_mach_task_special_port_for_id.tsp_ids(%rip), %rsi
000000000000ab49	movl	$0xc, %edx
000000000000ab4e	jmp	_port_for_id_internal
_pkt_subtype_assert_fail:
000000000000ab53	pushq	%rbp
000000000000ab54	movq	%rsp, %rbp
000000000000ab57	callq	_pkt_subtype_assert_fail.cold.1
_pkt_type_assert_fail:
000000000000ab5c	pushq	%rbp
000000000000ab5d	movq	%rsp, %rbp
000000000000ab60	callq	_pkt_type_assert_fail.cold.1
_os_packet_set_headroom:
000000000000ab65	movl	%edi, %eax
000000000000ab67	andl	$0xf, %eax
000000000000ab6a	cmpq	$0xa, %rax
000000000000ab6e	jne	0xab8d
000000000000ab70	movzbl	%sil, %eax
000000000000ab74	andq	$-0x10, %rdi
000000000000ab78	movzwl	0x7c(%rdi), %ecx
000000000000ab7c	cmpl	%ecx, %eax
000000000000ab7e	jae	0xab87
000000000000ab80	movb	%sil, 0x32(%rdi)
000000000000ab84	xorl	%eax, %eax
000000000000ab86	retq
000000000000ab87	movl	$0x22, %eax
000000000000ab8c	retq
000000000000ab8d	pushq	%rbp
000000000000ab8e	movq	%rsp, %rbp
000000000000ab91	callq	_os_packet_set_headroom.cold.1
_os_packet_get_headroom:
000000000000ab96	movl	%edi, %eax
000000000000ab98	andl	$0xf, %eax
000000000000ab9b	cmpq	$0xa, %rax
000000000000ab9f	jne	0xabaa
000000000000aba1	andq	$-0x10, %rdi
000000000000aba5	movzbl	0x32(%rdi), %eax
000000000000aba9	retq
000000000000abaa	pushq	%rbp
000000000000abab	movq	%rsp, %rbp
000000000000abae	callq	_os_packet_get_headroom.cold.1
_os_packet_set_link_header_length:
000000000000abb3	movl	%edi, %eax
000000000000abb5	andl	$0x3, %eax
000000000000abb8	cmpq	$0x2, %rax
000000000000abbc	jne	0xabdb
000000000000abbe	movzbl	%sil, %eax
000000000000abc2	andq	$-0x10, %rdi
000000000000abc6	movzwl	0x7c(%rdi), %ecx
000000000000abca	cmpl	%ecx, %eax
000000000000abcc	ja	0xabd5
000000000000abce	movb	%sil, 0x33(%rdi)
000000000000abd2	xorl	%eax, %eax
000000000000abd4	retq
000000000000abd5	movl	$0x22, %eax
000000000000abda	retq
000000000000abdb	pushq	%rbp
000000000000abdc	movq	%rsp, %rbp
000000000000abdf	callq	_os_packet_set_link_header_length.cold.1
_os_packet_get_link_header_length:
000000000000abe4	movl	%edi, %eax
000000000000abe6	andl	$0x3, %eax
000000000000abe9	cmpq	$0x2, %rax
000000000000abed	jne	0xabf8
000000000000abef	andq	$-0x10, %rdi
000000000000abf3	movzbl	0x33(%rdi), %eax
000000000000abf7	retq
000000000000abf8	pushq	%rbp
000000000000abf9	movq	%rsp, %rbp
000000000000abfc	callq	_os_packet_get_link_header_length.cold.1
_os_packet_set_link_broadcast:
000000000000ac01	movl	%edi, %eax
000000000000ac03	andl	$0xf, %eax
000000000000ac06	cmpq	$0xa, %rax
000000000000ac0a	jne	0xac17
000000000000ac0c	andq	$-0x10, %rdi
000000000000ac10	orb	$0x1, 0x30(%rdi)
000000000000ac14	xorl	%eax, %eax
000000000000ac16	retq
000000000000ac17	pushq	%rbp
000000000000ac18	movq	%rsp, %rbp
000000000000ac1b	callq	_os_packet_set_link_broadcast.cold.1
_os_packet_get_link_broadcast:
000000000000ac20	movl	%edi, %eax
000000000000ac22	andl	$0xf, %eax
000000000000ac25	cmpq	$0xa, %rax
000000000000ac29	jne	0xac37
000000000000ac2b	andq	$-0x10, %rdi
000000000000ac2f	movzwl	0x30(%rdi), %eax
000000000000ac33	andl	$0x1, %eax
000000000000ac36	retq
000000000000ac37	pushq	%rbp
000000000000ac38	movq	%rsp, %rbp
000000000000ac3b	callq	_os_packet_get_link_broadcast.cold.1
_os_packet_set_link_multicast:
000000000000ac40	movl	%edi, %eax
000000000000ac42	andl	$0xf, %eax
000000000000ac45	cmpq	$0xa, %rax
000000000000ac49	jne	0xac56
000000000000ac4b	andq	$-0x10, %rdi
000000000000ac4f	orb	$0x2, 0x30(%rdi)
000000000000ac53	xorl	%eax, %eax
000000000000ac55	retq
000000000000ac56	pushq	%rbp
000000000000ac57	movq	%rsp, %rbp
000000000000ac5a	callq	_os_packet_set_link_multicast.cold.1
_os_packet_get_link_multicast:
000000000000ac5f	movl	%edi, %eax
000000000000ac61	andl	$0xf, %eax
000000000000ac64	cmpq	$0xa, %rax
000000000000ac68	jne	0xac77
000000000000ac6a	andq	$-0x10, %rdi
000000000000ac6e	movl	0x30(%rdi), %eax
000000000000ac71	shrl	%eax
000000000000ac73	andl	$0x1, %eax
000000000000ac76	retq
000000000000ac77	pushq	%rbp
000000000000ac78	movq	%rsp, %rbp
000000000000ac7b	callq	_os_packet_get_link_multicast.cold.1
_os_packet_set_link_ethfcs:
000000000000ac80	movl	%edi, %eax
000000000000ac82	andl	$0xf, %eax
000000000000ac85	cmpq	$0xa, %rax
000000000000ac89	jne	0xac96
000000000000ac8b	andq	$-0x10, %rdi
000000000000ac8f	orb	$0x4, 0x30(%rdi)
000000000000ac93	xorl	%eax, %eax
000000000000ac95	retq
000000000000ac96	pushq	%rbp
000000000000ac97	movq	%rsp, %rbp
000000000000ac9a	callq	_os_packet_set_link_ethfcs.cold.1
_os_packet_get_link_ethfcs:
000000000000ac9f	movl	%edi, %eax
000000000000aca1	andl	$0xf, %eax
000000000000aca4	cmpq	$0xa, %rax
000000000000aca8	jne	0xacb8
000000000000acaa	andq	$-0x10, %rdi
000000000000acae	movl	0x30(%rdi), %eax
000000000000acb1	shrl	$0x2, %eax
000000000000acb4	andl	$0x1, %eax
000000000000acb7	retq
000000000000acb8	pushq	%rbp
000000000000acb9	movq	%rsp, %rbp
000000000000acbc	callq	_os_packet_get_link_ethfcs.cold.1
_os_packet_set_transport_traffic_background:
000000000000acc1	movl	%edi, %eax
000000000000acc3	andl	$0x3, %eax
000000000000acc6	cmpq	$0x2, %rax
000000000000acca	jne	0xacdb
000000000000accc	andq	$-0x10, %rdi
000000000000acd0	orq	$0x8000, 0x40(%rdi)
000000000000acd8	xorl	%eax, %eax
000000000000acda	retq
000000000000acdb	pushq	%rbp
000000000000acdc	movq	%rsp, %rbp
000000000000acdf	callq	_os_packet_set_transport_traffic_background.cold.1
_os_packet_get_transport_traffic_background:
000000000000ace4	movl	%edi, %eax
000000000000ace6	andl	$0x3, %eax
000000000000ace9	cmpq	$0x2, %rax
000000000000aced	jne	0xacfe
000000000000acef	andq	$-0x10, %rdi
000000000000acf3	movq	0x40(%rdi), %rax
000000000000acf7	shrl	$0xf, %eax
000000000000acfa	andl	$0x1, %eax
000000000000acfd	retq
000000000000acfe	pushq	%rbp
000000000000acff	movq	%rsp, %rbp
000000000000ad02	callq	_os_packet_get_transport_traffic_background.cold.1
_os_packet_set_transport_traffic_realtime:
000000000000ad07	movl	%edi, %eax
000000000000ad09	andl	$0x3, %eax
000000000000ad0c	cmpq	$0x2, %rax
000000000000ad10	jne	0xad21
000000000000ad12	andq	$-0x10, %rdi
000000000000ad16	orq	$0x80000, 0x40(%rdi)
000000000000ad1e	xorl	%eax, %eax
000000000000ad20	retq
000000000000ad21	pushq	%rbp
000000000000ad22	movq	%rsp, %rbp
000000000000ad25	callq	_os_packet_set_transport_traffic_realtime.cold.1
_os_packet_get_transport_traffic_realtime:
000000000000ad2a	movl	%edi, %eax
000000000000ad2c	andl	$0x3, %eax
000000000000ad2f	cmpq	$0x2, %rax
000000000000ad33	jne	0xad44
000000000000ad35	andq	$-0x10, %rdi
000000000000ad39	movq	0x40(%rdi), %rax
000000000000ad3d	shrl	$0x13, %eax
000000000000ad40	andl	$0x1, %eax
000000000000ad43	retq
000000000000ad44	pushq	%rbp
000000000000ad45	movq	%rsp, %rbp
000000000000ad48	callq	_os_packet_get_transport_traffic_realtime.cold.1
_os_packet_set_transport_retransmit:
000000000000ad4d	movl	%edi, %eax
000000000000ad4f	andl	$0x3, %eax
000000000000ad52	cmpq	$0x2, %rax
000000000000ad56	jne	0xad67
000000000000ad58	andq	$-0x10, %rdi
000000000000ad5c	orq	$0x200000, 0x40(%rdi)
000000000000ad64	xorl	%eax, %eax
000000000000ad66	retq
000000000000ad67	pushq	%rbp
000000000000ad68	movq	%rsp, %rbp
000000000000ad6b	callq	_os_packet_set_transport_retransmit.cold.1
_os_packet_get_transport_retransmit:
000000000000ad70	movl	%edi, %eax
000000000000ad72	andl	$0x3, %eax
000000000000ad75	cmpq	$0x2, %rax
000000000000ad79	jne	0xad8a
000000000000ad7b	andq	$-0x10, %rdi
000000000000ad7f	movq	0x40(%rdi), %rax
000000000000ad83	shrl	$0x15, %eax
000000000000ad86	andl	$0x1, %eax
000000000000ad89	retq
000000000000ad8a	pushq	%rbp
000000000000ad8b	movq	%rsp, %rbp
000000000000ad8e	callq	_os_packet_get_transport_retransmit.cold.1
_os_packet_set_transport_last_packet:
000000000000ad93	movl	%edi, %eax
000000000000ad95	andl	$0x3, %eax
000000000000ad98	cmpq	$0x2, %rax
000000000000ad9c	jne	0xadad
000000000000ad9e	andq	$-0x10, %rdi
000000000000ada2	orq	$0x10000000, 0x40(%rdi)
000000000000adaa	xorl	%eax, %eax
000000000000adac	retq
000000000000adad	pushq	%rbp
000000000000adae	movq	%rsp, %rbp
000000000000adb1	callq	_os_packet_set_transport_last_packet.cold.1
_os_packet_set_service_class:
000000000000adb6	movl	%edi, %eax
000000000000adb8	andl	$0x3, %eax
000000000000adbb	cmpq	$0x2, %rax
000000000000adbf	jne	0xae45
000000000000adc5	movl	$0x16, %eax
000000000000adca	cmpl	$0x28011f, %esi
000000000000add0	jle	0xadf3
000000000000add2	cmpl	$0x38012f, %esi
000000000000add8	jg	0xae15
000000000000adda	cmpl	$0x280120, %esi
000000000000ade0	je	0xae3b
000000000000ade2	cmpl	$0x300110, %esi
000000000000ade8	je	0xae3b
000000000000adea	cmpl	$0x380100, %esi
000000000000adf0	je	0xae3b
000000000000adf2	retq
000000000000adf3	cmpl	$0x10007f, %esi
000000000000adf9	jle	0xae2f
000000000000adfb	cmpl	$0x100080, %esi
000000000000ae01	je	0xae3b
000000000000ae03	cmpl	$0x180010, %esi
000000000000ae09	je	0xae3b
000000000000ae0b	cmpl	$0x200020, %esi
000000000000ae11	je	0xae3b
000000000000ae13	jmp	0xadf2
000000000000ae15	cmpl	$0x380130, %esi
000000000000ae1b	je	0xae3b
000000000000ae1d	cmpl	$0x480190, %esi
000000000000ae23	je	0xae3b
000000000000ae25	cmpl	$0x400180, %esi
000000000000ae2b	je	0xae3b
000000000000ae2d	jmp	0xadf2
000000000000ae2f	testl	%esi, %esi
000000000000ae31	je	0xae3b
000000000000ae33	cmpl	$0x80090, %esi
000000000000ae39	jne	0xadf2
000000000000ae3b	andq	$-0x10, %rdi
000000000000ae3f	movl	%esi, 0x3c(%rdi)
000000000000ae42	xorl	%eax, %eax
000000000000ae44	retq
000000000000ae45	pushq	%rbp
000000000000ae46	movq	%rsp, %rbp
000000000000ae49	callq	_os_packet_set_service_class.cold.1
_os_packet_get_service_class:
000000000000ae4e	movl	%edi, %eax
000000000000ae50	andl	$0x3, %eax
000000000000ae53	cmpq	$0x2, %rax
000000000000ae57	jne	0xaed6
000000000000ae59	andq	$-0x10, %rdi
000000000000ae5d	movl	0x3c(%rdi), %ecx
000000000000ae60	xorl	%eax, %eax
000000000000ae62	cmpl	$0x28011f, %ecx
000000000000ae68	jle	0xae8b
000000000000ae6a	cmpl	$0x38012f, %ecx
000000000000ae70	jg	0xaead
000000000000ae72	cmpl	$0x280120, %ecx
000000000000ae78	je	0xaed3
000000000000ae7a	cmpl	$0x300110, %ecx
000000000000ae80	je	0xaed3
000000000000ae82	cmpl	$0x380100, %ecx
000000000000ae88	je	0xaed3
000000000000ae8a	retq
000000000000ae8b	cmpl	$0x10007f, %ecx
000000000000ae91	jle	0xaec7
000000000000ae93	cmpl	$0x100080, %ecx
000000000000ae99	je	0xaed3
000000000000ae9b	cmpl	$0x180010, %ecx
000000000000aea1	je	0xaed3
000000000000aea3	cmpl	$0x200020, %ecx
000000000000aea9	je	0xaed3
000000000000aeab	jmp	0xae8a
000000000000aead	cmpl	$0x380130, %ecx
000000000000aeb3	je	0xaed3
000000000000aeb5	cmpl	$0x480190, %ecx
000000000000aebb	je	0xaed3
000000000000aebd	cmpl	$0x400180, %ecx
000000000000aec3	je	0xaed3
000000000000aec5	jmp	0xae8a
000000000000aec7	testl	%ecx, %ecx
000000000000aec9	je	0xaed3
000000000000aecb	cmpl	$0x80090, %ecx
000000000000aed1	jne	0xae8a
000000000000aed3	movl	%ecx, %eax
000000000000aed5	retq
000000000000aed6	pushq	%rbp
000000000000aed7	movq	%rsp, %rbp
000000000000aeda	callq	_os_packet_get_service_class.cold.1
_os_packet_set_traffic_class:
000000000000aedf	andl	$0x1ffffff, %esi
000000000000aee5	xorl	%ecx, %ecx
000000000000aee7	cmpl	$0x3, %esi
000000000000aeea	ja	0xaef8
000000000000aeec	movl	%esi, %eax
000000000000aeee	leaq	0x17c6b(%rip), %rcx
000000000000aef5	movl	(%rcx,%rax,4), %ecx
000000000000aef8	movl	%edi, %eax
000000000000aefa	andl	$0x3, %eax
000000000000aefd	cmpq	$0x2, %rax
000000000000af01	jne	0xaf37
000000000000af03	movl	$0x16, %eax
000000000000af08	cmpl	$0x3800ff, %ecx
000000000000af0e	jg	0xaf1d
000000000000af10	testl	%ecx, %ecx
000000000000af12	je	0xaf2d
000000000000af14	cmpl	$0x100080, %ecx
000000000000af1a	je	0xaf2d
000000000000af1c	retq
000000000000af1d	cmpl	$0x400180, %ecx
000000000000af23	je	0xaf2d
000000000000af25	cmpl	$0x380100, %ecx
000000000000af2b	jne	0xaf1c
000000000000af2d	andq	$-0x10, %rdi
000000000000af31	movl	%ecx, 0x3c(%rdi)
000000000000af34	xorl	%eax, %eax
000000000000af36	retq
000000000000af37	pushq	%rbp
000000000000af38	movq	%rsp, %rbp
000000000000af3b	callq	_os_packet_set_traffic_class.cold.1
_os_packet_get_traffic_class:
000000000000af40	movl	%edi, %eax
000000000000af42	andl	$0x3, %eax
000000000000af45	cmpq	$0x2, %rax
000000000000af49	jne	0xafd5
000000000000af4f	andq	$-0x10, %rdi
000000000000af53	movl	0x3c(%rdi), %ecx
000000000000af56	xorl	%eax, %eax
000000000000af58	cmpl	$0x28011f, %ecx
000000000000af5e	jle	0xaf81
000000000000af60	cmpl	$0x38012f, %ecx
000000000000af66	jg	0xafa3
000000000000af68	cmpl	$0x280120, %ecx
000000000000af6e	je	0xafc9
000000000000af70	cmpl	$0x300110, %ecx
000000000000af76	je	0xafc9
000000000000af78	cmpl	$0x380100, %ecx
000000000000af7e	je	0xafc9
000000000000af80	retq
000000000000af81	cmpl	$0x10007f, %ecx
000000000000af87	jle	0xafbd
000000000000af89	cmpl	$0x100080, %ecx
000000000000af8f	je	0xafc9
000000000000af91	cmpl	$0x180010, %ecx
000000000000af97	je	0xafc9
000000000000af99	cmpl	$0x200020, %ecx
000000000000af9f	je	0xafc9
000000000000afa1	jmp	0xaf80
000000000000afa3	cmpl	$0x380130, %ecx
000000000000afa9	je	0xafc9
000000000000afab	cmpl	$0x480190, %ecx
000000000000afb1	je	0xafc9
000000000000afb3	cmpl	$0x400180, %ecx
000000000000afb9	je	0xafc9
000000000000afbb	jmp	0xaf80
000000000000afbd	testl	%ecx, %ecx
000000000000afbf	je	0xafc9
000000000000afc1	cmpl	$0x80090, %ecx
000000000000afc7	jne	0xaf80
000000000000afc9	shrl	$0x7, %ecx
000000000000afcc	andl	$0x1ff, %ecx
000000000000afd2	movl	%ecx, %eax
000000000000afd4	retq
000000000000afd5	pushq	%rbp
000000000000afd6	movq	%rsp, %rbp
000000000000afd9	callq	_os_packet_get_traffic_class.cold.1
_os_packet_set_inet_checksum:
000000000000afde	movl	%edi, %eax
000000000000afe0	andl	$0x3, %eax
000000000000afe3	cmpq	$0x2, %rax
000000000000afe7	jne	0xaffe
000000000000afe9	andl	$0x3, %esi
000000000000afec	andq	$-0x10, %rdi
000000000000aff0	movl	%esi, 0x34(%rdi)
000000000000aff3	movw	%dx, 0x38(%rdi)
000000000000aff7	movw	%cx, 0x3a(%rdi)
000000000000affb	xorl	%eax, %eax
000000000000affd	retq
000000000000affe	pushq	%rbp
000000000000afff	movq	%rsp, %rbp
000000000000b002	callq	_os_packet_set_inet_checksum.cold.1
_os_packet_get_inet_checksum:
000000000000b007	movl	%edi, %eax
000000000000b009	andl	$0x3, %eax
000000000000b00c	cmpq	$0x2, %rax
000000000000b010	jne	0xb035
000000000000b012	andq	$-0x10, %rdi
000000000000b016	testq	%rsi, %rsi
000000000000b019	je	0xb022
000000000000b01b	movzwl	0x38(%rdi), %eax
000000000000b01f	movw	%ax, (%rsi)
000000000000b022	testq	%rdx, %rdx
000000000000b025	je	0xb02e
000000000000b027	movzwl	0x3a(%rdi), %eax
000000000000b02b	movw	%ax, (%rdx)
000000000000b02e	movl	0x34(%rdi), %eax
000000000000b031	andl	$0x3, %eax
000000000000b034	retq
000000000000b035	pushq	%rbp
000000000000b036	movq	%rsp, %rbp
000000000000b039	callq	_os_packet_get_inet_checksum.cold.1
_os_packet_get_flow_uuid:
000000000000b03e	andq	$-0x10, %rdi
000000000000b042	testb	$0x7, %sil
000000000000b046	jne	0xb057
000000000000b048	movq	(%rdi), %rax
000000000000b04b	movq	%rax, (%rsi)
000000000000b04e	movq	0x8(%rdi), %rax
000000000000b052	movq	%rax, 0x8(%rsi)
000000000000b056	retq
000000000000b057	testb	$0x3, %sil
000000000000b05b	jne	0xb074
000000000000b05d	movl	(%rdi), %eax
000000000000b05f	movl	%eax, (%rsi)
000000000000b061	movl	0x4(%rdi), %eax
000000000000b064	movl	%eax, 0x4(%rsi)
000000000000b067	movl	0x8(%rdi), %eax
000000000000b06a	movl	%eax, 0x8(%rsi)
000000000000b06d	movl	0xc(%rdi), %eax
000000000000b070	movl	%eax, 0xc(%rsi)
000000000000b073	retq
000000000000b074	movl	$0x10, %edx
000000000000b079	jmp	_bcopy
_os_packet_set_flow_uuid:
000000000000b07e	movq	%rdi, %rax
000000000000b081	andq	$-0x10, %rax
000000000000b085	testb	$0x7, %sil
000000000000b089	jne	0xb09a
000000000000b08b	movq	(%rsi), %rcx
000000000000b08e	movq	%rcx, (%rax)
000000000000b091	movq	0x8(%rsi), %rcx
000000000000b095	movq	%rcx, 0x8(%rax)
000000000000b099	retq
000000000000b09a	testb	$0x3, %sil
000000000000b09e	jne	0xb0b7
000000000000b0a0	movl	(%rsi), %ecx
000000000000b0a2	movl	%ecx, (%rax)
000000000000b0a4	movl	0x4(%rsi), %ecx
000000000000b0a7	movl	%ecx, 0x4(%rax)
000000000000b0aa	movl	0x8(%rsi), %ecx
000000000000b0ad	movl	%ecx, 0x8(%rax)
000000000000b0b0	movl	0xc(%rsi), %ecx
000000000000b0b3	movl	%ecx, 0xc(%rax)
000000000000b0b6	retq
000000000000b0b7	movl	$0x10, %edx
000000000000b0bc	movq	%rsi, %rdi
000000000000b0bf	movq	%rax, %rsi
000000000000b0c2	jmp	_bcopy
_os_packet_clear_flow_uuid:
000000000000b0c7	andq	$-0x10, %rdi
000000000000b0cb	xorps	%xmm0, %xmm0
000000000000b0ce	movaps	%xmm0, (%rdi)
000000000000b0d1	retq
_os_packet_set_group_start:
000000000000b0d2	movl	%edi, %eax
000000000000b0d4	andl	$0x3, %eax
000000000000b0d7	cmpq	$0x2, %rax
000000000000b0db	jne	0xb0f0
000000000000b0dd	andq	$-0x10, %rdi
000000000000b0e1	movabsq	$0x100000000, %rax
000000000000b0eb	orq	%rax, 0x40(%rdi)
000000000000b0ef	retq
000000000000b0f0	pushq	%rbp
000000000000b0f1	movq	%rsp, %rbp
000000000000b0f4	callq	_os_packet_set_group_start.cold.1
_os_packet_get_group_start:
000000000000b0f9	movl	%edi, %eax
000000000000b0fb	andl	$0x3, %eax
000000000000b0fe	cmpq	$0x2, %rax
000000000000b102	jne	0xb114
000000000000b104	andq	$-0x10, %rdi
000000000000b108	movq	0x40(%rdi), %rax
000000000000b10c	shrq	$0x20, %rax
000000000000b110	andl	$0x1, %eax
000000000000b113	retq
000000000000b114	pushq	%rbp
000000000000b115	movq	%rsp, %rbp
000000000000b118	callq	_os_packet_get_group_start.cold.1
_os_packet_set_group_end:
000000000000b11d	movl	%edi, %eax
000000000000b11f	andl	$0x3, %eax
000000000000b122	cmpq	$0x2, %rax
000000000000b126	jne	0xb13b
000000000000b128	andq	$-0x10, %rdi
000000000000b12c	movabsq	$0x200000000, %rax
000000000000b136	orq	%rax, 0x40(%rdi)
000000000000b13a	retq
000000000000b13b	pushq	%rbp
000000000000b13c	movq	%rsp, %rbp
000000000000b13f	callq	_os_packet_set_group_end.cold.1
_os_packet_get_group_end:
000000000000b144	movl	%edi, %eax
000000000000b146	andl	$0x3, %eax
000000000000b149	cmpq	$0x2, %rax
000000000000b14d	jne	0xb15f
000000000000b14f	andq	$-0x10, %rdi
000000000000b153	movq	0x40(%rdi), %rax
000000000000b157	shrq	$0x21, %rax
000000000000b15b	andl	$0x1, %eax
000000000000b15e	retq
000000000000b15f	pushq	%rbp
000000000000b160	movq	%rsp, %rbp
000000000000b163	callq	_os_packet_get_group_end.cold.1
_os_packet_get_expire_time:
000000000000b168	movl	%edi, %eax
000000000000b16a	andl	$0x3, %eax
000000000000b16d	cmpq	$0x2, %rax
000000000000b171	jne	0xb199
000000000000b173	andq	$-0x10, %rdi
000000000000b177	movl	$0x2, %eax
000000000000b17c	btq	$0x22, 0x40(%rdi)
000000000000b182	jae	0xb192
000000000000b184	testq	%rsi, %rsi
000000000000b187	je	0xb193
000000000000b189	movq	0x60(%rdi), %rax
000000000000b18d	movq	%rax, (%rsi)
000000000000b190	xorl	%eax, %eax
000000000000b192	retq
000000000000b193	movl	$0x16, %eax
000000000000b198	retq
000000000000b199	pushq	%rbp
000000000000b19a	movq	%rsp, %rbp
000000000000b19d	callq	_os_packet_get_expire_time.cold.1
_os_packet_set_expire_time:
000000000000b1a2	movl	%edi, %eax
000000000000b1a4	andl	$0x3, %eax
000000000000b1a7	cmpq	$0x2, %rax
000000000000b1ab	jne	0xb1e3
000000000000b1ad	andq	$-0x10, %rdi
000000000000b1b1	testq	%rsi, %rsi
000000000000b1b4	je	0xb1ca
000000000000b1b6	movq	%rsi, 0x60(%rdi)
000000000000b1ba	movabsq	$0x400000000, %rax
000000000000b1c4	orq	%rax, 0x40(%rdi)
000000000000b1c8	jmp	0xb1e0
000000000000b1ca	movq	$0x0, 0x60(%rdi)
000000000000b1d2	movabsq	$-0x400000001, %rax
000000000000b1dc	andq	%rax, 0x40(%rdi)
000000000000b1e0	xorl	%eax, %eax
000000000000b1e2	retq
000000000000b1e3	pushq	%rbp
000000000000b1e4	movq	%rsp, %rbp
000000000000b1e7	callq	_os_packet_set_expire_time.cold.1
_os_packet_get_token:
000000000000b1ec	pushq	%rbp
000000000000b1ed	movq	%rsp, %rbp
000000000000b1f0	pushq	%r15
000000000000b1f2	pushq	%r14
000000000000b1f4	pushq	%rbx
000000000000b1f5	pushq	%rax
000000000000b1f6	movl	%edi, %eax
000000000000b1f8	andl	$0x3, %eax
000000000000b1fb	cmpq	$0x2, %rax
000000000000b1ff	jne	0xb263
000000000000b201	andq	$-0x10, %rdi
000000000000b205	movl	$0x2, %eax
000000000000b20a	btq	$0x23, 0x40(%rdi)
000000000000b210	jb	0xb21d
000000000000b212	addq	$0x8, %rsp
000000000000b216	popq	%rbx
000000000000b217	popq	%r14
000000000000b219	popq	%r15
000000000000b21b	popq	%rbp
000000000000b21c	retq
000000000000b21d	movl	$0x16, %eax
000000000000b222	testq	%rsi, %rsi
000000000000b225	je	0xb212
000000000000b227	movq	%rdx, %rbx
000000000000b22a	testq	%rdx, %rdx
000000000000b22d	je	0xb212
000000000000b22f	movzwl	0x4c(%rdi), %r14d
000000000000b234	cmpw	(%rbx), %r14w
000000000000b238	ja	0xb212
000000000000b23a	cmpw	$0x11, %r14w
000000000000b23f	jae	0xb268
000000000000b241	movzwl	%r14w, %edx
000000000000b245	movb	0x48(%rdi), %r15b
000000000000b249	addq	$0x50, %rdi
000000000000b24d	callq	_bcopy
000000000000b252	movw	%r14w, (%rbx)
000000000000b256	xorl	%eax, %eax
000000000000b258	cmpb	$0x1, %r15b
000000000000b25c	setne	%al
000000000000b25f	addl	%eax, %eax
000000000000b261	jmp	0xb212
000000000000b263	callq	_os_packet_get_token.cold.2
000000000000b268	callq	_os_packet_get_token.cold.1
_os_packet_set_token:
000000000000b26d	pushq	%rbp
000000000000b26e	movq	%rsp, %rbp
000000000000b271	pushq	%r14
000000000000b273	pushq	%rbx
000000000000b274	movq	%rdi, %rbx
000000000000b277	movl	%ebx, %eax
000000000000b279	andl	$0x3, %eax
000000000000b27c	cmpq	$0x2, %rax
000000000000b280	jne	0xb317
000000000000b286	movl	%edx, %r14d
000000000000b289	andq	$-0x10, %rbx
000000000000b28d	testw	%r14w, %r14w
000000000000b291	je	0xb2d5
000000000000b293	movl	$0x16, %eax
000000000000b298	testq	%rsi, %rsi
000000000000b29b	je	0xb2fd
000000000000b29d	cmpw	$0x10, %r14w
000000000000b2a2	ja	0xb2fd
000000000000b2a4	testb	$0x7, %sil
000000000000b2a8	jne	0xb302
000000000000b2aa	movq	(%rsi), %rax
000000000000b2ad	movq	%rax, 0x50(%rbx)
000000000000b2b1	movq	0x8(%rsi), %rax
000000000000b2b5	movq	%rax, 0x58(%rbx)
000000000000b2b9	movw	%r14w, 0x4c(%rbx)
000000000000b2be	movl	$0x1, 0x48(%rbx)
000000000000b2c5	movabsq	$0x800000000, %rax
000000000000b2cf	orq	0x40(%rbx), %rax
000000000000b2d3	jmp	0xb2f7
000000000000b2d5	xorps	%xmm0, %xmm0
000000000000b2d8	movups	%xmm0, 0x50(%rbx)
000000000000b2dc	movw	$0x0, 0x4c(%rbx)
000000000000b2e2	movl	$0x0, 0x48(%rbx)
000000000000b2e9	movabsq	$-0x800000001, %rax
000000000000b2f3	andq	0x40(%rbx), %rax
000000000000b2f7	movq	%rax, 0x40(%rbx)
000000000000b2fb	xorl	%eax, %eax
000000000000b2fd	popq	%rbx
000000000000b2fe	popq	%r14
000000000000b300	popq	%rbp
000000000000b301	retq
000000000000b302	leaq	0x50(%rbx), %rax
000000000000b306	movzwl	%r14w, %edx
000000000000b30a	movq	%rsi, %rdi
000000000000b30d	movq	%rax, %rsi
000000000000b310	callq	_bcopy
000000000000b315	jmp	0xb2b9
000000000000b317	movq	%rbx, %rdi
000000000000b31a	callq	_os_packet_set_token.cold.1
_os_packet_get_packetid:
000000000000b31f	pushq	%rbp
000000000000b320	movq	%rsp, %rbp
000000000000b323	pushq	%r14
000000000000b325	pushq	%rbx
000000000000b326	movl	%edi, %eax
000000000000b328	andl	$0x3, %eax
000000000000b32b	cmpq	$0x2, %rax
000000000000b32f	jne	0xb383
000000000000b331	andq	$-0x10, %rdi
000000000000b335	movl	$0x2, %eax
000000000000b33a	btq	$0x23, 0x40(%rdi)
000000000000b340	jae	0xb37e
000000000000b342	movl	$0x16, %eax
000000000000b347	testq	%rsi, %rsi
000000000000b34a	je	0xb37e
000000000000b34c	movzwl	0x4c(%rdi), %ecx
000000000000b350	cmpw	$0x10, %cx
000000000000b354	ja	0xb37e
000000000000b356	movzwl	%cx, %r14d
000000000000b35a	xorl	%ebx, %ebx
000000000000b35c	cmpb	$0x2, 0x48(%rdi)
000000000000b360	setne	%bl
000000000000b363	addq	$0x50, %rdi
000000000000b367	movq	%r14, %rdx
000000000000b36a	callq	_bcopy
000000000000b36f	addl	%ebx, %ebx
000000000000b371	cmpw	$0x10, %r14w
000000000000b376	movl	$0x2, %eax
000000000000b37b	cmovel	%ebx, %eax
000000000000b37e	popq	%rbx
000000000000b37f	popq	%r14
000000000000b381	popq	%rbp
000000000000b382	retq
000000000000b383	callq	_os_packet_get_packetid.cold.1
_os_packet_set_packetid:
000000000000b388	pushq	%rbp
000000000000b389	movq	%rsp, %rbp
000000000000b38c	pushq	%rbx
000000000000b38d	pushq	%rax
000000000000b38e	movq	%rdi, %rbx
000000000000b391	movl	%ebx, %eax
000000000000b393	andl	$0x3, %eax
000000000000b396	cmpq	$0x2, %rax
000000000000b39a	jne	0xb3fb
000000000000b39c	testq	%rsi, %rsi
000000000000b39f	je	0xb3d9
000000000000b3a1	andq	$-0x10, %rbx
000000000000b3a5	testb	$0x7, %sil
000000000000b3a9	jne	0xb3e5
000000000000b3ab	movq	(%rsi), %rax
000000000000b3ae	movq	%rax, 0x50(%rbx)
000000000000b3b2	movq	0x8(%rsi), %rax
000000000000b3b6	movq	%rax, 0x58(%rbx)
000000000000b3ba	movw	$0x10, 0x4c(%rbx)
000000000000b3c0	movl	$0x2, 0x48(%rbx)
000000000000b3c7	movabsq	$0x800000000, %rax
000000000000b3d1	orq	%rax, 0x40(%rbx)
000000000000b3d5	xorl	%eax, %eax
000000000000b3d7	jmp	0xb3de
000000000000b3d9	movl	$0x16, %eax
000000000000b3de	addq	$0x8, %rsp
000000000000b3e2	popq	%rbx
000000000000b3e3	popq	%rbp
000000000000b3e4	retq
000000000000b3e5	leaq	0x50(%rbx), %rax
000000000000b3e9	movl	$0x10, %edx
000000000000b3ee	movq	%rsi, %rdi
000000000000b3f1	movq	%rax, %rsi
000000000000b3f4	callq	_bcopy
000000000000b3f9	jmp	0xb3ba
000000000000b3fb	movq	%rbx, %rdi
000000000000b3fe	callq	_os_packet_set_packetid.cold.1
_os_packet_set_vlan_tag:
000000000000b403	movl	%edi, %eax
000000000000b405	andl	$0xf, %eax
000000000000b408	cmpq	$0xa, %rax
000000000000b40c	jne	0xb439
000000000000b40e	andq	$-0x10, %rdi
000000000000b412	movabsq	$0x40000000000, %rax
000000000000b41c	orq	%rax, 0x40(%rdi)
000000000000b420	movw	%si, 0x4e(%rdi)
000000000000b424	testl	%edx, %edx
000000000000b426	je	0xb436
000000000000b428	movabsq	$0x80000000000, %rax
000000000000b432	orq	%rax, 0x40(%rdi)
000000000000b436	xorl	%eax, %eax
000000000000b438	retq
000000000000b439	pushq	%rbp
000000000000b43a	movq	%rsp, %rbp
000000000000b43d	callq	_os_packet_set_vlan_tag.cold.1
_os_packet_get_vlan_tag:
000000000000b442	movl	%edi, %eax
000000000000b444	andl	$0xf, %eax
000000000000b447	cmpq	$0xa, %rax
000000000000b44b	jne	0xb47e
000000000000b44d	andq	$-0x10, %rdi
000000000000b451	movq	0x40(%rdi), %rcx
000000000000b455	movl	$0x2, %eax
000000000000b45a	btq	$0x2a, %rcx
000000000000b45f	jae	0xb47d
000000000000b461	testq	%rsi, %rsi
000000000000b464	je	0xb46d
000000000000b466	movzwl	0x4e(%rdi), %eax
000000000000b46a	movw	%ax, (%rsi)
000000000000b46d	xorl	%eax, %eax
000000000000b46f	testq	%rdx, %rdx
000000000000b472	je	0xb47d
000000000000b474	shrq	$0x2b, %rcx
000000000000b478	andl	$0x1, %ecx
000000000000b47b	movl	%ecx, (%rdx)
000000000000b47d	retq
000000000000b47e	pushq	%rbp
000000000000b47f	movq	%rsp, %rbp
000000000000b482	callq	_os_packet_get_vlan_tag.cold.1
_os_packet_get_vlan_id:
000000000000b487	movl	%edi, %eax
000000000000b489	andl	$0xfff, %eax
000000000000b48e	retq
_os_packet_get_vlan_priority:
000000000000b48f	movl	%edi, %eax
000000000000b491	shrl	$0xd, %eax
000000000000b494	retq
_os_packet_get_truncated:
000000000000b495	movl	%edi, %eax
000000000000b497	andl	$0xf, %eax
000000000000b49a	cmpq	$0xa, %rax
000000000000b49e	jne	0xb4b0
000000000000b4a0	andq	$-0x10, %rdi
000000000000b4a4	movq	0x40(%rdi), %rax
000000000000b4a8	shrq	$0x27, %rax
000000000000b4ac	andl	$0x1, %eax
000000000000b4af	retq
000000000000b4b0	pushq	%rbp
000000000000b4b1	movq	%rsp, %rbp
000000000000b4b4	callq	_os_packet_get_truncated.cold.1
_os_packet_get_data_length:
000000000000b4b9	andq	$-0x10, %rdi
000000000000b4bd	movl	0x10(%rdi), %eax
000000000000b4c0	retq
_os_packet_get_buflet_count:
000000000000b4c1	movl	%edi, %ecx
000000000000b4c3	andl	$0x3, %ecx
000000000000b4c6	cmpq	$0x1, %rcx
000000000000b4ca	je	0xb4eb
000000000000b4cc	xorl	%eax, %eax
000000000000b4ce	cmpq	$0x2, %rcx
000000000000b4d2	jne	0xb4f0
000000000000b4d4	andq	$-0x10, %rdi
000000000000b4d8	movzwl	0x6a(%rdi), %eax
000000000000b4dc	testw	%ax, %ax
000000000000b4df	movl	$0x1, %ecx
000000000000b4e4	cmovnel	%eax, %ecx
000000000000b4e7	movzwl	%cx, %eax
000000000000b4ea	retq
000000000000b4eb	movl	$0x1, %eax
000000000000b4f0	retq
_os_packet_get_next_buflet:
000000000000b4f1	movl	%edi, %eax
000000000000b4f3	andl	$0x3, %eax
000000000000b4f6	cmpq	$0x1, %rax
000000000000b4fa	je	0xb532
000000000000b4fc	cmpq	$0x2, %rax
000000000000b500	jne	0xb54e
000000000000b502	andq	$-0x10, %rdi
000000000000b506	movzwl	0x6a(%rdi), %eax
000000000000b50a	testw	%ax, %ax
000000000000b50d	movl	$0x1, %ecx
000000000000b512	cmovnel	%eax, %ecx
000000000000b515	movzwl	%cx, %ecx
000000000000b518	testq	%rsi, %rsi
000000000000b51b	je	0xb551
000000000000b51d	leaq	0x70(%rdi), %rax
000000000000b521	subq	%rax, %rsi
000000000000b524	shrq	$0x3, %rsi
000000000000b528	imull	$0xaaaaaaab, %esi, %edx
000000000000b52e	incl	%edx
000000000000b530	jmp	0xb553
000000000000b532	andq	$-0x10, %rdi
000000000000b536	addq	$0x18, %rdi
000000000000b53a	cmpq	%rsi, %rdi
000000000000b53d	je	0xb544
000000000000b53f	testq	%rsi, %rsi
000000000000b542	jne	0xb568
000000000000b544	xorl	%eax, %eax
000000000000b546	testq	%rsi, %rsi
000000000000b549	cmoveq	%rdi, %rax
000000000000b54d	retq
000000000000b54e	xorl	%eax, %eax
000000000000b550	retq
000000000000b551	xorl	%edx, %edx
000000000000b553	xorl	%eax, %eax
000000000000b555	cmpl	%ecx, %edx
000000000000b557	movslq	%edx, %rcx
000000000000b55a	leaq	(%rcx,%rcx,2), %rcx
000000000000b55e	leaq	0x70(%rdi,%rcx,8), %rcx
000000000000b563	cmovbq	%rcx, %rax
000000000000b567	retq
000000000000b568	pushq	%rbp
000000000000b569	movq	%rsp, %rbp
000000000000b56c	callq	_os_packet_get_next_buflet.cold.1
_os_packet_finalize:
000000000000b571	pushq	%rbp
000000000000b572	movq	%rsp, %rbp
000000000000b575	pushq	%r15
000000000000b577	pushq	%r14
000000000000b579	pushq	%r13
000000000000b57b	pushq	%r12
000000000000b57d	pushq	%rbx
000000000000b57e	pushq	%rax
000000000000b57f	movq	%rdi, %r10
000000000000b582	andq	$-0x10, %r10
000000000000b586	andw	$-0x4, 0x14(%r10)
000000000000b58c	movl	%edi, %r13d
000000000000b58f	andl	$0x3, %r13d
000000000000b593	cmpq	$0x2, %r13
000000000000b597	je	0xb5aa
000000000000b599	cmpq	$0x1, %r13
000000000000b59d	jne	0xb696
000000000000b5a3	movl	$0x1, %ecx
000000000000b5a8	jmp	0xb5bd
000000000000b5aa	movzwl	0x6a(%r10), %eax
000000000000b5af	testw	%ax, %ax
000000000000b5b2	movl	$0x1, %ecx
000000000000b5b7	cmovnel	%eax, %ecx
000000000000b5ba	movzwl	%cx, %ecx
000000000000b5bd	leaq	0x10(%r10), %rax
000000000000b5c1	movq	%rax, -0x30(%rbp)
000000000000b5c5	movl	$0x0, 0x10(%r10)
000000000000b5cd	leaq	0x18(%r10), %r11
000000000000b5d1	leaq	0x70(%r10), %r15
000000000000b5d5	xorl	%esi, %esi
000000000000b5d7	xorl	%r14d, %r14d
000000000000b5da	jmp	0xb5ea
000000000000b5dc	movslq	%ebx, %rax
000000000000b5df	leaq	(%rax,%rax,2), %rax
000000000000b5e3	leaq	0x70(%r10,%rax,8), %rbx
000000000000b5e8	jmp	0xb642
000000000000b5ea	cmpq	$0x1, %r13
000000000000b5ee	je	0xb622
000000000000b5f0	cmpq	$0x2, %r13
000000000000b5f4	jne	0xb640
000000000000b5f6	movzwl	0x6a(%r10), %eax
000000000000b5fb	testw	%ax, %ax
000000000000b5fe	movl	$0x1, %edx
000000000000b603	cmovel	%edx, %eax
000000000000b606	movzwl	%ax, %eax
000000000000b609	testq	%rsi, %rsi
000000000000b60c	je	0xb63a
000000000000b60e	movq	%rsi, %rdx
000000000000b611	subq	%r15, %rdx
000000000000b614	shrq	$0x3, %rdx
000000000000b618	imull	$0xaaaaaaab, %edx, %ebx
000000000000b61e	incl	%ebx
000000000000b620	jmp	0xb63c
000000000000b622	cmpq	%rsi, %r11
000000000000b625	je	0xb630
000000000000b627	testq	%rsi, %rsi
000000000000b62a	jne	0xb77b
000000000000b630	movq	%r11, %rbx
000000000000b633	testq	%rsi, %rsi
000000000000b636	jne	0xb640
000000000000b638	jmp	0xb642
000000000000b63a	xorl	%ebx, %ebx
000000000000b63c	cmpl	%eax, %ebx
000000000000b63e	jb	0xb5dc
000000000000b640	xorl	%ebx, %ebx
000000000000b642	movq	%rsi, %rax
000000000000b645	orq	%rbx, %rax
000000000000b648	je	0xb776
000000000000b64e	movzwl	0xc(%rbx), %eax
000000000000b652	testq	%rsi, %rsi
000000000000b655	je	0xb666
000000000000b657	cmpl	%eax, %r12d
000000000000b65a	jne	0xb734
000000000000b660	movzwl	0x10(%rbx), %edx
000000000000b664	jmp	0xb670
000000000000b666	movzwl	0x10(%rbx), %edx
000000000000b66a	movl	%eax, %r12d
000000000000b66d	movl	%edx, %r9d
000000000000b670	movzwl	0xe(%rbx), %r8d
000000000000b675	addl	%r8d, %edx
000000000000b678	cmpl	%eax, %edx
000000000000b67a	ja	0xb734
000000000000b680	decl	%ecx
000000000000b682	addl	%r8d, %r14d
000000000000b685	movq	%rbx, %rsi
000000000000b688	testl	%ecx, %ecx
000000000000b68a	jne	0xb5ea
000000000000b690	movq	-0x30(%rbp), %rsi
000000000000b694	jmp	0xb6a5
000000000000b696	leaq	0x10(%r10), %rsi
000000000000b69a	movl	$0x0, 0x10(%r10)
000000000000b6a2	xorl	%r14d, %r14d
000000000000b6a5	cmpq	$0x2, %r13
000000000000b6a9	jne	0xb717
000000000000b6ab	shrl	$0x2, %edi
000000000000b6ae	andl	$0x3, %edi
000000000000b6b1	cmpl	$0x1, %edi
000000000000b6b4	je	0xb6d9
000000000000b6b6	cmpq	$0x2, %rdi
000000000000b6ba	jne	0xb6f6
000000000000b6bc	movb	0x32(%r10), %cl
000000000000b6c0	movzbl	%cl, %edx
000000000000b6c3	movl	$0x22, %eax
000000000000b6c8	cmpl	%edx, %r12d
000000000000b6cb	jbe	0xb73d
000000000000b6cd	cmpl	%edx, %r9d
000000000000b6d0	jne	0xb73d
000000000000b6d2	movb	$0x0, 0x33(%r10)
000000000000b6d7	jmp	0xb6fa
000000000000b6d9	movl	$0x22, %eax
000000000000b6de	testl	%r9d, %r9d
000000000000b6e1	jne	0xb73d
000000000000b6e3	movb	0x32(%r10), %cl
000000000000b6e7	testb	%cl, %cl
000000000000b6e9	jne	0xb73d
000000000000b6eb	cmpb	$0x0, 0x33(%r10)
000000000000b6f0	jne	0xb73d
000000000000b6f2	xorl	%ecx, %ecx
000000000000b6f4	jmp	0xb6fa
000000000000b6f6	movb	0x32(%r10), %cl
000000000000b6fa	movzbl	%cl, %eax
000000000000b6fd	orl	$0x100, %eax
000000000000b702	cmpl	%r12d, %eax
000000000000b705	jae	0xb749
000000000000b707	movabsq	$0xc0f00000000, %rax
000000000000b711	andq	0x40(%r10), %rax
000000000000b715	jne	0xb750
000000000000b717	movl	%r14d, (%rsi)
000000000000b71a	xorl	%eax, %eax
000000000000b71c	movw	$0x1, %cx
000000000000b720	orw	%cx, 0x14(%r10)
000000000000b725	addq	$0x8, %rsp
000000000000b729	popq	%rbx
000000000000b72a	popq	%r12
000000000000b72c	popq	%r13
000000000000b72e	popq	%r14
000000000000b730	popq	%r15
000000000000b732	popq	%rbp
000000000000b733	retq
000000000000b734	movl	$0x22, %eax
000000000000b739	movq	-0x30(%rbp), %rsi
000000000000b73d	movl	$0x0, (%rsi)
000000000000b743	movw	$0x2, %cx
000000000000b747	jmp	0xb720
000000000000b749	movl	$0x22, %eax
000000000000b74e	jmp	0xb73d
000000000000b750	btq	$0x22, 0x40(%r10)
000000000000b756	jae	0xb75f
000000000000b758	cmpq	$0x0, 0x60(%r10)
000000000000b75d	je	0xb76f
000000000000b75f	btq	$0x23, 0x40(%r10)
000000000000b765	jae	0xb717
000000000000b767	cmpw	$0x0, 0x4c(%r10)
000000000000b76d	jne	0xb717
000000000000b76f	movl	$0x16, %eax
000000000000b774	jmp	0xb73d
000000000000b776	callq	_os_packet_finalize.cold.1
000000000000b77b	callq	_os_packet_finalize.cold.2
_os_inet_checksum:
000000000000b780	jmp	_os_cpu_in_cksum
_os_copy_and_inet_checksum:
000000000000b785	pushq	%rbp
000000000000b786	movq	%rsp, %rbp
000000000000b789	callq	_os_cpu_copy_in_cksum
000000000000b78e	movzwl	%ax, %ecx
000000000000b791	shrl	$0x10, %eax
000000000000b794	addl	%eax, %ecx
000000000000b796	movzwl	%cx, %eax
000000000000b799	shrl	$0x10, %ecx
000000000000b79c	addl	%ecx, %eax
000000000000b79e	movl	%eax, %ecx
000000000000b7a0	shrl	$0x10, %ecx
000000000000b7a3	addl	%eax, %ecx
000000000000b7a5	notl	%ecx
000000000000b7a7	movzwl	%cx, %eax
000000000000b7aa	popq	%rbp
000000000000b7ab	retq
_os_buflet_get_data_offset:
000000000000b7ac	movzwl	0x10(%rdi), %eax
000000000000b7b0	retq
_os_buflet_get_data_length:
000000000000b7b1	movzwl	0xe(%rdi), %eax
000000000000b7b5	retq
_os_buflet_set_data_offset:
000000000000b7b6	movzwl	0xe(%rdi), %eax
000000000000b7ba	addl	%esi, %eax
000000000000b7bc	movzwl	0xc(%rdi), %ecx
000000000000b7c0	cmpl	%ecx, %eax
000000000000b7c2	ja	0xb7cb
000000000000b7c4	movw	%si, 0x10(%rdi)
000000000000b7c8	xorl	%eax, %eax
000000000000b7ca	retq
000000000000b7cb	movl	$0x22, %eax
000000000000b7d0	retq
_os_buflet_set_data_length:
000000000000b7d1	movzwl	0x10(%rdi), %eax
000000000000b7d5	addl	%esi, %eax
000000000000b7d7	movzwl	0xc(%rdi), %ecx
000000000000b7db	cmpl	%ecx, %eax
000000000000b7dd	ja	0xb7e6
000000000000b7df	movw	%si, 0xe(%rdi)
000000000000b7e3	xorl	%eax, %eax
000000000000b7e5	retq
000000000000b7e6	movl	$0x22, %eax
000000000000b7eb	retq
_os_buflet_get_object_address:
000000000000b7ec	movq	(%rdi), %rax
000000000000b7ef	retq
_os_buflet_get_data_limit:
000000000000b7f0	movzwl	0xc(%rdi), %eax
000000000000b7f4	retq
_reboot:
000000000000b7f5	xorl	%esi, %esi
000000000000b7f7	jmp	___reboot
_reboot_np:
000000000000b7fc	jmp	___reboot
__mach_continuous_time:
000000000000b801	pushq	%rbp
000000000000b802	movq	%rsp, %rbp
000000000000b805	pushq	%r15
000000000000b807	pushq	%r14
000000000000b809	pushq	%rbx
000000000000b80a	subq	$0x18, %rsp
000000000000b80e	movq	%rsi, %r14
000000000000b811	movq	%rdi, %rbx
000000000000b814	movabsq	$0x7fffffe000c0, %r15
000000000000b81e	movq	(%r15), %rax
000000000000b821	movq	%rax, -0x28(%rbp)
000000000000b825	callq	_mach_absolute_time
000000000000b82a	movq	%rax, -0x20(%rbp)
000000000000b82e	movq	(%r15), %rax
000000000000b831	movq	%rax, -0x30(%rbp)
000000000000b835	movq	-0x28(%rbp), %rax
000000000000b839	cmpq	-0x30(%rbp), %rax
000000000000b83d	jne	0xb81e
000000000000b83f	testq	%rbx, %rbx
000000000000b842	je	0xb84b
000000000000b844	movq	-0x20(%rbp), %rax
000000000000b848	movq	%rax, (%rbx)
000000000000b84b	testq	%r14, %r14
000000000000b84e	je	0xb85b
000000000000b850	movq	-0x20(%rbp), %rax
000000000000b854	addq	-0x28(%rbp), %rax
000000000000b858	movq	%rax, (%r14)
000000000000b85b	xorl	%eax, %eax
000000000000b85d	addq	$0x18, %rsp
000000000000b861	popq	%rbx
000000000000b862	popq	%r14
000000000000b864	popq	%r15
000000000000b866	popq	%rbp
000000000000b867	retq
_renameat:
000000000000b868	pushq	%rbp
000000000000b869	movq	%rsp, %rbp
000000000000b86c	pushq	%rbx
000000000000b86d	pushq	%rax
000000000000b86e	callq	___renameat
000000000000b873	movl	%eax, %ebx
000000000000b875	testl	%eax, %eax
000000000000b877	jne	0xb87e
000000000000b879	callq	___inc_remove_counter
000000000000b87e	movl	%ebx, %eax
000000000000b880	addq	$0x8, %rsp
000000000000b884	popq	%rbx
000000000000b885	popq	%rbp
000000000000b886	retq
_internal_catch_exception_raise_state_identity:
000000000000b887	pushq	%rbp
000000000000b888	movq	%rsp, %rbp
000000000000b88b	pushq	%r15
000000000000b88d	pushq	%r14
000000000000b88f	pushq	%r13
000000000000b891	pushq	%r12
000000000000b893	pushq	%rbx
000000000000b894	pushq	%rax
000000000000b895	movl	%esi, %r10d
000000000000b898	movq	_internal_catch_exception_raise_state_identity.exc_raise_state_identity_func(%rip), %rax
000000000000b89f	cmpq	$-0x1, %rax
000000000000b8a3	jne	0xb8f1
000000000000b8a5	leaq	__dlsym(%rip), %rsi
000000000000b8ac	movq	(%rsi), %rbx
000000000000b8af	testq	%rbx, %rbx
000000000000b8b2	je	0xb8f1
000000000000b8b4	leaq	0x1c41f(%rip), %rsi ## literal pool for: "catch_exception_raise_state_identity"
000000000000b8bb	movl	%edi, -0x2c(%rbp)
000000000000b8be	movq	$-0x2, %rdi
000000000000b8c5	movl	%r9d, %r15d
000000000000b8c8	movq	%r8, %r12
000000000000b8cb	movl	%ecx, %r13d
000000000000b8ce	movl	%edx, %r14d
000000000000b8d1	movl	%r10d, -0x30(%rbp)
000000000000b8d5	callq	*%rbx
000000000000b8d7	movl	-0x2c(%rbp), %edi
000000000000b8da	movl	-0x30(%rbp), %r10d
000000000000b8de	movl	%r14d, %edx
000000000000b8e1	movl	%r13d, %ecx
000000000000b8e4	movq	%r12, %r8
000000000000b8e7	movl	%r15d, %r9d
000000000000b8ea	movq	%rax, _internal_catch_exception_raise_state_identity.exc_raise_state_identity_func(%rip)
000000000000b8f1	testq	%rax, %rax
000000000000b8f4	je	0xb909
000000000000b8f6	movl	%r10d, %esi
000000000000b8f9	addq	$0x8, %rsp
000000000000b8fd	popq	%rbx
000000000000b8fe	popq	%r12
000000000000b900	popq	%r13
000000000000b902	popq	%r14
000000000000b904	popq	%r15
000000000000b906	popq	%rbp
000000000000b907	jmpq	*%rax
000000000000b909	callq	_abort
_internal_catch_exception_raise_state:
000000000000b90e	pushq	%rbp
000000000000b90f	movq	%rsp, %rbp
000000000000b912	pushq	%r15
000000000000b914	pushq	%r14
000000000000b916	pushq	%r13
000000000000b918	pushq	%r12
000000000000b91a	pushq	%rbx
000000000000b91b	pushq	%rax
000000000000b91c	movl	%esi, %r10d
000000000000b91f	movq	_internal_catch_exception_raise_state.exc_raise_state_func(%rip), %rax
000000000000b926	cmpq	$-0x1, %rax
000000000000b92a	jne	0xb978
000000000000b92c	leaq	__dlsym(%rip), %rsi
000000000000b933	movq	(%rsi), %rbx
000000000000b936	testq	%rbx, %rbx
000000000000b939	je	0xb978
000000000000b93b	leaq	0x1c3bd(%rip), %rsi ## literal pool for: "catch_exception_raise_state"
000000000000b942	movl	%edi, -0x2c(%rbp)
000000000000b945	movq	$-0x2, %rdi
000000000000b94c	movq	%r9, %r15
000000000000b94f	movq	%r8, %r12
000000000000b952	movl	%ecx, %r13d
000000000000b955	movq	%rdx, %r14
000000000000b958	movl	%r10d, -0x30(%rbp)
000000000000b95c	callq	*%rbx
000000000000b95e	movl	-0x2c(%rbp), %edi
000000000000b961	movl	-0x30(%rbp), %r10d
000000000000b965	movq	%r14, %rdx
000000000000b968	movl	%r13d, %ecx
000000000000b96b	movq	%r12, %r8
000000000000b96e	movq	%r15, %r9
000000000000b971	movq	%rax, _internal_catch_exception_raise_state.exc_raise_state_func(%rip)
000000000000b978	testq	%rax, %rax
000000000000b97b	je	0xb990
000000000000b97d	movl	%r10d, %esi
000000000000b980	addq	$0x8, %rsp
000000000000b984	popq	%rbx
000000000000b985	popq	%r12
000000000000b987	popq	%r13
000000000000b989	popq	%r14
000000000000b98b	popq	%r15
000000000000b98d	popq	%rbp
000000000000b98e	jmpq	*%rax
000000000000b990	callq	_abort
_internal_catch_exception_raise:
000000000000b995	pushq	%rbp
000000000000b996	movq	%rsp, %rbp
000000000000b999	pushq	%r15
000000000000b99b	pushq	%r14
000000000000b99d	pushq	%r13
000000000000b99f	pushq	%r12
000000000000b9a1	pushq	%rbx
000000000000b9a2	pushq	%rax
000000000000b9a3	movl	%esi, %r10d
000000000000b9a6	movq	_internal_catch_exception_raise.exc_raise_func(%rip), %rax
000000000000b9ad	cmpq	$-0x1, %rax
000000000000b9b1	jne	0xb9ff
000000000000b9b3	leaq	__dlsym(%rip), %rsi
000000000000b9ba	movq	(%rsi), %rbx
000000000000b9bd	testq	%rbx, %rbx
000000000000b9c0	je	0xb9ff
000000000000b9c2	leaq	0x1c352(%rip), %rsi ## literal pool for: "catch_exception_raise"
000000000000b9c9	movl	%edi, -0x2c(%rbp)
000000000000b9cc	movq	$-0x2, %rdi
000000000000b9d3	movl	%r9d, %r15d
000000000000b9d6	movq	%r8, %r12
000000000000b9d9	movl	%ecx, %r13d
000000000000b9dc	movl	%edx, %r14d
000000000000b9df	movl	%r10d, -0x30(%rbp)
000000000000b9e3	callq	*%rbx
000000000000b9e5	movl	-0x2c(%rbp), %edi
000000000000b9e8	movl	-0x30(%rbp), %r10d
000000000000b9ec	movl	%r14d, %edx
000000000000b9ef	movl	%r13d, %ecx
000000000000b9f2	movq	%r12, %r8
000000000000b9f5	movl	%r15d, %r9d
000000000000b9f8	movq	%rax, _internal_catch_exception_raise.exc_raise_func(%rip)
000000000000b9ff	testq	%rax, %rax
000000000000ba02	je	0xba17
000000000000ba04	movl	%r10d, %esi
000000000000ba07	addq	$0x8, %rsp
000000000000ba0b	popq	%rbx
000000000000ba0c	popq	%r12
000000000000ba0e	popq	%r13
000000000000ba10	popq	%r14
000000000000ba12	popq	%r15
000000000000ba14	popq	%rbp
000000000000ba15	jmpq	*%rax
000000000000ba17	callq	_abort
_fprintf_stderr:
000000000000ba1c	pushq	%rbp
000000000000ba1d	movq	%rsp, %rbp
000000000000ba20	pushq	%r14
000000000000ba22	pushq	%rbx
000000000000ba23	subq	$0x4d0, %rsp
000000000000ba2a	movq	%rdi, %rbx
000000000000ba2d	testb	%al, %al
000000000000ba2f	je	0xba5a
000000000000ba31	movaps	%xmm0, -0xb0(%rbp)
000000000000ba38	movaps	%xmm1, -0xa0(%rbp)
000000000000ba3f	movaps	%xmm2, -0x90(%rbp)
000000000000ba46	movaps	%xmm3, -0x80(%rbp)
000000000000ba4a	movaps	%xmm4, -0x70(%rbp)
000000000000ba4e	movaps	%xmm5, -0x60(%rbp)
000000000000ba52	movaps	%xmm6, -0x50(%rbp)
000000000000ba56	movaps	%xmm7, -0x40(%rbp)
000000000000ba5a	leaq	-0xe0(%rbp), %rax
000000000000ba61	movq	%r9, 0x28(%rax)
000000000000ba65	movq	%r8, 0x20(%rax)
000000000000ba69	movq	%rcx, 0x18(%rax)
000000000000ba6d	movq	%rdx, 0x10(%rax)
000000000000ba71	movq	%rsi, 0x8(%rax)
000000000000ba75	movq	%rax, -0x20(%rbp)
000000000000ba79	leaq	0x10(%rbp), %rax
000000000000ba7d	movq	%rax, -0x28(%rbp)
000000000000ba81	movabsq	$0x3000000008, %rax
000000000000ba8b	movq	%rax, -0x30(%rbp)
000000000000ba8f	movq	_vprintf_stderr_func(%rip), %rax
000000000000ba96	testq	%rax, %rax
000000000000ba99	je	0xbaa8
000000000000ba9b	leaq	-0x30(%rbp), %rsi
000000000000ba9f	movq	%rbx, %rdi
000000000000baa2	callq	*%rax
000000000000baa4	movl	%eax, %ebx
000000000000baa6	jmp	0xbad4
000000000000baa8	leaq	-0x4e0(%rbp), %r14
000000000000baaf	leaq	-0x30(%rbp), %rcx
000000000000bab3	movq	%r14, %rdi
000000000000bab6	movl	$0x400, %esi
000000000000babb	movq	%rbx, %rdx
000000000000babe	callq	__mach_vsnprintf
000000000000bac3	movl	%eax, %ebx
000000000000bac5	movl	$0x2, %edi
000000000000baca	movq	%r14, %rsi
000000000000bacd	movl	%eax, %edx
000000000000bacf	callq	_write
000000000000bad4	movl	%ebx, %eax
000000000000bad6	addq	$0x4d0, %rsp
000000000000badd	popq	%rbx
000000000000bade	popq	%r14
000000000000bae0	popq	%rbp
000000000000bae1	retq
_guarded_open_dprotected_np:
000000000000bae2	pushq	%rbp
000000000000bae3	movq	%rsp, %rbp
000000000000bae6	subq	$0xe0, %rsp
000000000000baed	testb	%al, %al
000000000000baef	je	0xbb17
000000000000baf1	movaps	%xmm0, -0xa0(%rbp)
000000000000baf8	movaps	%xmm1, -0x90(%rbp)
000000000000baff	movaps	%xmm2, -0x80(%rbp)
000000000000bb03	movaps	%xmm3, -0x70(%rbp)
000000000000bb07	movaps	%xmm4, -0x60(%rbp)
000000000000bb0b	movaps	%xmm5, -0x50(%rbp)
000000000000bb0f	movaps	%xmm6, -0x40(%rbp)
000000000000bb13	movaps	%xmm7, -0x30(%rbp)
000000000000bb17	xorl	%eax, %eax
000000000000bb19	btl	$0x9, %ecx
000000000000bb1d	jae	0xbb6e
000000000000bb1f	leaq	-0xd0(%rbp), %rax
000000000000bb26	movq	%rax, -0x10(%rbp)
000000000000bb2a	leaq	0x10(%rbp), %rax
000000000000bb2e	movq	%rax, -0x18(%rbp)
000000000000bb32	movabsq	$0x3000000030, %rax
000000000000bb3c	movq	%rax, -0x20(%rbp)
000000000000bb40	movl	$0x30, %r10d
000000000000bb46	cmpq	$0x28, %r10
000000000000bb4a	ja	0xbb5f
000000000000bb4c	movl	$0x30, %r11d
000000000000bb52	addq	-0x10(%rbp), %r11
000000000000bb56	leal	0x8(%r10), %eax
000000000000bb5a	movl	%eax, -0x20(%rbp)
000000000000bb5d	jmp	0xbb6b
000000000000bb5f	movq	-0x18(%rbp), %r11
000000000000bb63	leaq	0x8(%r11), %rax
000000000000bb67	movq	%rax, -0x18(%rbp)
000000000000bb6b	movl	(%r11), %eax
000000000000bb6e	movl	%eax, (%rsp)
000000000000bb71	callq	___guarded_open_dprotected_np
000000000000bb76	addq	$0xe0, %rsp
000000000000bb7d	popq	%rbp
000000000000bb7e	retq
_host_get_atm_diagnostic_flag:
000000000000bb7f	movabsq	$0x7fffffe00048, %rax
000000000000bb89	movl	(%rax), %eax
000000000000bb8b	movl	%eax, (%rsi)
000000000000bb8d	xorl	%eax, %eax
000000000000bb8f	retq
_host_get_multiuser_config_flags:
000000000000bb90	movl	$0x2e, %eax
000000000000bb95	retq
_host_check_multiuser_mode:
000000000000bb96	movl	$0x2e, %eax
000000000000bb9b	retq
_mach_error_type:
000000000000bb9c	pushq	%rbp
000000000000bb9d	movq	%rsp, %rbp
000000000000bba0	pushq	%r14
000000000000bba2	pushq	%rbx
000000000000bba3	subq	$0x10, %rsp
000000000000bba7	leaq	-0x14(%rbp), %rbx
000000000000bbab	movl	%edi, (%rbx)
000000000000bbad	movq	%rbx, %rdi
000000000000bbb0	callq	_do_compat
000000000000bbb5	movl	(%rbx), %eax
000000000000bbb7	movq	%rax, %rcx
000000000000bbba	shrq	$0x1a, %rcx
000000000000bbbe	shrl	$0xe, %eax
000000000000bbc1	andl	$0xfff, %eax
000000000000bbc6	leaq	(%rcx,%rcx,4), %rbx
000000000000bbca	leaq	__mach_errors(%rip), %r14
000000000000bbd1	movq	0x18(%r14,%rbx,8), %rsi
000000000000bbd6	testq	%rsi, %rsi
000000000000bbd9	je	0xbbe7
000000000000bbdb	movl	0x20(%r14,%rbx,8), %edx
000000000000bbe0	movl	%eax, %edi
000000000000bbe2	callq	_err_sparse_mapit
000000000000bbe7	cmpl	(%r14,%rbx,8), %eax
000000000000bbeb	jge	0xbbfe
000000000000bbed	movq	0x10(%r14,%rbx,8), %rcx
000000000000bbf2	cltq
000000000000bbf4	leaq	(%rax,%rax,4), %rax
000000000000bbf8	movq	(%rcx,%rax,8), %rax
000000000000bbfc	jmp	0xbc05
000000000000bbfe	leaq	0x1c12c(%rip), %rax ## literal pool for: "(?/?)"
000000000000bc05	addq	$0x10, %rsp
000000000000bc09	popq	%rbx
000000000000bc0a	popq	%r14
000000000000bc0c	popq	%rbp
000000000000bc0d	retq
_err_sparse_mapit:
000000000000bc0e	pushq	%rbp
000000000000bc0f	pushq	%r14
000000000000bc11	pushq	%rbx
000000000000bc12	testl	%edx, %edx
000000000000bc14	jle	0xbc77
000000000000bc16	movslq	%edx, %r8
000000000000bc19	xorl	%r11d, %r11d
000000000000bc1c	movl	$0x1, %edx
000000000000bc21	movl	$0x1, %r9d
000000000000bc27	xorl	%eax, %eax
000000000000bc29	movl	%eax, %r10d
000000000000bc2c	movl	-0x8(%rsi,%rdx,8), %ecx
000000000000bc30	movl	-0x4(%rsi,%rdx,8), %r14d
000000000000bc35	cmpl	%edi, %ecx
000000000000bc37	seta	%al
000000000000bc3a	cmpl	%edi, %r14d
000000000000bc3d	setb	%bl
000000000000bc40	orb	%al, %bl
000000000000bc42	movl	%edi, %ebp
000000000000bc44	subl	%ecx, %ebp
000000000000bc46	movl	$0x1, %eax
000000000000bc4b	subl	%ecx, %eax
000000000000bc4d	addl	%r14d, %eax
000000000000bc50	testb	%bl, %bl
000000000000bc52	cmovel	%ebp, %eax
000000000000bc55	cmovel	%r9d, %r11d
000000000000bc59	addl	%r10d, %eax
000000000000bc5c	cmpb	$0x1, %bl
000000000000bc5f	jne	0xbc6a
000000000000bc61	cmpq	%r8, %rdx
000000000000bc64	leaq	0x1(%rdx), %rdx
000000000000bc68	jl	0xbc29
000000000000bc6a	testl	%r11d, %r11d
000000000000bc6d	movl	$0x7fffffff, %ecx
000000000000bc72	cmovel	%ecx, %eax
000000000000bc75	jmp	0xbc7c
000000000000bc77	movl	$0x7fffffff, %eax
000000000000bc7c	popq	%rbx
000000000000bc7d	popq	%r14
000000000000bc7f	popq	%rbp
000000000000bc80	retq
_mach_error:
000000000000bc81	pushq	%rbp
000000000000bc82	movq	%rsp, %rbp
000000000000bc85	pushq	%r15
000000000000bc87	pushq	%r14
000000000000bc89	pushq	%r12
000000000000bc8b	pushq	%rbx
000000000000bc8c	subq	$0x410, %rsp
000000000000bc93	movl	%esi, %ebx
000000000000bc95	movq	%rdi, %r14
000000000000bc98	leaq	-0x24(%rbp), %r12
000000000000bc9c	movl	%esi, %edi
000000000000bc9e	movq	%r12, %rsi
000000000000bca1	callq	_mach_error_string_int
000000000000bca6	movq	%rax, %r15
000000000000bca9	cmpl	$0x0, (%r12)
000000000000bcae	je	0xbce0
000000000000bcb0	leaq	-0x430(%rbp), %r12
000000000000bcb7	movl	%ebx, %edi
000000000000bcb9	callq	_mach_error_type
000000000000bcbe	leaq	0x1c072(%rip), %rdx ## literal pool for: "%s %s (%x)"
000000000000bcc5	movq	%r12, %rdi
000000000000bcc8	movl	$0x400, %esi
000000000000bccd	movq	%rax, %rcx
000000000000bcd0	movq	%r15, %r8
000000000000bcd3	movl	%ebx, %r9d
000000000000bcd6	xorl	%eax, %eax
000000000000bcd8	callq	__mach_snprintf
000000000000bcdd	movq	%r12, %r15
000000000000bce0	leaq	0x1c05b(%rip), %rdi ## literal pool for: "%s %s\n"
000000000000bce7	movq	%r14, %rsi
000000000000bcea	movq	%r15, %rdx
000000000000bced	xorl	%eax, %eax
000000000000bcef	callq	_fprintf_stderr
000000000000bcf4	addq	$0x410, %rsp
000000000000bcfb	popq	%rbx
000000000000bcfc	popq	%r12
000000000000bcfe	popq	%r14
000000000000bd00	popq	%r15
000000000000bd02	popq	%rbp
000000000000bd03	retq
_host_page_size:
000000000000bd04	movq	_vm_kernel_page_size(%rip), %rax
000000000000bd0b	movq	%rax, (%rsi)
000000000000bd0e	xorl	%eax, %eax
000000000000bd10	retq
__mach_fork_child:
000000000000bd11	pushq	%rbp
000000000000bd12	movq	%rsp, %rbp
000000000000bd15	callq	_mach_init_doit
000000000000bd1a	xorl	%eax, %eax
000000000000bd1c	popq	%rbp
000000000000bd1d	retq
000000000000bd1e	nop
000000000000bd1f	nop
000000000000bd20	nop
_mach_msg_server_importance:
000000000000bd21	jmp	_mach_msg_server
_mig_allocate:
000000000000bd26	pushq	%rbp
000000000000bd27	movq	%rsp, %rbp
000000000000bd2a	pushq	%rbx
000000000000bd2b	pushq	%rax
000000000000bd2c	movq	%rsi, %rdx
000000000000bd2f	movq	%rdi, %rbx
000000000000bd32	leaq	_mach_task_self_(%rip), %rax
000000000000bd39	movl	(%rax), %edi
000000000000bd3b	movq	%rbx, %rsi
000000000000bd3e	movl	$0x14000001, %ecx
000000000000bd43	callq	_vm_allocate
000000000000bd48	testl	%eax, %eax
000000000000bd4a	je	0xbd53
000000000000bd4c	movq	$0x0, (%rbx)
000000000000bd53	addq	$0x8, %rsp
000000000000bd57	popq	%rbx
000000000000bd58	popq	%rbp
000000000000bd59	retq
_quota:
000000000000bd5a	pushq	%rbp
000000000000bd5b	movq	%rsp, %rbp
000000000000bd5e	callq	_getpid
000000000000bd63	movl	%eax, %edi
000000000000bd65	movl	$0xc, %esi
000000000000bd6a	popq	%rbp
000000000000bd6b	jmp	_kill
_setquota:
000000000000bd70	pushq	%rbp
000000000000bd71	movq	%rsp, %rbp
000000000000bd74	callq	_getpid
000000000000bd79	movl	%eax, %edi
000000000000bd7b	movl	$0xc, %esi
000000000000bd80	popq	%rbp
000000000000bd81	jmp	_kill
_panic_init:
000000000000bd86	movl	%edi, _master_host_port(%rip)
000000000000bd8c	retq
_panic:
000000000000bd8d	pushq	%rbp
000000000000bd8e	movq	%rsp, %rbp
000000000000bd91	pushq	%rbx
000000000000bd92	subq	$0x408, %rsp
000000000000bd99	movq	%rdi, %rcx
000000000000bd9c	leaq	0x1bfa6(%rip), %rdx ## literal pool for: "panic: %s\n"
000000000000bda3	leaq	-0x410(%rbp), %rbx
000000000000bdaa	movq	%rbx, %rdi
000000000000bdad	movl	$0x400, %esi
000000000000bdb2	xorl	%eax, %eax
000000000000bdb4	callq	__mach_snprintf
000000000000bdb9	movl	$0x2, %edi
000000000000bdbe	movq	%rbx, %rsi
000000000000bdc1	movl	%eax, %edx
000000000000bdc3	callq	_write
000000000000bdc8	movl	_master_host_port(%rip), %edi
000000000000bdce	movl	$0x1000, %esi
000000000000bdd3	callq	_host_reboot
000000000000bdd8	callq	_abort
_port_obj_init:
000000000000bddd	pushq	%rbp
000000000000bdde	movq	%rsp, %rbp
000000000000bde1	leaq	_mach_task_self_(%rip), %rax
000000000000bde8	movl	(%rax), %eax
000000000000bdea	movslq	%edi, %rdx
000000000000bded	shlq	$0x4, %rdx
000000000000bdf1	leaq	_port_obj_table(%rip), %rsi
000000000000bdf8	movl	%eax, %edi
000000000000bdfa	movl	$0x1, %ecx
000000000000bdff	callq	_vm_allocate
000000000000be04	testl	%eax, %eax
000000000000be06	je	0xbe17
000000000000be08	leaq	0x1bf45(%rip), %rdi ## literal pool for: "port_obj_init: can't vm_allocate"
000000000000be0f	xorl	%eax, %eax
000000000000be11	popq	%rbp
000000000000be12	jmp	_panic
000000000000be17	popq	%rbp
000000000000be18	retq
_semaphore_signal_all:
000000000000be19	jmp	_semaphore_signal_all_trap
_semaphore_signal_thread:
000000000000be1e	jmp	_semaphore_signal_thread_trap
_semaphore_wait_signal:
000000000000be23	jmp	_semaphore_wait_signal_trap
_semaphore_timedwait_signal:
000000000000be28	movq	%rdx, %rcx
000000000000be2b	shrq	$0x20, %rcx
000000000000be2f	jmp	_semaphore_timedwait_signal_trap
_msg_rpc:
000000000000be34	movl	$0x5, %eax
000000000000be39	retq
_msg_send:
000000000000be3a	movl	$0x5, %eax
000000000000be3f	retq
_msg_receive:
000000000000be40	movl	$0x5, %eax
000000000000be45	retq
_task_self_:
000000000000be46	leaq	_mach_task_self_(%rip), %rax
000000000000be4d	movl	(%rax), %eax
000000000000be4f	retq
_host_self:
000000000000be50	jmp	_mach_host_self
__mach_vsnprintf:
000000000000be55	pushq	%rbp
000000000000be56	pushq	%r15
000000000000be58	pushq	%r14
000000000000be5a	pushq	%r12
000000000000be5c	pushq	%rbx
000000000000be5d	movl	%esi, %eax
000000000000be5f	decl	%eax
000000000000be61	jle	0xbfda
000000000000be67	leaq	(%rsp), %r8
000000000000be6b	leaq	-0x2(%rsp), %r9
000000000000be70	leaq	_hex(%rip), %r10 ## literal pool for: "0123456789abcdef"
000000000000be77	jmp	0xbf8d
000000000000be7c	movslq	(%rcx), %rbx
000000000000be7f	cmpq	$0x28, %rbx
000000000000be83	ja	0xbefd
000000000000be85	movq	%rbx, %rbp
000000000000be88	addq	0x10(%rcx), %rbp
000000000000be8c	leal	0x8(%rbx), %ebx
000000000000be8f	movl	%ebx, (%rcx)
000000000000be91	jmp	0xbf09
000000000000be93	movq	0x8(%rcx), %rbp
000000000000be97	leaq	0x8(%rbp), %rbx
000000000000be9b	movq	%rbx, 0x8(%rcx)
000000000000be9f	movq	(%rbp), %r11
000000000000bea3	testq	%r11, %r11
000000000000bea6	je	0xbfd6
000000000000beac	leaq	-0x1(%r11), %r14
000000000000beb0	cmpb	$0x0, 0x1(%r14)
000000000000beb5	leaq	0x1(%r14), %r14
000000000000beb9	jne	0xbeb0
000000000000bebb	testl	%eax, %eax
000000000000bebd	jle	0xbfd6
000000000000bec3	movl	%r14d, %ebp
000000000000bec6	subl	%r11d, %ebp
000000000000bec9	testl	%ebp, %ebp
000000000000becb	jle	0xbfd6
000000000000bed1	decl	%r14d
000000000000bed4	subl	%r11d, %r14d
000000000000bed7	movb	(%r11), %bl
000000000000beda	movb	%bl, (%rdi)
000000000000bedc	incq	%rdi
000000000000bedf	decl	%eax
000000000000bee1	testl	%eax, %eax
000000000000bee3	jle	0xbfd6
000000000000bee9	incq	%r11
000000000000beec	leal	-0x1(%r14), %ebx
000000000000bef0	testl	%r14d, %r14d
000000000000bef3	movl	%ebx, %r14d
000000000000bef6	jg	0xbed7
000000000000bef8	jmp	0xbfd6
000000000000befd	movq	0x8(%rcx), %rbp
000000000000bf01	leaq	0x8(%rbp), %rbx
000000000000bf05	movq	%rbx, 0x8(%rcx)
000000000000bf09	movl	(%rbp), %ebx
000000000000bf0c	testq	%rbx, %rbx
000000000000bf0f	je	0xbfd6
000000000000bf15	movb	$0x0, -0x1(%rsp)
000000000000bf1a	movq	%r9, %r14
000000000000bf1d	movq	%r8, %r11
000000000000bf20	movq	%r14, %r12
000000000000bf23	movl	%ebx, %ebp
000000000000bf25	andl	$0xf, %ebp
000000000000bf28	movb	(%rbp,%r10), %r15b
000000000000bf2d	movb	%r15b, -0x2(%r11)
000000000000bf31	shrq	$0x4, %rbx
000000000000bf35	decq	%r11
000000000000bf38	decq	%r14
000000000000bf3b	testq	%rbx, %rbx
000000000000bf3e	jne	0xbf20
000000000000bf40	movq	%r11, %r14
000000000000bf43	decq	%r14
000000000000bf46	cmpb	$0x0, 0x1(%r12)
000000000000bf4c	leaq	0x1(%r12), %r12
000000000000bf51	jne	0xbf46
000000000000bf53	movl	%r12d, %ebp
000000000000bf56	subl	%r14d, %ebp
000000000000bf59	testl	%ebp, %ebp
000000000000bf5b	jle	0xbfd6
000000000000bf5d	movb	%r15b, (%rdi)
000000000000bf60	incq	%rdi
000000000000bf63	cmpl	$0x1, %ebp
000000000000bf66	je	0xbfd4
000000000000bf68	movl	%r14d, %r15d
000000000000bf6b	notl	%r15d
000000000000bf6e	addl	%r12d, %r15d
000000000000bf71	xorl	%ebp, %ebp
000000000000bf73	movb	(%r11,%rbp), %bl
000000000000bf77	movb	%bl, (%rdi,%rbp)
000000000000bf7a	incq	%rbp
000000000000bf7d	cmpq	%rbp, %r15
000000000000bf80	jne	0xbf73
000000000000bf82	addl	%r14d, %eax
000000000000bf85	subl	%r12d, %eax
000000000000bf88	addq	%rbp, %rdi
000000000000bf8b	jmp	0xbfd6
000000000000bf8d	movb	(%rdx), %bl
000000000000bf8f	testb	%bl, %bl
000000000000bf91	je	0xbfda
000000000000bf93	cmpb	$0x25, %bl
000000000000bf96	jne	0xbfcc
000000000000bf98	movsbl	0x1(%rdx), %ebp
000000000000bf9c	addq	$0x2, %rdx
000000000000bfa0	cmpl	$0x78, %ebp
000000000000bfa3	je	0xbe7c
000000000000bfa9	cmpl	$0x73, %ebp
000000000000bfac	jne	0xbfd6
000000000000bfae	movslq	(%rcx), %rbx
000000000000bfb1	cmpq	$0x28, %rbx
000000000000bfb5	ja	0xbe93
000000000000bfbb	movq	%rbx, %rbp
000000000000bfbe	addq	0x10(%rcx), %rbp
000000000000bfc2	leal	0x8(%rbx), %ebx
000000000000bfc5	movl	%ebx, (%rcx)
000000000000bfc7	jmp	0xbe9f
000000000000bfcc	incq	%rdx
000000000000bfcf	movb	%bl, (%rdi)
000000000000bfd1	incq	%rdi
000000000000bfd4	decl	%eax
000000000000bfd6	testl	%eax, %eax
000000000000bfd8	jg	0xbf8d
000000000000bfda	testl	%esi, %esi
000000000000bfdc	jle	0xbfe1
000000000000bfde	movb	$0x0, (%rdi)
000000000000bfe1	notl	%eax
000000000000bfe3	addl	%esi, %eax
000000000000bfe5	popq	%rbx
000000000000bfe6	popq	%r12
000000000000bfe8	popq	%r14
000000000000bfea	popq	%r15
000000000000bfec	popq	%rbp
000000000000bfed	retq
__mach_snprintf:
000000000000bfee	pushq	%rbp
000000000000bfef	movq	%rsp, %rbp
000000000000bff2	subq	$0xd0, %rsp
000000000000bff9	testb	%al, %al
000000000000bffb	je	0xc01d
000000000000bffd	movaps	%xmm0, -0x80(%rbp)
000000000000c001	movaps	%xmm1, -0x70(%rbp)
000000000000c005	movaps	%xmm2, -0x60(%rbp)
000000000000c009	movaps	%xmm3, -0x50(%rbp)
000000000000c00d	movaps	%xmm4, -0x40(%rbp)
000000000000c011	movaps	%xmm5, -0x30(%rbp)
000000000000c015	movaps	%xmm6, -0x20(%rbp)
000000000000c019	movaps	%xmm7, -0x10(%rbp)
000000000000c01d	leaq	-0xb0(%rbp), %rax
000000000000c024	movq	%r9, 0x28(%rax)
000000000000c028	movq	%r8, 0x20(%rax)
000000000000c02c	movq	%rcx, 0x18(%rax)
000000000000c030	leaq	-0xd0(%rbp), %rcx
000000000000c037	movq	%rax, 0x10(%rcx)
000000000000c03b	leaq	0x10(%rbp), %rax
000000000000c03f	movq	%rax, 0x8(%rcx)
000000000000c043	movabsq	$0x3000000018, %rax
000000000000c04d	movq	%rax, (%rcx)
000000000000c050	callq	__mach_vsnprintf
000000000000c055	addq	$0xd0, %rsp
000000000000c05c	popq	%rbp
000000000000c05d	retq
_pselect$DARWIN_EXTSN$NOCANCEL:
000000000000c05e	pushq	%rbp
000000000000c05f	movq	%rsp, %rbp
000000000000c062	pushq	%r15
000000000000c064	pushq	%r14
000000000000c066	pushq	%r13
000000000000c068	pushq	%r12
000000000000c06a	pushq	%rbx
000000000000c06b	subq	$0x28, %rsp
000000000000c06f	movq	%r9, %rbx
000000000000c072	movq	%r8, %r15
000000000000c075	movq	%rsi, %r12
000000000000c078	movl	%edi, %r13d
000000000000c07b	movq	%rdx, -0x38(%rbp)
000000000000c07f	movq	%rcx, -0x40(%rbp)
000000000000c083	callq	___pselect_nocancel
000000000000c088	movl	%eax, %r14d
000000000000c08b	cmpl	$-0x1, %eax
000000000000c08e	jne	0xc14c
000000000000c094	callq	___error
000000000000c099	movl	$0xffffffff, %r14d
000000000000c09f	cmpl	$0x4e, (%rax)
000000000000c0a2	jne	0xc14c
000000000000c0a8	testq	%r15, %r15
000000000000c0ab	je	0xc0da
000000000000c0ad	movq	(%r15), %rax
000000000000c0b0	leaq	-0x50(%rbp), %rcx
000000000000c0b4	movq	%rax, (%rcx)
000000000000c0b7	movabsq	$0x20c49ba5e353f7cf, %rax
000000000000c0c1	imulq	0x8(%r15)
000000000000c0c5	movq	%rcx, %r15
000000000000c0c8	movq	%rdx, %rax
000000000000c0cb	shrq	$0x3f, %rax
000000000000c0cf	shrq	$0x7, %rdx
000000000000c0d3	addl	%eax, %edx
000000000000c0d5	movl	%edx, 0x8(%rcx)
000000000000c0d8	jmp	0xc0dd
000000000000c0da	xorl	%r15d, %r15d
000000000000c0dd	testq	%rbx, %rbx
000000000000c0e0	je	0xc133
000000000000c0e2	leaq	-0x2c(%rbp), %rdx
000000000000c0e6	movl	$0x3, %edi
000000000000c0eb	movq	%rbx, %rsi
000000000000c0ee	callq	___pthread_sigmask
000000000000c0f3	movl	%eax, %r14d
000000000000c0f6	testl	%eax, %eax
000000000000c0f8	jne	0xc14c
000000000000c0fa	movl	%r13d, %edi
000000000000c0fd	movq	%r12, %rsi
000000000000c100	movq	-0x38(%rbp), %rdx
000000000000c104	movq	-0x40(%rbp), %rcx
000000000000c108	movq	%r15, %r8
000000000000c10b	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000000c110	movl	%eax, %r14d
000000000000c113	callq	___error
000000000000c118	movl	(%rax), %ebx
000000000000c11a	leaq	-0x2c(%rbp), %rsi
000000000000c11e	movl	$0x3, %edi
000000000000c123	xorl	%edx, %edx
000000000000c125	callq	___pthread_sigmask
000000000000c12a	callq	___error
000000000000c12f	movl	%ebx, (%rax)
000000000000c131	jmp	0xc14c
000000000000c133	movl	%r13d, %edi
000000000000c136	movq	%r12, %rsi
000000000000c139	movq	-0x38(%rbp), %rdx
000000000000c13d	movq	-0x40(%rbp), %rcx
000000000000c141	movq	%r15, %r8
000000000000c144	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000000c149	movl	%eax, %r14d
000000000000c14c	movl	%r14d, %eax
000000000000c14f	addq	$0x28, %rsp
000000000000c153	popq	%rbx
000000000000c154	popq	%r12
000000000000c156	popq	%r13
000000000000c158	popq	%r14
000000000000c15a	popq	%r15
000000000000c15c	popq	%rbp
000000000000c15d	retq
_mach_task_self:
000000000000c15e	jmp	_task_self_trap
_mach_right_recv_construct:
000000000000c163	pushq	%rbp
000000000000c164	movq	%rsp, %rbp
000000000000c167	pushq	%rbx
000000000000c168	subq	$0x28, %rsp
000000000000c16c	movq	%rsi, %rbx
000000000000c16f	movl	$0x0, -0xc(%rbp)
000000000000c176	movq	0x16ab3(%rip), %rax
000000000000c17d	movq	%rax, -0x18(%rbp)
000000000000c181	movq	0x16aa0(%rip), %rax
000000000000c188	movq	%rax, -0x20(%rbp)
000000000000c18c	movq	0x16a8d(%rip), %rax
000000000000c193	movq	%rax, -0x28(%rbp)
000000000000c197	movl	$0x11, %eax
000000000000c19c	testb	$0x1, %dil
000000000000c1a0	je	0xc1ae
000000000000c1a2	movl	$0x0, -0x28(%rbp)
000000000000c1a9	movl	$0x10, %eax
000000000000c1ae	testq	%rbx, %rbx
000000000000c1b1	je	0xc1b6
000000000000c1b3	movl	%eax, -0x28(%rbp)
000000000000c1b6	leaq	_mach_task_self_(%rip), %rax
000000000000c1bd	movl	(%rax), %edi
000000000000c1bf	leaq	-0x28(%rbp), %rsi
000000000000c1c3	leaq	-0xc(%rbp), %rcx
000000000000c1c7	callq	_mach_port_construct
000000000000c1cc	testl	%eax, %eax
000000000000c1ce	jne	0xc1e1
000000000000c1d0	movl	-0xc(%rbp), %eax
000000000000c1d3	testq	%rbx, %rbx
000000000000c1d6	je	0xc1da
000000000000c1d8	movl	%eax, (%rbx)
000000000000c1da	addq	$0x28, %rsp
000000000000c1de	popq	%rbx
000000000000c1df	popq	%rbp
000000000000c1e0	retq
000000000000c1e1	movl	%eax, %edi
000000000000c1e3	callq	_mach_right_recv_construct.cold.1
_mach_right_recv_destruct:
000000000000c1e8	pushq	%rbp
000000000000c1e9	movq	%rsp, %rbp
000000000000c1ec	movq	%rdx, %rcx
000000000000c1ef	movl	%edi, %eax
000000000000c1f1	testq	%rsi, %rsi
000000000000c1f4	je	0xc206
000000000000c1f6	movl	(%rsi), %edi
000000000000c1f8	movl	$0xffffffff, %edx
000000000000c1fd	cmpl	%eax, %edi
000000000000c1ff	je	0xc208
000000000000c201	callq	_mach_right_recv_destruct.cold.2
000000000000c206	xorl	%edx, %edx
000000000000c208	leaq	_mach_task_self_(%rip), %rsi
000000000000c20f	movl	(%rsi), %edi
000000000000c211	movl	%eax, %esi
000000000000c213	callq	_mach_port_destruct
000000000000c218	testl	%eax, %eax
000000000000c21a	jne	0xc21e
000000000000c21c	popq	%rbp
000000000000c21d	retq
000000000000c21e	movl	%eax, %edi
000000000000c220	callq	_mach_right_recv_destruct.cold.1
_mach_right_send_create:
000000000000c225	pushq	%rbp
000000000000c226	movq	%rsp, %rbp
000000000000c229	pushq	%rbx
000000000000c22a	pushq	%rax
000000000000c22b	movl	%edi, %ebx
000000000000c22d	leaq	_mach_task_self_(%rip), %rax
000000000000c234	movl	(%rax), %edi
000000000000c236	movl	%ebx, %esi
000000000000c238	movl	%ebx, %edx
000000000000c23a	movl	$0x14, %ecx
000000000000c23f	callq	_mach_port_insert_right
000000000000c244	testl	%eax, %eax
000000000000c246	jne	0xc251
000000000000c248	movl	%ebx, %eax
000000000000c24a	addq	$0x8, %rsp
000000000000c24e	popq	%rbx
000000000000c24f	popq	%rbp
000000000000c250	retq
000000000000c251	movl	%eax, %edi
000000000000c253	callq	_mach_right_send_create.cold.1
_mach_right_send_retain:
000000000000c258	pushq	%rbp
000000000000c259	movq	%rsp, %rbp
000000000000c25c	pushq	%rbx
000000000000c25d	pushq	%rax
000000000000c25e	movl	%edi, %ebx
000000000000c260	leaq	_mach_task_self_(%rip), %rax
000000000000c267	movl	(%rax), %edi
000000000000c269	movl	%ebx, %esi
000000000000c26b	xorl	%edx, %edx
000000000000c26d	movl	$0x1, %ecx
000000000000c272	callq	_mach_port_mod_refs
000000000000c277	testl	%eax, %eax
000000000000c279	je	0xc285
000000000000c27b	cmpl	$0x11, %eax
000000000000c27e	jne	0xc28e
000000000000c280	movl	$0xffffffff, %ebx
000000000000c285	movl	%ebx, %eax
000000000000c287	addq	$0x8, %rsp
000000000000c28b	popq	%rbx
000000000000c28c	popq	%rbp
000000000000c28d	retq
000000000000c28e	movl	%eax, %edi
000000000000c290	callq	_mach_right_send_retain.cold.1
_mach_right_send_once_create:
000000000000c295	pushq	%rbp
000000000000c296	movq	%rsp, %rbp
000000000000c299	subq	$0x10, %rsp
000000000000c29d	movl	%edi, %esi
000000000000c29f	xorl	%eax, %eax
000000000000c2a1	leaq	-0x8(%rbp), %r8
000000000000c2a5	movl	%eax, (%r8)
000000000000c2a8	leaq	-0x4(%rbp), %rcx
000000000000c2ac	movl	%eax, (%rcx)
000000000000c2ae	leaq	_mach_task_self_(%rip), %rax
000000000000c2b5	movl	(%rax), %edi
000000000000c2b7	movl	$0x15, %edx
000000000000c2bc	callq	_mach_port_extract_right
000000000000c2c1	testl	%eax, %eax
000000000000c2c3	jne	0xc2ce
000000000000c2c5	movl	-0x4(%rbp), %eax
000000000000c2c8	addq	$0x10, %rsp
000000000000c2cc	popq	%rbp
000000000000c2cd	retq
000000000000c2ce	movl	%eax, %edi
000000000000c2d0	callq	_mach_right_send_once_create.cold.1
_mach_right_send_once_consume:
000000000000c2d5	pushq	%rbp
000000000000c2d6	movq	%rsp, %rbp
000000000000c2d9	pushq	%r14
000000000000c2db	pushq	%rbx
000000000000c2dc	movl	%edi, %ebx
000000000000c2de	leaq	_mach_task_self_(%rip), %r14
000000000000c2e5	movl	(%r14), %edi
000000000000c2e8	movl	%ebx, %esi
000000000000c2ea	movl	$0x2, %edx
000000000000c2ef	movl	$0xffffffff, %ecx
000000000000c2f4	callq	_mach_port_mod_refs
000000000000c2f9	testl	%eax, %eax
000000000000c2fb	je	0xc31a
000000000000c2fd	cmpl	$0x11, %eax
000000000000c300	jne	0xc31f
000000000000c302	movl	(%r14), %edi
000000000000c305	movl	%ebx, %esi
000000000000c307	movl	$0x4, %edx
000000000000c30c	movl	$0xffffffff, %ecx
000000000000c311	callq	_mach_port_mod_refs
000000000000c316	testl	%eax, %eax
000000000000c318	jne	0xc326
000000000000c31a	popq	%rbx
000000000000c31b	popq	%r14
000000000000c31d	popq	%rbp
000000000000c31e	retq
000000000000c31f	movl	%eax, %edi
000000000000c321	callq	_mach_right_send_once_consume.cold.1
000000000000c326	movl	%eax, %edi
000000000000c328	callq	_mach_right_send_once_consume.cold.2
_proc_listallpids:
000000000000c32d	pushq	%rbp
000000000000c32e	movq	%rsp, %rbp
000000000000c331	pushq	%rbx
000000000000c332	pushq	%rax
000000000000c333	movl	%esi, %r9d
000000000000c336	movq	%rdi, %r8
000000000000c339	xorl	%ebx, %ebx
000000000000c33b	movl	$0x1, %edi
000000000000c340	movl	$0x1, %esi
000000000000c345	xorl	%edx, %edx
000000000000c347	xorl	%ecx, %ecx
000000000000c349	callq	___proc_info
000000000000c34e	movl	%eax, %ecx
000000000000c350	sarl	$0x2, %ecx
000000000000c353	cmpl	$-0x1, %eax
000000000000c356	cmovel	%ebx, %ecx
000000000000c359	movl	%ecx, %eax
000000000000c35b	addq	$0x8, %rsp
000000000000c35f	popq	%rbx
000000000000c360	popq	%rbp
000000000000c361	retq
_proc_listpgrppids:
000000000000c362	pushq	%rbp
000000000000c363	movq	%rsp, %rbp
000000000000c366	pushq	%rbx
000000000000c367	pushq	%rax
000000000000c368	movl	%edx, %r9d
000000000000c36b	movq	%rsi, %r8
000000000000c36e	movl	%edi, %edx
000000000000c370	xorl	%ebx, %ebx
000000000000c372	movl	$0x1, %edi
000000000000c377	movl	$0x2, %esi
000000000000c37c	xorl	%ecx, %ecx
000000000000c37e	callq	___proc_info
000000000000c383	movl	%eax, %ecx
000000000000c385	sarl	$0x2, %ecx
000000000000c388	cmpl	$-0x1, %eax
000000000000c38b	cmovel	%ebx, %ecx
000000000000c38e	movl	%ecx, %eax
000000000000c390	addq	$0x8, %rsp
000000000000c394	popq	%rbx
000000000000c395	popq	%rbp
000000000000c396	retq
_proc_listchildpids:
000000000000c397	pushq	%rbp
000000000000c398	movq	%rsp, %rbp
000000000000c39b	pushq	%rbx
000000000000c39c	pushq	%rax
000000000000c39d	movl	%edx, %r9d
000000000000c3a0	movq	%rsi, %r8
000000000000c3a3	movl	%edi, %edx
000000000000c3a5	xorl	%ebx, %ebx
000000000000c3a7	movl	$0x1, %edi
000000000000c3ac	movl	$0x6, %esi
000000000000c3b1	xorl	%ecx, %ecx
000000000000c3b3	callq	___proc_info
000000000000c3b8	movl	%eax, %ecx
000000000000c3ba	sarl	$0x2, %ecx
000000000000c3bd	cmpl	$-0x1, %eax
000000000000c3c0	cmovel	%ebx, %ecx
000000000000c3c3	movl	%ecx, %eax
000000000000c3c5	addq	$0x8, %rsp
000000000000c3c9	popq	%rbx
000000000000c3ca	popq	%rbp
000000000000c3cb	retq
_proc_listcoalitions:
000000000000c3cc	pushq	%rbp
000000000000c3cd	movq	%rsp, %rbp
000000000000c3d0	pushq	%rbx
000000000000c3d1	pushq	%rax
000000000000c3d2	movl	%ecx, %r9d
000000000000c3d5	movq	%rdx, %r8
000000000000c3d8	movl	%esi, %edx
000000000000c3da	movl	%edi, %esi
000000000000c3dc	xorl	%ebx, %ebx
000000000000c3de	movl	$0xb, %edi
000000000000c3e3	xorl	%ecx, %ecx
000000000000c3e5	callq	___proc_info
000000000000c3ea	cmpl	$-0x1, %eax
000000000000c3ed	cmovel	%ebx, %eax
000000000000c3f0	addq	$0x8, %rsp
000000000000c3f4	popq	%rbx
000000000000c3f5	popq	%rbp
000000000000c3f6	retq
_proc_setthread_cpupercent:
000000000000c3f7	cmpb	$0x63, %dil
000000000000c3fb	ja	0xc41f
000000000000c3fd	movl	%esi, %edx
000000000000c3ff	cmpl	$0x1000000, %esi
000000000000c405	jae	0xc41f
000000000000c407	movzbl	%dil, %eax
000000000000c40b	shll	$0x8, %edx
000000000000c40e	orl	%eax, %edx
000000000000c410	movl	$0xffffffff, %edi
000000000000c415	movl	$0x3, %esi
000000000000c41a	jmp	_proc_rlimit_control
000000000000c41f	pushq	%rbp
000000000000c420	movq	%rsp, %rbp
000000000000c423	callq	___error
000000000000c428	movl	$0x16, (%rax)
000000000000c42e	movl	$0xffffffff, %eax
000000000000c433	popq	%rbp
000000000000c434	retq
_proc_pidfdinfo:
000000000000c435	pushq	%rbp
000000000000c436	movq	%rsp, %rbp
000000000000c439	movl	%r8d, %r9d
000000000000c43c	movq	%rcx, %r8
000000000000c43f	movl	%edi, %eax
000000000000c441	movslq	%esi, %rcx
000000000000c444	movl	$0x3, %edi
000000000000c449	movl	%eax, %esi
000000000000c44b	callq	___proc_info
000000000000c450	xorl	%ecx, %ecx
000000000000c452	cmpl	$-0x1, %eax
000000000000c455	cmovel	%ecx, %eax
000000000000c458	popq	%rbp
000000000000c459	retq
_proc_pidfileportinfo:
000000000000c45a	pushq	%rbp
000000000000c45b	movq	%rsp, %rbp
000000000000c45e	movl	%r8d, %r9d
000000000000c461	movq	%rcx, %r8
000000000000c464	movl	%edi, %eax
000000000000c466	movl	%esi, %ecx
000000000000c468	movl	$0x6, %edi
000000000000c46d	movl	%eax, %esi
000000000000c46f	callq	___proc_info
000000000000c474	xorl	%ecx, %ecx
000000000000c476	cmpl	$-0x1, %eax
000000000000c479	cmovel	%ecx, %eax
000000000000c47c	popq	%rbp
000000000000c47d	retq
_proc_piddynkqueueinfo:
000000000000c47e	pushq	%rbp
000000000000c47f	movq	%rsp, %rbp
000000000000c482	movl	%r8d, %r9d
000000000000c485	movq	%rcx, %r8
000000000000c488	movq	%rdx, %rcx
000000000000c48b	movl	%esi, %edx
000000000000c48d	movl	%edi, %esi
000000000000c48f	movl	$0xd, %edi
000000000000c494	callq	___proc_info
000000000000c499	xorl	%ecx, %ecx
000000000000c49b	cmpl	$-0x1, %eax
000000000000c49e	cmovel	%ecx, %eax
000000000000c4a1	popq	%rbp
000000000000c4a2	retq
_proc_udata_info:
000000000000c4a3	movl	%ecx, %r9d
000000000000c4a6	movq	%rdx, %r8
000000000000c4a9	movl	%esi, %edx
000000000000c4ab	movl	%edi, %esi
000000000000c4ad	movl	$0xe, %edi
000000000000c4b2	xorl	%ecx, %ecx
000000000000c4b4	jmp	___proc_info
_proc_regionfilename:
000000000000c4b9	pushq	%rbp
000000000000c4ba	movq	%rsp, %rbp
000000000000c4bd	pushq	%r14
000000000000c4bf	pushq	%rbx
000000000000c4c0	subq	$0x410, %rsp
000000000000c4c7	movl	%ecx, %ebx
000000000000c4c9	cmpl	$0x3ff, %ecx
000000000000c4cf	ja	0xc4e0
000000000000c4d1	callq	___error
000000000000c4d6	movl	$0xc, (%rax)
000000000000c4dc	xorl	%eax, %eax
000000000000c4de	jmp	0xc515
000000000000c4e0	movq	%rdx, %r14
000000000000c4e3	movq	%rsi, %rcx
000000000000c4e6	movl	%edi, %esi
000000000000c4e8	leaq	-0x420(%rbp), %r8
000000000000c4ef	movl	$0x2, %edi
000000000000c4f4	movl	$0x1f, %edx
000000000000c4f9	movl	$0x410, %r9d
000000000000c4ff	callq	___proc_info
000000000000c504	leaq	-0x410(%rbp), %rsi
000000000000c50b	movl	%ebx, %edx
000000000000c50d	movq	%r14, %rdi
000000000000c510	callq	_strlcpy
000000000000c515	addq	$0x410, %rsp
000000000000c51c	popq	%rbx
000000000000c51d	popq	%r14
000000000000c51f	popq	%rbp
000000000000c520	retq
_proc_kmsgbuf:
000000000000c521	pushq	%rbp
000000000000c522	movq	%rsp, %rbp
000000000000c525	pushq	%rbx
000000000000c526	pushq	%rax
000000000000c527	movl	%esi, %r9d
000000000000c52a	movq	%rdi, %r8
000000000000c52d	xorl	%ebx, %ebx
000000000000c52f	movl	$0x4, %edi
000000000000c534	xorl	%esi, %esi
000000000000c536	xorl	%edx, %edx
000000000000c538	xorl	%ecx, %ecx
000000000000c53a	callq	___proc_info
000000000000c53f	cmpl	$-0x1, %eax
000000000000c542	cmovel	%ebx, %eax
000000000000c545	addq	$0x8, %rsp
000000000000c549	popq	%rbx
000000000000c54a	popq	%rbp
000000000000c54b	retq
_proc_libversion:
000000000000c54c	testq	%rdi, %rdi
000000000000c54f	je	0xc557
000000000000c551	movl	$0x1, (%rdi)
000000000000c557	testq	%rsi, %rsi
000000000000c55a	je	0xc562
000000000000c55c	movl	$0x1, (%rsi)
000000000000c562	xorl	%eax, %eax
000000000000c564	retq
_proc_get_dirty:
000000000000c565	pushq	%rbp
000000000000c566	movq	%rsp, %rbp
000000000000c569	pushq	%r14
000000000000c56b	pushq	%rbx
000000000000c56c	movq	%rsi, %rbx
000000000000c56f	testq	%rsi, %rsi
000000000000c572	je	0xc599
000000000000c574	movl	%edi, %esi
000000000000c576	xorl	%r14d, %r14d
000000000000c579	movl	$0x8, %edi
000000000000c57e	movl	$0x3, %edx
000000000000c583	xorl	%ecx, %ecx
000000000000c585	xorl	%r8d, %r8d
000000000000c588	xorl	%r9d, %r9d
000000000000c58b	callq	___proc_info
000000000000c590	cmpl	$-0x1, %eax
000000000000c593	je	0xc5a1
000000000000c595	movl	%eax, (%rbx)
000000000000c597	jmp	0xc5a9
000000000000c599	movl	$0x16, %r14d
000000000000c59f	jmp	0xc5a9
000000000000c5a1	callq	___error
000000000000c5a6	movl	(%rax), %r14d
000000000000c5a9	movl	%r14d, %eax
000000000000c5ac	popq	%rbx
000000000000c5ad	popq	%r14
000000000000c5af	popq	%rbp
000000000000c5b0	retq
_proc_clear_dirty:
000000000000c5b1	pushq	%rbp
000000000000c5b2	movq	%rsp, %rbp
000000000000c5b5	pushq	%rbx
000000000000c5b6	pushq	%rax
000000000000c5b7	movl	%edi, %eax
000000000000c5b9	movl	%esi, %ecx
000000000000c5bb	xorl	%ebx, %ebx
000000000000c5bd	movl	$0x8, %edi
000000000000c5c2	movl	%eax, %esi
000000000000c5c4	movl	$0x4, %edx
000000000000c5c9	xorl	%r8d, %r8d
000000000000c5cc	xorl	%r9d, %r9d
000000000000c5cf	callq	___proc_info
000000000000c5d4	cmpl	$-0x1, %eax
000000000000c5d7	jne	0xc5e0
000000000000c5d9	callq	___error
000000000000c5de	movl	(%rax), %ebx
000000000000c5e0	movl	%ebx, %eax
000000000000c5e2	addq	$0x8, %rsp
000000000000c5e6	popq	%rbx
000000000000c5e7	popq	%rbp
000000000000c5e8	retq
_proc_terminate:
000000000000c5e9	pushq	%rbp
000000000000c5ea	movq	%rsp, %rbp
000000000000c5ed	pushq	%r14
000000000000c5ef	pushq	%rbx
000000000000c5f0	movq	%rsi, %rbx
000000000000c5f3	testq	%rsi, %rsi
000000000000c5f6	je	0xc61a
000000000000c5f8	movl	%edi, %esi
000000000000c5fa	xorl	%r14d, %r14d
000000000000c5fd	movl	$0x7, %edi
000000000000c602	xorl	%edx, %edx
000000000000c604	xorl	%ecx, %ecx
000000000000c606	xorl	%r8d, %r8d
000000000000c609	xorl	%r9d, %r9d
000000000000c60c	callq	___proc_info
000000000000c611	cmpl	$-0x1, %eax
000000000000c614	je	0xc622
000000000000c616	movl	%eax, (%rbx)
000000000000c618	jmp	0xc62a
000000000000c61a	movl	$0x16, %r14d
000000000000c620	jmp	0xc62a
000000000000c622	callq	___error
000000000000c627	movl	(%rax), %r14d
000000000000c62a	movl	%r14d, %eax
000000000000c62d	popq	%rbx
000000000000c62e	popq	%r14
000000000000c630	popq	%rbp
000000000000c631	retq
_proc_resume_cpumon:
000000000000c632	pushq	%rbp
000000000000c633	movq	%rsp, %rbp
000000000000c636	subq	$0x10, %rsp
000000000000c63a	movl	%edi, %r9d
000000000000c63d	movq	$0x0, (%rsp)
000000000000c645	movl	$0x1, %edi
000000000000c64a	movl	$0x5, %esi
000000000000c64f	movl	$0x4, %edx
000000000000c654	movl	$0x3, %ecx
000000000000c659	xorl	%r8d, %r8d
000000000000c65c	callq	___process_policy
000000000000c661	addq	$0x10, %rsp
000000000000c665	popq	%rbp
000000000000c666	retq
_proc_set_cpumon_params_fatal:
000000000000c667	pushq	%rbp
000000000000c668	movq	%rsp, %rbp
000000000000c66b	pushq	%r15
000000000000c66d	pushq	%r14
000000000000c66f	pushq	%r13
000000000000c671	pushq	%r12
000000000000c673	pushq	%rbx
000000000000c674	subq	$0x28, %rsp
000000000000c678	xorl	%eax, %eax
000000000000c67a	movl	%eax, -0x30(%rbp)
000000000000c67d	movl	%eax, -0x2c(%rbp)
000000000000c680	testl	%esi, %esi
000000000000c682	jle	0xc6ba
000000000000c684	movl	%edx, %r15d
000000000000c687	testl	%edx, %edx
000000000000c689	jle	0xc6ba
000000000000c68b	movl	%esi, %ebx
000000000000c68d	movl	%edi, %r14d
000000000000c690	leaq	-0x30(%rbp), %r12
000000000000c694	leaq	-0x2c(%rbp), %r13
000000000000c698	movq	%r12, %rsi
000000000000c69b	movq	%r13, %rdx
000000000000c69e	callq	_proc_get_cpumon_params
000000000000c6a3	movl	(%r13), %eax
000000000000c6a7	orl	(%r12), %eax
000000000000c6ab	je	0xc6d9
000000000000c6ad	callq	___error
000000000000c6b2	movl	$0x10, (%rax)
000000000000c6b8	jmp	0xc6c5
000000000000c6ba	callq	___error
000000000000c6bf	movl	$0x16, (%rax)
000000000000c6c5	movl	$0xffffffff, %eax
000000000000c6ca	addq	$0x28, %rsp
000000000000c6ce	popq	%rbx
000000000000c6cf	popq	%r12
000000000000c6d1	popq	%r13
000000000000c6d3	popq	%r14
000000000000c6d5	popq	%r15
000000000000c6d7	popq	%rbp
000000000000c6d8	retq
000000000000c6d9	leaq	-0x48(%rbp), %r8
000000000000c6dd	movl	$0x5, (%r8)
000000000000c6e4	movl	%ebx, 0x4(%r8)
000000000000c6e8	movslq	%r15d, %rax
000000000000c6eb	movq	%rax, 0x8(%r8)
000000000000c6ef	xorl	%eax, %eax
000000000000c6f1	movq	%rax, 0x10(%r8)
000000000000c6f5	movq	%rax, (%rsp)
000000000000c6f9	movl	$0x1, %edi
000000000000c6fe	movl	$0xa, %esi
000000000000c703	movl	$0x4, %edx
000000000000c708	movl	$0x3, %ecx
000000000000c70d	movl	%r14d, %r9d
000000000000c710	callq	___process_policy
000000000000c715	testl	%eax, %eax
000000000000c717	jne	0xc6ca
000000000000c719	movl	$0x1000, %edx
000000000000c71e	movl	%r14d, %edi
000000000000c721	movl	$0x2, %esi
000000000000c726	callq	_proc_rlimit_control
000000000000c72b	movl	%eax, %ebx
000000000000c72d	movl	$0x0, %eax
000000000000c732	testl	%ebx, %ebx
000000000000c734	je	0xc6ca
000000000000c736	movabsq	$0xff00000005, %rax
000000000000c740	leaq	-0x48(%rbp), %r8
000000000000c744	movq	%rax, (%r8)
000000000000c747	xorl	%eax, %eax
000000000000c749	movq	%rax, 0x10(%r8)
000000000000c74d	movq	%rax, 0x8(%r8)
000000000000c751	movq	%rax, (%rsp)
000000000000c755	movl	$0x1, %edi
000000000000c75a	movl	$0xa, %esi
000000000000c75f	movl	$0x4, %edx
000000000000c764	movl	$0x3, %ecx
000000000000c769	movl	%r14d, %r9d
000000000000c76c	callq	___process_policy
000000000000c771	movl	%ebx, %eax
000000000000c773	jmp	0xc6ca
_proc_set_wakemon_params:
000000000000c778	pushq	%rbp
000000000000c779	movq	%rsp, %rbp
000000000000c77c	subq	$0x10, %rsp
000000000000c780	leaq	-0x8(%rbp), %rdx
000000000000c784	movl	$0x1, (%rdx)
000000000000c78a	movl	%esi, 0x4(%rdx)
000000000000c78d	movl	$0x1, %esi
000000000000c792	callq	_proc_rlimit_control
000000000000c797	addq	$0x10, %rsp
000000000000c79b	popq	%rbp
000000000000c79c	retq
_proc_get_wakemon_params:
000000000000c79d	pushq	%rbp
000000000000c79e	movq	%rsp, %rbp
000000000000c7a1	pushq	%r14
000000000000c7a3	pushq	%rbx
000000000000c7a4	subq	$0x10, %rsp
000000000000c7a8	movq	%rdx, %r14
000000000000c7ab	movq	%rsi, %rbx
000000000000c7ae	leaq	-0x18(%rbp), %rdx
000000000000c7b2	movl	$0x4, (%rdx)
000000000000c7b8	movl	$0x1, %esi
000000000000c7bd	callq	_proc_rlimit_control
000000000000c7c2	testl	%eax, %eax
000000000000c7c4	jne	0xc7d1
000000000000c7c6	movl	-0x14(%rbp), %ecx
000000000000c7c9	movl	%ecx, (%rbx)
000000000000c7cb	movl	-0x18(%rbp), %ecx
000000000000c7ce	movl	%ecx, (%r14)
000000000000c7d1	addq	$0x10, %rsp
000000000000c7d5	popq	%rbx
000000000000c7d6	popq	%r14
000000000000c7d8	popq	%rbp
000000000000c7d9	retq
_proc_list_uptrs:
000000000000c7da	movl	%edx, %r9d
000000000000c7dd	movq	%rsi, %r8
000000000000c7e0	movl	%edi, %esi
000000000000c7e2	movl	$0x2, %edi
000000000000c7e7	movl	$0x1a, %edx
000000000000c7ec	xorl	%ecx, %ecx
000000000000c7ee	jmp	___proc_info
_proc_list_dynkqueueids:
000000000000c7f3	movl	%edx, %r9d
000000000000c7f6	movq	%rsi, %r8
000000000000c7f9	movl	%edi, %esi
000000000000c7fb	movl	$0x2, %edi
000000000000c800	movl	$0x1b, %edx
000000000000c805	xorl	%ecx, %ecx
000000000000c807	jmp	___proc_info
_proc_setcpu_percentage:
000000000000c80c	pushq	%rbp
000000000000c80d	movq	%rsp, %rbp
000000000000c810	pushq	%rbx
000000000000c811	subq	$0x28, %rsp
000000000000c815	movl	%edi, %r9d
000000000000c818	xorl	%ebx, %ebx
000000000000c81a	leaq	-0x20(%rbp), %r8
000000000000c81e	movq	%rbx, 0x10(%r8)
000000000000c822	movq	%rbx, 0x8(%r8)
000000000000c826	movl	%esi, (%r8)
000000000000c829	movl	%edx, 0x4(%r8)
000000000000c82d	movq	%rbx, (%rsp)
000000000000c831	movl	$0x1, %edi
000000000000c836	movl	$0x1, %esi
000000000000c83b	movl	$0x4, %edx
000000000000c840	movl	$0x3, %ecx
000000000000c845	callq	___process_policy
000000000000c84a	cmpl	$-0x1, %eax
000000000000c84d	jne	0xc856
000000000000c84f	callq	___error
000000000000c854	movl	(%rax), %ebx
000000000000c856	movl	%ebx, %eax
000000000000c858	addq	$0x28, %rsp
000000000000c85c	popq	%rbx
000000000000c85d	popq	%rbp
000000000000c85e	retq
_proc_reset_footprint_interval:
000000000000c85f	movl	$0x1, %edx
000000000000c864	movl	$0x4, %esi
000000000000c869	jmp	_proc_rlimit_control
_proc_clear_cpulimits:
000000000000c86e	pushq	%rbp
000000000000c86f	movq	%rsp, %rbp
000000000000c872	pushq	%rbx
000000000000c873	pushq	%rax
000000000000c874	movl	%edi, %r9d
000000000000c877	movq	$0x0, (%rsp)
000000000000c87f	xorl	%ebx, %ebx
000000000000c881	movl	$0x1, %edi
000000000000c886	movl	$0x2, %esi
000000000000c88b	movl	$0x4, %edx
000000000000c890	movl	$0x3, %ecx
000000000000c895	xorl	%r8d, %r8d
000000000000c898	callq	___process_policy
000000000000c89d	cmpl	$-0x1, %eax
000000000000c8a0	jne	0xc8a9
000000000000c8a2	callq	___error
000000000000c8a7	movl	(%rax), %ebx
000000000000c8a9	movl	%ebx, %eax
000000000000c8ab	addq	$0x8, %rsp
000000000000c8af	popq	%rbx
000000000000c8b0	popq	%rbp
000000000000c8b1	retq
_proc_donate_importance_boost:
000000000000c8b2	pushq	%rbp
000000000000c8b3	movq	%rsp, %rbp
000000000000c8b6	pushq	%rbx
000000000000c8b7	pushq	%rax
000000000000c8b8	callq	_getpid
000000000000c8bd	movq	$0x0, (%rsp)
000000000000c8c5	xorl	%ebx, %ebx
000000000000c8c7	movl	$0x1, %edi
000000000000c8cc	movl	$0xa, %esi
000000000000c8d1	movl	$0x7, %edx
000000000000c8d6	movl	$0x3, %ecx
000000000000c8db	xorl	%r8d, %r8d
000000000000c8de	movl	%eax, %r9d
000000000000c8e1	callq	___process_policy
000000000000c8e6	testl	%eax, %eax
000000000000c8e8	je	0xc8f1
000000000000c8ea	callq	___error
000000000000c8ef	movl	(%rax), %ebx
000000000000c8f1	movl	%ebx, %eax
000000000000c8f3	addq	$0x8, %rsp
000000000000c8f7	popq	%rbx
000000000000c8f8	popq	%rbp
000000000000c8f9	retq
_proc_clear_vmpressure:
000000000000c8fa	pushq	%rbp
000000000000c8fb	movq	%rsp, %rbp
000000000000c8fe	pushq	%rbx
000000000000c8ff	pushq	%rax
000000000000c900	movl	%edi, %r9d
000000000000c903	movq	$0x0, (%rsp)
000000000000c90b	xorl	%ebx, %ebx
000000000000c90d	movl	$0x1, %edi
000000000000c912	movl	$0x2, %esi
000000000000c917	movl	$0x3, %edx
000000000000c91c	movl	$0x1, %ecx
000000000000c921	xorl	%r8d, %r8d
000000000000c924	callq	___process_policy
000000000000c929	cmpl	$-0x1, %eax
000000000000c92c	jne	0xc935
000000000000c92e	callq	___error
000000000000c933	movl	(%rax), %ebx
000000000000c935	movl	%ebx, %eax
000000000000c937	addq	$0x8, %rsp
000000000000c93b	popq	%rbx
000000000000c93c	popq	%rbp
000000000000c93d	retq
_proc_set_owner_vmpressure:
000000000000c93e	pushq	%rbp
000000000000c93f	movq	%rsp, %rbp
000000000000c942	pushq	%rbx
000000000000c943	pushq	%rax
000000000000c944	callq	_getpid
000000000000c949	xorl	%ebx, %ebx
000000000000c94b	movl	$0x5, %edi
000000000000c950	movl	%eax, %esi
000000000000c952	movl	$0x3, %edx
000000000000c957	xorl	%ecx, %ecx
000000000000c959	xorl	%r8d, %r8d
000000000000c95c	xorl	%r9d, %r9d
000000000000c95f	callq	___proc_info
000000000000c964	cmpl	$-0x1, %eax
000000000000c967	jne	0xc970
000000000000c969	callq	___error
000000000000c96e	movl	(%rax), %ebx
000000000000c970	movl	%ebx, %eax
000000000000c972	addq	$0x8, %rsp
000000000000c976	popq	%rbx
000000000000c977	popq	%rbp
000000000000c978	retq
_proc_set_delayidlesleep:
000000000000c979	pushq	%rbp
000000000000c97a	movq	%rsp, %rbp
000000000000c97d	pushq	%rbx
000000000000c97e	pushq	%rax
000000000000c97f	callq	_getpid
000000000000c984	xorl	%ebx, %ebx
000000000000c986	movl	$0x1, %ecx
000000000000c98b	movl	$0x5, %edi
000000000000c990	movl	%eax, %esi
000000000000c992	movl	$0x4, %edx
000000000000c997	xorl	%r8d, %r8d
000000000000c99a	xorl	%r9d, %r9d
000000000000c99d	callq	___proc_info
000000000000c9a2	cmpl	$-0x1, %eax
000000000000c9a5	jne	0xc9ae
000000000000c9a7	callq	___error
000000000000c9ac	movl	(%rax), %ebx
000000000000c9ae	movl	%ebx, %eax
000000000000c9b0	addq	$0x8, %rsp
000000000000c9b4	popq	%rbx
000000000000c9b5	popq	%rbp
000000000000c9b6	retq
_proc_clear_delayidlesleep:
000000000000c9b7	pushq	%rbp
000000000000c9b8	movq	%rsp, %rbp
000000000000c9bb	pushq	%rbx
000000000000c9bc	pushq	%rax
000000000000c9bd	callq	_getpid
000000000000c9c2	xorl	%ebx, %ebx
000000000000c9c4	movl	$0x5, %edi
000000000000c9c9	movl	%eax, %esi
000000000000c9cb	movl	$0x4, %edx
000000000000c9d0	xorl	%ecx, %ecx
000000000000c9d2	xorl	%r8d, %r8d
000000000000c9d5	xorl	%r9d, %r9d
000000000000c9d8	callq	___proc_info
000000000000c9dd	cmpl	$-0x1, %eax
000000000000c9e0	jne	0xc9e9
000000000000c9e2	callq	___error
000000000000c9e7	movl	(%rax), %ebx
000000000000c9e9	movl	%ebx, %eax
000000000000c9eb	addq	$0x8, %rsp
000000000000c9ef	popq	%rbx
000000000000c9f0	popq	%rbp
000000000000c9f1	retq
_proc_disable_apptype:
000000000000c9f2	pushq	%rbp
000000000000c9f3	movq	%rsp, %rbp
000000000000c9f6	pushq	%rbx
000000000000c9f7	pushq	%rax
000000000000c9f8	movl	%esi, %ecx
000000000000c9fa	leal	-0x1(%rcx), %eax
000000000000c9fd	movl	$0x16, %ebx
000000000000ca02	cmpl	$0x1, %eax
000000000000ca05	ja	0xca37
000000000000ca07	movl	%edi, %r9d
000000000000ca0a	movq	$0x0, (%rsp)
000000000000ca12	xorl	%ebx, %ebx
000000000000ca14	movl	$0x1, %edi
000000000000ca19	movl	$0x6, %esi
000000000000ca1e	movl	$0x6, %edx
000000000000ca23	xorl	%r8d, %r8d
000000000000ca26	callq	___process_policy
000000000000ca2b	cmpl	$-0x1, %eax
000000000000ca2e	jne	0xca37
000000000000ca30	callq	___error
000000000000ca35	movl	(%rax), %ebx
000000000000ca37	movl	%ebx, %eax
000000000000ca39	addq	$0x8, %rsp
000000000000ca3d	popq	%rbx
000000000000ca3e	popq	%rbp
000000000000ca3f	retq
_proc_enable_apptype:
000000000000ca40	pushq	%rbp
000000000000ca41	movq	%rsp, %rbp
000000000000ca44	pushq	%rbx
000000000000ca45	pushq	%rax
000000000000ca46	movl	%esi, %ecx
000000000000ca48	leal	-0x1(%rcx), %eax
000000000000ca4b	movl	$0x16, %ebx
000000000000ca50	cmpl	$0x1, %eax
000000000000ca53	ja	0xca85
000000000000ca55	movl	%edi, %r9d
000000000000ca58	movq	$0x0, (%rsp)
000000000000ca60	xorl	%ebx, %ebx
000000000000ca62	movl	$0x1, %edi
000000000000ca67	movl	$0x5, %esi
000000000000ca6c	movl	$0x6, %edx
000000000000ca71	xorl	%r8d, %r8d
000000000000ca74	callq	___process_policy
000000000000ca79	cmpl	$-0x1, %eax
000000000000ca7c	jne	0xca85
000000000000ca7e	callq	___error
000000000000ca83	movl	(%rax), %ebx
000000000000ca85	movl	%ebx, %eax
000000000000ca87	addq	$0x8, %rsp
000000000000ca8b	popq	%rbx
000000000000ca8c	popq	%rbp
000000000000ca8d	retq
_proc_suppress:
000000000000ca8e	xorl	%eax, %eax
000000000000ca90	retq
__getprivatesystemidentifier:
000000000000ca91	jmp	___gethostuuid
__register_gethostuuid_callback:
000000000000ca96	xorl	%ecx, %ecx
000000000000ca98	xorl	%eax, %eax
000000000000ca9a	lock
000000000000ca9b	cmpxchgq	%rdi, __gethostuuid_callback(%rip)
000000000000caa3	movl	$0x16, %eax
000000000000caa8	cmovel	%ecx, %eax
000000000000caab	retq
_mach_boottime_usec:
000000000000caac	movabsq	$0x7fffffe000c8, %rax
000000000000cab6	movq	(%rax), %rax
000000000000cab9	retq
_futimens:
000000000000caba	pushq	%rbp
000000000000cabb	movq	%rsp, %rbp
000000000000cabe	pushq	%r15
000000000000cac0	pushq	%r14
000000000000cac2	pushq	%r12
000000000000cac4	pushq	%rbx
000000000000cac5	subq	$0x60, %rsp
000000000000cac9	movl	%edi, %r14d
000000000000cacc	testq	%rsi, %rsi
000000000000cacf	je	0xcaf2
000000000000cad1	movq	0x18(%rsi), %rax
000000000000cad5	movq	%rax, -0x28(%rbp)
000000000000cad9	movq	0x10(%rsi), %rax
000000000000cadd	movq	%rax, -0x30(%rbp)
000000000000cae1	movq	(%rsi), %rax
000000000000cae4	movq	0x8(%rsi), %rcx
000000000000cae8	movq	%rcx, -0x38(%rbp)
000000000000caec	movq	%rax, -0x40(%rbp)
000000000000caf0	jmp	0xcb08
000000000000caf2	movaps	0x16157(%rip), %xmm0
000000000000caf9	movaps	%xmm0, -0x30(%rbp)
000000000000cafd	movaps	_times_now(%rip), %xmm0
000000000000cb04	movaps	%xmm0, -0x40(%rbp)
000000000000cb08	leaq	-0x48(%rbp), %r15
000000000000cb0c	movq	$0x0, (%r15)
000000000000cb13	xorps	%xmm0, %xmm0
000000000000cb16	leaq	-0x80(%rbp), %r12
000000000000cb1a	movaps	%xmm0, 0x10(%r12)
000000000000cb20	movaps	%xmm0, (%r12)
000000000000cb25	movq	0x16144(%rip), %rax
000000000000cb2c	leaq	-0x60(%rbp), %rbx
000000000000cb30	movq	%rax, 0x10(%rbx)
000000000000cb34	movq	0x1612d(%rip), %rax
000000000000cb3b	movq	%rax, 0x8(%rbx)
000000000000cb3f	movq	0x1611a(%rip), %rax
000000000000cb46	movq	%rax, (%rbx)
000000000000cb49	leaq	-0x40(%rbp), %rdi
000000000000cb4d	movq	%r12, %rsi
000000000000cb50	movq	%r15, %rdx
000000000000cb53	callq	_prepare_times_array_and_attrs
000000000000cb58	movl	%eax, 0x4(%rbx)
000000000000cb5b	movq	(%r15), %rcx
000000000000cb5e	movl	%r14d, %edi
000000000000cb61	movq	%rbx, %rsi
000000000000cb64	movq	%r12, %rdx
000000000000cb67	xorl	%r8d, %r8d
000000000000cb6a	callq	_fsetattrlist
000000000000cb6f	addq	$0x60, %rsp
000000000000cb73	popq	%rbx
000000000000cb74	popq	%r12
000000000000cb76	popq	%r14
000000000000cb78	popq	%r15
000000000000cb7a	popq	%rbp
000000000000cb7b	retq
_prepare_times_array_and_attrs:
000000000000cb7c	pushq	%rbp
000000000000cb7d	movq	%rsp, %rbp
000000000000cb80	pushq	%r15
000000000000cb82	pushq	%r14
000000000000cb84	pushq	%rbx
000000000000cb85	subq	$0x18, %rsp
000000000000cb89	movq	%rdx, %r14
000000000000cb8c	movq	%rsi, %r15
000000000000cb8f	movq	%rdi, %rbx
000000000000cb92	movq	0x8(%rdi), %rax
000000000000cb96	cmpq	$-0x2, %rax
000000000000cb9a	je	0xcba8
000000000000cb9c	cmpq	$-0x1, %rax
000000000000cba0	je	0xcbbe
000000000000cba2	movq	0x18(%rbx), %rcx
000000000000cba6	jmp	0xcbb8
000000000000cba8	movq	0x18(%rbx), %rcx
000000000000cbac	xorl	%eax, %eax
000000000000cbae	cmpq	$-0x2, %rcx
000000000000cbb2	je	0xcc50
000000000000cbb8	cmpq	$-0x1, %rcx
000000000000cbbc	jne	0xcc02
000000000000cbbe	leaq	-0x28(%rbp), %rdi
000000000000cbc2	callq	___commpage_gettimeofday
000000000000cbc7	testl	%eax, %eax
000000000000cbc9	je	0xcbd6
000000000000cbcb	leaq	-0x28(%rbp), %rdi
000000000000cbcf	xorl	%esi, %esi
000000000000cbd1	callq	___gettimeofday
000000000000cbd6	movq	-0x28(%rbp), %rax
000000000000cbda	movslq	-0x20(%rbp), %rcx
000000000000cbde	imulq	$0x3e8, %rcx, %rcx
000000000000cbe5	cmpq	$-0x1, 0x8(%rbx)
000000000000cbea	jne	0xcbf3
000000000000cbec	movq	%rax, (%rbx)
000000000000cbef	movq	%rcx, 0x8(%rbx)
000000000000cbf3	cmpq	$-0x1, 0x18(%rbx)
000000000000cbf8	jne	0xcc02
000000000000cbfa	movq	%rax, 0x10(%rbx)
000000000000cbfe	movq	%rcx, 0x18(%rbx)
000000000000cc02	movq	$0x0, (%r14)
000000000000cc09	xorl	%eax, %eax
000000000000cc0b	cmpq	$-0x2, 0x18(%rbx)
000000000000cc10	je	0xcc32
000000000000cc12	movq	0x10(%rbx), %rax
000000000000cc16	movq	0x18(%rbx), %rcx
000000000000cc1a	movq	%rcx, 0x8(%r15)
000000000000cc1e	movq	%rax, (%r15)
000000000000cc21	leaq	0x10(%r15), %r15
000000000000cc25	movl	$0x10, %eax
000000000000cc2a	addq	%rax, (%r14)
000000000000cc2d	movl	$0x400, %eax
000000000000cc32	cmpq	$-0x2, 0x8(%rbx)
000000000000cc37	je	0xcc50
000000000000cc39	orl	$0x1000, %eax
000000000000cc3e	movq	(%rbx), %rcx
000000000000cc41	movq	0x8(%rbx), %rdx
000000000000cc45	movq	%rdx, 0x8(%r15)
000000000000cc49	movq	%rcx, (%r15)
000000000000cc4c	addq	$0x10, (%r14)
000000000000cc50	addq	$0x18, %rsp
000000000000cc54	popq	%rbx
000000000000cc55	popq	%r14
000000000000cc57	popq	%r15
000000000000cc59	popq	%rbp
000000000000cc5a	retq
_utimensat:
000000000000cc5b	pushq	%rbp
000000000000cc5c	movq	%rsp, %rbp
000000000000cc5f	pushq	%r15
000000000000cc61	pushq	%r14
000000000000cc63	pushq	%r13
000000000000cc65	pushq	%r12
000000000000cc67	pushq	%rbx
000000000000cc68	subq	$0x68, %rsp
000000000000cc6c	movl	%ecx, %ebx
000000000000cc6e	movq	%rsi, -0x30(%rbp)
000000000000cc72	movl	%edi, %r15d
000000000000cc75	testq	%rdx, %rdx
000000000000cc78	je	0xcc9b
000000000000cc7a	movq	0x18(%rdx), %rax
000000000000cc7e	movq	%rax, -0x38(%rbp)
000000000000cc82	movq	0x10(%rdx), %rax
000000000000cc86	movq	%rax, -0x40(%rbp)
000000000000cc8a	movq	(%rdx), %rax
000000000000cc8d	movq	0x8(%rdx), %rcx
000000000000cc91	movq	%rcx, -0x48(%rbp)
000000000000cc95	movq	%rax, -0x50(%rbp)
000000000000cc99	jmp	0xccb1
000000000000cc9b	movaps	0x15fae(%rip), %xmm0
000000000000cca2	movaps	%xmm0, -0x40(%rbp)
000000000000cca6	movaps	_times_now(%rip), %xmm0
000000000000ccad	movaps	%xmm0, -0x50(%rbp)
000000000000ccb1	leaq	-0x58(%rbp), %r12
000000000000ccb5	movq	$0x0, (%r12)
000000000000ccbd	xorps	%xmm0, %xmm0
000000000000ccc0	leaq	-0x90(%rbp), %r13
000000000000ccc7	movaps	%xmm0, 0x10(%r13)
000000000000cccc	movaps	%xmm0, (%r13)
000000000000ccd1	movq	0x15f98(%rip), %rax
000000000000ccd8	leaq	-0x70(%rbp), %r14
000000000000ccdc	movq	%rax, 0x10(%r14)
000000000000cce0	movq	0x15f81(%rip), %rax
000000000000cce7	movq	%rax, 0x8(%r14)
000000000000cceb	movq	0x15f6e(%rip), %rax
000000000000ccf2	movq	%rax, (%r14)
000000000000ccf5	leaq	-0x50(%rbp), %rdi
000000000000ccf9	movq	%r13, %rsi
000000000000ccfc	movq	%r12, %rdx
000000000000ccff	callq	_prepare_times_array_and_attrs
000000000000cd04	movl	%eax, 0x4(%r14)
000000000000cd08	shrl	$0x5, %ebx
000000000000cd0b	andl	$0x1, %ebx
000000000000cd0e	movq	(%r12), %r8
000000000000cd12	movl	%r15d, %edi
000000000000cd15	movq	-0x30(%rbp), %rsi
000000000000cd19	movq	%r14, %rdx
000000000000cd1c	movq	%r13, %rcx
000000000000cd1f	movl	%ebx, %r9d
000000000000cd22	callq	_setattrlistat
000000000000cd27	addq	$0x68, %rsp
000000000000cd2b	popq	%rbx
000000000000cd2c	popq	%r12
000000000000cd2e	popq	%r13
000000000000cd30	popq	%r14
000000000000cd32	popq	%r15
000000000000cd34	popq	%rbp
000000000000cd35	retq
_thread_set_policy:
000000000000cd36	pushq	%rbp
000000000000cd37	movq	%rsp, %rbp
000000000000cd3a	pushq	%rbx
000000000000cd3b	pushq	%rax
000000000000cd3c	movl	%edi, %ebx
000000000000cd3e	movl	0x10(%rbp), %eax
000000000000cd41	movl	%eax, (%rsp)
000000000000cd44	callq	__kernelrpc_thread_set_policy
000000000000cd49	cmpl	$0x33, %eax
000000000000cd4c	je	0xcd59
000000000000cd4e	testl	%eax, %eax
000000000000cd50	jne	0xcd5b
000000000000cd52	movl	%ebx, %edi
000000000000cd54	callq	__pthread_clear_qos_tsd
000000000000cd59	xorl	%eax, %eax
000000000000cd5b	addq	$0x8, %rsp
000000000000cd5f	popq	%rbx
000000000000cd60	popq	%rbp
000000000000cd61	retq
_thread_get_register_pointer_values:
000000000000cd62	pushq	%rbp
000000000000cd63	movq	%rsp, %rbp
000000000000cd66	pushq	%r15
000000000000cd68	pushq	%r14
000000000000cd6a	pushq	%r12
000000000000cd6c	pushq	%rbx
000000000000cd6d	subq	$0xb0, %rsp
000000000000cd74	movl	$0x4, %eax
000000000000cd79	testq	%rdx, %rdx
000000000000cd7c	je	0xcfe2
000000000000cd82	movq	%rcx, %r15
000000000000cd85	movq	%rdx, %r14
000000000000cd88	movq	%rsi, %rbx
000000000000cd8b	movq	(%rdx), %r12
000000000000cd8e	testq	%rcx, %rcx
000000000000cd91	jne	0xcd9c
000000000000cd93	testq	%r12, %r12
000000000000cd96	jne	0xcfe2
000000000000cd9c	xorps	%xmm0, %xmm0
000000000000cd9f	leaq	-0xd0(%rbp), %rdx
000000000000cda6	movaps	%xmm0, 0x90(%rdx)
000000000000cdad	movaps	%xmm0, 0x80(%rdx)
000000000000cdb4	movaps	%xmm0, 0x70(%rdx)
000000000000cdb8	movaps	%xmm0, 0x60(%rdx)
000000000000cdbc	movaps	%xmm0, 0x50(%rdx)
000000000000cdc0	movaps	%xmm0, 0x40(%rdx)
000000000000cdc4	movaps	%xmm0, 0x30(%rdx)
000000000000cdc8	movaps	%xmm0, 0x20(%rdx)
000000000000cdcc	movaps	%xmm0, 0x10(%rdx)
000000000000cdd0	movaps	%xmm0, (%rdx)
000000000000cdd3	movq	$0x0, 0xa0(%rdx)
000000000000cdde	leaq	-0x24(%rbp), %rcx
000000000000cde2	movl	$0x2a, (%rcx)
000000000000cde8	movl	$0x4, %esi
000000000000cded	callq	_thread_get_state
000000000000cdf2	testl	%eax, %eax
000000000000cdf4	jne	0xcfe2
000000000000cdfa	testq	%rbx, %rbx
000000000000cdfd	je	0xce19
000000000000cdff	movq	-0x98(%rbp), %rax
000000000000ce06	xorl	%ecx, %ecx
000000000000ce08	cmpq	$0x80, %rax
000000000000ce0e	leaq	-0x80(%rax), %rax
000000000000ce12	cmovaq	%rax, %rcx
000000000000ce16	movq	%rcx, (%rbx)
000000000000ce19	movq	-0xd0(%rbp), %rax
000000000000ce20	cmpq	$0x1001, %rax
000000000000ce26	jb	0xce3c
000000000000ce28	movl	$0x1, %ecx
000000000000ce2d	testq	%r15, %r15
000000000000ce30	je	0xce3e
000000000000ce32	testq	%r12, %r12
000000000000ce35	je	0xce3e
000000000000ce37	movq	%rax, (%r15)
000000000000ce3a	jmp	0xce3e
000000000000ce3c	xorl	%ecx, %ecx
000000000000ce3e	movq	-0xc8(%rbp), %rax
000000000000ce45	cmpq	$0x1001, %rax
000000000000ce4b	jb	0xce5e
000000000000ce4d	testq	%r15, %r15
000000000000ce50	je	0xce5b
000000000000ce52	cmpq	%r12, %rcx
000000000000ce55	jae	0xce5b
000000000000ce57	movq	%rax, (%r15,%rcx,8)
000000000000ce5b	incq	%rcx
000000000000ce5e	movq	-0xc0(%rbp), %rax
000000000000ce65	cmpq	$0x1001, %rax
000000000000ce6b	jb	0xce7e
000000000000ce6d	testq	%r15, %r15
000000000000ce70	je	0xce7b
000000000000ce72	cmpq	%r12, %rcx
000000000000ce75	jae	0xce7b
000000000000ce77	movq	%rax, (%r15,%rcx,8)
000000000000ce7b	incq	%rcx
000000000000ce7e	movq	-0xb8(%rbp), %rax
000000000000ce85	cmpq	$0x1001, %rax
000000000000ce8b	jb	0xce9e
000000000000ce8d	testq	%r15, %r15
000000000000ce90	je	0xce9b
000000000000ce92	cmpq	%r12, %rcx
000000000000ce95	jae	0xce9b
000000000000ce97	movq	%rax, (%r15,%rcx,8)
000000000000ce9b	incq	%rcx
000000000000ce9e	movq	-0xb0(%rbp), %rax
000000000000cea5	cmpq	$0x1001, %rax
000000000000ceab	jb	0xcebe
000000000000cead	testq	%r15, %r15
000000000000ceb0	je	0xcebb
000000000000ceb2	cmpq	%r12, %rcx
000000000000ceb5	jae	0xcebb
000000000000ceb7	movq	%rax, (%r15,%rcx,8)
000000000000cebb	incq	%rcx
000000000000cebe	movq	-0xa0(%rbp), %rax
000000000000cec5	cmpq	$0x1001, %rax
000000000000cecb	jb	0xcede
000000000000cecd	testq	%r15, %r15
000000000000ced0	je	0xcedb
000000000000ced2	cmpq	%r12, %rcx
000000000000ced5	jae	0xcedb
000000000000ced7	movq	%rax, (%r15,%rcx,8)
000000000000cedb	incq	%rcx
000000000000cede	movq	-0x90(%rbp), %rax
000000000000cee5	cmpq	$0x1001, %rax
000000000000ceeb	jb	0xcefe
000000000000ceed	testq	%r15, %r15
000000000000cef0	je	0xcefb
000000000000cef2	cmpq	%r12, %rcx
000000000000cef5	jae	0xcefb
000000000000cef7	movq	%rax, (%r15,%rcx,8)
000000000000cefb	incq	%rcx
000000000000cefe	movq	-0x88(%rbp), %rax
000000000000cf05	cmpq	$0x1001, %rax
000000000000cf0b	jb	0xcf1e
000000000000cf0d	testq	%r15, %r15
000000000000cf10	je	0xcf1b
000000000000cf12	cmpq	%r12, %rcx
000000000000cf15	jae	0xcf1b
000000000000cf17	movq	%rax, (%r15,%rcx,8)
000000000000cf1b	incq	%rcx
000000000000cf1e	movq	-0x80(%rbp), %rax
000000000000cf22	cmpq	$0x1001, %rax
000000000000cf28	jb	0xcf3b
000000000000cf2a	testq	%r15, %r15
000000000000cf2d	je	0xcf38
000000000000cf2f	cmpq	%r12, %rcx
000000000000cf32	jae	0xcf38
000000000000cf34	movq	%rax, (%r15,%rcx,8)
000000000000cf38	incq	%rcx
000000000000cf3b	movq	-0x78(%rbp), %rax
000000000000cf3f	cmpq	$0x1001, %rax
000000000000cf45	jb	0xcf58
000000000000cf47	testq	%r15, %r15
000000000000cf4a	je	0xcf55
000000000000cf4c	cmpq	%r12, %rcx
000000000000cf4f	jae	0xcf55
000000000000cf51	movq	%rax, (%r15,%rcx,8)
000000000000cf55	incq	%rcx
000000000000cf58	movq	-0x70(%rbp), %rax
000000000000cf5c	cmpq	$0x1001, %rax
000000000000cf62	jb	0xcf75
000000000000cf64	testq	%r15, %r15
000000000000cf67	je	0xcf72
000000000000cf69	cmpq	%r12, %rcx
000000000000cf6c	jae	0xcf72
000000000000cf6e	movq	%rax, (%r15,%rcx,8)
000000000000cf72	incq	%rcx
000000000000cf75	movq	-0x68(%rbp), %rax
000000000000cf79	cmpq	$0x1001, %rax
000000000000cf7f	jb	0xcf92
000000000000cf81	testq	%r15, %r15
000000000000cf84	je	0xcf8f
000000000000cf86	cmpq	%r12, %rcx
000000000000cf89	jae	0xcf8f
000000000000cf8b	movq	%rax, (%r15,%rcx,8)
000000000000cf8f	incq	%rcx
000000000000cf92	movq	-0x60(%rbp), %rax
000000000000cf96	cmpq	$0x1001, %rax
000000000000cf9c	jb	0xcfaf
000000000000cf9e	testq	%r15, %r15
000000000000cfa1	je	0xcfac
000000000000cfa3	cmpq	%r12, %rcx
000000000000cfa6	jae	0xcfac
000000000000cfa8	movq	%rax, (%r15,%rcx,8)
000000000000cfac	incq	%rcx
000000000000cfaf	movq	-0x58(%rbp), %rax
000000000000cfb3	cmpq	$0x1001, %rax
000000000000cfb9	jb	0xcfcc
000000000000cfbb	testq	%r15, %r15
000000000000cfbe	je	0xcfc9
000000000000cfc0	cmpq	%r12, %rcx
000000000000cfc3	jae	0xcfc9
000000000000cfc5	movq	%rax, (%r15,%rcx,8)
000000000000cfc9	incq	%rcx
000000000000cfcc	xorl	%eax, %eax
000000000000cfce	cmpq	%r12, %rcx
000000000000cfd1	movl	$0x34, %edx
000000000000cfd6	cmoval	%edx, %eax
000000000000cfd9	movq	%rcx, (%r14)
000000000000cfdc	testq	%r12, %r12
000000000000cfdf	cmovel	%edx, %eax
000000000000cfe2	addq	$0xb0, %rsp
000000000000cfe9	popq	%rbx
000000000000cfea	popq	%r12
000000000000cfec	popq	%r14
000000000000cfee	popq	%r15
000000000000cff0	popq	%rbp
000000000000cff1	retq
_renameatx_np:
000000000000cff2	pushq	%rbp
000000000000cff3	movq	%rsp, %rbp
000000000000cff6	pushq	%rbx
000000000000cff7	pushq	%rax
000000000000cff8	callq	___renameatx_np
000000000000cffd	movl	%eax, %ebx
000000000000cfff	testl	%eax, %eax
000000000000d001	jne	0xd008
000000000000d003	callq	___inc_remove_counter
000000000000d008	movl	%ebx, %eax
000000000000d00a	addq	$0x8, %rsp
000000000000d00e	popq	%rbx
000000000000d00f	popq	%rbp
000000000000d010	retq
_renamex_np:
000000000000d011	pushq	%rbp
000000000000d012	movq	%rsp, %rbp
000000000000d015	pushq	%rbx
000000000000d016	pushq	%rax
000000000000d017	movl	%edx, %r8d
000000000000d01a	movq	%rsi, %rcx
000000000000d01d	movq	%rdi, %rsi
000000000000d020	movl	$0xfffffffe, %edi
000000000000d025	movl	$0xfffffffe, %edx
000000000000d02a	callq	___renameatx_np
000000000000d02f	movl	%eax, %ebx
000000000000d031	testl	%eax, %eax
000000000000d033	jne	0xd03a
000000000000d035	callq	___inc_remove_counter
000000000000d03a	movl	%ebx, %eax
000000000000d03c	addq	$0x8, %rsp
000000000000d040	popq	%rbx
000000000000d041	popq	%rbp
000000000000d042	retq
_rename_ext:
000000000000d043	jmp	_renamex_np
_log_data_as_kernel:
000000000000d048	jmp	___log_data
_posix_spawnattr_getflags:
000000000000d04d	movl	$0x16, %eax
000000000000d052	testq	%rdi, %rdi
000000000000d055	je	0xd067
000000000000d057	movq	(%rdi), %rcx
000000000000d05a	testq	%rcx, %rcx
000000000000d05d	je	0xd067
000000000000d05f	movzwl	(%rcx), %eax
000000000000d062	movw	%ax, (%rsi)
000000000000d065	xorl	%eax, %eax
000000000000d067	retq
_posix_spawnattr_getsigdefault:
000000000000d068	movl	$0x16, %eax
000000000000d06d	testq	%rdi, %rdi
000000000000d070	je	0xd081
000000000000d072	movq	(%rdi), %rcx
000000000000d075	testq	%rcx, %rcx
000000000000d078	je	0xd081
000000000000d07a	movl	0x4(%rcx), %eax
000000000000d07d	movl	%eax, (%rsi)
000000000000d07f	xorl	%eax, %eax
000000000000d081	retq
_posix_spawnattr_getpgroup:
000000000000d082	movl	$0x16, %eax
000000000000d087	testq	%rdi, %rdi
000000000000d08a	je	0xd09b
000000000000d08c	movq	(%rdi), %rcx
000000000000d08f	testq	%rcx, %rcx
000000000000d092	je	0xd09b
000000000000d094	movl	0xc(%rcx), %eax
000000000000d097	movl	%eax, (%rsi)
000000000000d099	xorl	%eax, %eax
000000000000d09b	retq
_posix_spawnattr_getsigmask:
000000000000d09c	movl	$0x16, %eax
000000000000d0a1	testq	%rdi, %rdi
000000000000d0a4	je	0xd0b5
000000000000d0a6	movq	(%rdi), %rcx
000000000000d0a9	testq	%rcx, %rcx
000000000000d0ac	je	0xd0b5
000000000000d0ae	movl	0x8(%rcx), %eax
000000000000d0b1	movl	%eax, (%rsi)
000000000000d0b3	xorl	%eax, %eax
000000000000d0b5	retq
_posix_spawnattr_getbinpref_np:
000000000000d0b6	movl	$0x16, %eax
000000000000d0bb	testq	%rdi, %rdi
000000000000d0be	je	0xd0f1
000000000000d0c0	movq	(%rdi), %r8
000000000000d0c3	testq	%r8, %r8
000000000000d0c6	je	0xd0f1
000000000000d0c8	xorl	%eax, %eax
000000000000d0ca	xorl	%r9d, %r9d
000000000000d0cd	testq	%rsi, %rsi
000000000000d0d0	je	0xd0e9
000000000000d0d2	movl	0x10(%r8,%r9,4), %edi
000000000000d0d7	movl	%edi, (%rdx,%r9,4)
000000000000d0db	incq	%r9
000000000000d0de	cmpq	$0x3, %r9
000000000000d0e2	ja	0xd0e9
000000000000d0e4	cmpq	%rsi, %r9
000000000000d0e7	jb	0xd0d2
000000000000d0e9	testq	%rcx, %rcx
000000000000d0ec	je	0xd0f1
000000000000d0ee	movq	%r9, (%rcx)
000000000000d0f1	retq
_posix_spawnattr_getpcontrol_np:
000000000000d0f2	movl	$0x16, %eax
000000000000d0f7	testq	%rdi, %rdi
000000000000d0fa	je	0xd10b
000000000000d0fc	movq	(%rdi), %rcx
000000000000d0ff	testq	%rcx, %rcx
000000000000d102	je	0xd10b
000000000000d104	movl	0x20(%rcx), %eax
000000000000d107	movl	%eax, (%rsi)
000000000000d109	xorl	%eax, %eax
000000000000d10b	retq
_posix_spawnattr_getprocesstype_np:
000000000000d10c	movl	$0x16, %eax
000000000000d111	testq	%rdi, %rdi
000000000000d114	je	0xd125
000000000000d116	movq	(%rdi), %rcx
000000000000d119	testq	%rcx, %rcx
000000000000d11c	je	0xd125
000000000000d11e	movl	0x24(%rcx), %eax
000000000000d121	movl	%eax, (%rsi)
000000000000d123	xorl	%eax, %eax
000000000000d125	retq
_posix_spawnattr_setpgroup:
000000000000d126	movl	$0x16, %eax
000000000000d12b	testq	%rdi, %rdi
000000000000d12e	je	0xd13d
000000000000d130	movq	(%rdi), %rcx
000000000000d133	testq	%rcx, %rcx
000000000000d136	je	0xd13d
000000000000d138	movl	%esi, 0xc(%rcx)
000000000000d13b	xorl	%eax, %eax
000000000000d13d	retq
_posix_spawnattr_setpcontrol_np:
000000000000d13e	movl	$0x16, %eax
000000000000d143	testq	%rdi, %rdi
000000000000d146	je	0xd155
000000000000d148	movq	(%rdi), %rcx
000000000000d14b	testq	%rcx, %rcx
000000000000d14e	je	0xd155
000000000000d150	movl	%esi, 0x20(%rcx)
000000000000d153	xorl	%eax, %eax
000000000000d155	retq
_posix_spawnattr_setprocesstype_np:
000000000000d156	movl	$0x16, %eax
000000000000d15b	testq	%rdi, %rdi
000000000000d15e	je	0xd16d
000000000000d160	movq	(%rdi), %rcx
000000000000d163	testq	%rcx, %rcx
000000000000d166	je	0xd16d
000000000000d168	movl	%esi, 0x24(%rcx)
000000000000d16b	xorl	%eax, %eax
000000000000d16d	retq
_posix_spawn_file_actions_add_fileportdup2_np:
000000000000d16e	pushq	%rbp
000000000000d16f	movq	%rsp, %rbp
000000000000d172	pushq	%r15
000000000000d174	pushq	%r14
000000000000d176	pushq	%rbx
000000000000d177	pushq	%rax
000000000000d178	movl	$0x16, %eax
000000000000d17d	testq	%rdi, %rdi
000000000000d180	je	0xd1ec
000000000000d182	movq	%rdi, %rbx
000000000000d185	movq	(%rdi), %rcx
000000000000d188	testq	%rcx, %rcx
000000000000d18b	je	0xd1ec
000000000000d18d	movl	%edx, %r15d
000000000000d190	movl	$0x9, %eax
000000000000d195	cmpl	$0x27ff, %edx
000000000000d19b	ja	0xd1ec
000000000000d19d	movl	%esi, %r14d
000000000000d1a0	leal	0x1(%r14), %edx
000000000000d1a4	cmpl	$0x2, %edx
000000000000d1a7	jb	0xd1ec
000000000000d1a9	movl	0x4(%rcx), %eax
000000000000d1ac	cmpl	(%rcx), %eax
000000000000d1ae	jne	0xd1c9
000000000000d1b0	movq	%rbx, %rdi
000000000000d1b3	callq	__posix_spawn_file_actions_grow
000000000000d1b8	movl	%eax, %ecx
000000000000d1ba	movl	$0xc, %eax
000000000000d1bf	testl	%ecx, %ecx
000000000000d1c1	jne	0xd1ec
000000000000d1c3	movq	(%rbx), %rcx
000000000000d1c6	movl	0x4(%rcx), %eax
000000000000d1c9	leal	0x1(%rax), %edx
000000000000d1cc	movl	%edx, 0x4(%rcx)
000000000000d1cf	cltq
000000000000d1d1	imulq	$0x410, %rax, %rax
000000000000d1d8	movl	$0x4, 0x8(%rcx,%rax)
000000000000d1e0	movl	%r14d, 0xc(%rcx,%rax)
000000000000d1e5	movl	%r15d, 0x10(%rcx,%rax)
000000000000d1ea	xorl	%eax, %eax
000000000000d1ec	addq	$0x8, %rsp
000000000000d1f0	popq	%rbx
000000000000d1f1	popq	%r14
000000000000d1f3	popq	%r15
000000000000d1f5	popq	%rbp
000000000000d1f6	retq
_posix_spawn_file_actions_addchdir_np:
000000000000d1f7	pushq	%rbp
000000000000d1f8	movq	%rsp, %rbp
000000000000d1fb	pushq	%r14
000000000000d1fd	pushq	%rbx
000000000000d1fe	movl	$0x16, %eax
000000000000d203	testq	%rdi, %rdi
000000000000d206	je	0xd277
000000000000d208	movq	%rdi, %rbx
000000000000d20b	movq	(%rdi), %rcx
000000000000d20e	testq	%rcx, %rcx
000000000000d211	je	0xd277
000000000000d213	movq	%rsi, %r14
000000000000d216	movl	0x4(%rcx), %eax
000000000000d219	cmpl	(%rcx), %eax
000000000000d21b	jne	0xd236
000000000000d21d	movq	%rbx, %rdi
000000000000d220	callq	__posix_spawn_file_actions_grow
000000000000d225	movl	%eax, %ecx
000000000000d227	movl	$0xc, %eax
000000000000d22c	testl	%ecx, %ecx
000000000000d22e	jne	0xd277
000000000000d230	movq	(%rbx), %rcx
000000000000d233	movl	0x4(%rcx), %eax
000000000000d236	leal	0x1(%rax), %edx
000000000000d239	movl	%edx, 0x4(%rcx)
000000000000d23c	cltq
000000000000d23e	imulq	$0x410, %rax, %rax
000000000000d245	leaq	0x10(%rcx,%rax), %rdi
000000000000d24a	movl	$0x5, -0x8(%rdi)
000000000000d251	movl	$0x400, %edx
000000000000d256	movq	%r14, %rsi
000000000000d259	callq	_strlcpy
000000000000d25e	movq	%rax, %rcx
000000000000d261	xorl	%eax, %eax
000000000000d263	cmpq	$0x400, %rcx
000000000000d26a	jb	0xd277
000000000000d26c	movq	(%rbx), %rax
000000000000d26f	decl	0x4(%rax)
000000000000d272	movl	$0x3f, %eax
000000000000d277	popq	%rbx
000000000000d278	popq	%r14
000000000000d27a	popq	%rbp
000000000000d27b	retq
_posix_spawn_file_actions_addfchdir_np:
000000000000d27c	pushq	%rbp
000000000000d27d	movq	%rsp, %rbp
000000000000d280	pushq	%r14
000000000000d282	pushq	%rbx
000000000000d283	movl	$0x16, %eax
000000000000d288	testq	%rdi, %rdi
000000000000d28b	je	0xd2e6
000000000000d28d	movq	%rdi, %rbx
000000000000d290	movq	(%rdi), %rcx
000000000000d293	testq	%rcx, %rcx
000000000000d296	je	0xd2e6
000000000000d298	movl	%esi, %r14d
000000000000d29b	movl	$0x9, %eax
000000000000d2a0	cmpl	$0x27ff, %esi
000000000000d2a6	ja	0xd2e6
000000000000d2a8	movl	0x4(%rcx), %eax
000000000000d2ab	cmpl	(%rcx), %eax
000000000000d2ad	jne	0xd2c8
000000000000d2af	movq	%rbx, %rdi
000000000000d2b2	callq	__posix_spawn_file_actions_grow
000000000000d2b7	movl	%eax, %ecx
000000000000d2b9	movl	$0xc, %eax
000000000000d2be	testl	%ecx, %ecx
000000000000d2c0	jne	0xd2e6
000000000000d2c2	movq	(%rbx), %rcx
000000000000d2c5	movl	0x4(%rcx), %eax
000000000000d2c8	leal	0x1(%rax), %edx
000000000000d2cb	movl	%edx, 0x4(%rcx)
000000000000d2ce	cltq
000000000000d2d0	imulq	$0x410, %rax, %rax
000000000000d2d7	movl	$0x6, 0x8(%rcx,%rax)
000000000000d2df	movl	%r14d, 0xc(%rcx,%rax)
000000000000d2e4	xorl	%eax, %eax
000000000000d2e6	popq	%rbx
000000000000d2e7	popq	%r14
000000000000d2e9	popq	%rbp
000000000000d2ea	retq
_posix_spawnattr_setcpumonitor:
000000000000d2eb	movl	$0x16, %eax
000000000000d2f0	testq	%rdi, %rdi
000000000000d2f3	je	0xd307
000000000000d2f5	movq	(%rdi), %rcx
000000000000d2f8	testq	%rcx, %rcx
000000000000d2fb	je	0xd307
000000000000d2fd	movq	%rsi, 0x28(%rcx)
000000000000d301	movq	%rdx, 0x30(%rcx)
000000000000d305	xorl	%eax, %eax
000000000000d307	retq
_posix_spawnattr_getcpumonitor:
000000000000d308	movl	$0x16, %eax
000000000000d30d	testq	%rdi, %rdi
000000000000d310	je	0xd32a
000000000000d312	movq	(%rdi), %rcx
000000000000d315	testq	%rcx, %rcx
000000000000d318	je	0xd32a
000000000000d31a	movq	0x28(%rcx), %rax
000000000000d31e	movq	%rax, (%rsi)
000000000000d321	movq	0x30(%rcx), %rax
000000000000d325	movq	%rax, (%rdx)
000000000000d328	xorl	%eax, %eax
000000000000d32a	retq
_posix_spawnattr_set_threadlimit_ext:
000000000000d32b	movl	$0x16, %eax
000000000000d330	testq	%rdi, %rdi
000000000000d333	je	0xd342
000000000000d335	movq	(%rdi), %rcx
000000000000d338	testq	%rcx, %rcx
000000000000d33b	je	0xd342
000000000000d33d	movl	%esi, 0x60(%rcx)
000000000000d340	xorl	%eax, %eax
000000000000d342	retq
_posix_spawnattr_set_importancewatch_port_np:
000000000000d343	pushq	%rbp
000000000000d344	movq	%rsp, %rbp
000000000000d347	pushq	%r15
000000000000d349	pushq	%r14
000000000000d34b	pushq	%r13
000000000000d34d	pushq	%r12
000000000000d34f	pushq	%rbx
000000000000d350	subq	$0x18, %rsp
000000000000d354	movl	$0x16, %eax
000000000000d359	cmpl	$0x20, %esi
000000000000d35c	ja	0xd3af
000000000000d35e	testl	%esi, %esi
000000000000d360	je	0xd3ad
000000000000d362	movq	%rdx, %r14
000000000000d365	movq	%rdi, %r12
000000000000d368	movslq	%esi, %r13
000000000000d36b	movl	$0x1, %ebx
000000000000d370	leaq	-0x40(%rbp), %r15
000000000000d374	movq	$0x3, -0x40(%rbp)
000000000000d37c	movl	-0x4(%r14,%rbx,4), %eax
000000000000d381	movl	%eax, -0x38(%rbp)
000000000000d384	movq	$0x0, -0x34(%rbp)
000000000000d38c	movl	$0x0, -0x2c(%rbp)
000000000000d393	movq	%r12, %rdi
000000000000d396	movq	%r15, %rsi
000000000000d399	callq	_posix_spawn_appendportaction_np
000000000000d39e	testl	%eax, %eax
000000000000d3a0	jne	0xd3af
000000000000d3a2	cmpq	%r13, %rbx
000000000000d3a5	leaq	0x1(%rbx), %rbx
000000000000d3a9	jl	0xd374
000000000000d3ab	jmp	0xd3af
000000000000d3ad	xorl	%eax, %eax
000000000000d3af	addq	$0x18, %rsp
000000000000d3b3	popq	%rbx
000000000000d3b4	popq	%r12
000000000000d3b6	popq	%r13
000000000000d3b8	popq	%r14
000000000000d3ba	popq	%r15
000000000000d3bc	popq	%rbp
000000000000d3bd	retq
_posix_spawnattr_set_registered_ports_np:
000000000000d3be	pushq	%rbp
000000000000d3bf	movq	%rsp, %rbp
000000000000d3c2	pushq	%r15
000000000000d3c4	pushq	%r14
000000000000d3c6	pushq	%r13
000000000000d3c8	pushq	%r12
000000000000d3ca	pushq	%rbx
000000000000d3cb	subq	$0x18, %rsp
000000000000d3cf	movl	$0x16, %eax
000000000000d3d4	cmpl	$0x3, %edx
000000000000d3d7	ja	0xd42a
000000000000d3d9	testl	%edx, %edx
000000000000d3db	je	0xd428
000000000000d3dd	movq	%rsi, %r14
000000000000d3e0	movq	%rdi, %r12
000000000000d3e3	movl	%edx, %r13d
000000000000d3e6	movl	$0x1, %ebx
000000000000d3eb	leaq	-0x40(%rbp), %r15
000000000000d3ef	movq	$0x4, -0x40(%rbp)
000000000000d3f7	movl	-0x4(%r14,%rbx,4), %eax
000000000000d3fc	movl	%eax, -0x38(%rbp)
000000000000d3ff	movq	$0x0, -0x34(%rbp)
000000000000d407	movl	$0x0, -0x2c(%rbp)
000000000000d40e	movq	%r12, %rdi
000000000000d411	movq	%r15, %rsi
000000000000d414	callq	_posix_spawn_appendportaction_np
000000000000d419	testl	%eax, %eax
000000000000d41b	jne	0xd42a
000000000000d41d	cmpq	%r13, %rbx
000000000000d420	leaq	0x1(%rbx), %rbx
000000000000d424	jb	0xd3ef
000000000000d426	jmp	0xd42a
000000000000d428	xorl	%eax, %eax
000000000000d42a	addq	$0x18, %rsp
000000000000d42e	popq	%rbx
000000000000d42f	popq	%r12
000000000000d431	popq	%r13
000000000000d433	popq	%r14
000000000000d435	popq	%r15
000000000000d437	popq	%rbp
000000000000d438	retq
_posix_spawnattr_setcoalition_np:
000000000000d439	pushq	%rbp
000000000000d43a	movq	%rsp, %rbp
000000000000d43d	pushq	%r15
000000000000d43f	pushq	%r14
000000000000d441	pushq	%r12
000000000000d443	pushq	%rbx
000000000000d444	movl	$0x16, %eax
000000000000d449	testq	%rdi, %rdi
000000000000d44c	je	0xd4b2
000000000000d44e	movl	%edx, %ebx
000000000000d450	cmpl	$0x1, %edx
000000000000d453	ja	0xd4b2
000000000000d455	movq	(%rdi), %r12
000000000000d458	testq	%r12, %r12
000000000000d45b	je	0xd4b2
000000000000d45d	movl	%ecx, %r14d
000000000000d460	movq	%rsi, %r15
000000000000d463	movq	0x80(%r12), %rax
000000000000d46b	testq	%rax, %rax
000000000000d46e	jne	0xd4a0
000000000000d470	movl	$0x30, %edi
000000000000d475	callq	_malloc
000000000000d47a	testq	%rax, %rax
000000000000d47d	je	0xd4bb
000000000000d47f	xorl	%ecx, %ecx
000000000000d481	movq	%rcx, 0x28(%rax)
000000000000d485	movq	%rcx, 0x20(%rax)
000000000000d489	movq	%rcx, 0x18(%rax)
000000000000d48d	movq	%rcx, 0x10(%rax)
000000000000d491	movq	%rcx, 0x8(%rax)
000000000000d495	movq	%rcx, (%rax)
000000000000d498	movq	%rax, 0x80(%r12)
000000000000d4a0	movslq	%ebx, %rcx
000000000000d4a3	leaq	(%rcx,%rcx,2), %rcx
000000000000d4a7	movq	%r15, (%rax,%rcx,8)
000000000000d4ab	movl	%r14d, 0x8(%rax,%rcx,8)
000000000000d4b0	xorl	%eax, %eax
000000000000d4b2	popq	%rbx
000000000000d4b3	popq	%r12
000000000000d4b5	popq	%r14
000000000000d4b7	popq	%r15
000000000000d4b9	popq	%rbp
000000000000d4ba	retq
000000000000d4bb	movl	$0xc, %eax
000000000000d4c0	jmp	0xd4b2
_posix_spawnattr_set_qos_clamp_np:
000000000000d4c2	movl	$0x16, %eax
000000000000d4c7	testq	%rdi, %rdi
000000000000d4ca	je	0xd4e0
000000000000d4cc	cmpq	$0x3, %rsi
000000000000d4d0	ja	0xd4e0
000000000000d4d2	movq	(%rdi), %rcx
000000000000d4d5	testq	%rcx, %rcx
000000000000d4d8	je	0xd4e0
000000000000d4da	movq	%rsi, 0x50(%rcx)
000000000000d4de	xorl	%eax, %eax
000000000000d4e0	retq
_posix_spawnattr_get_qos_clamp_np:
000000000000d4e1	movl	$0x16, %eax
000000000000d4e6	testq	%rdi, %rdi
000000000000d4e9	je	0xd4fc
000000000000d4eb	movq	(%rdi), %rcx
000000000000d4ee	testq	%rcx, %rcx
000000000000d4f1	je	0xd4fc
000000000000d4f3	movq	0x50(%rcx), %rax
000000000000d4f7	movq	%rax, (%rsi)
000000000000d4fa	xorl	%eax, %eax
000000000000d4fc	retq
_posix_spawnattr_set_darwin_role_np:
000000000000d4fd	movl	$0x16, %eax
000000000000d502	testq	%rdi, %rdi
000000000000d505	je	0xd515
000000000000d507	movq	(%rdi), %rcx
000000000000d50a	testq	%rcx, %rcx
000000000000d50d	je	0xd515
000000000000d50f	movq	%rsi, 0x58(%rcx)
000000000000d513	xorl	%eax, %eax
000000000000d515	retq
_posix_spawnattr_get_darwin_role_np:
000000000000d516	movl	$0x16, %eax
000000000000d51b	testq	%rdi, %rdi
000000000000d51e	je	0xd531
000000000000d520	movq	(%rdi), %rcx
000000000000d523	testq	%rcx, %rcx
000000000000d526	je	0xd531
000000000000d528	movq	0x58(%rcx), %rax
000000000000d52c	movq	%rax, (%rsi)
000000000000d52f	xorl	%eax, %eax
000000000000d531	retq
_posix_spawnattr_set_persona_np:
000000000000d532	pushq	%rbp
000000000000d533	movq	%rsp, %rbp
000000000000d536	pushq	%r15
000000000000d538	pushq	%r14
000000000000d53a	pushq	%rbx
000000000000d53b	pushq	%rax
000000000000d53c	movl	$0x16, %eax
000000000000d541	testq	%rdi, %rdi
000000000000d544	je	0xd593
000000000000d546	movl	%edx, %ebx
000000000000d548	cmpl	$0x3, %edx
000000000000d54b	ja	0xd593
000000000000d54d	movq	(%rdi), %r15
000000000000d550	testq	%r15, %r15
000000000000d553	je	0xd593
000000000000d555	movl	%esi, %r14d
000000000000d558	movq	0x88(%r15), %rax
000000000000d55f	testq	%rax, %rax
000000000000d562	jne	0xd58b
000000000000d564	movl	$0x58, %edi
000000000000d569	callq	_malloc
000000000000d56e	testq	%rax, %rax
000000000000d571	je	0xd59e
000000000000d573	movl	$0x0, 0x54(%rax)
000000000000d57a	xorl	%ecx, %ecx
000000000000d57c	movq	%rcx, 0x10(%rax)
000000000000d580	movq	%rcx, 0x8(%rax)
000000000000d584	movq	%rax, 0x88(%r15)
000000000000d58b	movl	%r14d, (%rax)
000000000000d58e	movl	%ebx, 0x4(%rax)
000000000000d591	xorl	%eax, %eax
000000000000d593	addq	$0x8, %rsp
000000000000d597	popq	%rbx
000000000000d598	popq	%r14
000000000000d59a	popq	%r15
000000000000d59c	popq	%rbp
000000000000d59d	retq
000000000000d59e	movl	$0xc, %eax
000000000000d5a3	jmp	0xd593
_posix_spawnattr_set_persona_uid_np:
000000000000d5a5	movl	$0x16, %eax
000000000000d5aa	testq	%rdi, %rdi
000000000000d5ad	je	0xd5d9
000000000000d5af	movq	(%rdi), %rcx
000000000000d5b2	testq	%rcx, %rcx
000000000000d5b5	je	0xd5d9
000000000000d5b7	movq	0x88(%rcx), %rcx
000000000000d5be	testq	%rcx, %rcx
000000000000d5c1	je	0xd5d9
000000000000d5c3	movl	0x4(%rcx), %edx
000000000000d5c6	testb	$0x3, %dl
000000000000d5c9	je	0xd5d9
000000000000d5cb	movl	%esi, 0x8(%rcx)
000000000000d5ce	orl	$0x10000, %edx
000000000000d5d4	movl	%edx, 0x4(%rcx)
000000000000d5d7	xorl	%eax, %eax
000000000000d5d9	retq
_posix_spawnattr_set_persona_gid_np:
000000000000d5da	movl	$0x16, %eax
000000000000d5df	testq	%rdi, %rdi
000000000000d5e2	je	0xd60e
000000000000d5e4	movq	(%rdi), %rcx
000000000000d5e7	testq	%rcx, %rcx
000000000000d5ea	je	0xd60e
000000000000d5ec	movq	0x88(%rcx), %rcx
000000000000d5f3	testq	%rcx, %rcx
000000000000d5f6	je	0xd60e
000000000000d5f8	movl	0x4(%rcx), %edx
000000000000d5fb	testb	$0x3, %dl
000000000000d5fe	je	0xd60e
000000000000d600	movl	%esi, 0xc(%rcx)
000000000000d603	orl	$0x20000, %edx
000000000000d609	movl	%edx, 0x4(%rcx)
000000000000d60c	xorl	%eax, %eax
000000000000d60e	retq
_posix_spawnattr_set_persona_groups_np:
000000000000d60f	movl	$0x16, %eax
000000000000d614	testq	%rdi, %rdi
000000000000d617	je	0xd66e
000000000000d619	cmpl	$0x10, %esi
000000000000d61c	ja	0xd66e
000000000000d61e	testq	%rdx, %rdx
000000000000d621	je	0xd66e
000000000000d623	movq	(%rdi), %rdi
000000000000d626	testq	%rdi, %rdi
000000000000d629	je	0xd66e
000000000000d62b	movq	0x88(%rdi), %r9
000000000000d632	testq	%r9, %r9
000000000000d635	je	0xd66e
000000000000d637	movl	0x4(%r9), %r8d
000000000000d63b	testb	$0x3, %r8b
000000000000d63f	je	0xd66e
000000000000d641	movl	%esi, 0x10(%r9)
000000000000d645	testl	%esi, %esi
000000000000d647	jle	0xd65d
000000000000d649	movl	%esi, %eax
000000000000d64b	xorl	%esi, %esi
000000000000d64d	movl	(%rdx,%rsi,4), %edi
000000000000d650	movl	%edi, 0x14(%r9,%rsi,4)
000000000000d655	incq	%rsi
000000000000d658	cmpq	%rsi, %rax
000000000000d65b	jne	0xd64d
000000000000d65d	movl	%ecx, 0x54(%r9)
000000000000d661	orl	$0x40000, %r8d
000000000000d668	movl	%r8d, 0x4(%r9)
000000000000d66c	xorl	%eax, %eax
000000000000d66e	retq
_posix_spawnattr_set_max_addr_np:
000000000000d66f	movl	$0x16, %eax
000000000000d674	testq	%rdi, %rdi
000000000000d677	je	0xd687
000000000000d679	movq	(%rdi), %rcx
000000000000d67c	testq	%rcx, %rcx
000000000000d67f	je	0xd687
000000000000d681	movq	%rsi, 0x68(%rcx)
000000000000d685	xorl	%eax, %eax
000000000000d687	retq
_posix_spawnattr_set_uid_np:
000000000000d688	pushq	%rbp
000000000000d689	movq	%rsp, %rbp
000000000000d68c	pushq	%r14
000000000000d68e	pushq	%rbx
000000000000d68f	movl	$0x16, %eax
000000000000d694	testq	%rdi, %rdi
000000000000d697	je	0xd6e3
000000000000d699	movq	(%rdi), %rbx
000000000000d69c	testq	%rbx, %rbx
000000000000d69f	je	0xd6e3
000000000000d6a1	movl	%esi, %r14d
000000000000d6a4	movq	0x90(%rbx), %rax
000000000000d6ab	testq	%rax, %rax
000000000000d6ae	jne	0xd6d9
000000000000d6b0	movl	$0x154, %edi
000000000000d6b5	callq	_malloc
000000000000d6ba	testq	%rax, %rax
000000000000d6bd	je	0xd6e8
000000000000d6bf	xorl	%ecx, %ecx
000000000000d6c1	movl	%ecx, 0x50(%rax)
000000000000d6c4	movb	$0x0, 0x54(%rax)
000000000000d6c8	movl	%ecx, 0x10(%rax)
000000000000d6cb	movq	%rcx, 0x8(%rax)
000000000000d6cf	movq	%rcx, (%rax)
000000000000d6d2	movq	%rax, 0x90(%rbx)
000000000000d6d9	movl	%r14d, 0x4(%rax)
000000000000d6dd	orb	$0x1, 0x2(%rax)
000000000000d6e1	xorl	%eax, %eax
000000000000d6e3	popq	%rbx
000000000000d6e4	popq	%r14
000000000000d6e6	popq	%rbp
000000000000d6e7	retq
000000000000d6e8	movl	$0xc, %eax
000000000000d6ed	jmp	0xd6e3
_posix_spawnattr_set_gid_np:
000000000000d6ef	pushq	%rbp
000000000000d6f0	movq	%rsp, %rbp
000000000000d6f3	pushq	%r14
000000000000d6f5	pushq	%rbx
000000000000d6f6	movl	$0x16, %eax
000000000000d6fb	testq	%rdi, %rdi
000000000000d6fe	je	0xd74a
000000000000d700	movq	(%rdi), %rbx
000000000000d703	testq	%rbx, %rbx
000000000000d706	je	0xd74a
000000000000d708	movl	%esi, %r14d
000000000000d70b	movq	0x90(%rbx), %rax
000000000000d712	testq	%rax, %rax
000000000000d715	jne	0xd740
000000000000d717	movl	$0x154, %edi
000000000000d71c	callq	_malloc
000000000000d721	testq	%rax, %rax
000000000000d724	je	0xd74f
000000000000d726	xorl	%ecx, %ecx
000000000000d728	movl	%ecx, 0x50(%rax)
000000000000d72b	movb	$0x0, 0x54(%rax)
000000000000d72f	movl	%ecx, 0x10(%rax)
000000000000d732	movq	%rcx, 0x8(%rax)
000000000000d736	movq	%rcx, (%rax)
000000000000d739	movq	%rax, 0x90(%rbx)
000000000000d740	movl	%r14d, 0x8(%rax)
000000000000d744	orb	$0x2, 0x2(%rax)
000000000000d748	xorl	%eax, %eax
000000000000d74a	popq	%rbx
000000000000d74b	popq	%r14
000000000000d74d	popq	%rbp
000000000000d74e	retq
000000000000d74f	movl	$0xc, %eax
000000000000d754	jmp	0xd74a
_posix_spawnattr_set_groups_np:
000000000000d756	pushq	%rbp
000000000000d757	movq	%rsp, %rbp
000000000000d75a	pushq	%r15
000000000000d75c	pushq	%r14
000000000000d75e	pushq	%r12
000000000000d760	pushq	%rbx
000000000000d761	movl	$0x16, %eax
000000000000d766	testq	%rdi, %rdi
000000000000d769	je	0xd7e4
000000000000d76b	movl	%esi, %r15d
000000000000d76e	cmpl	$0x10, %esi
000000000000d771	ja	0xd7e4
000000000000d773	movq	%rdx, %rbx
000000000000d776	testq	%rdx, %rdx
000000000000d779	je	0xd7e4
000000000000d77b	movq	(%rdi), %r12
000000000000d77e	testq	%r12, %r12
000000000000d781	je	0xd7e4
000000000000d783	movl	%ecx, %r14d
000000000000d786	movq	0x90(%r12), %rax
000000000000d78e	testq	%rax, %rax
000000000000d791	jne	0xd7bd
000000000000d793	movl	$0x154, %edi
000000000000d798	callq	_malloc
000000000000d79d	testq	%rax, %rax
000000000000d7a0	je	0xd7ed
000000000000d7a2	xorl	%ecx, %ecx
000000000000d7a4	movl	%ecx, 0x50(%rax)
000000000000d7a7	movb	$0x0, 0x54(%rax)
000000000000d7ab	movl	%ecx, 0x10(%rax)
000000000000d7ae	movq	%rcx, 0x8(%rax)
000000000000d7b2	movq	%rcx, (%rax)
000000000000d7b5	movq	%rax, 0x90(%r12)
000000000000d7bd	movl	%r15d, 0xc(%rax)
000000000000d7c1	testl	%r15d, %r15d
000000000000d7c4	jle	0xd7da
000000000000d7c6	movl	%r15d, %ecx
000000000000d7c9	xorl	%edx, %edx
000000000000d7cb	movl	(%rbx,%rdx,4), %esi
000000000000d7ce	movl	%esi, 0x10(%rax,%rdx,4)
000000000000d7d2	incq	%rdx
000000000000d7d5	cmpq	%rdx, %rcx
000000000000d7d8	jne	0xd7cb
000000000000d7da	movl	%r14d, 0x50(%rax)
000000000000d7de	orb	$0x4, 0x2(%rax)
000000000000d7e2	xorl	%eax, %eax
000000000000d7e4	popq	%rbx
000000000000d7e5	popq	%r12
000000000000d7e7	popq	%r14
000000000000d7e9	popq	%r15
000000000000d7eb	popq	%rbp
000000000000d7ec	retq
000000000000d7ed	movl	$0xc, %eax
000000000000d7f2	jmp	0xd7e4
_posix_spawnattr_set_login_np:
000000000000d7f4	pushq	%rbp
000000000000d7f5	movq	%rsp, %rbp
000000000000d7f8	pushq	%r15
000000000000d7fa	pushq	%r14
000000000000d7fc	pushq	%rbx
000000000000d7fd	pushq	%rax
000000000000d7fe	movl	$0x16, %eax
000000000000d803	testq	%rdi, %rdi
000000000000d806	je	0xd87f
000000000000d808	movq	(%rdi), %rbx
000000000000d80b	testq	%rbx, %rbx
000000000000d80e	je	0xd87f
000000000000d810	movq	%rsi, %r14
000000000000d813	movq	%rsi, %rdi
000000000000d816	callq	_strlen
000000000000d81b	movq	%rax, %rcx
000000000000d81e	movl	$0x22, %eax
000000000000d823	cmpq	$0xff, %rcx
000000000000d82a	ja	0xd87f
000000000000d82c	movq	0x90(%rbx), %r15
000000000000d833	testq	%r15, %r15
000000000000d836	jne	0xd867
000000000000d838	movl	$0x154, %edi
000000000000d83d	callq	_malloc
000000000000d842	testq	%rax, %rax
000000000000d845	je	0xd88a
000000000000d847	movq	%rax, %r15
000000000000d84a	xorl	%eax, %eax
000000000000d84c	movl	%eax, 0x50(%r15)
000000000000d850	movb	$0x0, 0x54(%r15)
000000000000d855	movl	%eax, 0x10(%r15)
000000000000d859	movq	%rax, 0x8(%r15)
000000000000d85d	movq	%rax, (%r15)
000000000000d860	movq	%r15, 0x90(%rbx)
000000000000d867	leaq	0x54(%r15), %rdi
000000000000d86b	movl	$0x100, %edx
000000000000d870	movq	%r14, %rsi
000000000000d873	callq	_strlcpy
000000000000d878	orb	$0x8, 0x2(%r15)
000000000000d87d	xorl	%eax, %eax
000000000000d87f	addq	$0x8, %rsp
000000000000d883	popq	%rbx
000000000000d884	popq	%r14
000000000000d886	popq	%r15
000000000000d888	popq	%rbp
000000000000d889	retq
000000000000d88a	movl	$0xc, %eax
000000000000d88f	jmp	0xd87f
_posix_spawnattr_set_jetsam_ttr_np:
000000000000d891	movl	$0x16, %eax
000000000000d896	testq	%rdi, %rdi
000000000000d899	je	0xd927
000000000000d89f	testl	%esi, %esi
000000000000d8a1	je	0xd927
000000000000d8a7	movq	(%rdi), %r8
000000000000d8aa	testq	%r8, %r8
000000000000d8ad	je	0xd927
000000000000d8af	pushq	%rbx
000000000000d8b0	movl	$0x0, -0x8(%rsp)
000000000000d8b8	movq	$0x0, -0x10(%rsp)
000000000000d8c1	movl	%esi, %r10d
000000000000d8c4	movl	$0xffffffff, %r11d
000000000000d8ca	xorl	%edi, %edi
000000000000d8cc	leaq	_posix_spawnattr_set_jetsam_ttr_np.relaunch_buckets_msecs(%rip), %r9
000000000000d8d3	movl	$0xffffffff, %ecx
000000000000d8d8	movl	(%rdx,%rdi,4), %esi
000000000000d8db	movq	%r9, %rbx
000000000000d8de	xorl	%eax, %eax
000000000000d8e0	cmpl	(%rbx), %esi
000000000000d8e2	jbe	0xd8f2
000000000000d8e4	incq	%rax
000000000000d8e7	addq	$0x4, %rbx
000000000000d8eb	cmpl	$0x3, %eax
000000000000d8ee	jb	0xd8e0
000000000000d8f0	jmp	0xd909
000000000000d8f2	movl	-0x10(%rsp,%rax,4), %esi
000000000000d8f6	leal	0x1(%rsi), %ebx
000000000000d8f9	movl	%ebx, -0x10(%rsp,%rax,4)
000000000000d8fd	cmpl	%ecx, %esi
000000000000d8ff	cmovgel	%ebx, %ecx
000000000000d902	cmovll	%r11d, %eax
000000000000d906	movl	%eax, %r11d
000000000000d909	incq	%rdi
000000000000d90c	cmpq	%r10, %rdi
000000000000d90f	jne	0xd8d8
000000000000d911	movslq	%r11d, %rax
000000000000d914	leaq	_posix_spawnattr_set_jetsam_ttr_np.relaunch_jetsam_flags(%rip), %rcx
000000000000d91b	movzwl	(%rcx,%rax,4), %eax
000000000000d91f	orw	%ax, 0x40(%r8)
000000000000d924	xorl	%eax, %eax
000000000000d926	popq	%rbx
000000000000d927	retq
_stackshot_config_create:
000000000000d928	pushq	%rbp
000000000000d929	movq	%rsp, %rbp
000000000000d92c	movl	$0x30, %edi
000000000000d931	callq	_malloc
000000000000d936	testq	%rax, %rax
000000000000d939	je	0xd951
000000000000d93b	movl	$0xffffffff, (%rax)
000000000000d941	xorl	%ecx, %ecx
000000000000d943	movq	%rcx, 0x14(%rax)
000000000000d947	movq	%rcx, 0xc(%rax)
000000000000d94b	movq	%rcx, 0x4(%rax)
000000000000d94f	jmp	0xd953
000000000000d951	xorl	%eax, %eax
000000000000d953	popq	%rbp
000000000000d954	retq
_stackshot_config_set_pid:
000000000000d955	testq	%rdi, %rdi
000000000000d958	je	0xd95f
000000000000d95a	movl	%esi, (%rdi)
000000000000d95c	xorl	%eax, %eax
000000000000d95e	retq
000000000000d95f	movl	$0x16, %eax
000000000000d964	retq
_stackshot_config_set_flags:
000000000000d965	testq	%rdi, %rdi
000000000000d968	je	0xd970
000000000000d96a	movl	%esi, 0x4(%rdi)
000000000000d96d	xorl	%eax, %eax
000000000000d96f	retq
000000000000d970	movl	$0x16, %eax
000000000000d975	retq
_stackshot_capture_with_config:
000000000000d976	pushq	%rbp
000000000000d977	movq	%rsp, %rbp
000000000000d97a	pushq	%r14
000000000000d97c	pushq	%rbx
000000000000d97d	movl	$0x16, %eax
000000000000d982	testq	%rdi, %rdi
000000000000d985	je	0xd9cc
000000000000d987	movq	%rdi, %rsi
000000000000d98a	cmpq	$0x0, 0x10(%rdi)
000000000000d98f	jne	0xd9cc
000000000000d991	leaq	0x10(%rsi), %r14
000000000000d995	movq	%r14, 0x20(%rsi)
000000000000d999	leaq	0x18(%rsi), %rbx
000000000000d99d	movq	%rbx, 0x28(%rsi)
000000000000d9a1	movl	$0x30, %edx
000000000000d9a6	movl	$0x1, %edi
000000000000d9ab	callq	___stack_snapshot_with_config
000000000000d9b0	testl	%eax, %eax
000000000000d9b2	je	0xd9ca
000000000000d9b4	callq	___error
000000000000d9b9	movl	(%rax), %eax
000000000000d9bb	movq	$0x0, (%r14)
000000000000d9c2	movl	$0x0, (%rbx)
000000000000d9c8	jmp	0xd9cc
000000000000d9ca	xorl	%eax, %eax
000000000000d9cc	popq	%rbx
000000000000d9cd	popq	%r14
000000000000d9cf	popq	%rbp
000000000000d9d0	retq
_stackshot_config_get_stackshot_buffer:
000000000000d9d1	testq	%rdi, %rdi
000000000000d9d4	je	0xd9db
000000000000d9d6	movq	0x10(%rdi), %rax
000000000000d9da	retq
000000000000d9db	xorl	%eax, %eax
000000000000d9dd	retq
_stackshot_config_get_stackshot_size:
000000000000d9de	movl	$0xffffffff, %eax
000000000000d9e3	testq	%rdi, %rdi
000000000000d9e6	je	0xd9f2
000000000000d9e8	cmpq	$0x0, 0x10(%rdi)
000000000000d9ed	je	0xd9f2
000000000000d9ef	movl	0x18(%rdi), %eax
000000000000d9f2	retq
_stackshot_config_set_size_hint:
000000000000d9f3	movl	$0xffffffff, %eax
000000000000d9f8	testq	%rdi, %rdi
000000000000d9fb	je	0xda04
000000000000d9fd	cmpq	$0x0, 0x10(%rdi)
000000000000da02	je	0xda05
000000000000da04	retq
000000000000da05	movl	%esi, 0x18(%rdi)
000000000000da08	xorl	%eax, %eax
000000000000da0a	retq
_stackshot_config_set_delta_timestamp:
000000000000da0b	movl	$0xffffffff, %eax
000000000000da10	testq	%rdi, %rdi
000000000000da13	je	0xda1c
000000000000da15	cmpq	$0x0, 0x10(%rdi)
000000000000da1a	je	0xda1d
000000000000da1c	retq
000000000000da1d	movq	%rsi, 0x8(%rdi)
000000000000da21	xorl	%eax, %eax
000000000000da23	retq
_stackshot_config_dealloc_buffer:
000000000000da24	testq	%rdi, %rdi
000000000000da27	je	0xda69
000000000000da29	pushq	%rbp
000000000000da2a	movq	%rsp, %rbp
000000000000da2d	pushq	%rbx
000000000000da2e	pushq	%rax
000000000000da2f	movq	%rdi, %rbx
000000000000da32	movl	0x18(%rdi), %edx
000000000000da35	testq	%rdx, %rdx
000000000000da38	je	0xda51
000000000000da3a	movq	0x10(%rbx), %rsi
000000000000da3e	testq	%rsi, %rsi
000000000000da41	je	0xda51
000000000000da43	leaq	_mach_task_self_(%rip), %rax
000000000000da4a	movl	(%rax), %edi
000000000000da4c	callq	_mach_vm_deallocate
000000000000da51	movq	$0x0, 0x10(%rbx)
000000000000da59	movl	$0x0, 0x18(%rbx)
000000000000da60	xorl	%eax, %eax
000000000000da62	addq	$0x8, %rsp
000000000000da66	popq	%rbx
000000000000da67	popq	%rbp
000000000000da68	retq
000000000000da69	movl	$0x16, %eax
000000000000da6e	retq
_stackshot_config_dealloc:
000000000000da6f	testq	%rdi, %rdi
000000000000da72	je	0xdaad
000000000000da74	pushq	%rbp
000000000000da75	movq	%rsp, %rbp
000000000000da78	pushq	%rbx
000000000000da79	pushq	%rax
000000000000da7a	movq	%rdi, %rbx
000000000000da7d	movl	0x18(%rdi), %edx
000000000000da80	testq	%rdx, %rdx
000000000000da83	je	0xda9c
000000000000da85	movq	0x10(%rbx), %rsi
000000000000da89	testq	%rsi, %rsi
000000000000da8c	je	0xda9c
000000000000da8e	leaq	_mach_task_self_(%rip), %rax
000000000000da95	movl	(%rax), %edi
000000000000da97	callq	_mach_vm_deallocate
000000000000da9c	movq	%rbx, %rdi
000000000000da9f	callq	_free
000000000000daa4	xorl	%eax, %eax
000000000000daa6	addq	$0x8, %rsp
000000000000daaa	popq	%rbx
000000000000daab	popq	%rbp
000000000000daac	retq
000000000000daad	movl	$0x16, %eax
000000000000dab2	retq
_terminate_with_payload:
000000000000dab3	jmp	___terminate_with_payload
_system_get_sfi_window:
000000000000dab8	movq	%rdi, %rcx
000000000000dabb	movl	$0x2, %edi
000000000000dac0	xorl	%esi, %esi
000000000000dac2	xorl	%edx, %edx
000000000000dac4	jmp	___sfi_ctl
_sfi_get_class_offtime:
000000000000dac9	movq	%rsi, %rcx
000000000000dacc	movl	%edi, %esi
000000000000dace	movl	$0x4, %edi
000000000000dad3	xorl	%edx, %edx
000000000000dad5	jmp	___sfi_ctl
_sfi_process_set_flags:
000000000000dada	movl	%esi, %edx
000000000000dadc	movl	%edi, %esi
000000000000dade	movl	$0x1, %edi
000000000000dae3	xorl	%ecx, %ecx
000000000000dae5	jmp	___sfi_pidctl
_sfi_process_get_flags:
000000000000daea	movq	%rsi, %rcx
000000000000daed	movl	%edi, %esi
000000000000daef	movl	$0x2, %edi
000000000000daf4	xorl	%edx, %edx
000000000000daf6	jmp	___sfi_pidctl
000000000000dafb	nop
_os_channel_create_extended:
000000000000dafc	pushq	%rbp
000000000000dafd	movq	%rsp, %rbp
000000000000db00	pushq	%r15
000000000000db02	pushq	%r14
000000000000db04	pushq	%r13
000000000000db06	pushq	%r12
000000000000db08	pushq	%rbx
000000000000db09	subq	$0x98, %rsp
000000000000db10	movl	$0x16, %r14d
000000000000db16	cmpl	$0x2, %edx
000000000000db19	ja	0xde8a
000000000000db1f	movl	%ecx, %r13d
000000000000db22	movl	%edx, %r15d
000000000000db25	movl	%esi, %ebx
000000000000db27	movq	%rdi, %r12
000000000000db2a	movq	%r8, -0x58(%rbp)
000000000000db2e	movl	$0x180, %edi
000000000000db33	callq	_malloc
000000000000db38	testq	%rax, %rax
000000000000db3b	je	0xdc78
000000000000db41	movl	$0x180, %esi
000000000000db46	movq	%rax, -0x30(%rbp)
000000000000db4a	movq	%rax, %rdi
000000000000db4d	callq	_bzero
000000000000db52	leaq	-0xb8(%rbp), %r14
000000000000db59	movl	$0x48, %esi
000000000000db5e	movq	%r14, %rdi
000000000000db61	callq	_bzero
000000000000db66	movl	$0x1, (%r14)
000000000000db6d	movq	-0x58(%rbp), %rsi
000000000000db71	testq	%rsi, %rsi
000000000000db74	je	0xdc0f
000000000000db7a	cmpl	$0x0, 0x1c(%rsi)
000000000000db7e	je	0xdb87
000000000000db80	orb	$0x2, -0xb3(%rbp)
000000000000db87	movl	0x60(%rsi), %eax
000000000000db8a	testl	%eax, %eax
000000000000db8c	je	0xdb95
000000000000db8e	orb	$0x8, -0xb4(%rbp)
000000000000db95	cmpl	$0x0, 0x68(%rsi)
000000000000db99	je	0xdba2
000000000000db9b	orb	$0x10, -0xb4(%rbp)
000000000000dba2	cmpl	$0x0, 0x70(%rsi)
000000000000dba6	je	0xdbb7
000000000000dba8	testl	%eax, %eax
000000000000dbaa	je	0xde48
000000000000dbb0	orb	$0x40, -0xb4(%rbp)
000000000000dbb7	movl	0x20(%rsi), %eax
000000000000dbba	testl	%eax, %eax
000000000000dbbc	je	0xdbe3
000000000000dbbe	cmpl	$0x2, %r15d
000000000000dbc2	ja	0xdbd7
000000000000dbc4	movslq	%r15d, %rcx
000000000000dbc7	leaq	0x150c2(%rip), %rdx
000000000000dbce	movl	(%rdx,%rcx,4), %ecx
000000000000dbd1	orl	%ecx, -0xb4(%rbp)
000000000000dbd7	cmpl	$0x1, %eax
000000000000dbda	jne	0xdbe3
000000000000dbdc	orb	$0x4, -0xb4(%rbp)
000000000000dbe3	cmpl	$0x0, 0x6c(%rsi)
000000000000dbe7	je	0xdbf0
000000000000dbe9	orb	$0x20, -0xb4(%rbp)
000000000000dbf0	movl	0x24(%rsi), %eax
000000000000dbf3	movl	%eax, -0x90(%rbp)
000000000000dbf9	movq	0x28(%rsi), %rax
000000000000dbfd	movq	%rax, -0x98(%rbp)
000000000000dc04	movups	0x30(%rsi), %xmm0
000000000000dc08	movups	%xmm0, -0x88(%rbp)
000000000000dc0f	leaq	-0xa8(%rbp), %rsi
000000000000dc16	movl	%r13d, -0x8(%rsi)
000000000000dc1a	movl	%ebx, -0x4(%rsi)
000000000000dc1d	movl	$0x10, %edx
000000000000dc22	movq	%r12, %rdi
000000000000dc25	callq	_bcopy
000000000000dc2a	leaq	-0xb8(%rbp), %rdi
000000000000dc31	movl	$0x48, %esi
000000000000dc36	callq	___channel_open
000000000000dc3b	movl	%eax, %r13d
000000000000dc3e	cmpl	$-0x1, %eax
000000000000dc41	je	0xdc58
000000000000dc43	movl	%r13d, %edi
000000000000dc46	movq	-0x30(%rbp), %rsi
000000000000dc4a	movl	$0x180, %edx
000000000000dc4f	callq	___channel_get_info
000000000000dc54	testl	%eax, %eax
000000000000dc56	je	0xdc8e
000000000000dc58	callq	___error
000000000000dc5d	movl	(%rax), %r14d
000000000000dc60	testl	%r14d, %r14d
000000000000dc63	je	0xde92
000000000000dc69	cmpl	$-0x1, %r13d
000000000000dc6d	jne	0xde75
000000000000dc73	jmp	0xde81
000000000000dc78	callq	___error
000000000000dc7d	movl	$0xc, (%rax)
000000000000dc83	movl	$0xc, %r14d
000000000000dc89	jmp	0xde8a
000000000000dc8e	movq	-0x30(%rbp), %rsi
000000000000dc92	movq	0x120(%rsi), %rdx
000000000000dc99	movq	0x128(%rsi), %rdi
000000000000dca0	movl	0x130(%rsi), %r11d
000000000000dca7	movl	0x134(%rsi), %r10d
000000000000dcae	movl	0x138(%rsi), %r9d
000000000000dcb5	movl	0x13c(%rsi), %r8d
000000000000dcbc	movl	0x120(%rdi,%rdx), %ebx
000000000000dcc3	movl	0x124(%rdi,%rdx), %ecx
000000000000dcca	addl	%ebx, %ebx
000000000000dccc	movl	-0xb4(%rbp), %eax
000000000000dcd2	testb	$0x8, %al
000000000000dcd4	jne	0xde50
000000000000dcda	testb	$0x40, %al
000000000000dcdc	je	0xdcf6
000000000000dcde	movl	$0x6, %r14d
000000000000dce4	testl	%ecx, %ecx
000000000000dce6	je	0xde6d
000000000000dcec	testb	$0x40, 0x10(%rsi)
000000000000dcf0	je	0xde6d
000000000000dcf6	movq	%rdx, -0x60(%rbp)
000000000000dcfa	movq	%rdi, %r14
000000000000dcfd	movl	$0x1, %esi
000000000000dd02	movl	$0x1, %r15d
000000000000dd08	movl	%r11d, -0x38(%rbp)
000000000000dd0c	subl	%r11d, %r15d
000000000000dd0f	movq	%r10, -0x50(%rbp)
000000000000dd13	addl	%r10d, %r15d
000000000000dd16	movl	%r9d, -0x34(%rbp)
000000000000dd1a	subl	%r9d, %esi
000000000000dd1d	movq	%r8, -0x48(%rbp)
000000000000dd21	addl	%r8d, %esi
000000000000dd24	movq	%rsi, -0x68(%rbp)
000000000000dd28	leal	(%rsi,%r15), %eax
000000000000dd2c	movq	%rbx, -0x40(%rbp)
000000000000dd30	addl	%ebx, %eax
000000000000dd32	movq	%rcx, -0x70(%rbp)
000000000000dd36	addl	%ecx, %eax
000000000000dd38	leaq	(%rax,%rax,4), %rbx
000000000000dd3c	shlq	$0x4, %rbx
000000000000dd40	addq	$0x40, %rbx
000000000000dd44	movq	%rbx, %rdi
000000000000dd47	callq	_malloc
000000000000dd4c	testq	%rax, %rax
000000000000dd4f	je	0xde67
000000000000dd55	movq	%rax, %r12
000000000000dd58	addq	-0x60(%rbp), %r14
000000000000dd5c	movq	%rax, %rdi
000000000000dd5f	movq	%rbx, %rsi
000000000000dd62	callq	_bzero
000000000000dd67	movl	%r13d, (%r12)
000000000000dd6b	movq	-0x78(%rbp), %rax
000000000000dd6f	movq	%rax, 0x8(%r12)
000000000000dd74	movq	-0x30(%rbp), %rax
000000000000dd78	movq	%rax, 0x10(%r12)
000000000000dd7d	leaq	0x18(%r12), %rax
000000000000dd82	movq	%rax, -0x30(%rbp)
000000000000dd86	movq	%r14, 0x18(%r12)
000000000000dd8b	mfence
000000000000dd8e	movq	0x18(%r12), %rax
000000000000dd93	cmpl	$0xb, (%rax)
000000000000dd96	jne	0xdfee
000000000000dd9c	movl	0x140(%rax), %ecx
000000000000dda2	movl	%ecx, 0x38(%r12)
000000000000dda7	movl	0x144(%rax), %ecx
000000000000ddad	movl	%ecx, 0x3c(%r12)
000000000000ddb2	movq	0x148(%rax), %rcx
000000000000ddb9	testq	%rcx, %rcx
000000000000ddbc	movq	-0x58(%rbp), %rsi
000000000000ddc0	je	0xddd3
000000000000ddc2	movq	0x10(%r12), %rdx
000000000000ddc7	addq	0x120(%rdx), %rcx
000000000000ddce	movq	%rcx, 0x20(%r12)
000000000000ddd3	movq	0x130(%rax), %rcx
000000000000ddda	testq	%rcx, %rcx
000000000000dddd	je	0xddf0
000000000000dddf	movq	0x10(%r12), %rdx
000000000000dde4	addq	0x120(%rdx), %rcx
000000000000ddeb	movq	%rcx, 0x28(%r12)
000000000000ddf0	movq	0x158(%rax), %rdx
000000000000ddf7	testq	%rdx, %rdx
000000000000ddfa	je	0xdece
000000000000de00	movq	0x10(%r12), %rcx
000000000000de05	movq	0x120(%rcx), %rdi
000000000000de0c	leaq	(%rdi,%rdx), %rcx
000000000000de10	movq	%rcx, 0x30(%r12)
000000000000de15	cmpw	$0x1, (%rdi,%rdx)
000000000000de1a	je	0xde26
000000000000de1c	cmpl	$0x0, 0x4(%rax)
000000000000de20	js	0xdff7
000000000000de26	movl	0x4(%rcx), %edx
000000000000de29	cmpl	$0x2, %edx
000000000000de2c	jne	0xdeaa
000000000000de2e	cmpq	$0x1, 0x8(%rcx)
000000000000de33	je	0xdece
000000000000de39	cmpl	$0x0, 0x4(%rax)
000000000000de3d	jns	0xdece
000000000000de43	callq	_os_channel_create_extended.cold.1
000000000000de48	movl	$0x16, %r14d
000000000000de4e	jmp	0xde81
000000000000de50	movl	$0x6, %r14d
000000000000de56	cmpl	$0x2, %ebx
000000000000de59	jne	0xde6d
000000000000de5b	testb	$0x8, 0x10(%rsi)
000000000000de5f	jne	0xdcda
000000000000de65	jmp	0xde6d
000000000000de67	movl	$0xc, %r14d
000000000000de6d	callq	___error
000000000000de72	movl	%r14d, (%rax)
000000000000de75	leaq	-0x78(%rbp), %rsi
000000000000de79	movl	%r13d, %edi
000000000000de7c	callq	_guarded_close_np
000000000000de81	movq	-0x30(%rbp), %rdi
000000000000de85	callq	_free
000000000000de8a	callq	___error
000000000000de8f	movl	%r14d, (%rax)
000000000000de92	xorl	%r12d, %r12d
000000000000de95	movq	%r12, %rax
000000000000de98	addq	$0x98, %rsp
000000000000de9f	popq	%rbx
000000000000dea0	popq	%r12
000000000000dea2	popq	%r13
000000000000dea4	popq	%r14
000000000000dea6	popq	%r15
000000000000dea8	popq	%rbp
000000000000dea9	retq
000000000000deaa	movl	0x4(%rcx), %edx
000000000000dead	cmpl	$0x1, %edx
000000000000deb0	jne	0xdec4
000000000000deb2	cmpq	$0x1, 0x8(%rcx)
000000000000deb7	je	0xdece
000000000000deb9	cmpl	$0x0, 0x4(%rax)
000000000000debd	jns	0xdece
000000000000debf	callq	_os_channel_create_extended.cold.2
000000000000dec4	cmpl	$0x0, 0x4(%rax)
000000000000dec8	js	0xdffc
000000000000dece	testq	%rsi, %rsi
000000000000ded1	je	0xdedb
000000000000ded3	movq	%r12, %rdi
000000000000ded6	callq	_os_channel_info2attr
000000000000dedb	testl	%r15d, %r15d
000000000000dede	je	0xdf03
000000000000dee0	leaq	0x40(%r12), %r14
000000000000dee5	movl	%r15d, %r13d
000000000000dee8	xorl	%ebx, %ebx
000000000000deea	movq	%r14, %rdi
000000000000deed	movq	%r12, %rsi
000000000000def0	movl	%ebx, %edx
000000000000def2	callq	_os_channel_init_ring
000000000000def7	incq	%rbx
000000000000defa	addq	$0x50, %r14
000000000000defe	cmpq	%rbx, %r13
000000000000df01	jne	0xdeea
000000000000df03	movq	-0x68(%rbp), %rax
000000000000df07	testl	%eax, %eax
000000000000df09	je	0xdf33
000000000000df0b	leaq	0x40(%r12), %r14
000000000000df10	movl	%eax, %ebx
000000000000df12	movl	%r15d, %eax
000000000000df15	leaq	(%rax,%rax,4), %rdi
000000000000df19	shlq	$0x4, %rdi
000000000000df1d	addq	%r14, %rdi
000000000000df20	movq	%r12, %rsi
000000000000df23	movl	%r15d, %edx
000000000000df26	callq	_os_channel_init_ring
000000000000df2b	incl	%r15d
000000000000df2e	decq	%rbx
000000000000df31	jne	0xdf12
000000000000df33	cmpl	$0x0, -0x40(%rbp)
000000000000df37	je	0xdf72
000000000000df39	leaq	0x40(%r12), %r14
000000000000df3e	movl	-0x40(%rbp), %r15d
000000000000df42	movq	-0x50(%rbp), %rax
000000000000df46	movq	-0x48(%rbp), %rcx
000000000000df4a	leal	0x2(%rax,%rcx), %ebx
000000000000df4e	subl	-0x38(%rbp), %ebx
000000000000df51	subl	-0x34(%rbp), %ebx
000000000000df54	movl	%ebx, %eax
000000000000df56	leaq	(%rax,%rax,4), %rdi
000000000000df5a	shlq	$0x4, %rdi
000000000000df5e	addq	%r14, %rdi
000000000000df61	movq	%r12, %rsi
000000000000df64	movl	%ebx, %edx
000000000000df66	callq	_os_channel_init_ring
000000000000df6b	incl	%ebx
000000000000df6d	decq	%r15
000000000000df70	jne	0xdf54
000000000000df72	movq	-0x70(%rbp), %r15
000000000000df76	testl	%r15d, %r15d
000000000000df79	je	0xdfb5
000000000000df7b	movq	%r12, %r14
000000000000df7e	addq	$0x40, %r14
000000000000df82	movq	-0x50(%rbp), %rax
000000000000df86	addl	-0x48(%rbp), %eax
000000000000df89	movq	-0x40(%rbp), %rcx
000000000000df8d	leal	0x2(%rcx,%rax), %ebx
000000000000df91	subl	-0x38(%rbp), %ebx
000000000000df94	subl	-0x34(%rbp), %ebx
000000000000df97	movl	%ebx, %eax
000000000000df99	leaq	(%rax,%rax,4), %rdi
000000000000df9d	shlq	$0x4, %rdi
000000000000dfa1	addq	%r14, %rdi
000000000000dfa4	movq	%r12, %rsi
000000000000dfa7	movl	%ebx, %edx
000000000000dfa9	callq	_os_channel_init_ring
000000000000dfae	incl	%ebx
000000000000dfb0	decq	%r15
000000000000dfb3	jne	0xdf97
000000000000dfb5	testb	$0x8, -0xb4(%rbp)
000000000000dfbc	je	0xdfc7
000000000000dfbe	movl	$0x3, 0x4(%r12)
000000000000dfc7	cmpq	$0x0, 0x21d01(%rip)
000000000000dfcf	jne	0xdfe6
000000000000dfd1	movq	-0x30(%rbp), %rax
000000000000dfd5	movq	(%rax), %rax
000000000000dfd8	movq	0x138(%rax), %rax
000000000000dfdf	movq	%rax, ___os_ch_md_redzone_cookie(%rip)
000000000000dfe6	mfence
000000000000dfe9	jmp	0xde95
000000000000dfee	movq	-0x30(%rbp), %rdi
000000000000dff2	callq	_os_channel_create_extended.cold.5
000000000000dff7	callq	_os_channel_create_extended.cold.4
000000000000dffc	callq	_os_channel_create_extended.cold.3
_os_channel_info2attr:
000000000000e001	pushq	%rbp
000000000000e002	movq	%rsp, %rbp
000000000000e005	pushq	%r15
000000000000e007	pushq	%r14
000000000000e009	pushq	%r13
000000000000e00b	pushq	%r12
000000000000e00d	pushq	%rbx
000000000000e00e	pushq	%rax
000000000000e00f	movq	%rsi, %rbx
000000000000e012	movq	%rdi, %r14
000000000000e015	movq	0x10(%rdi), %r15
000000000000e019	movl	0x24(%rsi), %r12d
000000000000e01d	movq	0x28(%rsi), %r13
000000000000e021	movl	$0x78, %esi
000000000000e026	movq	%rbx, %rdi
000000000000e029	callq	_bzero
000000000000e02e	movq	0x10(%r14), %rcx
000000000000e032	movups	0x98(%rcx), %xmm0
000000000000e039	movups	%xmm0, (%rbx)
000000000000e03c	movl	0xa8(%rcx), %eax
000000000000e042	movl	%eax, 0x10(%rbx)
000000000000e045	movl	0xac(%rcx), %eax
000000000000e04b	movl	%eax, 0x14(%rbx)
000000000000e04e	movl	0xb0(%rcx), %eax
000000000000e054	movl	%eax, 0x18(%rbx)
000000000000e057	movl	0xc4(%rcx), %eax
000000000000e05d	movl	%eax, 0x50(%rbx)
000000000000e060	movl	0x10(%r15), %eax
000000000000e064	movl	%eax, %edx
000000000000e066	shrl	$0x9, %edx
000000000000e069	andl	$0x1, %edx
000000000000e06c	movl	%edx, 0x1c(%rbx)
000000000000e06f	movl	%eax, %edx
000000000000e071	shrl	$0x3, %edx
000000000000e074	andl	$0x1, %edx
000000000000e077	movl	%edx, 0x60(%rbx)
000000000000e07a	movl	%eax, %edx
000000000000e07c	shrl	$0x4, %edx
000000000000e07f	andl	$0x1, %edx
000000000000e082	movl	%edx, 0x68(%rbx)
000000000000e085	movl	0xd0(%rcx), %ecx
000000000000e08b	movl	%ecx, 0x64(%rbx)
000000000000e08e	testb	$0x3, %al
000000000000e090	je	0xe0a1
000000000000e092	andl	$0x4, %eax
000000000000e095	movl	$0x1, %ecx
000000000000e09a	cmpl	%ecx, %eax
000000000000e09c	adcl	$0x0, %ecx
000000000000e09f	jmp	0xe0a3
000000000000e0a1	xorl	%ecx, %ecx
000000000000e0a3	movl	%ecx, 0x20(%rbx)
000000000000e0a6	movl	%r12d, 0x24(%rbx)
000000000000e0aa	movq	%r13, 0x28(%rbx)
000000000000e0ae	movq	0x140(%r15), %rax
000000000000e0b5	movq	%rax, 0x30(%rbx)
000000000000e0b9	movq	0x148(%r15), %rax
000000000000e0c0	movq	%rax, 0x38(%rbx)
000000000000e0c4	movq	0x10(%r14), %rax
000000000000e0c8	movl	0x84(%rax), %ecx
000000000000e0ce	movl	%ecx, 0x40(%rbx)
000000000000e0d1	movl	0xb8(%rax), %ecx
000000000000e0d7	movl	%ecx, 0x44(%rbx)
000000000000e0da	movl	0xbc(%rax), %ecx
000000000000e0e0	movl	%ecx, 0x48(%rbx)
000000000000e0e3	movl	0xc0(%rax), %ecx
000000000000e0e9	movl	%ecx, 0x4c(%rbx)
000000000000e0ec	movl	0x38(%r14), %ecx
000000000000e0f0	movl	%ecx, 0x54(%rbx)
000000000000e0f3	movl	0x3c(%r14), %ecx
000000000000e0f7	movl	%ecx, 0x58(%rbx)
000000000000e0fa	movl	0x10(%r15), %ecx
000000000000e0fe	shrl	$0x6, %ecx
000000000000e101	andl	$0x1, %ecx
000000000000e104	movl	%ecx, 0x70(%rbx)
000000000000e107	movl	0xcc(%rax), %eax
000000000000e10d	andl	$0x1, %eax
000000000000e110	movl	%eax, 0x5c(%rbx)
000000000000e113	addq	$0x8, %rsp
000000000000e117	popq	%rbx
000000000000e118	popq	%r12
000000000000e11a	popq	%r13
000000000000e11c	popq	%r14
000000000000e11e	popq	%r15
000000000000e120	popq	%rbp
000000000000e121	retq
_os_channel_init_ring:
000000000000e122	pushq	%rbp
000000000000e123	movq	%rsp, %rbp
000000000000e126	movq	0x18(%rsi), %rax
000000000000e12a	movl	%edx, %ecx
000000000000e12c	shlq	$0x4, %rcx
000000000000e130	movq	0x160(%rax,%rcx), %rdx
000000000000e138	addq	%rax, %rdx
000000000000e13b	je	0xe1c1
000000000000e141	movq	0x168(%rax,%rcx), %r10
000000000000e149	addq	%rax, %r10
000000000000e14c	je	0xe1c1
000000000000e14e	movl	0x140(%rax), %r8d
000000000000e155	leal	-0x1(%r8), %ecx
000000000000e159	cmpl	$0x2, %ecx
000000000000e15c	jae	0xe1c6
000000000000e15e	movl	0x144(%rax), %r9d
000000000000e165	leal	-0x1(%r9), %ecx
000000000000e169	cmpl	$0x2, %ecx
000000000000e16c	jae	0xe1ce
000000000000e16e	movq	%r10, 0x18(%rdi)
000000000000e172	addq	$0x4, %rax
000000000000e176	movq	%rax, 0x8(%rdi)
000000000000e17a	movq	%rsi, (%rdi)
000000000000e17d	movq	%rdx, 0x10(%rdi)
000000000000e181	movl	%r8d, 0x20(%rdi)
000000000000e185	movl	%r9d, 0x24(%rdi)
000000000000e189	movq	0x10(%rsi), %rax
000000000000e18d	movq	0x120(%rax), %rcx
000000000000e194	movq	%rcx, 0x28(%rdi)
000000000000e198	movq	0x20(%rdx), %rcx
000000000000e19c	addq	%rdx, %rcx
000000000000e19f	movq	%rcx, 0x30(%rdi)
000000000000e1a3	movq	0x28(%rdx), %rcx
000000000000e1a7	addq	%rdx, %rcx
000000000000e1aa	movq	%rcx, 0x38(%rdi)
000000000000e1ae	addq	0x30(%rdx), %rdx
000000000000e1b2	movq	%rdx, 0x40(%rdi)
000000000000e1b6	movl	0x114(%rax), %eax
000000000000e1bc	movl	%eax, 0x48(%rdi)
000000000000e1bf	popq	%rbp
000000000000e1c0	retq
000000000000e1c1	callq	_os_channel_init_ring.cold.1
000000000000e1c6	movl	%r8d, %edi
000000000000e1c9	callq	_os_channel_init_ring.cold.3
000000000000e1ce	movl	%r9d, %edi
000000000000e1d1	callq	_os_channel_init_ring.cold.2
_os_channel_create:
000000000000e1d6	xorl	%edx, %edx
000000000000e1d8	movl	$0xffffffff, %ecx
000000000000e1dd	xorl	%r8d, %r8d
000000000000e1e0	jmp	_os_channel_create_extended
_os_channel_get_fd:
000000000000e1e5	movl	(%rdi), %eax
000000000000e1e7	retq
_os_channel_read_attr:
000000000000e1e8	pushq	%rbp
000000000000e1e9	movq	%rsp, %rbp
000000000000e1ec	pushq	%r15
000000000000e1ee	pushq	%r14
000000000000e1f0	pushq	%rbx
000000000000e1f1	pushq	%rax
000000000000e1f2	movq	%rsi, %r14
000000000000e1f5	movq	%rdi, %r15
000000000000e1f8	movl	(%rdi), %edi
000000000000e1fa	movq	0x10(%r15), %rsi
000000000000e1fe	movl	$0x180, %edx
000000000000e203	callq	___channel_get_info
000000000000e208	movl	%eax, %ebx
000000000000e20a	testl	%eax, %eax
000000000000e20c	jne	0xe219
000000000000e20e	movq	%r15, %rdi
000000000000e211	movq	%r14, %rsi
000000000000e214	callq	_os_channel_info2attr
000000000000e219	movl	%ebx, %eax
000000000000e21b	addq	$0x8, %rsp
000000000000e21f	popq	%rbx
000000000000e220	popq	%r14
000000000000e222	popq	%r15
000000000000e224	popq	%rbp
000000000000e225	retq
_os_channel_write_attr:
000000000000e226	pushq	%rbp
000000000000e227	movq	%rsp, %rbp
000000000000e22a	pushq	%r15
000000000000e22c	pushq	%r14
000000000000e22e	pushq	%rbx
000000000000e22f	pushq	%rax
000000000000e230	movq	%rsi, %rbx
000000000000e233	movq	%rdi, %r14
000000000000e236	movq	0x10(%rdi), %rax
000000000000e23a	movl	0x140(%rax), %ecx
000000000000e240	cmpl	0x30(%rsi), %ecx
000000000000e243	jne	0xe250
000000000000e245	movl	0x144(%rax), %ecx
000000000000e24b	cmpl	0x34(%rbx), %ecx
000000000000e24e	je	0xe27f
000000000000e250	leaq	0x30(%rbx), %r15
000000000000e254	movl	(%r14), %edi
000000000000e257	movl	$0x1, %esi
000000000000e25c	movq	%r15, %rdx
000000000000e25f	movl	$0x8, %ecx
000000000000e264	callq	___channel_set_opt
000000000000e269	testl	%eax, %eax
000000000000e26b	jne	0xe2c4
000000000000e26d	movq	0x10(%r14), %rax
000000000000e271	movq	(%r15), %rcx
000000000000e274	movq	%rcx, 0x140(%rax)
000000000000e27b	movq	0x10(%r14), %rax
000000000000e27f	movl	0x148(%rax), %ecx
000000000000e285	cmpl	0x38(%rbx), %ecx
000000000000e288	jne	0xe297
000000000000e28a	movl	0x14c(%rax), %ecx
000000000000e290	xorl	%eax, %eax
000000000000e292	cmpl	0x3c(%rbx), %ecx
000000000000e295	je	0xe2c4
000000000000e297	addq	$0x38, %rbx
000000000000e29b	movl	(%r14), %edi
000000000000e29e	movl	$0x2, %esi
000000000000e2a3	movq	%rbx, %rdx
000000000000e2a6	movl	$0x8, %ecx
000000000000e2ab	callq	___channel_set_opt
000000000000e2b0	testl	%eax, %eax
000000000000e2b2	jne	0xe2c4
000000000000e2b4	movq	0x10(%r14), %rax
000000000000e2b8	movq	(%rbx), %rcx
000000000000e2bb	movq	%rcx, 0x148(%rax)
000000000000e2c2	xorl	%eax, %eax
000000000000e2c4	addq	$0x8, %rsp
000000000000e2c8	popq	%rbx
000000000000e2c9	popq	%r14
000000000000e2cb	popq	%r15
000000000000e2cd	popq	%rbp
000000000000e2ce	retq
_os_channel_read_nexus_extension_info:
000000000000e2cf	movq	0x10(%rdi), %rax
000000000000e2d3	testq	%rsi, %rsi
000000000000e2d6	je	0xe2e0
000000000000e2d8	movl	0x84(%rax), %ecx
000000000000e2de	movl	%ecx, (%rsi)
000000000000e2e0	testq	%rdx, %rdx
000000000000e2e3	je	0xe2ee
000000000000e2e5	movl	0xb8(%rax), %eax
000000000000e2eb	movq	%rax, (%rdx)
000000000000e2ee	xorl	%eax, %eax
000000000000e2f0	retq
_os_channel_sync:
000000000000e2f1	cmpl	$0x1, %esi
000000000000e2f4	ja	0xe30c
000000000000e2f6	movl	(%rdi), %eax
000000000000e2f8	movl	0x4(%rdi), %ecx
000000000000e2fb	movl	%ecx, %edx
000000000000e2fd	andl	$-0x2, %edx
000000000000e300	testl	%esi, %esi
000000000000e302	cmovel	%ecx, %edx
000000000000e305	movl	%eax, %edi
000000000000e307	jmp	___channel_sync
000000000000e30c	movl	$0x16, %eax
000000000000e311	retq
_os_channel_destroy:
000000000000e312	pushq	%rbp
000000000000e313	movq	%rsp, %rbp
000000000000e316	pushq	%rbx
000000000000e317	pushq	%rax
000000000000e318	movq	%rdi, %rbx
000000000000e31b	movl	(%rdi), %edi
000000000000e31d	cmpl	$-0x1, %edi
000000000000e320	je	0xe32b
000000000000e322	leaq	0x8(%rbx), %rsi
000000000000e326	callq	_guarded_close_np
000000000000e32b	movq	0x10(%rbx), %rdi
000000000000e32f	testq	%rdi, %rdi
000000000000e332	je	0xe341
000000000000e334	callq	_free
000000000000e339	movq	$0x0, 0x10(%rbx)
000000000000e341	movq	%rbx, %rdi
000000000000e344	addq	$0x8, %rsp
000000000000e348	popq	%rbx
000000000000e349	popq	%rbp
000000000000e34a	jmp	_free
_os_channel_is_defunct:
000000000000e34f	movq	0x18(%rdi), %rax
000000000000e353	movl	0x4(%rax), %eax
000000000000e356	notl	%eax
000000000000e358	shrl	$0x1f, %eax
000000000000e35b	retq
_os_channel_ring_id:
000000000000e35c	cmpl	$0x3, %esi
000000000000e35f	ja	0xe37e
000000000000e361	movq	0x10(%rdi), %rax
000000000000e365	movl	%esi, %ecx
000000000000e367	leaq	0x2e(%rip), %rdx
000000000000e36e	movslq	(%rdx,%rcx,4), %rcx
000000000000e372	addq	%rdx, %rcx
000000000000e375	jmpq	*%rcx
000000000000e377	movl	0x130(%rax), %eax
000000000000e37d	retq
000000000000e37e	movl	$0xffffffff, %eax
000000000000e383	retq
000000000000e384	movl	0x134(%rax), %eax
000000000000e38a	retq
000000000000e38b	movl	0x138(%rax), %eax
000000000000e391	retq
000000000000e392	movl	0x13c(%rax), %eax
000000000000e398	retq
000000000000e399	nopl	(%rax)
000000000000e39c	.byte 0xdb #bad opcode
000000000000e39d	.byte 0xff #bad opcode
000000000000e39e	.byte 0xff #bad opcode
000000000000e39f	.byte 0xff #bad opcode
000000000000e3a0	callq	0xfffffffff000e3a4
000000000000e3a5	.byte 0xff #bad opcode
000000000000e3a6	.byte 0xff #bad opcode
000000000000e3a7	pushq	%rsi
000000000000e3a9	.byte 0xff #bad opcode
000000000000e3aa	.byte 0xff #bad opcode
000000000000e3ab	decl	-0x75(%rax)
_os_channel_tx_ring:
000000000000e3ac	movq	0x10(%rdi), %rax
000000000000e3b0	movl	0x14(%rax), %ecx
000000000000e3b3	cmpl	$-0x1, %ecx
000000000000e3b6	je	0xe3bc
000000000000e3b8	cmpl	%esi, %ecx
000000000000e3ba	jne	0xe3de
000000000000e3bc	movl	0x130(%rax), %ecx
000000000000e3c2	cmpl	%esi, %ecx
000000000000e3c4	ja	0xe3de
000000000000e3c6	cmpl	%esi, 0x134(%rax)
000000000000e3cc	jb	0xe3de
000000000000e3ce	subl	%ecx, %esi
000000000000e3d0	leaq	(%rsi,%rsi,4), %rax
000000000000e3d4	shlq	$0x4, %rax
000000000000e3d8	leaq	0x40(%rdi,%rax), %rax
000000000000e3dd	retq
000000000000e3de	xorl	%eax, %eax
000000000000e3e0	retq
_os_channel_rx_ring:
000000000000e3e1	movq	0x10(%rdi), %rax
000000000000e3e5	movl	0x14(%rax), %ecx
000000000000e3e8	cmpl	$-0x1, %ecx
000000000000e3eb	je	0xe3f1
000000000000e3ed	cmpl	%esi, %ecx
000000000000e3ef	jne	0xe421
000000000000e3f1	movl	0x138(%rax), %ecx
000000000000e3f7	cmpl	%esi, %ecx
000000000000e3f9	ja	0xe421
000000000000e3fb	cmpl	%esi, 0x13c(%rax)
000000000000e401	jb	0xe421
000000000000e403	incl	%esi
000000000000e405	subl	%ecx, %esi
000000000000e407	subl	0x130(%rax), %esi
000000000000e40d	addl	0x134(%rax), %esi
000000000000e413	leaq	(%rsi,%rsi,4), %rax
000000000000e417	shlq	$0x4, %rax
000000000000e41b	leaq	0x40(%rdi,%rax), %rax
000000000000e420	retq
000000000000e421	xorl	%eax, %eax
000000000000e423	retq
_os_channel_pending:
000000000000e424	movq	0x10(%rdi), %rcx
000000000000e428	movl	(%rcx), %edx
000000000000e42a	xorl	%eax, %eax
000000000000e42c	cmpl	0x8(%rcx), %edx
000000000000e42f	setne	%al
000000000000e432	retq
_os_channel_ring_sync_time:
000000000000e433	movq	0x10(%rdi), %rax
000000000000e437	movq	0x38(%rax), %rax
000000000000e43b	retq
_os_channel_ring_notify_time:
000000000000e43c	movq	0x10(%rdi), %rax
000000000000e440	movq	0x40(%rax), %rax
000000000000e444	retq
_os_channel_available_slot_count:
000000000000e445	movq	0x10(%rdi), %rcx
000000000000e449	cmpw	$0x1, 0x1a(%rcx)
000000000000e44e	jne	0xe467
000000000000e450	movl	(%rcx), %edx
000000000000e452	movl	0xc(%rcx), %esi
000000000000e455	subl	0x8(%rcx), %edx
000000000000e458	movl	%edx, %eax
000000000000e45a	sarl	$0x1f, %eax
000000000000e45d	andl	%esi, %eax
000000000000e45f	addl	%edx, %eax
000000000000e461	notl	%eax
000000000000e463	addl	%esi, %eax
000000000000e465	jmp	0xe471
000000000000e467	movl	0x4(%rcx), %eax
000000000000e46a	subl	(%rcx), %eax
000000000000e46c	jns	0xe471
000000000000e46e	addl	0xc(%rcx), %eax
000000000000e471	movq	0x8(%rdi), %rcx
000000000000e475	xorl	%edx, %edx
000000000000e477	cmpl	%edx, (%rcx)
000000000000e479	cmovnsl	%edx, %eax
000000000000e47c	retq
_os_channel_advance_slot:
000000000000e47d	movq	0x10(%rdi), %rcx
000000000000e481	subq	0x18(%rdi), %rsi
000000000000e485	shrq	$0x3, %rsi
000000000000e489	movl	(%rcx), %eax
000000000000e48b	cmpl	0x4(%rcx), %eax
000000000000e48e	jbe	0xe4b2
000000000000e490	movl	0x4(%rcx), %eax
000000000000e493	cmpl	%esi, %eax
000000000000e495	ja	0xe4bf
000000000000e497	movl	(%rcx), %eax
000000000000e499	cmpl	%esi, %eax
000000000000e49b	ja	0xe4a2
000000000000e49d	cmpl	%esi, 0xc(%rcx)
000000000000e4a0	ja	0xe4bf
000000000000e4a2	movq	0x8(%rdi), %rax
000000000000e4a6	movl	(%rax), %eax
000000000000e4a8	shrl	$0x1b, %eax
000000000000e4ab	andl	$-0x10, %eax
000000000000e4ae	orl	$0x6, %eax
000000000000e4b1	retq
000000000000e4b2	movl	(%rcx), %eax
000000000000e4b4	cmpl	%esi, %eax
000000000000e4b6	ja	0xe4a2
000000000000e4b8	movl	0x4(%rcx), %eax
000000000000e4bb	cmpl	%esi, %eax
000000000000e4bd	jbe	0xe4a2
000000000000e4bf	incl	%esi
000000000000e4c1	xorl	%eax, %eax
000000000000e4c3	cmpl	0xc(%rcx), %esi
000000000000e4c6	cmovel	%eax, %esi
000000000000e4c9	movl	%esi, (%rcx)
000000000000e4cb	retq
_os_channel_get_next_slot:
000000000000e4cc	pushq	%rbp
000000000000e4cd	movq	%rsp, %rbp
000000000000e4d0	pushq	%r15
000000000000e4d2	pushq	%r14
000000000000e4d4	pushq	%rbx
000000000000e4d5	pushq	%rax
000000000000e4d6	movq	0x10(%rdi), %r14
000000000000e4da	testq	%rsi, %rsi
000000000000e4dd	je	0xe69a
000000000000e4e3	subq	0x18(%rdi), %rsi
000000000000e4e7	shrq	$0x3, %rsi
000000000000e4eb	movl	(%r14), %eax
000000000000e4ee	cmpl	0x4(%r14), %eax
000000000000e4f2	jbe	0xe51c
000000000000e4f4	movl	0x4(%r14), %eax
000000000000e4f8	cmpl	%esi, %eax
000000000000e4fa	ja	0xe52b
000000000000e4fc	movl	(%r14), %eax
000000000000e4ff	cmpl	%esi, %eax
000000000000e501	ja	0xe509
000000000000e503	cmpl	%esi, 0xc(%r14)
000000000000e507	ja	0xe52b
000000000000e509	movq	0x8(%rdi), %rax
000000000000e50d	cmpl	$0x0, (%rax)
000000000000e510	js	0xe70e
000000000000e516	movl	0x4(%r14), %r9d
000000000000e51a	jmp	0xe539
000000000000e51c	movl	(%r14), %eax
000000000000e51f	cmpl	%esi, %eax
000000000000e521	ja	0xe509
000000000000e523	movl	0x4(%r14), %eax
000000000000e527	cmpl	%esi, %eax
000000000000e529	jbe	0xe509
000000000000e52b	leal	0x1(%rsi), %eax
000000000000e52e	xorl	%r9d, %r9d
000000000000e531	cmpl	0xc(%r14), %eax
000000000000e535	cmovnel	%eax, %r9d
000000000000e539	cmpl	0x4(%r14), %r9d
000000000000e53d	je	0xe695
000000000000e543	movq	0x18(%rdi), %rsi
000000000000e547	movl	%r9d, %eax
000000000000e54a	leaq	(,%rax,8), %r8
000000000000e552	addq	%rsi, %r8
000000000000e555	je	0xe695
000000000000e55b	movzwl	0x1a(%r14), %r10d
000000000000e560	cmpw	$0x1, %r10w
000000000000e565	jne	0xe587
000000000000e567	movq	(%rdi), %rcx
000000000000e56a	movq	0x10(%rcx), %rcx
000000000000e56e	testb	$0x8, 0x10(%rcx)
000000000000e572	movzwl	0x4(%r8), %ecx
000000000000e577	jne	0xe6c9
000000000000e57d	testb	$0x1, %cl
000000000000e580	jne	0xe592
000000000000e582	jmp	0xe6a2
000000000000e587	testb	$0x1, 0x4(%r8)
000000000000e58c	je	0xe6a2
000000000000e592	movq	0x38(%rdi), %rcx
000000000000e596	movl	0x14(%r14), %ebx
000000000000e59a	imull	(%rsi,%rax,8), %ebx
000000000000e59e	leaq	0x10(%rcx,%rbx), %r15
000000000000e5a3	movq	-0x10(%r15), %rax
000000000000e5a7	movq	%r15, %rsi
000000000000e5aa	subq	%rcx, %rsi
000000000000e5ad	xorq	___os_ch_md_redzone_cookie(%rip), %rsi
000000000000e5b4	cmpq	%rsi, %rax
000000000000e5b7	jne	0xe6b4
000000000000e5bd	cmpl	$0x2, 0x20(%rdi)
000000000000e5c1	jne	0xe629
000000000000e5c3	movzwl	0x6a(%r15), %eax
000000000000e5c8	testw	%ax, %ax
000000000000e5cb	je	0xe6f2
000000000000e5d1	movzwl	0x68(%r15), %ecx
000000000000e5d6	testw	%cx, %cx
000000000000e5d9	je	0xe6f2
000000000000e5df	movzwl	%cx, %r11d
000000000000e5e3	cmpl	%r11d, 0x48(%rdi)
000000000000e5e7	jb	0xe6ff
000000000000e5ed	cmpw	%cx, %ax
000000000000e5f0	ja	0xe707
000000000000e5f6	movzwl	0x80(%r15), %r11d
000000000000e5fe	movl	0x10(%r14), %ecx
000000000000e602	leal	-0x1(%rax), %esi
000000000000e605	movzwl	%si, %esi
000000000000e608	leaq	(%rsi,%rsi,2), %rsi
000000000000e60c	leaq	0x78(%r15,%rsi,8), %rsi
000000000000e611	movl	(%rsi), %ebx
000000000000e613	imull	%ecx, %ebx
000000000000e616	addq	0x30(%rdi), %rbx
000000000000e61a	movq	%rbx, -0x8(%rsi)
000000000000e61e	addq	$-0x18, %rsi
000000000000e622	decw	%ax
000000000000e625	jne	0xe611
000000000000e627	jmp	0xe63f
000000000000e629	movl	0x10(%r14), %ebx
000000000000e62d	imull	0x20(%r15), %ebx
000000000000e632	movzwl	0x28(%r15), %r11d
000000000000e637	addq	0x30(%rdi), %rbx
000000000000e63b	movq	%rbx, 0x18(%r15)
000000000000e63f	testq	%rbx, %rbx
000000000000e642	je	0xe6fb
000000000000e648	testq	%rdx, %rdx
000000000000e64b	je	0xe67d
000000000000e64d	movzwl	%r11w, %eax
000000000000e651	addq	%rax, %rbx
000000000000e654	addq	$0x10, %r14
000000000000e658	cmpw	$0x1, %r10w
000000000000e65d	movl	%r9d, 0x4(%rdx)
000000000000e661	movw	$0x0, (%rdx)
000000000000e666	movq	%rbx, 0x10(%rdx)
000000000000e66a	movq	%r15, 0x18(%rdx)
000000000000e66e	leaq	0x10(%r15), %rax
000000000000e672	cmoveq	%r14, %rax
000000000000e676	movzwl	(%rax), %eax
000000000000e679	movw	%ax, 0x2(%rdx)
000000000000e67d	movq	0x8(%rdi), %rcx
000000000000e681	xorl	%eax, %eax
000000000000e683	cmpl	$0x0, (%rcx)
000000000000e686	cmovsq	%r8, %rax
000000000000e68a	addq	$0x8, %rsp
000000000000e68e	popq	%rbx
000000000000e68f	popq	%r14
000000000000e691	popq	%r15
000000000000e693	popq	%rbp
000000000000e694	retq
000000000000e695	xorl	%r8d, %r8d
000000000000e698	jmp	0xe67d
000000000000e69a	movl	(%r14), %r9d
000000000000e69d	jmp	0xe539
000000000000e6a2	movq	0x8(%rdi), %rcx
000000000000e6a6	cmpl	$0x0, (%rcx)
000000000000e6a9	jns	0xe592
000000000000e6af	callq	_os_channel_get_next_slot.cold.5
000000000000e6b4	movq	0x8(%rdi), %rcx
000000000000e6b8	cmpl	$0x0, (%rcx)
000000000000e6bb	jns	0xe5bd
000000000000e6c1	movq	%rax, %rdi
000000000000e6c4	callq	_os_channel_get_next_slot.cold.4
000000000000e6c9	testb	$0x1, %cl
000000000000e6cc	jne	0xe716
000000000000e6ce	testq	%rdx, %rdx
000000000000e6d1	je	0xe6e0
000000000000e6d3	movl	$0x0, (%rdx)
000000000000e6d9	xorps	%xmm0, %xmm0
000000000000e6dc	movups	%xmm0, 0x10(%rdx)
000000000000e6e0	movq	0x8(%rdi), %rax
000000000000e6e4	xorl	%ecx, %ecx
000000000000e6e6	cmpl	$0x0, (%rax)
000000000000e6e9	cmovnsq	%rcx, %r8
000000000000e6ed	movq	%r8, %rax
000000000000e6f0	jmp	0xe68a
000000000000e6f2	movq	0x8(%rdi), %rax
000000000000e6f6	cmpl	$0x0, (%rax)
000000000000e6f9	js	0xe71e
000000000000e6fb	xorl	%eax, %eax
000000000000e6fd	jmp	0xe68a
000000000000e6ff	movl	%r11d, %edi
000000000000e702	callq	_os_channel_get_next_slot.cold.2
000000000000e707	movl	%eax, %edi
000000000000e709	callq	_os_channel_get_next_slot.cold.3
000000000000e70e	movq	%rsi, %rdi
000000000000e711	callq	_os_channel_get_next_slot.cold.7
000000000000e716	movq	%rax, %rdi
000000000000e719	callq	_os_channel_get_next_slot.cold.6
000000000000e71e	callq	_os_channel_get_next_slot.cold.1
_os_channel_set_slot_properties:
000000000000e723	pushq	%rbp
000000000000e724	movq	%rsp, %rbp
000000000000e727	movq	0x10(%rdi), %rcx
000000000000e72b	movq	0x18(%rdi), %r8
000000000000e72f	subq	%r8, %rsi
000000000000e732	shrq	$0x3, %rsi
000000000000e736	movl	(%rcx), %eax
000000000000e738	cmpl	0x4(%rcx), %eax
000000000000e73b	jbe	0xe760
000000000000e73d	movl	0x4(%rcx), %eax
000000000000e740	cmpl	%esi, %eax
000000000000e742	ja	0xe76d
000000000000e744	movl	(%rcx), %eax
000000000000e746	cmpl	%esi, %eax
000000000000e748	ja	0xe74f
000000000000e74a	cmpl	%esi, 0xc(%rcx)
000000000000e74d	ja	0xe76d
000000000000e74f	movq	0x8(%rdi), %rax
000000000000e753	cmpl	$0x0, (%rax)
000000000000e756	jns	0xe7c3
000000000000e758	movq	%rsi, %rdi
000000000000e75b	callq	_os_channel_set_slot_properties.cold.3
000000000000e760	movl	(%rcx), %eax
000000000000e762	cmpl	%esi, %eax
000000000000e764	ja	0xe74f
000000000000e766	movl	0x4(%rcx), %eax
000000000000e769	cmpl	%esi, %eax
000000000000e76b	jbe	0xe74f
000000000000e76d	movq	0x18(%rdx), %rax
000000000000e771	movq	-0x10(%rax), %r9
000000000000e775	movq	0x38(%rdi), %r10
000000000000e779	subq	%r10, %rax
000000000000e77c	xorq	___os_ch_md_redzone_cookie(%rip), %rax
000000000000e783	cmpq	%rax, %r9
000000000000e786	jne	0xe7c5
000000000000e788	movl	%esi, %esi
000000000000e78a	testb	$0x1, 0x4(%r8,%rsi,8)
000000000000e790	je	0xe7d6
000000000000e792	movl	0x14(%rcx), %eax
000000000000e795	imull	(%r8,%rsi,8), %eax
000000000000e79a	leaq	0x10(%r10,%rax), %rax
000000000000e79f	movzwl	0x2(%rdx), %ecx
000000000000e7a3	movl	%ecx, 0x10(%rax)
000000000000e7a6	cmpl	$0x2, 0x20(%rdi)
000000000000e7aa	jne	0xe7b6
000000000000e7ac	movw	%cx, 0x7e(%rax)
000000000000e7b0	subq	$-0x80, %rax
000000000000e7b4	jmp	0xe7be
000000000000e7b6	movw	%cx, 0x26(%rax)
000000000000e7ba	addq	$0x28, %rax
000000000000e7be	movw	$0x0, (%rax)
000000000000e7c3	popq	%rbp
000000000000e7c4	retq
000000000000e7c5	movq	0x8(%rdi), %rax
000000000000e7c9	cmpl	$0x0, (%rax)
000000000000e7cc	jns	0xe788
000000000000e7ce	movq	%r9, %rdi
000000000000e7d1	callq	_os_channel_set_slot_properties.cold.2
000000000000e7d6	movq	0x8(%rdi), %rax
000000000000e7da	cmpl	$0x0, (%rax)
000000000000e7dd	jns	0xe792
000000000000e7df	callq	_os_channel_set_slot_properties.cold.1
_os_channel_slot_get_packet:
000000000000e7e4	pushq	%rbp
000000000000e7e5	movq	%rsp, %rbp
000000000000e7e8	testq	%rsi, %rsi
000000000000e7eb	je	0xe89b
000000000000e7f1	movq	0x10(%rdi), %rax
000000000000e7f5	movq	0x18(%rdi), %r8
000000000000e7f9	subq	%r8, %rsi
000000000000e7fc	shrq	$0x3, %rsi
000000000000e800	movl	(%rax), %ecx
000000000000e802	cmpl	0x4(%rax), %ecx
000000000000e805	jbe	0xe82a
000000000000e807	movl	0x4(%rax), %ecx
000000000000e80a	cmpl	%esi, %ecx
000000000000e80c	ja	0xe837
000000000000e80e	movl	(%rax), %ecx
000000000000e810	cmpl	%esi, %ecx
000000000000e812	ja	0xe819
000000000000e814	cmpl	%esi, 0xc(%rax)
000000000000e817	ja	0xe837
000000000000e819	movq	0x8(%rdi), %rcx
000000000000e81d	cmpl	$0x0, (%rcx)
000000000000e820	jns	0xe837
000000000000e822	movq	%rsi, %rdi
000000000000e825	callq	_os_channel_slot_get_packet.cold.3
000000000000e82a	movl	(%rax), %ecx
000000000000e82c	cmpl	%esi, %ecx
000000000000e82e	ja	0xe819
000000000000e830	movl	0x4(%rax), %ecx
000000000000e833	cmpl	%esi, %ecx
000000000000e835	jbe	0xe819
000000000000e837	movl	%esi, %ecx
000000000000e839	testb	$0x1, 0x4(%r8,%rcx,8)
000000000000e83f	je	0xe89b
000000000000e841	movq	0x38(%rdi), %r9
000000000000e845	movl	0x14(%rax), %esi
000000000000e848	movl	(%r8,%rcx,8), %eax
000000000000e84c	imull	%esi, %eax
000000000000e84f	leaq	0x10(%r9,%rax), %rdx
000000000000e854	movq	-0x10(%rdx), %r8
000000000000e858	movq	%rdx, %rcx
000000000000e85b	subq	%r9, %rcx
000000000000e85e	xorq	___os_ch_md_redzone_cookie(%rip), %rcx
000000000000e865	cmpq	%rcx, %r8
000000000000e868	jne	0xe89f
000000000000e86a	addq	%r9, %rax
000000000000e86d	movl	0x8(%rax), %eax
000000000000e870	imull	%eax, %esi
000000000000e873	leaq	0x10(%r9,%rsi), %rcx
000000000000e878	cmpq	%rcx, %rdx
000000000000e87b	jne	0xe8b0
000000000000e87d	testq	%rdx, %rdx
000000000000e880	je	0xe89b
000000000000e882	andq	$-0x10, %rdx
000000000000e886	movl	0x20(%rdi), %eax
000000000000e889	movl	0x24(%rdi), %ecx
000000000000e88c	andl	$0x3, %eax
000000000000e88f	orq	%rdx, %rax
000000000000e892	andl	$0x3, %ecx
000000000000e895	leaq	(%rax,%rcx,4), %rax
000000000000e899	jmp	0xe89d
000000000000e89b	xorl	%eax, %eax
000000000000e89d	popq	%rbp
000000000000e89e	retq
000000000000e89f	movq	0x8(%rdi), %rcx
000000000000e8a3	cmpl	$0x0, (%rcx)
000000000000e8a6	jns	0xe86a
000000000000e8a8	movq	%r8, %rdi
000000000000e8ab	callq	_os_channel_slot_get_packet.cold.2
000000000000e8b0	movq	0x8(%rdi), %rcx
000000000000e8b4	cmpl	$0x0, (%rcx)
000000000000e8b7	jns	0xe87d
000000000000e8b9	movl	%eax, %edi
000000000000e8bb	callq	_os_channel_slot_get_packet.cold.1
_os_channel_get_stats_region:
000000000000e8c0	movq	0x20(%rdi), %rax
000000000000e8c4	testq	%rax, %rax
000000000000e8c7	je	0xe8f4
000000000000e8c9	movq	0x18(%rdi), %rcx
000000000000e8cd	cmpl	$0x1, 0x150(%rcx)
000000000000e8d4	jne	0xe8f4
000000000000e8d6	cmpl	$0x4, %esi
000000000000e8d9	ja	0xe8f4
000000000000e8db	movl	%esi, %ecx
000000000000e8dd	leaq	0x28(%rip), %rdx
000000000000e8e4	movslq	(%rdx,%rcx,4), %rcx
000000000000e8e8	addq	%rdx, %rcx
000000000000e8eb	jmpq	*%rcx
000000000000e8ed	addq	$0x150, %rax
000000000000e8f3	retq
000000000000e8f4	xorl	%eax, %eax
000000000000e8f6	retq
000000000000e8f7	addq	$0x270, %rax
000000000000e8fd	retq
000000000000e8fe	addq	$0x8e0, %rax
000000000000e904	retq
000000000000e905	addq	$0x990, %rax
000000000000e90b	retq
000000000000e90c	.byte 0xea #bad opcode
000000000000e90d	.byte 0xff #bad opcode
000000000000e90e	.byte 0xff #bad opcode
000000000000e90f	jmpq	*%rcx
000000000000e911	.byte 0xff #bad opcode
000000000000e912	.byte 0xff #bad opcode
000000000000e913	.byte 0xff #bad opcode
000000000000e914	jmp	0xe915
000000000000e916	.byte 0xff #bad opcode
000000000000e917	pushq	%rdx
000000000000e919	.byte 0xff #bad opcode
000000000000e91a	.byte 0xff #bad opcode
000000000000e91b	.byte 0xff #bad opcode
000000000000e91c	stc
000000000000e91d	.byte 0xff #bad opcode
000000000000e91e	.byte 0xff #bad opcode
000000000000e91f	decl	-0x75(%rax)
_os_channel_get_advisory_region:
000000000000e920	movq	0x30(%rdi), %rax
000000000000e924	testq	%rax, %rax
000000000000e927	je	0xe934
000000000000e929	cmpl	$0x1, 0x4(%rax)
000000000000e92d	jne	0xe934
000000000000e92f	addq	$0x8, %rax
000000000000e933	retq
000000000000e934	xorl	%eax, %eax
000000000000e936	retq
_os_channel_flow_admissible:
000000000000e937	movq	(%rdi), %rcx
000000000000e93a	movq	0x28(%rcx), %r8
000000000000e93e	testq	%r8, %r8
000000000000e941	je	0xe9a0
000000000000e943	movq	0x10(%rdi), %rdi
000000000000e947	movl	$0x16, %eax
000000000000e94c	cmpw	$0x1, 0x1a(%rdi)
000000000000e951	jne	0xe99f
000000000000e953	movq	0x10(%rcx), %rcx
000000000000e957	cmpl	%edx, 0xc4(%rcx)
000000000000e95d	jbe	0xe99f
000000000000e95f	movl	%edx, %eax
000000000000e961	leaq	(%rax,%rax,2), %rdx
000000000000e965	movl	$0x2, %eax
000000000000e96a	cmpl	$0x0, 0x10(%r8,%rdx,8)
000000000000e970	je	0xe99f
000000000000e972	leaq	(%r8,%rdx,8), %rdi
000000000000e976	testb	$0x7, %sil
000000000000e97a	jne	0xe9a6
000000000000e97c	movq	(%rdi), %rcx
000000000000e97f	cmpq	(%rsi), %rcx
000000000000e982	jne	0xe99f
000000000000e984	movq	0x8(%r8,%rdx,8), %rcx
000000000000e989	cmpq	0x8(%rsi), %rcx
000000000000e98d	jne	0xe99f
000000000000e98f	leaq	0x10(%r8,%rdx,8), %rax
000000000000e994	movl	(%rax), %eax
000000000000e996	shll	$0x1e, %eax
000000000000e999	sarl	$0x1f, %eax
000000000000e99c	andl	$0x37, %eax
000000000000e99f	retq
000000000000e9a0	movl	$0x6, %eax
000000000000e9a5	retq
000000000000e9a6	testb	$0x3, %sil
000000000000e9aa	jne	0xe9ce
000000000000e9ac	movl	(%rdi), %ecx
000000000000e9ae	cmpl	(%rsi), %ecx
000000000000e9b0	jne	0xe99f
000000000000e9b2	movl	0x4(%rdi), %ecx
000000000000e9b5	cmpl	0x4(%rsi), %ecx
000000000000e9b8	jne	0xe99f
000000000000e9ba	movl	0x8(%r8,%rdx,8), %ecx
000000000000e9bf	cmpl	0x8(%rsi), %ecx
000000000000e9c2	jne	0xe99f
000000000000e9c4	movl	0xc(%rdi), %ecx
000000000000e9c7	cmpl	0xc(%rsi), %ecx
000000000000e9ca	je	0xe98f
000000000000e9cc	jmp	0xe99f
000000000000e9ce	movb	(%rdi), %cl
000000000000e9d0	cmpb	(%rsi), %cl
000000000000e9d2	jne	0xe99f
000000000000e9d4	movb	0x1(%rdi), %cl
000000000000e9d7	cmpb	0x1(%rsi), %cl
000000000000e9da	jne	0xe99f
000000000000e9dc	movb	0x2(%rdi), %cl
000000000000e9df	cmpb	0x2(%rsi), %cl
000000000000e9e2	jne	0xe99f
000000000000e9e4	movb	0x3(%rdi), %cl
000000000000e9e7	cmpb	0x3(%rsi), %cl
000000000000e9ea	jne	0xe99f
000000000000e9ec	movb	0x4(%rdi), %cl
000000000000e9ef	cmpb	0x4(%rsi), %cl
000000000000e9f2	jne	0xe99f
000000000000e9f4	movb	0x5(%rdi), %cl
000000000000e9f7	cmpb	0x5(%rsi), %cl
000000000000e9fa	jne	0xe99f
000000000000e9fc	movb	0x6(%rdi), %cl
000000000000e9ff	cmpb	0x6(%rsi), %cl
000000000000ea02	jne	0xe99f
000000000000ea04	movb	0x7(%rdi), %cl
000000000000ea07	cmpb	0x7(%rsi), %cl
000000000000ea0a	jne	0xe99f
000000000000ea0c	movb	0x8(%r8,%rdx,8), %cl
000000000000ea11	cmpb	0x8(%rsi), %cl
000000000000ea14	jne	0xe99f
000000000000ea16	movb	0x9(%rdi), %cl
000000000000ea19	cmpb	0x9(%rsi), %cl
000000000000ea1c	jne	0xe99f
000000000000ea1e	movb	0xa(%rdi), %cl
000000000000ea21	cmpb	0xa(%rsi), %cl
000000000000ea24	jne	0xe99f
000000000000ea2a	movb	0xb(%rdi), %cl
000000000000ea2d	cmpb	0xb(%rsi), %cl
000000000000ea30	jne	0xe99f
000000000000ea36	movb	0xc(%rdi), %cl
000000000000ea39	cmpb	0xc(%rsi), %cl
000000000000ea3c	jne	0xe99f
000000000000ea42	movb	0xd(%rdi), %cl
000000000000ea45	cmpb	0xd(%rsi), %cl
000000000000ea48	jne	0xe99f
000000000000ea4e	movb	0xe(%rdi), %cl
000000000000ea51	cmpb	0xe(%rsi), %cl
000000000000ea54	jne	0xe99f
000000000000ea5a	movb	0xf(%rdi), %cl
000000000000ea5d	cmpb	0xf(%rsi), %cl
000000000000ea60	je	0xe98f
000000000000ea66	jmp	0xe99f
_os_channel_attr_create:
000000000000ea6b	pushq	%rbp
000000000000ea6c	movq	%rsp, %rbp
000000000000ea6f	pushq	%rbx
000000000000ea70	pushq	%rax
000000000000ea71	movl	$0x78, %edi
000000000000ea76	callq	_malloc
000000000000ea7b	movq	%rax, %rbx
000000000000ea7e	testq	%rax, %rax
000000000000ea81	je	0xea90
000000000000ea83	movl	$0x78, %esi
000000000000ea88	movq	%rbx, %rdi
000000000000ea8b	callq	_bzero
000000000000ea90	movq	%rbx, %rax
000000000000ea93	addq	$0x8, %rsp
000000000000ea97	popq	%rbx
000000000000ea98	popq	%rbp
000000000000ea99	retq
_os_channel_attr_clone:
000000000000ea9a	pushq	%rbp
000000000000ea9b	movq	%rsp, %rbp
000000000000ea9e	pushq	%r14
000000000000eaa0	pushq	%rbx
000000000000eaa1	movq	%rdi, %rbx
000000000000eaa4	callq	_os_channel_attr_create
000000000000eaa9	movq	%rax, %r14
000000000000eaac	testq	%rbx, %rbx
000000000000eaaf	je	0xeafd
000000000000eab1	testq	%r14, %r14
000000000000eab4	je	0xeafd
000000000000eab6	movl	$0x78, %edx
000000000000eabb	movq	%rbx, %rdi
000000000000eabe	movq	%r14, %rsi
000000000000eac1	callq	_bcopy
000000000000eac6	movq	$0x0, 0x28(%r14)
000000000000eace	movl	$0x0, 0x24(%r14)
000000000000ead6	movq	0x28(%rbx), %rsi
000000000000eada	testq	%rsi, %rsi
000000000000eadd	je	0xeafd
000000000000eadf	movl	0x24(%rbx), %edx
000000000000eae2	testl	%edx, %edx
000000000000eae4	je	0xeafd
000000000000eae6	movq	%r14, %rdi
000000000000eae9	callq	_os_channel_attr_set_key
000000000000eaee	testl	%eax, %eax
000000000000eaf0	je	0xeafd
000000000000eaf2	movq	%r14, %rdi
000000000000eaf5	callq	_os_channel_attr_destroy
000000000000eafa	xorl	%r14d, %r14d
000000000000eafd	movq	%r14, %rax
000000000000eb00	popq	%rbx
000000000000eb01	popq	%r14
000000000000eb03	popq	%rbp
000000000000eb04	retq
_os_channel_attr_set_key:
000000000000eb05	pushq	%rbp
000000000000eb06	movq	%rsp, %rbp
000000000000eb09	pushq	%r15
000000000000eb0b	pushq	%r14
000000000000eb0d	pushq	%r13
000000000000eb0f	pushq	%r12
000000000000eb11	pushq	%rbx
000000000000eb12	pushq	%rax
000000000000eb13	movl	%edx, %ebx
000000000000eb15	movq	%rsi, %r12
000000000000eb18	movq	%rdi, %r14
000000000000eb1b	movl	$0x16, %r15d
000000000000eb21	testq	%rsi, %rsi
000000000000eb24	jne	0xeb3c
000000000000eb26	testl	%ebx, %ebx
000000000000eb28	je	0xeb3c
000000000000eb2a	movl	%r15d, %eax
000000000000eb2d	addq	$0x8, %rsp
000000000000eb31	popq	%rbx
000000000000eb32	popq	%r12
000000000000eb34	popq	%r13
000000000000eb36	popq	%r14
000000000000eb38	popq	%r15
000000000000eb3a	popq	%rbp
000000000000eb3b	retq
000000000000eb3c	testq	%r12, %r12
000000000000eb3f	setne	%al
000000000000eb42	testl	%ebx, %ebx
000000000000eb44	sete	%cl
000000000000eb47	cmpl	$0x400, %ebx
000000000000eb4d	ja	0xeb2a
000000000000eb4f	andb	%cl, %al
000000000000eb51	jne	0xeb2a
000000000000eb53	xorl	%r15d, %r15d
000000000000eb56	movl	%r15d, 0x24(%r14)
000000000000eb5a	testl	%ebx, %ebx
000000000000eb5c	je	0xeb9d
000000000000eb5e	testq	%r12, %r12
000000000000eb61	je	0xeb2a
000000000000eb63	testl	%ebx, %ebx
000000000000eb65	je	0xeb2a
000000000000eb67	movq	0x28(%r14), %rdi
000000000000eb6b	testq	%rdi, %rdi
000000000000eb6e	je	0xeb75
000000000000eb70	callq	_free
000000000000eb75	movl	%ebx, %r13d
000000000000eb78	movq	%r13, %rdi
000000000000eb7b	callq	_malloc
000000000000eb80	movq	%rax, 0x28(%r14)
000000000000eb84	testq	%rax, %rax
000000000000eb87	je	0xebb8
000000000000eb89	movl	%ebx, 0x24(%r14)
000000000000eb8d	movq	%r12, %rdi
000000000000eb90	movq	%rax, %rsi
000000000000eb93	movq	%r13, %rdx
000000000000eb96	callq	_bcopy
000000000000eb9b	jmp	0xeb2a
000000000000eb9d	movq	0x28(%r14), %rdi
000000000000eba1	testq	%rdi, %rdi
000000000000eba4	je	0xeb5e
000000000000eba6	callq	_free
000000000000ebab	movq	$0x0, 0x28(%r14)
000000000000ebb3	jmp	0xeb2a
000000000000ebb8	movl	$0xc, %r15d
000000000000ebbe	jmp	0xeb2a
_os_channel_attr_destroy:
000000000000ebc3	pushq	%rbp
000000000000ebc4	movq	%rsp, %rbp
000000000000ebc7	pushq	%rbx
000000000000ebc8	pushq	%rax
000000000000ebc9	movq	%rdi, %rbx
000000000000ebcc	movq	0x28(%rdi), %rdi
000000000000ebd0	testq	%rdi, %rdi
000000000000ebd3	je	0xebe2
000000000000ebd5	callq	_free
000000000000ebda	movq	$0x0, 0x28(%rbx)
000000000000ebe2	movq	%rbx, %rdi
000000000000ebe5	addq	$0x8, %rsp
000000000000ebe9	popq	%rbx
000000000000ebea	popq	%rbp
000000000000ebeb	jmp	_free
_os_channel_attr_set:
000000000000ebf0	cmpl	$0x1c, %esi
000000000000ebf3	ja	0xec88
000000000000ebf9	movl	$0x2d, %eax
000000000000ebfe	movl	%esi, %ecx
000000000000ec00	leaq	0x8d(%rip), %r8
000000000000ec07	movslq	(%r8,%rcx,4), %rcx
000000000000ec0b	addq	%r8, %rcx
000000000000ec0e	jmpq	*%rcx
000000000000ec10	retq
000000000000ec11	movl	$0x16, %eax
000000000000ec16	cmpq	$0x1, %rdx
000000000000ec1a	ja	0xec10
000000000000ec1c	cmpl	$0x9, %esi
000000000000ec1f	jne	0xec8e
000000000000ec21	movl	%edx, 0x30(%rdi)
000000000000ec24	xorl	%eax, %eax
000000000000ec26	retq
000000000000ec27	movl	%edx, 0x1c(%rdi)
000000000000ec2a	xorl	%eax, %eax
000000000000ec2c	retq
000000000000ec2d	movl	%edx, 0x3c(%rdi)
000000000000ec30	xorl	%eax, %eax
000000000000ec32	retq
000000000000ec33	xorl	%eax, %eax
000000000000ec35	testq	%rdx, %rdx
000000000000ec38	setne	%al
000000000000ec3b	movl	%eax, 0x60(%rdi)
000000000000ec3e	xorl	%eax, %eax
000000000000ec40	retq
000000000000ec41	xorl	%eax, %eax
000000000000ec43	testq	%rdx, %rdx
000000000000ec46	setne	%al
000000000000ec49	movl	%eax, 0x68(%rdi)
000000000000ec4c	xorl	%eax, %eax
000000000000ec4e	retq
000000000000ec4f	movl	%edx, 0x6c(%rdi)
000000000000ec52	xorl	%eax, %eax
000000000000ec54	retq
000000000000ec55	xorl	%eax, %eax
000000000000ec57	testq	%rdx, %rdx
000000000000ec5a	setne	%al
000000000000ec5d	movl	%eax, 0x70(%rdi)
000000000000ec60	xorl	%eax, %eax
000000000000ec62	retq
000000000000ec63	xorl	%ecx, %ecx
000000000000ec65	testq	%rdx, %rdx
000000000000ec68	movl	$0x2d, %eax
000000000000ec6d	cmovnel	%ecx, %eax
000000000000ec70	retq
000000000000ec71	movl	$0x16, %eax
000000000000ec76	cmpq	$0x2, %rdx
000000000000ec7a	ja	0xec10
000000000000ec7c	movl	%edx, 0x20(%rdi)
000000000000ec7f	xorl	%eax, %eax
000000000000ec81	retq
000000000000ec82	movl	%edx, 0x34(%rdi)
000000000000ec85	xorl	%eax, %eax
000000000000ec87	retq
000000000000ec88	movl	$0x16, %eax
000000000000ec8d	retq
000000000000ec8e	movl	%edx, 0x38(%rdi)
000000000000ec91	xorl	%eax, %eax
000000000000ec93	retq
000000000000ec94	jl	0xec95
000000000000ec96	.byte 0xff #bad opcode
000000000000ec97	.byte 0xff #bad opcode
000000000000ec98	jl	0xec99
000000000000ec9a	.byte 0xff #bad opcode
000000000000ec9b	.byte 0xff #bad opcode
000000000000ec9c	jl	0xec9d
000000000000ec9e	.byte 0xff #bad opcode
000000000000ec9f	.byte 0xff #bad opcode
000000000000eca0	jl	0xeca1
000000000000eca2	.byte 0xff #bad opcode
000000000000eca3	.byte 0xff #bad opcode
000000000000eca4	jl	0xeca5
000000000000eca6	.byte 0xff #bad opcode
000000000000eca7	.byte 0xff #bad opcode
000000000000eca8	jl	0xeca9
000000000000ecaa	.byte 0xff #bad opcode
000000000000ecab	callq	*-0x30000001(%rbx)
000000000000ecb1	.byte 0xff #bad opcode
000000000000ecb2	.byte 0xff #bad opcode
000000000000ecb3	.byte 0xff #bad opcode
000000000000ecb4	.byte 0xdd #bad opcode
000000000000ecb5	.byte 0xff #bad opcode
000000000000ecb6	.byte 0xff #bad opcode
000000000000ecb7	.byte 0xff #bad opcode
000000000000ecb8	jge	0xecb9
000000000000ecba	.byte 0xff #bad opcode
000000000000ecbb	.byte 0xff #bad opcode
000000000000ecbc	outb	%al, %dx
000000000000ecbd	.byte 0xff #bad opcode
000000000000ecbe	.byte 0xff #bad opcode
000000000000ecbf	.byte 0xff #bad opcode
000000000000ecc0	jge	0xecc1
000000000000ecc2	.byte 0xff #bad opcode
000000000000ecc3	lcalll	*-0xb000001(%rcx)
000000000000ecc9	.byte 0xff #bad opcode
000000000000ecca	.byte 0xff #bad opcode
000000000000eccb	.byte 0xff #bad opcode
000000000000eccc	jl	0xeccd
000000000000ecce	.byte 0xff #bad opcode
000000000000eccf	.byte 0xff #bad opcode
000000000000ecd0	jl	0xecd1
000000000000ecd2	.byte 0xff #bad opcode
000000000000ecd3	pushq	%rsp
000000000000ecd5	.byte 0xff #bad opcode
000000000000ecd6	.byte 0xff #bad opcode
000000000000ecd7	pushq	%rsp
000000000000ecd9	.byte 0xff #bad opcode
000000000000ecda	.byte 0xff #bad opcode
000000000000ecdb	.byte 0xff #bad opcode
000000000000ecdc	jl	0xecdd
000000000000ecde	.byte 0xff #bad opcode
000000000000ecdf	.byte 0xff #bad opcode
000000000000ece0	jl	0xece1
000000000000ece2	.byte 0xff #bad opcode
000000000000ece3	.byte 0xff #bad opcode
000000000000ece4	jl	0xece5
000000000000ece6	.byte 0xff #bad opcode
000000000000ece7	.byte 0xff #bad opcode
000000000000ece8	jl	0xece9
000000000000ecea	.byte 0xff #bad opcode
000000000000eceb	.byte 0xff #bad opcode
000000000000ecec	jl	0xeced
000000000000ecee	.byte 0xff #bad opcode
000000000000ecef	.byte 0xff #bad opcode
000000000000ecf0	jl	0xecf1
000000000000ecf2	.byte 0xff #bad opcode
000000000000ecf3	lcalll	*0x7cffffff(%rdi)
000000000000ecf9	.byte 0xff #bad opcode
000000000000ecfa	.byte 0xff #bad opcode
000000000000ecfb	ljmpl	*-0x44000001(%rbp)
000000000000ed01	.byte 0xff #bad opcode
000000000000ed02	.byte 0xff #bad opcode
000000000000ed03	incl	%ecx
000000000000ed05	.byte 0xff #bad opcode
000000000000ed06	.byte 0xff #bad opcode
000000000000ed07	.byte 0xff #bad opcode
_os_channel_attr_get:
000000000000ed08	movl	$0x16, %eax
000000000000ed0d	cmpl	$0x1c, %esi
000000000000ed10	ja	0xeddf
000000000000ed16	movl	$0x1, %r8d
000000000000ed1c	movl	%esi, %esi
000000000000ed1e	leaq	0xbb(%rip), %rcx
000000000000ed25	movslq	(%rcx,%rsi,4), %rsi
000000000000ed29	addq	%rcx, %rsi
000000000000ed2c	jmpq	*%rsi
000000000000ed2e	movl	(%rdi), %r8d
000000000000ed31	jmp	0xedda
000000000000ed36	movl	0x4(%rdi), %r8d
000000000000ed3a	jmp	0xedda
000000000000ed3f	movl	0x8(%rdi), %r8d
000000000000ed43	jmp	0xedda
000000000000ed48	movl	0xc(%rdi), %r8d
000000000000ed4c	jmp	0xedda
000000000000ed51	movl	0x10(%rdi), %r8d
000000000000ed55	jmp	0xedda
000000000000ed5a	movl	0x14(%rdi), %r8d
000000000000ed5e	jmp	0xedda
000000000000ed60	movl	0x1c(%rdi), %r8d
000000000000ed64	jmp	0xedda
000000000000ed66	movl	0x20(%rdi), %r8d
000000000000ed6a	jmp	0xedda
000000000000ed6c	movl	0x30(%rdi), %r8d
000000000000ed70	jmp	0xedda
000000000000ed72	movl	0x34(%rdi), %r8d
000000000000ed76	jmp	0xedda
000000000000ed78	movl	0x38(%rdi), %r8d
000000000000ed7c	jmp	0xedda
000000000000ed7e	movl	0x3c(%rdi), %r8d
000000000000ed82	jmp	0xedda
000000000000ed84	movl	0x40(%rdi), %r8d
000000000000ed88	jmp	0xedda
000000000000ed8a	movl	0x44(%rdi), %r8d
000000000000ed8e	jmp	0xedda
000000000000ed90	movl	0x48(%rdi), %r8d
000000000000ed94	jmp	0xedda
000000000000ed96	movl	0x4c(%rdi), %r8d
000000000000ed9a	jmp	0xedda
000000000000ed9c	movl	0x18(%rdi), %r8d
000000000000eda0	jmp	0xedda
000000000000eda2	movl	0x50(%rdi), %r8d
000000000000eda6	jmp	0xedda
000000000000eda8	movl	0x54(%rdi), %r8d
000000000000edac	jmp	0xedda
000000000000edae	movl	0x58(%rdi), %r8d
000000000000edb2	jmp	0xedda
000000000000edb4	movl	0x5c(%rdi), %r8d
000000000000edb8	jmp	0xedda
000000000000edba	xorl	%r8d, %r8d
000000000000edbd	cmpl	$0x0, 0x60(%rdi)
000000000000edc1	jmp	0xedd6
000000000000edc3	movl	0x64(%rdi), %r8d
000000000000edc7	jmp	0xedda
000000000000edc9	movl	0x68(%rdi), %r8d
000000000000edcd	jmp	0xedda
000000000000edcf	xorl	%r8d, %r8d
000000000000edd2	cmpl	$0x0, 0x70(%rdi)
000000000000edd6	setne	%r8b
000000000000edda	movq	%r8, (%rdx)
000000000000eddd	xorl	%eax, %eax
000000000000eddf	retq
000000000000ede0	.byte 0x4e #bad opcode
000000000000ede1	.byte 0xff #bad opcode
000000000000ede2	.byte 0xff #bad opcode
000000000000ede3	callq	*-0x1(%rsi)
000000000000ede6	.byte 0xff #bad opcode
000000000000ede7	lcalll	*-0x1(%rdi)
000000000000edea	.byte 0xff #bad opcode
000000000000edeb	ljmpl	*-0x1(%rax)
000000000000edee	.byte 0xff #bad opcode
000000000000edef	pushq	-0x1(%rcx)
000000000000edf2	.byte 0xff #bad opcode
000000000000edf3	.byte 0xff #bad opcode
000000000000edf4	jp	0xedf5
000000000000edf6	.byte 0xff #bad opcode
000000000000edf7	incl	-0x5000001(%rax)
000000000000edfd	.byte 0xff #bad opcode
000000000000edfe	.byte 0xff #bad opcode
000000000000edff	incl	-0x73000001(%rsi)
000000000000ee05	.byte 0xff #bad opcode
000000000000ee06	.byte 0xff #bad opcode
000000000000ee07	callq	*-0x67000001(%rdx)
000000000000ee0d	.byte 0xff #bad opcode
000000000000ee0e	.byte 0xff #bad opcode
000000000000ee0f	lcalll	*-0x5b000001(%rsi)
000000000000ee15	.byte 0xff #bad opcode
000000000000ee16	.byte 0xff #bad opcode
000000000000ee17	ljmpl	*-0x4f000001(%rdx)
000000000000ee1d	.byte 0xff #bad opcode
000000000000ee1e	.byte 0xff #bad opcode
000000000000ee1f	.byte 0xff #bad opcode
000000000000ee20	.byte 0xff #bad opcode
000000000000ee21	.byte 0xff #bad opcode
000000000000ee22	.byte 0xff #bad opcode
000000000000ee23	.byte 0xff #bad opcode
000000000000ee24	.byte 0xff #bad opcode
000000000000ee25	.byte 0xff #bad opcode
000000000000ee26	.byte 0xff #bad opcode
000000000000ee27	pushq	-0x43000001(%rsi)
000000000000ee2d	.byte 0xff #bad opcode
000000000000ee2e	.byte 0xff #bad opcode
000000000000ee2f	incl	%edx
000000000000ee31	.byte 0xff #bad opcode
000000000000ee32	.byte 0xff #bad opcode
000000000000ee33	decl	%eax
000000000000ee35	.byte 0xff #bad opcode
000000000000ee36	.byte 0xff #bad opcode
000000000000ee37	decl	%esi
000000000000ee39	.byte 0xff #bad opcode
000000000000ee3a	.byte 0xff #bad opcode
000000000000ee3b	callq	*%rsp
000000000000ee3d	.byte 0xff #bad opcode
000000000000ee3e	.byte 0xff #bad opcode
000000000000ee3f	.byte 0xff #bad opcode
000000000000ee40	.byte 0xda #bad opcode
000000000000ee41	.byte 0xff #bad opcode
000000000000ee42	.byte 0xff #bad opcode
000000000000ee43	jmpq	*%rbx
000000000000ee45	.byte 0xff #bad opcode
000000000000ee46	.byte 0xff #bad opcode
000000000000ee47	.byte 0xff #bad opcode
000000000000ee48	jmp	0xee4c
000000000000ee4d	.byte 0xff #bad opcode
000000000000ee4e	.byte 0xff #bad opcode
000000000000ee4f	.byte 0xff #bad opcode
000000000000ee50	outl	%eax, %dx
000000000000ee51	.byte 0xff #bad opcode
000000000000ee52	.byte 0xff #bad opcode
000000000000ee53	callq	*0x48(%rbp)
_os_channel_attr_get_key:
000000000000ee54	pushq	%rbp
000000000000ee55	movq	%rsp, %rbp
000000000000ee58	pushq	%r14
000000000000ee5a	pushq	%rbx
000000000000ee5b	testq	%rdx, %rdx
000000000000ee5e	je	0xee88
000000000000ee60	movq	%rdx, %rbx
000000000000ee63	movq	%rdi, %r14
000000000000ee66	movq	0x28(%rdi), %rdi
000000000000ee6a	testq	%rsi, %rsi
000000000000ee6d	je	0xee8f
000000000000ee6f	testq	%rdi, %rdi
000000000000ee72	je	0xee9a
000000000000ee74	movl	0x24(%r14), %edx
000000000000ee78	movl	$0xc, %eax
000000000000ee7d	cmpl	%edx, (%rbx)
000000000000ee7f	jb	0xeea0
000000000000ee81	callq	_bcopy
000000000000ee86	jmp	0xee94
000000000000ee88	movl	$0x16, %eax
000000000000ee8d	jmp	0xeea0
000000000000ee8f	testq	%rdi, %rdi
000000000000ee92	je	0xee9a
000000000000ee94	movl	0x24(%r14), %eax
000000000000ee98	jmp	0xee9c
000000000000ee9a	xorl	%eax, %eax
000000000000ee9c	movl	%eax, (%rbx)
000000000000ee9e	xorl	%eax, %eax
000000000000eea0	popq	%rbx
000000000000eea1	popq	%r14
000000000000eea3	popq	%rbp
000000000000eea4	retq
_os_channel_packet_alloc:
000000000000eea5	pushq	%rbp
000000000000eea6	movq	%rsp, %rbp
000000000000eea9	pushq	%r15
000000000000eeab	pushq	%r14
000000000000eead	pushq	%r13
000000000000eeaf	pushq	%r12
000000000000eeb1	pushq	%rbx
000000000000eeb2	pushq	%rax
000000000000eeb3	movq	0x10(%rdi), %rax
000000000000eeb7	testb	$0x8, 0x10(%rax)
000000000000eebb	je	0xf02b
000000000000eec1	movq	%rsi, %r14
000000000000eec4	movq	%rdi, %r12
000000000000eec7	movl	$0x2, %ecx
000000000000eecc	subl	0x130(%rax), %ecx
000000000000eed2	addl	0x134(%rax), %ecx
000000000000eed8	subl	0x138(%rax), %ecx
000000000000eede	addl	0x13c(%rax), %ecx
000000000000eee4	leaq	(%rcx,%rcx,4), %r13
000000000000eee8	shlq	$0x4, %r13
000000000000eeec	movq	0x50(%rdi,%r13), %r15
000000000000eef1	movl	(%r15), %ebx
000000000000eef4	cmpl	0x4(%r15), %ebx
000000000000eef8	je	0xf032
000000000000eefe	cmpl	0x4(%r15), %ebx
000000000000ef02	je	0xf05f
000000000000ef08	movq	0x58(%r12,%r13), %r8
000000000000ef0d	testb	$0x1, 0x4(%r8,%rbx,8)
000000000000ef13	je	0xf077
000000000000ef19	movq	0x78(%r12,%r13), %rdx
000000000000ef1e	movl	0x14(%r15), %ecx
000000000000ef22	imull	(%r8,%rbx,8), %ecx
000000000000ef27	leaq	0x10(%rdx,%rcx), %rcx
000000000000ef2c	movq	-0x10(%rcx), %rdi
000000000000ef30	movq	%rcx, %rsi
000000000000ef33	subq	%rdx, %rsi
000000000000ef36	xorq	___os_ch_md_redzone_cookie(%rip), %rsi
000000000000ef3d	cmpq	%rsi, %rdi
000000000000ef40	jne	0xf08a
000000000000ef46	leaq	0x50(%r12,%r13), %rsi
000000000000ef4b	movq	%rcx, %rdx
000000000000ef4e	andq	$-0x10, %rdx
000000000000ef52	movl	0x10(%rsi), %edi
000000000000ef55	movl	0x14(%rsi), %eax
000000000000ef58	andl	$0x3, %edi
000000000000ef5b	orq	%rdx, %rdi
000000000000ef5e	andl	$0x3, %eax
000000000000ef61	leaq	(%rdi,%rax,4), %rax
000000000000ef65	movq	%rax, (%r14)
000000000000ef68	movl	$0xffffffff, (%r8,%rbx,8)
000000000000ef70	movq	0x8(%rsi), %rax
000000000000ef74	andw	$-0x2, 0x4(%rax,%rbx,8)
000000000000ef7a	movq	(%rsi), %rdx
000000000000ef7d	cmpl	$0x2, 0x10(%rsi)
000000000000ef81	jne	0xefe5
000000000000ef83	movzwl	0x6a(%rcx), %edi
000000000000ef87	testw	%di, %di
000000000000ef8a	je	0xf0a7
000000000000ef90	movzwl	0x68(%rcx), %esi
000000000000ef94	testw	%si, %si
000000000000ef97	je	0xf0a7
000000000000ef9d	movzwl	%si, %eax
000000000000efa0	cmpl	%eax, 0x88(%r12,%r13)
000000000000efa8	jb	0xf0bf
000000000000efae	cmpw	%si, %di
000000000000efb1	ja	0xf0c6
000000000000efb7	leaq	0x70(%r12,%r13), %rax
000000000000efbc	movl	0x10(%rdx), %edx
000000000000efbf	leal	-0x1(%rdi), %esi
000000000000efc2	movzwl	%si, %esi
000000000000efc5	leaq	(%rsi,%rsi,2), %rsi
000000000000efc9	leaq	0x78(%rcx,%rsi,8), %rcx
000000000000efce	movl	(%rcx), %esi
000000000000efd0	imull	%edx, %esi
000000000000efd3	addq	(%rax), %rsi
000000000000efd6	movq	%rsi, -0x8(%rcx)
000000000000efda	addq	$-0x18, %rcx
000000000000efde	decw	%di
000000000000efe1	jne	0xefce
000000000000efe3	jmp	0xeff5
000000000000efe5	movl	0x10(%rdx), %esi
000000000000efe8	imull	0x20(%rcx), %esi
000000000000efec	addq	0x70(%r12,%r13), %rsi
000000000000eff1	movq	%rsi, 0x18(%rcx)
000000000000eff5	testq	%rsi, %rsi
000000000000eff8	je	0xf09d
000000000000effe	incl	%ebx
000000000000f000	xorl	%ecx, %ecx
000000000000f002	cmpl	0xc(%r15), %ebx
000000000000f006	cmovel	%ecx, %ebx
000000000000f009	movl	%ebx, (%r15)
000000000000f00c	movq	0x18(%r12), %rax
000000000000f011	cmpl	%ecx, 0x4(%rax)
000000000000f014	movl	$0x6, %eax
000000000000f019	cmovsl	%ecx, %eax
000000000000f01c	addq	$0x8, %rsp
000000000000f020	popq	%rbx
000000000000f021	popq	%r12
000000000000f023	popq	%r13
000000000000f025	popq	%r14
000000000000f027	popq	%r15
000000000000f029	popq	%rbp
000000000000f02a	retq
000000000000f02b	movl	$0x2d, %eax
000000000000f030	jmp	0xf01c
000000000000f032	movl	(%r12), %edi
000000000000f036	movl	0x4(%r12), %edx
000000000000f03b	movl	$0x2, %esi
000000000000f040	callq	___channel_sync
000000000000f045	testl	%eax, %eax
000000000000f047	je	0xeefe
000000000000f04d	movq	0x18(%r12), %rcx
000000000000f052	cmpl	$0x0, 0x4(%rcx)
000000000000f056	jns	0xf01c
000000000000f058	movl	%eax, %edi
000000000000f05a	callq	_os_channel_packet_alloc.cold.6
000000000000f05f	movq	0x18(%r12), %rax
000000000000f064	cmpl	$0x0, 0x4(%rax)
000000000000f068	movl	$0x6, %ecx
000000000000f06d	movl	$0xc, %eax
000000000000f072	cmovnsl	%ecx, %eax
000000000000f075	jmp	0xf01c
000000000000f077	movq	0x48(%r12,%r13), %rcx
000000000000f07c	cmpl	$0x0, (%rcx)
000000000000f07f	jns	0xef19
000000000000f085	callq	_os_channel_packet_alloc.cold.1
000000000000f08a	movq	0x48(%r12,%r13), %rdx
000000000000f08f	cmpl	$0x0, (%rdx)
000000000000f092	jns	0xef46
000000000000f098	callq	_os_channel_packet_alloc.cold.5
000000000000f09d	movl	$0x6, %eax
000000000000f0a2	jmp	0xf01c
000000000000f0a7	movq	0x48(%r12,%r13), %rcx
000000000000f0ac	movl	$0x6, %eax
000000000000f0b1	cmpl	$0x0, (%rcx)
000000000000f0b4	jns	0xf01c
000000000000f0ba	callq	_os_channel_packet_alloc.cold.2
000000000000f0bf	movl	%eax, %edi
000000000000f0c1	callq	_os_channel_packet_alloc.cold.3
000000000000f0c6	callq	_os_channel_packet_alloc.cold.4
_os_channel_packet_free:
000000000000f0cb	pushq	%rbp
000000000000f0cc	movq	%rsp, %rbp
000000000000f0cf	pushq	%r15
000000000000f0d1	pushq	%r14
000000000000f0d3	pushq	%r13
000000000000f0d5	pushq	%r12
000000000000f0d7	pushq	%rbx
000000000000f0d8	pushq	%rax
000000000000f0d9	movq	0x10(%rdi), %rax
000000000000f0dd	testb	$0x8, 0x10(%rax)
000000000000f0e1	je	0xf19a
000000000000f0e7	movq	%rsi, %r14
000000000000f0ea	movq	%rdi, %r15
000000000000f0ed	movl	$0x3, %ecx
000000000000f0f2	subl	0x130(%rax), %ecx
000000000000f0f8	addl	0x134(%rax), %ecx
000000000000f0fe	subl	0x138(%rax), %ecx
000000000000f104	addl	0x13c(%rax), %ecx
000000000000f10a	leaq	(%rcx,%rcx,4), %rbx
000000000000f10e	shlq	$0x4, %rbx
000000000000f112	movq	0x50(%rdi,%rbx), %r12
000000000000f117	movl	(%r12), %r13d
000000000000f11b	cmpl	0x4(%r12), %r13d
000000000000f120	je	0xf1a1
000000000000f122	cmpl	0x4(%r12), %r13d
000000000000f127	je	0xf1d0
000000000000f12d	leaq	0x50(%r15,%rbx), %rax
000000000000f132	andq	$-0x10, %r14
000000000000f136	movl	-0x8(%r14), %edi
000000000000f13a	movq	0x28(%rax), %rcx
000000000000f13e	movq	(%rax), %rax
000000000000f141	movl	0x14(%rax), %eax
000000000000f144	imull	%edi, %eax
000000000000f147	leaq	0x10(%rcx,%rax), %rax
000000000000f14c	cmpq	%rax, %r14
000000000000f14f	jne	0xf1e3
000000000000f155	movq	0x58(%r15,%rbx), %rax
000000000000f15a	movl	%edi, (%rax,%r13,8)
000000000000f15e	movq	0x58(%r15,%rbx), %rax
000000000000f163	orw	$0x1, 0x4(%rax,%r13,8)
000000000000f16a	leal	0x1(%r13), %eax
000000000000f16e	xorl	%ecx, %ecx
000000000000f170	cmpl	0xc(%r12), %eax
000000000000f175	cmovel	%ecx, %eax
000000000000f178	movl	%eax, (%r12)
000000000000f17c	movq	0x48(%r15,%rbx), %rax
000000000000f181	cmpl	%ecx, (%rax)
000000000000f183	movl	$0x6, %eax
000000000000f188	cmovsl	%ecx, %eax
000000000000f18b	addq	$0x8, %rsp
000000000000f18f	popq	%rbx
000000000000f190	popq	%r12
000000000000f192	popq	%r13
000000000000f194	popq	%r14
000000000000f196	popq	%r15
000000000000f198	popq	%rbp
000000000000f199	retq
000000000000f19a	movl	$0x2d, %eax
000000000000f19f	jmp	0xf18b
000000000000f1a1	movl	(%r15), %edi
000000000000f1a4	movl	$0x2, %esi
000000000000f1a9	movl	$0x2, %edx
000000000000f1ae	callq	___channel_sync
000000000000f1b3	testl	%eax, %eax
000000000000f1b5	je	0xf122
000000000000f1bb	movq	0x18(%r15), %rcx
000000000000f1bf	cmpl	$0x0, 0x4(%rcx)
000000000000f1c3	jns	0xf122
000000000000f1c9	movl	%eax, %edi
000000000000f1cb	callq	_os_channel_packet_free.cold.3
000000000000f1d0	movq	0x18(%r15), %rax
000000000000f1d4	cmpl	$0x0, 0x4(%rax)
000000000000f1d8	jns	0xf12d
000000000000f1de	callq	_os_channel_packet_free.cold.1
000000000000f1e3	movq	0x48(%r15,%rbx), %rax
000000000000f1e8	cmpl	$0x0, (%rax)
000000000000f1eb	jns	0xf155
000000000000f1f1	callq	_os_channel_packet_free.cold.2
_os_channel_slot_attach_packet:
000000000000f1f6	pushq	%rbp
000000000000f1f7	movq	%rsp, %rbp
000000000000f1fa	movq	(%rdi), %rax
000000000000f1fd	movq	0x10(%rax), %rax
000000000000f201	testb	$0x8, 0x10(%rax)
000000000000f205	je	0xf2a6
000000000000f20b	andq	$-0x10, %rdx
000000000000f20f	movzwl	0x14(%rdx), %eax
000000000000f213	testb	$0x1, %al
000000000000f215	je	0xf2ad
000000000000f21b	movq	%rsi, %rax
000000000000f21e	subq	0x18(%rdi), %rax
000000000000f222	shrq	$0x3, %rax
000000000000f226	movq	0x10(%rdi), %r9
000000000000f22a	movl	(%r9), %ecx
000000000000f22d	cmpl	0x4(%r9), %ecx
000000000000f231	jbe	0xf259
000000000000f233	movl	0x4(%r9), %ecx
000000000000f237	cmpl	%eax, %ecx
000000000000f239	ja	0xf268
000000000000f23b	movl	(%r9), %ecx
000000000000f23e	cmpl	%eax, %ecx
000000000000f240	ja	0xf248
000000000000f242	cmpl	%eax, 0xc(%r9)
000000000000f246	ja	0xf268
000000000000f248	movq	0x8(%rdi), %rax
000000000000f24c	cmpl	$0x0, (%rax)
000000000000f24f	jns	0xf298
000000000000f251	movq	%rsi, %rdi
000000000000f254	callq	_os_channel_slot_attach_packet.cold.4
000000000000f259	movl	(%r9), %ecx
000000000000f25c	cmpl	%eax, %ecx
000000000000f25e	ja	0xf248
000000000000f260	movl	0x4(%r9), %ecx
000000000000f264	cmpl	%eax, %ecx
000000000000f266	jbe	0xf248
000000000000f268	movzwl	0x4(%rsi), %eax
000000000000f26c	testb	$0x1, %al
000000000000f26e	jne	0xf2bb
000000000000f270	movl	-0x8(%rdx), %r8d
000000000000f274	movq	0x38(%rdi), %r10
000000000000f278	movl	0x14(%r9), %ecx
000000000000f27c	imull	%r8d, %ecx
000000000000f280	leaq	0x10(%r10,%rcx), %rcx
000000000000f285	cmpq	%rcx, %rdx
000000000000f288	jne	0xf2cc
000000000000f28a	movl	%r8d, (%rsi)
000000000000f28d	orl	$0x1, %eax
000000000000f290	movw	%ax, 0x4(%rsi)
000000000000f294	movq	0x8(%rdi), %rax
000000000000f298	xorl	%ecx, %ecx
000000000000f29a	cmpl	%ecx, (%rax)
000000000000f29c	movl	$0x6, %eax
000000000000f2a1	cmovsl	%ecx, %eax
000000000000f2a4	popq	%rbp
000000000000f2a5	retq
000000000000f2a6	movl	$0x2d, %eax
000000000000f2ab	jmp	0xf2a4
000000000000f2ad	movq	0x8(%rdi), %rax
000000000000f2b1	cmpl	$0x0, (%rax)
000000000000f2b4	jns	0xf298
000000000000f2b6	callq	_os_channel_slot_attach_packet.cold.1
000000000000f2bb	movq	0x8(%rdi), %rax
000000000000f2bf	cmpl	$0x0, (%rax)
000000000000f2c2	jns	0xf298
000000000000f2c4	movq	%rsi, %rdi
000000000000f2c7	callq	_os_channel_slot_attach_packet.cold.3
000000000000f2cc	movq	0x8(%rdi), %rcx
000000000000f2d0	cmpl	$0x0, (%rcx)
000000000000f2d3	jns	0xf28a
000000000000f2d5	movl	%r8d, %edi
000000000000f2d8	callq	_os_channel_slot_attach_packet.cold.2
_os_channel_slot_detach_packet:
000000000000f2dd	pushq	%rbp
000000000000f2de	movq	%rsp, %rbp
000000000000f2e1	movq	(%rdi), %rax
000000000000f2e4	movq	0x10(%rax), %rax
000000000000f2e8	testb	$0x8, 0x10(%rax)
000000000000f2ec	je	0xf3af
000000000000f2f2	movq	0x10(%rdi), %r10
000000000000f2f6	movq	0x18(%rdi), %r8
000000000000f2fa	movq	%rsi, %rax
000000000000f2fd	subq	%r8, %rax
000000000000f300	shrq	$0x3, %rax
000000000000f304	movl	(%r10), %ecx
000000000000f307	cmpl	0x4(%r10), %ecx
000000000000f30b	jbe	0xf333
000000000000f30d	movl	0x4(%r10), %ecx
000000000000f311	cmpl	%eax, %ecx
000000000000f313	ja	0xf342
000000000000f315	movl	(%r10), %ecx
000000000000f318	cmpl	%eax, %ecx
000000000000f31a	ja	0xf322
000000000000f31c	cmpl	%eax, 0xc(%r10)
000000000000f320	ja	0xf342
000000000000f322	movq	0x8(%rdi), %rax
000000000000f326	cmpl	$0x0, (%rax)
000000000000f329	jns	0xf3a1
000000000000f32b	movq	%rsi, %rdi
000000000000f32e	callq	_os_channel_slot_detach_packet.cold.4
000000000000f333	movl	(%r10), %ecx
000000000000f336	cmpl	%eax, %ecx
000000000000f338	ja	0xf322
000000000000f33a	movl	0x4(%r10), %ecx
000000000000f33e	cmpl	%eax, %ecx
000000000000f340	jbe	0xf322
000000000000f342	movzwl	0x4(%rsi), %r9d
000000000000f347	testb	$0x1, %r9b
000000000000f34b	je	0xf3b6
000000000000f34d	movq	0x38(%rdi), %r11
000000000000f351	movl	%eax, %eax
000000000000f353	movl	0x14(%r10), %ecx
000000000000f357	imull	(%r8,%rax,8), %ecx
000000000000f35c	leaq	0x10(%r11,%rcx), %rax
000000000000f361	andq	$-0x10, %rax
000000000000f365	movl	0x20(%rdi), %ecx
000000000000f368	movl	0x24(%rdi), %r8d
000000000000f36c	andl	$0x3, %ecx
000000000000f36f	orq	%rax, %rcx
000000000000f372	andl	$0x3, %r8d
000000000000f376	leaq	(%rcx,%r8,4), %rax
000000000000f37a	cmpq	%rdx, %rax
000000000000f37d	jne	0xf3c7
000000000000f37f	andq	$-0x10, %rdx
000000000000f383	movzwl	0x14(%rdx), %eax
000000000000f387	testb	$0x1, %al
000000000000f389	je	0xf3d5
000000000000f38b	movl	$0xffffffff, (%rsi)
000000000000f391	andl	$0xfffe, %r9d
000000000000f398	movw	%r9w, 0x4(%rsi)
000000000000f39d	movq	0x8(%rdi), %rax
000000000000f3a1	xorl	%ecx, %ecx
000000000000f3a3	cmpl	%ecx, (%rax)
000000000000f3a5	movl	$0x6, %eax
000000000000f3aa	cmovsl	%ecx, %eax
000000000000f3ad	popq	%rbp
000000000000f3ae	retq
000000000000f3af	movl	$0x2d, %eax
000000000000f3b4	jmp	0xf3ad
000000000000f3b6	movq	0x8(%rdi), %rax
000000000000f3ba	cmpl	$0x0, (%rax)
000000000000f3bd	jns	0xf3a1
000000000000f3bf	movq	%rsi, %rdi
000000000000f3c2	callq	_os_channel_slot_detach_packet.cold.1
000000000000f3c7	movq	0x8(%rdi), %rax
000000000000f3cb	cmpl	$0x0, (%rax)
000000000000f3ce	jns	0xf3a1
000000000000f3d0	callq	_os_channel_slot_detach_packet.cold.3
000000000000f3d5	movq	0x8(%rdi), %rax
000000000000f3d9	cmpl	$0x0, (%rax)
000000000000f3dc	jns	0xf3a1
000000000000f3de	callq	_os_channel_slot_detach_packet.cold.2
_os_channel_packet_pool_purge:
000000000000f3e3	pushq	%rbp
000000000000f3e4	movq	%rsp, %rbp
000000000000f3e7	pushq	%r15
000000000000f3e9	pushq	%r14
000000000000f3eb	pushq	%r13
000000000000f3ed	pushq	%r12
000000000000f3ef	pushq	%rbx
000000000000f3f0	pushq	%rax
000000000000f3f1	movq	0x10(%rdi), %rax
000000000000f3f5	testb	$0x8, 0x10(%rax)
000000000000f3f9	je	0xf5f7
000000000000f3ff	movq	%rdi, %r14
000000000000f402	movl	$0x2, %ecx
000000000000f407	subl	0x130(%rax), %ecx
000000000000f40d	addl	0x134(%rax), %ecx
000000000000f413	subl	0x138(%rax), %ecx
000000000000f419	addl	0x13c(%rax), %ecx
000000000000f41f	leaq	(%rcx,%rcx,4), %rbx
000000000000f423	shlq	$0x4, %rbx
000000000000f427	movq	0x50(%rdi,%rbx), %r15
000000000000f42c	movl	(%r15), %r13d
000000000000f42f	movl	(%rdi), %edi
000000000000f431	movl	$0x2, %esi
000000000000f436	movl	$0x5, %edx
000000000000f43b	callq	___channel_sync
000000000000f440	testl	%eax, %eax
000000000000f442	jne	0xf5fe
000000000000f448	movl	0x4(%r15), %r12d
000000000000f44c	subl	%r13d, %r12d
000000000000f44f	movq	%r14, -0x30(%rbp)
000000000000f453	jns	0xf459
000000000000f455	addl	0xc(%r15), %r12d
000000000000f459	movl	0x48(%r15), %r14d
000000000000f45d	movq	-0x30(%rbp), %rax
000000000000f461	leaq	0x58(%rax,%rbx), %rbx
000000000000f466	cmpl	%r14d, %r12d
000000000000f469	jbe	0xf594
000000000000f46f	movq	(%rbx), %rsi
000000000000f472	movl	%r13d, %eax
000000000000f475	testb	$0x1, 0x4(%rsi,%rax,8)
000000000000f47a	je	0xf570
000000000000f480	movq	0x20(%rbx), %rdx
000000000000f484	movl	0x14(%r15), %ecx
000000000000f488	imull	(%rsi,%rax,8), %ecx
000000000000f48c	leaq	0x10(%rdx,%rcx), %r9
000000000000f491	movq	-0x10(%r9), %rdi
000000000000f495	movq	%r9, %rcx
000000000000f498	subq	%rdx, %rcx
000000000000f49b	xorq	___os_ch_md_redzone_cookie(%rip), %rcx
000000000000f4a2	cmpq	%rcx, %rdi
000000000000f4a5	jne	0xf582
000000000000f4ab	movl	0x8(%rbx), %edx
000000000000f4ae	movl	0xc(%rbx), %r8d
000000000000f4b2	movl	$0xffffffff, (%rsi,%rax,8)
000000000000f4b9	movq	(%rbx), %rcx
000000000000f4bc	andw	$-0x2, 0x4(%rcx,%rax,8)
000000000000f4c2	cmpl	$0x2, 0x8(%rbx)
000000000000f4c6	jne	0xf524
000000000000f4c8	movzwl	0x6a(%r9), %edi
000000000000f4cd	testw	%di, %di
000000000000f4d0	je	0xf5e4
000000000000f4d6	movzwl	0x68(%r9), %esi
000000000000f4db	testw	%si, %si
000000000000f4de	je	0xf5e4
000000000000f4e4	movzwl	%si, %eax
000000000000f4e7	cmpl	%eax, 0x30(%rbx)
000000000000f4ea	jb	0xf61f
000000000000f4f0	cmpw	%si, %di
000000000000f4f3	ja	0xf61a
000000000000f4f9	movl	0x10(%r15), %eax
000000000000f4fd	leal	-0x1(%rdi), %ecx
000000000000f500	movzwl	%cx, %ecx
000000000000f503	leaq	(%rcx,%rcx,2), %rcx
000000000000f507	leaq	0x78(%r9,%rcx,8), %rsi
000000000000f50c	movl	(%rsi), %ecx
000000000000f50e	imull	%eax, %ecx
000000000000f511	addq	0x18(%rbx), %rcx
000000000000f515	movq	%rcx, -0x8(%rsi)
000000000000f519	addq	$-0x18, %rsi
000000000000f51d	decw	%di
000000000000f520	jne	0xf50c
000000000000f522	jmp	0xf535
000000000000f524	movl	0x10(%r15), %eax
000000000000f528	imull	0x20(%r9), %eax
000000000000f52d	addq	0x18(%rbx), %rax
000000000000f531	movq	%rax, 0x18(%r9)
000000000000f535	decl	%r12d
000000000000f538	andq	$-0x10, %r9
000000000000f53c	andl	$0x3, %edx
000000000000f53f	orq	%r9, %rdx
000000000000f542	andl	$0x3, %r8d
000000000000f546	incl	%r13d
000000000000f549	cmpl	0xc(%r15), %r13d
000000000000f54d	leaq	(%rdx,%r8,4), %rsi
000000000000f551	movl	$0x0, %eax
000000000000f556	cmovel	%eax, %r13d
000000000000f55a	movl	%r13d, (%r15)
000000000000f55d	movq	-0x30(%rbp), %rdi
000000000000f561	callq	_os_channel_packet_free
000000000000f566	testl	%eax, %eax
000000000000f568	je	0xf466
000000000000f56e	jmp	0xf5cf
000000000000f570	movq	-0x10(%rbx), %rcx
000000000000f574	cmpl	$0x0, (%rcx)
000000000000f577	jns	0xf480
000000000000f57d	jmp	0xf626
000000000000f582	movq	-0x10(%rbx), %rcx
000000000000f586	cmpl	$0x0, (%rcx)
000000000000f589	jns	0xf4ab
000000000000f58f	callq	_os_channel_packet_pool_purge.cold.6
000000000000f594	movq	-0x30(%rbp), %rbx
000000000000f598	movl	(%rbx), %edi
000000000000f59a	movl	$0x2, %esi
000000000000f59f	movl	$0x2, %edx
000000000000f5a4	callq	___channel_sync
000000000000f5a9	movq	0x18(%rbx), %rcx
000000000000f5ad	movl	0x4(%rcx), %ecx
000000000000f5b0	testl	%eax, %eax
000000000000f5b2	jne	0xf60f
000000000000f5b4	xorl	%edx, %edx
000000000000f5b6	testl	%ecx, %ecx
000000000000f5b8	movl	$0x6, %eax
000000000000f5bd	cmovsl	%edx, %eax
000000000000f5c0	addq	$0x8, %rsp
000000000000f5c4	popq	%rbx
000000000000f5c5	popq	%r12
000000000000f5c7	popq	%r13
000000000000f5c9	popq	%r14
000000000000f5cb	popq	%r15
000000000000f5cd	popq	%rbp
000000000000f5ce	retq
000000000000f5cf	movq	-0x30(%rbp), %rcx
000000000000f5d3	movq	0x18(%rcx), %rcx
000000000000f5d7	cmpl	$0x0, 0x4(%rcx)
000000000000f5db	jns	0xf5c0
000000000000f5dd	movl	%eax, %edi
000000000000f5df	callq	_os_channel_packet_pool_purge.cold.5
000000000000f5e4	movq	-0x10(%rbx), %rcx
000000000000f5e8	movl	$0x6, %eax
000000000000f5ed	cmpl	$0x0, (%rcx)
000000000000f5f0	jns	0xf5c0
000000000000f5f2	callq	_os_channel_packet_pool_purge.cold.2
000000000000f5f7	movl	$0x2d, %eax
000000000000f5fc	jmp	0xf5c0
000000000000f5fe	movq	0x18(%r14), %rcx
000000000000f602	cmpl	$0x0, 0x4(%rcx)
000000000000f606	jns	0xf5c0
000000000000f608	movl	%eax, %edi
000000000000f60a	callq	_os_channel_packet_pool_purge.cold.8
000000000000f60f	testl	%ecx, %ecx
000000000000f611	jns	0xf5c0
000000000000f613	movl	%eax, %edi
000000000000f615	callq	_os_channel_packet_pool_purge.cold.7
000000000000f61a	callq	_os_channel_packet_pool_purge.cold.4
000000000000f61f	movl	%eax, %edi
000000000000f621	callq	_os_channel_packet_pool_purge.cold.3
000000000000f626	callq	_os_channel_packet_pool_purge.cold.1
_os_channel_get_next_event_handle:
000000000000f62b	pushq	%rbp
000000000000f62c	movq	%rsp, %rbp
000000000000f62f	pushq	%r15
000000000000f631	pushq	%r14
000000000000f633	pushq	%r13
000000000000f635	pushq	%r12
000000000000f637	pushq	%rbx
000000000000f638	pushq	%rax
000000000000f639	movl	$0x16, %eax
000000000000f63e	testq	%rsi, %rsi
000000000000f641	je	0xf7f8
000000000000f647	testq	%rdx, %rdx
000000000000f64a	je	0xf7f8
000000000000f650	testq	%rcx, %rcx
000000000000f653	je	0xf7f8
000000000000f659	movq	0x10(%rdi), %rax
000000000000f65d	testb	$0x40, 0x10(%rax)
000000000000f661	je	0xf807
000000000000f667	movq	0x18(%rdi), %r8
000000000000f66b	movq	$0x0, (%rsi)
000000000000f672	movl	$0x2, %ebx
000000000000f677	subl	0x130(%rax), %ebx
000000000000f67d	addl	0x134(%rax), %ebx
000000000000f683	subl	0x138(%rax), %ebx
000000000000f689	addl	0x13c(%rax), %ebx
000000000000f68f	movl	0x120(%r8), %eax
000000000000f696	leal	(%rbx,%rax,2), %eax
000000000000f699	leaq	(%rax,%rax,4), %r11
000000000000f69d	shlq	$0x4, %r11
000000000000f6a1	movq	0x50(%rdi,%r11), %r9
000000000000f6a6	movl	(%r9), %r10d
000000000000f6a9	cmpl	0x4(%r9), %r10d
000000000000f6ad	je	0xf80e
000000000000f6b3	movq	0x58(%rdi,%r11), %r14
000000000000f6b8	testb	$0x1, 0x4(%r14,%r10,8)
000000000000f6be	je	0xf822
000000000000f6c4	movq	0x78(%rdi,%r11), %rbx
000000000000f6c9	movl	0x14(%r9), %eax
000000000000f6cd	imull	(%r14,%r10,8), %eax
000000000000f6d2	leaq	0x10(%rbx,%rax), %r15
000000000000f6d7	movq	-0x10(%r15), %r8
000000000000f6db	movq	%r15, %rax
000000000000f6de	subq	%rbx, %rax
000000000000f6e1	xorq	___os_ch_md_redzone_cookie(%rip), %rax
000000000000f6e8	cmpq	%rax, %r8
000000000000f6eb	jne	0xf835
000000000000f6f1	leaq	0x50(%rdi,%r11), %rax
000000000000f6f6	movl	$0xffffffff, (%r14,%r10,8)
000000000000f6fe	movq	0x8(%rax), %rbx
000000000000f702	andw	$-0x2, 0x4(%rbx,%r10,8)
000000000000f709	movq	(%rax), %r13
000000000000f70c	movl	0x10(%rax), %r14d
000000000000f710	cmpq	$0x2, %r14
000000000000f714	jne	0xf790
000000000000f716	movzwl	0x6a(%r15), %eax
000000000000f71b	testw	%ax, %ax
000000000000f71e	je	0xf852
000000000000f724	movzwl	0x68(%r15), %ebx
000000000000f729	testw	%bx, %bx
000000000000f72c	je	0xf852
000000000000f732	movzwl	%bx, %r8d
000000000000f736	cmpl	%r8d, 0x88(%rdi,%r11)
000000000000f73e	jb	0xf866
000000000000f744	cmpw	%bx, %ax
000000000000f747	ja	0xf86e
000000000000f74d	movzwl	0x80(%r15), %ebx
000000000000f755	movw	%bx, -0x2a(%rbp)
000000000000f759	leaq	0x70(%rdi,%r11), %r12
000000000000f75e	movl	0x10(%r13), %r13d
000000000000f762	leal	-0x1(%rax), %ebx
000000000000f765	movzwl	%bx, %ebx
000000000000f768	leaq	(%rbx,%rbx,2), %rbx
000000000000f76c	leaq	0x78(%r15,%rbx,8), %r8
000000000000f771	movl	(%r8), %ebx
000000000000f774	imull	%r13d, %ebx
000000000000f778	addq	(%r12), %rbx
000000000000f77c	movq	%rbx, -0x8(%r8)
000000000000f780	addq	$-0x18, %r8
000000000000f784	decw	%ax
000000000000f787	jne	0xf771
000000000000f789	movzwl	-0x2a(%rbp), %r8d
000000000000f78e	jmp	0xf7a7
000000000000f790	movl	0x10(%r13), %ebx
000000000000f794	imull	0x20(%r15), %ebx
000000000000f799	movzwl	0x28(%r15), %r8d
000000000000f79e	addq	0x70(%rdi,%r11), %rbx
000000000000f7a3	movq	%rbx, 0x18(%r15)
000000000000f7a7	testq	%rbx, %rbx
000000000000f7aa	je	0xf84b
000000000000f7b0	andq	$-0x10, %r15
000000000000f7b4	andl	$0x3, %r14d
000000000000f7b8	orq	%r15, %r14
000000000000f7bb	movl	0x64(%rdi,%r11), %eax
000000000000f7c0	andl	$0x3, %eax
000000000000f7c3	leaq	(%r14,%rax,4), %rax
000000000000f7c7	movq	%rax, (%rsi)
000000000000f7ca	movzwl	%r8w, %eax
000000000000f7ce	movl	(%rbx,%rax), %esi
000000000000f7d1	movl	%esi, (%rdx)
000000000000f7d3	movl	0x4(%rbx,%rax), %eax
000000000000f7d7	movl	%eax, (%rcx)
000000000000f7d9	incl	%r10d
000000000000f7dc	xorl	%ecx, %ecx
000000000000f7de	cmpl	0xc(%r9), %r10d
000000000000f7e2	cmovel	%ecx, %r10d
000000000000f7e6	movl	%r10d, (%r9)
000000000000f7e9	movq	0x18(%rdi), %rax
000000000000f7ed	cmpl	%ecx, 0x4(%rax)
000000000000f7f0	movl	$0x6, %eax
000000000000f7f5	cmovsl	%ecx, %eax
000000000000f7f8	addq	$0x8, %rsp
000000000000f7fc	popq	%rbx
000000000000f7fd	popq	%r12
000000000000f7ff	popq	%r13
000000000000f801	popq	%r14
000000000000f803	popq	%r15
000000000000f805	popq	%rbp
000000000000f806	retq
000000000000f807	movl	$0x2d, %eax
000000000000f80c	jmp	0xf7f8
000000000000f80e	cmpl	$0x0, 0x4(%r8)
000000000000f813	movl	$0x6, %ecx
000000000000f818	movl	$0x60, %eax
000000000000f81d	cmovnsl	%ecx, %eax
000000000000f820	jmp	0xf7f8
000000000000f822	movq	0x48(%rdi,%r11), %rax
000000000000f827	cmpl	$0x0, (%rax)
000000000000f82a	jns	0xf6c4
000000000000f830	callq	_os_channel_get_next_event_handle.cold.1
000000000000f835	movq	0x48(%rdi,%r11), %rax
000000000000f83a	cmpl	$0x0, (%rax)
000000000000f83d	jns	0xf6f1
000000000000f843	movq	%r8, %rdi
000000000000f846	callq	_os_channel_get_next_event_handle.cold.5
000000000000f84b	movl	$0x6, %eax
000000000000f850	jmp	0xf7f8
000000000000f852	movq	0x48(%rdi,%r11), %rcx
000000000000f857	movl	$0x6, %eax
000000000000f85c	cmpl	$0x0, (%rcx)
000000000000f85f	jns	0xf7f8
000000000000f861	callq	_os_channel_get_next_event_handle.cold.2
000000000000f866	movl	%r8d, %edi
000000000000f869	callq	_os_channel_get_next_event_handle.cold.3
000000000000f86e	movl	%eax, %edi
000000000000f870	callq	_os_channel_get_next_event_handle.cold.4
_os_channel_event_free:
000000000000f875	jmp	_os_channel_packet_free
_os_channel_get_interface_advisory:
000000000000f87a	pushq	%rbp
000000000000f87b	movq	%rsp, %rbp
000000000000f87e	pushq	%r15
000000000000f880	pushq	%r14
000000000000f882	pushq	%rbx
000000000000f883	pushq	%rax
000000000000f884	movq	%rdi, %r14
000000000000f887	movq	0x30(%rdi), %rdi
000000000000f88b	movl	$0x2, %ecx
000000000000f890	testq	%rdi, %rdi
000000000000f893	je	0xf8bb
000000000000f895	cmpl	$0x2, 0x4(%rdi)
000000000000f899	jne	0xf8bb
000000000000f89b	movl	0x10(%rdi), %r15d
000000000000f89f	addq	$0x18, %rdi
000000000000f8a3	xorl	%ebx, %ebx
000000000000f8a5	movl	$0x38, %edx
000000000000f8aa	xorl	%ecx, %ecx
000000000000f8ac	callq	_os_cpu_copy_in_cksum
000000000000f8b1	movl	$0x23, %ecx
000000000000f8b6	cmpl	%eax, %r15d
000000000000f8b9	je	0xf8cb
000000000000f8bb	movq	0x18(%r14), %rax
000000000000f8bf	cmpl	$0x0, 0x4(%rax)
000000000000f8c3	movl	$0x6, %ebx
000000000000f8c8	cmovsl	%ecx, %ebx
000000000000f8cb	movl	%ebx, %eax
000000000000f8cd	addq	$0x8, %rsp
000000000000f8d1	popq	%rbx
000000000000f8d2	popq	%r14
000000000000f8d4	popq	%r15
000000000000f8d6	popq	%rbp
000000000000f8d7	retq
_os_channel_configure_interface_advisory:
000000000000f8d8	pushq	%rbp
000000000000f8d9	movq	%rsp, %rbp
000000000000f8dc	subq	$0x10, %rsp
000000000000f8e0	leaq	-0x4(%rbp), %rdx
000000000000f8e4	movl	%esi, (%rdx)
000000000000f8e6	movl	(%rdi), %edi
000000000000f8e8	movl	$0x3, %esi
000000000000f8ed	movl	$0x4, %ecx
000000000000f8f2	callq	___channel_set_opt
000000000000f8f7	addq	$0x10, %rsp
000000000000f8fb	popq	%rbp
000000000000f8fc	retq
_sem_destroy:
000000000000f8fd	pushq	%rbp
000000000000f8fe	movq	%rsp, %rbp
000000000000f901	callq	___error
000000000000f906	movl	$0x4e, (%rax)
000000000000f90c	movl	$0xffffffff, %eax
000000000000f911	popq	%rbp
000000000000f912	retq
_sem_getvalue:
000000000000f913	pushq	%rbp
000000000000f914	movq	%rsp, %rbp
000000000000f917	callq	___error
000000000000f91c	movl	$0x4e, (%rax)
000000000000f922	movl	$0xffffffff, %eax
000000000000f927	popq	%rbp
000000000000f928	retq
_sem_init:
000000000000f929	pushq	%rbp
000000000000f92a	movq	%rsp, %rbp
000000000000f92d	callq	___error
000000000000f932	movl	$0x4e, (%rax)
000000000000f938	movl	$0xffffffff, %eax
000000000000f93d	popq	%rbp
000000000000f93e	retq
_pid_shutdown_networking:
000000000000f93f	jmp	_pid_shutdown_sockets
_coalition_create:
000000000000f944	movl	%esi, %edx
000000000000f946	movq	%rdi, %rsi
000000000000f949	movl	$0x1, %edi
000000000000f94e	jmp	___coalition
_coalition_terminate:
000000000000f953	pushq	%rbp
000000000000f954	movq	%rsp, %rbp
000000000000f957	subq	$0x10, %rsp
000000000000f95b	movl	%esi, %edx
000000000000f95d	leaq	-0x8(%rbp), %rsi
000000000000f961	movq	%rdi, (%rsi)
000000000000f964	movl	$0x2, %edi
000000000000f969	callq	___coalition
000000000000f96e	addq	$0x10, %rsp
000000000000f972	popq	%rbp
000000000000f973	retq
_coalition_reap:
000000000000f974	pushq	%rbp
000000000000f975	movq	%rsp, %rbp
000000000000f978	subq	$0x10, %rsp
000000000000f97c	movl	%esi, %edx
000000000000f97e	leaq	-0x8(%rbp), %rsi
000000000000f982	movq	%rdi, (%rsi)
000000000000f985	movl	$0x3, %edi
000000000000f98a	callq	___coalition
000000000000f98f	addq	$0x10, %rsp
000000000000f993	popq	%rbp
000000000000f994	retq
_coalition_info_resource_usage:
000000000000f995	pushq	%rbp
000000000000f996	movq	%rsp, %rbp
000000000000f999	subq	$0x10, %rsp
000000000000f99d	movq	%rsi, %rax
000000000000f9a0	leaq	-0x10(%rbp), %rsi
000000000000f9a4	movq	%rdi, (%rsi)
000000000000f9a7	leaq	-0x8(%rbp), %rcx
000000000000f9ab	movq	%rdx, (%rcx)
000000000000f9ae	movl	$0x1, %edi
000000000000f9b3	movq	%rax, %rdx
000000000000f9b6	callq	___coalition_info
000000000000f9bb	addq	$0x10, %rsp
000000000000f9bf	popq	%rbp
000000000000f9c0	retq
_coalition_info_set_name:
000000000000f9c1	pushq	%rbp
000000000000f9c2	movq	%rsp, %rbp
000000000000f9c5	subq	$0x10, %rsp
000000000000f9c9	movq	%rsi, %rax
000000000000f9cc	leaq	-0x10(%rbp), %rsi
000000000000f9d0	movq	%rdi, (%rsi)
000000000000f9d3	leaq	-0x8(%rbp), %rcx
000000000000f9d7	movq	%rdx, (%rcx)
000000000000f9da	movl	$0x2, %edi
000000000000f9df	movq	%rax, %rdx
000000000000f9e2	callq	___coalition_info
000000000000f9e7	addq	$0x10, %rsp
000000000000f9eb	popq	%rbp
000000000000f9ec	retq
_coalition_info_set_efficiency:
000000000000f9ed	pushq	%rbp
000000000000f9ee	movq	%rsp, %rbp
000000000000f9f1	subq	$0x20, %rsp
000000000000f9f5	leaq	-0x18(%rbp), %rax
000000000000f9f9	movq	%rdi, (%rax)
000000000000f9fc	leaq	-0x10(%rbp), %rdx
000000000000fa00	movq	%rsi, (%rdx)
000000000000fa03	leaq	-0x8(%rbp), %rcx
000000000000fa07	movq	$0x8, (%rcx)
000000000000fa0e	movl	$0x3, %edi
000000000000fa13	movq	%rax, %rsi
000000000000fa16	callq	___coalition_info
000000000000fa1b	addq	$0x20, %rsp
000000000000fa1f	popq	%rbp
000000000000fa20	retq
_coalition_ledger_set_logical_writes_limit:
000000000000fa21	pushq	%rbp
000000000000fa22	movq	%rsp, %rbp
000000000000fa25	subq	$0x20, %rsp
000000000000fa29	leaq	-0x18(%rbp), %rax
000000000000fa2d	movq	%rdi, (%rax)
000000000000fa30	leaq	-0x10(%rbp), %rdx
000000000000fa34	movq	%rsi, (%rdx)
000000000000fa37	leaq	-0x8(%rbp), %rcx
000000000000fa3b	movq	$0x8, (%rcx)
000000000000fa42	movl	$0x1, %edi
000000000000fa47	movq	%rax, %rsi
000000000000fa4a	callq	___coalition_ledger
000000000000fa4f	addq	$0x20, %rsp
000000000000fa53	popq	%rbp
000000000000fa54	retq
_fs_snapshot_create:
000000000000fa55	movl	%edx, %r9d
000000000000fa58	movq	%rsi, %rdx
000000000000fa5b	movl	%edi, %esi
000000000000fa5d	movl	$0x1, %edi
000000000000fa62	xorl	%ecx, %ecx
000000000000fa64	xorl	%r8d, %r8d
000000000000fa67	jmp	___fs_snapshot
_fs_snapshot_delete:
000000000000fa6c	movl	%edx, %r9d
000000000000fa6f	movq	%rsi, %rdx
000000000000fa72	movl	%edi, %esi
000000000000fa74	movl	$0x2, %edi
000000000000fa79	xorl	%ecx, %ecx
000000000000fa7b	xorl	%r8d, %r8d
000000000000fa7e	jmp	___fs_snapshot
_fs_snapshot_rename:
000000000000fa83	movl	%ecx, %r9d
000000000000fa86	movq	%rdx, %rcx
000000000000fa89	movq	%rsi, %rdx
000000000000fa8c	movl	%edi, %esi
000000000000fa8e	movl	$0x3, %edi
000000000000fa93	xorl	%r8d, %r8d
000000000000fa96	jmp	___fs_snapshot
_fs_snapshot_revert:
000000000000fa9b	movl	%edx, %r9d
000000000000fa9e	movq	%rsi, %rdx
000000000000faa1	movl	%edi, %esi
000000000000faa3	movl	$0x5, %edi
000000000000faa8	xorl	%ecx, %ecx
000000000000faaa	xorl	%r8d, %r8d
000000000000faad	jmp	___fs_snapshot
_fs_snapshot_root:
000000000000fab2	movl	%edx, %r9d
000000000000fab5	movq	%rsi, %rdx
000000000000fab8	movl	%edi, %esi
000000000000faba	movl	$0x6, %edi
000000000000fabf	xorl	%ecx, %ecx
000000000000fac1	xorl	%r8d, %r8d
000000000000fac4	jmp	___fs_snapshot
_fs_snapshot_mount:
000000000000fac9	movl	%ecx, %r9d
000000000000facc	movq	%rsi, %rcx
000000000000facf	movl	%edi, %esi
000000000000fad1	movl	$0x4, %edi
000000000000fad6	xorl	%r8d, %r8d
000000000000fad9	jmp	___fs_snapshot
_pselect:
000000000000fade	pushq	%rbp
000000000000fadf	movq	%rsp, %rbp
000000000000fae2	pushq	%r15
000000000000fae4	pushq	%r14
000000000000fae6	pushq	%r13
000000000000fae8	pushq	%r12
000000000000faea	pushq	%rbx
000000000000faeb	subq	$0x38, %rsp
000000000000faef	movq	%r9, %rbx
000000000000faf2	movq	%rsi, %r12
000000000000faf5	movl	%edi, %r13d
000000000000faf8	testq	%r8, %r8
000000000000fafb	je	0xfb2f
000000000000fafd	movq	%r8, %r14
000000000000fb00	cmpq	$0x0, (%r8)
000000000000fb04	jne	0xfb32
000000000000fb06	movq	0x8(%r14), %rax
000000000000fb0a	decq	%rax
000000000000fb0d	cmpq	$0x98967e, %rax
000000000000fb13	ja	0xfb32
000000000000fb15	leaq	-0x50(%rbp), %r14
000000000000fb19	movl	$0x989680, %eax
000000000000fb1e	movq	%rax, %xmm0
000000000000fb23	pslldq	$0x8, %xmm0
000000000000fb28	movdqa	%xmm0, (%r14)
000000000000fb2d	jmp	0xfb32
000000000000fb2f	xorl	%r14d, %r14d
000000000000fb32	movl	%r13d, %edi
000000000000fb35	movq	%r12, %rsi
000000000000fb38	movq	%rdx, -0x30(%rbp)
000000000000fb3c	movq	%rcx, -0x38(%rbp)
000000000000fb40	movq	%r14, %r8
000000000000fb43	movq	%rbx, %r9
000000000000fb46	callq	___pselect
000000000000fb4b	movl	%eax, %r15d
000000000000fb4e	cmpl	$-0x1, %eax
000000000000fb51	jne	0xfc0f
000000000000fb57	callq	___error
000000000000fb5c	movl	$0xffffffff, %r15d
000000000000fb62	cmpl	$0x4e, (%rax)
000000000000fb65	jne	0xfc0f
000000000000fb6b	testq	%r14, %r14
000000000000fb6e	je	0xfb9d
000000000000fb70	movq	(%r14), %rax
000000000000fb73	leaq	-0x60(%rbp), %rcx
000000000000fb77	movq	%rax, (%rcx)
000000000000fb7a	movabsq	$0x20c49ba5e353f7cf, %rax
000000000000fb84	imulq	0x8(%r14)
000000000000fb88	movq	%rcx, %r14
000000000000fb8b	movq	%rdx, %rax
000000000000fb8e	shrq	$0x3f, %rax
000000000000fb92	shrq	$0x7, %rdx
000000000000fb96	addl	%eax, %edx
000000000000fb98	movl	%edx, 0x8(%rcx)
000000000000fb9b	jmp	0xfba0
000000000000fb9d	xorl	%r14d, %r14d
000000000000fba0	movq	-0x38(%rbp), %rcx
000000000000fba4	movq	-0x30(%rbp), %rdx
000000000000fba8	testq	%rbx, %rbx
000000000000fbab	je	0xfbfe
000000000000fbad	leaq	-0x3c(%rbp), %rdx
000000000000fbb1	movl	$0x3, %edi
000000000000fbb6	movq	%rbx, %rsi
000000000000fbb9	callq	___pthread_sigmask
000000000000fbbe	movl	%eax, %r15d
000000000000fbc1	testl	%eax, %eax
000000000000fbc3	jne	0xfc0f
000000000000fbc5	movl	%r13d, %edi
000000000000fbc8	movq	%r12, %rsi
000000000000fbcb	movq	-0x30(%rbp), %rdx
000000000000fbcf	movq	-0x38(%rbp), %rcx
000000000000fbd3	movq	%r14, %r8
000000000000fbd6	callq	_select
000000000000fbdb	movl	%eax, %r15d
000000000000fbde	callq	___error
000000000000fbe3	movl	(%rax), %ebx
000000000000fbe5	leaq	-0x3c(%rbp), %rsi
000000000000fbe9	movl	$0x3, %edi
000000000000fbee	xorl	%edx, %edx
000000000000fbf0	callq	___pthread_sigmask
000000000000fbf5	callq	___error
000000000000fbfa	movl	%ebx, (%rax)
000000000000fbfc	jmp	0xfc0f
000000000000fbfe	movl	%r13d, %edi
000000000000fc01	movq	%r12, %rsi
000000000000fc04	movq	%r14, %r8
000000000000fc07	callq	_select
000000000000fc0c	movl	%eax, %r15d
000000000000fc0f	movl	%r15d, %eax
000000000000fc12	addq	$0x38, %rsp
000000000000fc16	popq	%rbx
000000000000fc17	popq	%r12
000000000000fc19	popq	%r13
000000000000fc1b	popq	%r14
000000000000fc1d	popq	%r15
000000000000fc1f	popq	%rbp
000000000000fc20	retq
_kdebug_using_continuous_time:
000000000000fc21	movabsq	$0x7fffffe00044, %rax
000000000000fc2b	movl	(%rax), %eax
000000000000fc2d	andl	$0x20, %eax
000000000000fc30	shrl	$0x5, %eax
000000000000fc33	retq
_kdebug_signpost:
000000000000fc34	shll	$0x2, %edi
000000000000fc37	jmp	_kdebug_signpost_internal
_pselect$NOCANCEL:
000000000000fc3c	pushq	%rbp
000000000000fc3d	movq	%rsp, %rbp
000000000000fc40	pushq	%r15
000000000000fc42	pushq	%r14
000000000000fc44	pushq	%r13
000000000000fc46	pushq	%r12
000000000000fc48	pushq	%rbx
000000000000fc49	subq	$0x28, %rsp
000000000000fc4d	cmpl	$0x401, %edi
000000000000fc53	jl	0xfc6b
000000000000fc55	callq	___error
000000000000fc5a	movl	$0x16, (%rax)
000000000000fc60	movl	$0xffffffff, %r14d
000000000000fc66	jmp	0xfd45
000000000000fc6b	movq	%r9, %r13
000000000000fc6e	movq	%r8, %r15
000000000000fc71	movq	%rsi, %r12
000000000000fc74	movl	%edi, %ebx
000000000000fc76	movq	%rdx, -0x30(%rbp)
000000000000fc7a	movq	%rcx, -0x38(%rbp)
000000000000fc7e	callq	___pselect_nocancel
000000000000fc83	movl	%eax, %r14d
000000000000fc86	cmpl	$-0x1, %eax
000000000000fc89	jne	0xfd45
000000000000fc8f	callq	___error
000000000000fc94	movl	$0xffffffff, %r14d
000000000000fc9a	cmpl	$0x4e, (%rax)
000000000000fc9d	jne	0xfd45
000000000000fca3	testq	%r15, %r15
000000000000fca6	je	0xfcd5
000000000000fca8	movq	(%r15), %rax
000000000000fcab	leaq	-0x50(%rbp), %rcx
000000000000fcaf	movq	%rax, (%rcx)
000000000000fcb2	movabsq	$0x20c49ba5e353f7cf, %rax
000000000000fcbc	imulq	0x8(%r15)
000000000000fcc0	movq	%rcx, %r15
000000000000fcc3	movq	%rdx, %rax
000000000000fcc6	shrq	$0x3f, %rax
000000000000fcca	shrq	$0x7, %rdx
000000000000fcce	addl	%eax, %edx
000000000000fcd0	movl	%edx, 0x8(%rcx)
000000000000fcd3	jmp	0xfcd8
000000000000fcd5	xorl	%r15d, %r15d
000000000000fcd8	movq	-0x38(%rbp), %rcx
000000000000fcdc	movq	-0x30(%rbp), %rdx
000000000000fce0	testq	%r13, %r13
000000000000fce3	je	0xfd35
000000000000fce5	leaq	-0x3c(%rbp), %rdx
000000000000fce9	movl	$0x3, %edi
000000000000fcee	movq	%r13, %rsi
000000000000fcf1	callq	___pthread_sigmask
000000000000fcf6	movl	%eax, %r14d
000000000000fcf9	testl	%eax, %eax
000000000000fcfb	jne	0xfd45
000000000000fcfd	movl	%ebx, %edi
000000000000fcff	movq	%r12, %rsi
000000000000fd02	movq	-0x30(%rbp), %rdx
000000000000fd06	movq	-0x38(%rbp), %rcx
000000000000fd0a	movq	%r15, %r8
000000000000fd0d	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000000fd12	movl	%eax, %r14d
000000000000fd15	callq	___error
000000000000fd1a	movl	(%rax), %ebx
000000000000fd1c	leaq	-0x3c(%rbp), %rsi
000000000000fd20	movl	$0x3, %edi
000000000000fd25	xorl	%edx, %edx
000000000000fd27	callq	___pthread_sigmask
000000000000fd2c	callq	___error
000000000000fd31	movl	%ebx, (%rax)
000000000000fd33	jmp	0xfd45
000000000000fd35	movl	%ebx, %edi
000000000000fd37	movq	%r12, %rsi
000000000000fd3a	movq	%r15, %r8
000000000000fd3d	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000000fd42	movl	%eax, %r14d
000000000000fd45	movl	%r14d, %eax
000000000000fd48	addq	$0x28, %rsp
000000000000fd4c	popq	%rbx
000000000000fd4d	popq	%r12
000000000000fd4f	popq	%r13
000000000000fd51	popq	%r14
000000000000fd53	popq	%r15
000000000000fd55	popq	%rbp
000000000000fd56	retq
000000000000fd57	nop
_os_nexus_attr_create:
000000000000fd58	pushq	%rbp
000000000000fd59	movq	%rsp, %rbp
000000000000fd5c	pushq	%rbx
000000000000fd5d	pushq	%rax
000000000000fd5e	movl	$0xa0, %edi
000000000000fd63	callq	_malloc
000000000000fd68	movq	%rax, %rbx
000000000000fd6b	testq	%rax, %rax
000000000000fd6e	je	0xfd7d
000000000000fd70	movl	$0xa0, %esi
000000000000fd75	movq	%rbx, %rdi
000000000000fd78	callq	_bzero
000000000000fd7d	movq	%rbx, %rax
000000000000fd80	addq	$0x8, %rsp
000000000000fd84	popq	%rbx
000000000000fd85	popq	%rbp
000000000000fd86	retq
_os_nexus_attr_clone:
000000000000fd87	pushq	%rbp
000000000000fd88	movq	%rsp, %rbp
000000000000fd8b	pushq	%r14
000000000000fd8d	pushq	%rbx
000000000000fd8e	movq	%rdi, %r14
000000000000fd91	callq	_os_nexus_attr_create
000000000000fd96	movq	%rax, %rbx
000000000000fd99	testq	%r14, %r14
000000000000fd9c	je	0xfdb3
000000000000fd9e	testq	%rbx, %rbx
000000000000fda1	je	0xfdb3
000000000000fda3	movl	$0xa0, %edx
000000000000fda8	movq	%r14, %rdi
000000000000fdab	movq	%rbx, %rsi
000000000000fdae	callq	_bcopy
000000000000fdb3	movq	%rbx, %rax
000000000000fdb6	popq	%rbx
000000000000fdb7	popq	%r14
000000000000fdb9	popq	%rbp
000000000000fdba	retq
_os_nexus_attr_set:
000000000000fdbb	movl	$0x16, %eax
000000000000fdc0	testq	%rdi, %rdi
000000000000fdc3	je	0xfde1
000000000000fdc5	cmpl	$0x12, %esi
000000000000fdc8	ja	0xfde1
000000000000fdca	movl	$0x2d, %eax
000000000000fdcf	movl	%esi, %ecx
000000000000fdd1	leaq	0x84(%rip), %rsi
000000000000fdd8	movslq	(%rsi,%rcx,4), %rcx
000000000000fddc	addq	%rsi, %rcx
000000000000fddf	jmpq	*%rcx
000000000000fde1	retq
000000000000fde2	orb	$0x1, (%rdi)
000000000000fde5	movq	%rdx, 0x8(%rdi)
000000000000fde9	jmp	0xfe58
000000000000fdeb	orb	$0x2, (%rdi)
000000000000fdee	movq	%rdx, 0x10(%rdi)
000000000000fdf2	jmp	0xfe58
000000000000fdf4	orb	$0x4, (%rdi)
000000000000fdf7	movq	%rdx, 0x18(%rdi)
000000000000fdfb	jmp	0xfe58
000000000000fdfd	orb	$0x8, (%rdi)
000000000000fe00	movq	%rdx, 0x20(%rdi)
000000000000fe04	jmp	0xfe58
000000000000fe06	orb	$0x10, (%rdi)
000000000000fe09	movq	%rdx, 0x28(%rdi)
000000000000fe0d	jmp	0xfe58
000000000000fe0f	orb	$-0x80, (%rdi)
000000000000fe12	movq	%rdx, 0x40(%rdi)
000000000000fe16	jmp	0xfe58
000000000000fe18	orb	$0x4, 0x1(%rdi)
000000000000fe1c	movq	%rdx, 0x58(%rdi)
000000000000fe20	jmp	0xfe58
000000000000fe22	orb	$0x1, 0x1(%rdi)
000000000000fe26	movq	%rdx, 0x48(%rdi)
000000000000fe2a	jmp	0xfe58
000000000000fe2c	orb	$0x2, 0x1(%rdi)
000000000000fe30	movq	%rdx, 0x50(%rdi)
000000000000fe34	jmp	0xfe58
000000000000fe36	orb	$0x10, 0x1(%rdi)
000000000000fe3a	movq	%rdx, 0x70(%rdi)
000000000000fe3e	jmp	0xfe58
000000000000fe40	orb	$0x4, 0x2(%rdi)
000000000000fe44	movq	%rdx, 0x90(%rdi)
000000000000fe4b	jmp	0xfe58
000000000000fe4d	orb	$0x8, 0x2(%rdi)
000000000000fe51	movq	%rdx, 0x98(%rdi)
000000000000fe58	xorl	%eax, %eax
000000000000fe5a	retq
000000000000fe5b	nop
000000000000fe5c	xchgb	%bh, %bh
000000000000fe5e	.byte 0xff #bad opcode
000000000000fe5f	decl	-0x67000001(%rdi)
000000000000fe65	.byte 0xff #bad opcode
000000000000fe66	.byte 0xff #bad opcode
000000000000fe67	jmpq	*-0x55000001(%rcx)
000000000000fe6d	.byte 0xff #bad opcode
000000000000fe6e	.byte 0xff #bad opcode
000000000000fe6f	incl	-0x4c000001(%rbp)
000000000000fe75	.byte 0xff #bad opcode
000000000000fe76	.byte 0xff #bad opcode
000000000000fe77	.byte 0xff #bad opcode
000000000000fe78	movl	$0xc6ffffff, %esp
000000000000fe7d	.byte 0xff #bad opcode
000000000000fe7e	.byte 0xff #bad opcode
000000000000fe7f	callq	*%rax
000000000000fe81	.byte 0xff #bad opcode
000000000000fe82	.byte 0xff #bad opcode
000000000000fe83	incl	-0x7a000001(%rbp)
000000000000fe89	.byte 0xff #bad opcode
000000000000fe8a	.byte 0xff #bad opcode
000000000000fe8b	incl	-0x25000001(%rbp)
000000000000fe91	.byte 0xff #bad opcode
000000000000fe92	.byte 0xff #bad opcode
000000000000fe93	incl	-0x7a000001(%rbp)
000000000000fe99	.byte 0xff #bad opcode
000000000000fe9a	.byte 0xff #bad opcode
000000000000fe9b	incl	-0x1b000001(%rbp)
000000000000fea1	.byte 0xff #bad opcode
000000000000fea2	.byte 0xff #bad opcode
000000000000fea3	pushq	%rcx
000000000000fea5	.byte 0xff #bad opcode
000000000000fea6	.byte 0xff #bad opcode
000000000000fea7	.byte 0xff #bad opcode
_os_nexus_attr_get:
000000000000fea8	movl	$0x16, %eax
000000000000fead	testq	%rdi, %rdi
000000000000feb0	je	0xff5b
000000000000feb6	testq	%rdx, %rdx
000000000000feb9	je	0xff5b
000000000000febf	cmpl	$0x12, %esi
000000000000fec2	ja	0xff5b
000000000000fec8	movl	%esi, %eax
000000000000feca	leaq	0x8b(%rip), %rcx
000000000000fed1	movslq	(%rcx,%rax,4), %rax
000000000000fed5	addq	%rcx, %rax
000000000000fed8	jmpq	*%rax
000000000000feda	movq	0x8(%rdi), %rax
000000000000fede	jmp	0xff56
000000000000fee0	movq	0x10(%rdi), %rax
000000000000fee4	jmp	0xff56
000000000000fee6	movq	0x18(%rdi), %rax
000000000000feea	jmp	0xff56
000000000000feec	movq	0x20(%rdi), %rax
000000000000fef0	jmp	0xff56
000000000000fef2	movq	0x28(%rdi), %rax
000000000000fef6	jmp	0xff56
000000000000fef8	movq	0x30(%rdi), %rax
000000000000fefc	jmp	0xff56
000000000000fefe	movq	0x40(%rdi), %rax
000000000000ff02	jmp	0xff56
000000000000ff04	movq	0x58(%rdi), %rax
000000000000ff08	jmp	0xff56
000000000000ff0a	movq	0x50(%rdi), %rax
000000000000ff0e	jmp	0xff56
000000000000ff10	movq	0x60(%rdi), %rax
000000000000ff14	jmp	0xff56
000000000000ff16	movq	0x38(%rdi), %rax
000000000000ff1a	jmp	0xff56
000000000000ff1c	movq	0x68(%rdi), %rax
000000000000ff20	jmp	0xff56
000000000000ff22	movq	0x70(%rdi), %rax
000000000000ff26	jmp	0xff56
000000000000ff28	movq	0x78(%rdi), %rax
000000000000ff2c	jmp	0xff56
000000000000ff2e	movq	0x80(%rdi), %rax
000000000000ff35	jmp	0xff56
000000000000ff37	movq	0x88(%rdi), %rax
000000000000ff3e	jmp	0xff56
000000000000ff40	movq	0x90(%rdi), %rax
000000000000ff47	jmp	0xff56
000000000000ff49	movq	0x98(%rdi), %rax
000000000000ff50	jmp	0xff56
000000000000ff52	movq	0x48(%rdi), %rax
000000000000ff56	movq	%rax, (%rdx)
000000000000ff59	xorl	%eax, %eax
000000000000ff5b	retq
000000000000ff5c	jle	0xff5d
000000000000ff5e	.byte 0xff #bad opcode
000000000000ff5f	incl	-0x750001(%rdi,%rdi,8)
000000000000ff66	.byte 0xff #bad opcode
000000000000ff67	callq	*-0x69000001(%rax)
000000000000ff6d	.byte 0xff #bad opcode
000000000000ff6e	.byte 0xff #bad opcode
000000000000ff6f	lcalll	*-0x5d0001(%rdi,%rdi,8)
000000000000ff76	.byte 0xff #bad opcode
000000000000ff77	ljmpl	*-0x9000001(%rax)
000000000000ff7d	.byte 0xff #bad opcode
000000000000ff7e	.byte 0xff #bad opcode
000000000000ff7f	ljmpl	*-0x4b000001(%rsi)
000000000000ff85	.byte 0xff #bad opcode
000000000000ff86	.byte 0xff #bad opcode
000000000000ff87	.byte 0xff #bad opcode
000000000000ff88	movl	$0xc0ffffff, %edx
000000000000ff8d	.byte 0xff #bad opcode
000000000000ff8e	.byte 0xff #bad opcode
000000000000ff8f	incl	%esi
000000000000ff91	.byte 0xff #bad opcode
000000000000ff92	.byte 0xff #bad opcode
000000000000ff93	decl	%esp
000000000000ff95	.byte 0xff #bad opcode
000000000000ff96	.byte 0xff #bad opcode
000000000000ff97	callq	*%rdx
000000000000ff99	.byte 0xff #bad opcode
000000000000ff9a	.byte 0xff #bad opcode
000000000000ff9b	.byte 0xff #bad opcode
000000000000ff9c	.byte 0xdb #bad opcode
000000000000ff9d	.byte 0xff #bad opcode
000000000000ff9e	.byte 0xff #bad opcode
000000000000ff9f	jmpq	*%rsp
000000000000ffa1	.byte 0xff #bad opcode
000000000000ffa2	.byte 0xff #bad opcode
000000000000ffa3	.byte 0xff #bad opcode
000000000000ffa4	inl	%dx, %eax
000000000000ffa5	.byte 0xff #bad opcode
000000000000ffa6	.byte 0xff #bad opcode
000000000000ffa7	.byte 0xff #bad opcode
_os_nexus_attr_destroy:
000000000000ffa8	jmp	_free
_os_nexus_controller_create:
000000000000ffad	pushq	%rbp
000000000000ffae	movq	%rsp, %rbp
000000000000ffb1	pushq	%r14
000000000000ffb3	pushq	%rbx
000000000000ffb4	subq	$0x10, %rsp
000000000000ffb8	leaq	-0x20(%rbp), %rbx
000000000000ffbc	movl	$0x10, %esi
000000000000ffc1	movq	%rbx, %rdi
000000000000ffc4	callq	_bzero
000000000000ffc9	movl	$0x1, (%rbx)
000000000000ffcf	movq	%rbx, %rdi
000000000000ffd2	movl	$0x10, %esi
000000000000ffd7	callq	___nexus_open
000000000000ffdc	cmpl	$-0x1, %eax
000000000000ffdf	je	0x1001c
000000000000ffe1	movl	%eax, %r14d
000000000000ffe4	movl	$0x10, %edi
000000000000ffe9	callq	_malloc
000000000000ffee	testq	%rax, %rax
000000000000fff1	je	0x10010
000000000000fff3	movq	%rax, %rbx
000000000000fff6	movl	$0x10, %esi
000000000000fffb	movq	%rax, %rdi
000000000000fffe	callq	_bzero
0000000000010003	movl	%r14d, (%rbx)
0000000000010006	movq	-0x18(%rbp), %rax
000000000001000a	movq	%rax, 0x8(%rbx)
000000000001000e	jmp	0x1001e
0000000000010010	leaq	-0x18(%rbp), %rsi
0000000000010014	movl	%r14d, %edi
0000000000010017	callq	_guarded_close_np
000000000001001c	xorl	%ebx, %ebx
000000000001001e	movq	%rbx, %rax
0000000000010021	addq	$0x10, %rsp
0000000000010025	popq	%rbx
0000000000010026	popq	%r14
0000000000010028	popq	%rbp
0000000000010029	retq
_os_nexus_controller_get_fd:
000000000001002a	movl	(%rdi), %eax
000000000001002c	retq
_os_nexus_controller_register_provider:
000000000001002d	pushq	%rbp
000000000001002e	movq	%rsp, %rbp
0000000000010031	pushq	%r15
0000000000010033	pushq	%r14
0000000000010035	pushq	%r13
0000000000010037	pushq	%r12
0000000000010039	pushq	%rbx
000000000001003a	andq	$-0x40, %rsp
000000000001003e	subq	$0x180, %rsp
0000000000010045	movq	%r8, 0x38(%rsp)
000000000001004a	movq	%rcx, %r13
000000000001004d	movl	%edx, %r12d
0000000000010050	movq	%rsi, %rbx
0000000000010053	movq	%rdi, %r15
0000000000010056	leaq	0x40(%rsp), %r14
000000000001005b	movl	$0x100, %esi
0000000000010060	movq	%r14, %rdi
0000000000010063	callq	_bzero
0000000000010068	movl	$0x1, (%r14)
000000000001006f	leaq	0x80(%rsp), %r14
0000000000010077	movl	$0x40, %edx
000000000001007c	movq	%r14, %rdi
000000000001007f	movq	%rbx, %rsi
0000000000010082	callq	_strlcpy
0000000000010087	movq	%rax, %rcx
000000000001008a	movl	%ecx, 0x40(%r14)
000000000001008e	movl	$0x16, %eax
0000000000010093	testl	%ecx, %ecx
0000000000010095	je	0x1023e
000000000001009b	movl	%r12d, 0xc4(%rsp)
00000000000100a3	testq	%r13, %r13
00000000000100a6	je	0x10221
00000000000100ac	movq	(%r13), %rcx
00000000000100b0	testb	$0x1, %cl
00000000000100b3	je	0x100c5
00000000000100b5	orb	$0x1, 0x44(%rsp)
00000000000100ba	movl	0x8(%r13), %edx
00000000000100be	movl	%edx, 0xd8(%rsp)
00000000000100c5	testb	$0x2, %cl
00000000000100c8	je	0x100da
00000000000100ca	orb	$0x2, 0x44(%rsp)
00000000000100cf	movl	0x10(%r13), %edx
00000000000100d3	movl	%edx, 0xdc(%rsp)
00000000000100da	testb	$0x4, %cl
00000000000100dd	je	0x100ef
00000000000100df	orb	$0x4, 0x44(%rsp)
00000000000100e4	movl	0x18(%r13), %edx
00000000000100e8	movl	%edx, 0xe0(%rsp)
00000000000100ef	testb	$0x8, %cl
00000000000100f2	je	0x10104
00000000000100f4	orb	$0x8, 0x44(%rsp)
00000000000100f9	movl	0x20(%r13), %edx
00000000000100fd	movl	%edx, 0xe4(%rsp)
0000000000010104	testb	$0x10, %cl
0000000000010107	je	0x10119
0000000000010109	orb	$0x10, 0x44(%rsp)
000000000001010e	movl	0x28(%r13), %edx
0000000000010112	movl	%edx, 0xe8(%rsp)
0000000000010119	testb	%cl, %cl
000000000001011b	jns	0x10140
000000000001011d	orb	$-0x80, 0x44(%rsp)
0000000000010122	movl	0xd0(%rsp), %edx
0000000000010129	movl	%edx, %esi
000000000001012b	andl	$-0x2, %esi
000000000001012e	orl	$0x1, %edx
0000000000010131	cmpq	$0x0, 0x40(%r13)
0000000000010136	cmovel	%esi, %edx
0000000000010139	movl	%edx, 0xd0(%rsp)
0000000000010140	btl	$0x8, %ecx
0000000000010144	jae	0x10156
0000000000010146	orb	$0x1, 0x45(%rsp)
000000000001014b	movl	0x48(%r13), %edx
000000000001014f	movl	%edx, 0xf4(%rsp)
0000000000010156	btl	$0x9, %ecx
000000000001015a	jae	0x1016c
000000000001015c	orb	$0x2, 0x45(%rsp)
0000000000010161	movl	0x50(%r13), %edx
0000000000010165	movl	%edx, 0xf8(%rsp)
000000000001016c	btl	$0xa, %ecx
0000000000010170	jae	0x10182
0000000000010172	orb	$0x4, 0x45(%rsp)
0000000000010177	movl	0x58(%r13), %edx
000000000001017b	movl	%edx, 0xfc(%rsp)
0000000000010182	btl	$0xc, %ecx
0000000000010186	jae	0x101b6
0000000000010188	cmpl	$0x2, %r12d
000000000001018c	jne	0x1023e
0000000000010192	movq	0x70(%r13), %rdx
0000000000010196	cmpq	$0x2, %rdx
000000000001019a	jne	0x101aa
000000000001019c	cmpl	$0x4, 0xd8(%rsp)
00000000000101a4	jne	0x1023e
00000000000101aa	orb	$0x10, 0x45(%rsp)
00000000000101af	movl	%edx, 0x108(%rsp)
00000000000101b6	btl	$0x11, %ecx
00000000000101ba	jae	0x101d2
00000000000101bc	cmpl	$0x2, %r12d
00000000000101c0	jne	0x1023e
00000000000101c2	orb	$0x2, 0x46(%rsp)
00000000000101c7	movl	0x60(%r13), %edx
00000000000101cb	movl	%edx, 0x100(%rsp)
00000000000101d2	btl	$0x12, %ecx
00000000000101d6	jae	0x101fe
00000000000101d8	orb	$0x4, 0x46(%rsp)
00000000000101dd	movl	0xd0(%rsp), %edx
00000000000101e4	movl	%edx, %esi
00000000000101e6	andl	$-0x3, %esi
00000000000101e9	orl	$0x2, %edx
00000000000101ec	cmpq	$0x0, 0x90(%r13)
00000000000101f4	cmovel	%esi, %edx
00000000000101f7	movl	%edx, 0xd0(%rsp)
00000000000101fe	btl	$0x13, %ecx
0000000000010202	jae	0x10221
0000000000010204	orl	$0x1, %r12d
0000000000010208	cmpl	$0x3, %r12d
000000000001020c	jne	0x1023e
000000000001020e	orb	$0x8, 0x46(%rsp)
0000000000010213	movl	0x98(%r13), %eax
000000000001021a	movl	%eax, 0x114(%rsp)
0000000000010221	movl	(%r15), %edi
0000000000010224	leaq	0x40(%rsp), %rsi
0000000000010229	movl	$0x100, %edx
000000000001022e	movq	0x38(%rsp), %rcx
0000000000010233	movl	$0x10, %r8d
0000000000010239	callq	___nexus_register
000000000001023e	leaq	-0x28(%rbp), %rsp
0000000000010242	popq	%rbx
0000000000010243	popq	%r12
0000000000010245	popq	%r13
0000000000010247	popq	%r14
0000000000010249	popq	%r15
000000000001024b	popq	%rbp
000000000001024c	retq
_os_nexus_controller_deregister_provider:
000000000001024d	movl	(%rdi), %edi
000000000001024f	movl	$0x10, %edx
0000000000010254	jmp	___nexus_deregister
_os_nexus_controller_alloc_provider_instance:
0000000000010259	movq	%rdx, %rcx
000000000001025c	movl	(%rdi), %edi
000000000001025e	movl	$0x10, %edx
0000000000010263	movl	$0x10, %r8d
0000000000010269	jmp	___nexus_create
_os_nexus_controller_free_provider_instance:
000000000001026e	movl	(%rdi), %edi
0000000000010270	movl	$0x10, %edx
0000000000010275	jmp	___nexus_destroy
_os_nexus_controller_bind_provider_instance:
000000000001027a	pushq	%rbp
000000000001027b	movq	%rsp, %rbp
000000000001027e	pushq	%r15
0000000000010280	pushq	%r14
0000000000010282	pushq	%r13
0000000000010284	pushq	%r12
0000000000010286	pushq	%rbx
0000000000010287	subq	$0x48, %rsp
000000000001028b	movq	%r9, -0x30(%rbp)
000000000001028f	movq	%r8, %rbx
0000000000010292	movl	%ecx, %r12d
0000000000010295	movl	%edx, %r13d
0000000000010298	movq	%rsi, %r14
000000000001029b	movq	%rdi, %r15
000000000001029e	leaq	-0x68(%rbp), %rdi
00000000000102a2	movl	$0x38, %esi
00000000000102a7	callq	_bzero
00000000000102ac	testq	%r14, %r14
00000000000102af	je	0x102c2
00000000000102b1	leaq	-0x68(%rbp), %rsi
00000000000102b5	movl	$0x10, %edx
00000000000102ba	movq	%r14, %rdi
00000000000102bd	callq	_bcopy
00000000000102c2	movl	0x18(%rbp), %r14d
00000000000102c6	testq	%rbx, %rbx
00000000000102c9	je	0x102dc
00000000000102cb	leaq	-0x50(%rbp), %rsi
00000000000102cf	movl	$0x10, %edx
00000000000102d4	movq	%rbx, %rdi
00000000000102d7	callq	_bcopy
00000000000102dc	movl	%r13d, -0x58(%rbp)
00000000000102e0	movl	%r12d, -0x34(%rbp)
00000000000102e4	testb	$0x1, %r14b
00000000000102e8	je	0x102ee
00000000000102ea	orb	$0x1, -0x54(%rbp)
00000000000102ee	testb	$0x2, %r14b
00000000000102f2	je	0x102f8
00000000000102f4	orb	$0x2, -0x54(%rbp)
00000000000102f8	testb	$0x4, %r14b
00000000000102fc	je	0x10310
00000000000102fe	orb	$0x4, -0x54(%rbp)
0000000000010302	movl	0x10(%rbp), %eax
0000000000010305	movq	-0x30(%rbp), %rcx
0000000000010309	movq	%rcx, -0x40(%rbp)
000000000001030d	movl	%eax, -0x38(%rbp)
0000000000010310	movl	(%r15), %edi
0000000000010313	leaq	-0x68(%rbp), %rdx
0000000000010317	movl	$0x15, %esi
000000000001031c	movl	$0x38, %ecx
0000000000010321	callq	___nexus_set_opt
0000000000010326	addq	$0x48, %rsp
000000000001032a	popq	%rbx
000000000001032b	popq	%r12
000000000001032d	popq	%r13
000000000001032f	popq	%r14
0000000000010331	popq	%r15
0000000000010333	popq	%rbp
0000000000010334	retq
_os_nexus_controller_unbind_provider_instance:
0000000000010335	pushq	%rbp
0000000000010336	movq	%rsp, %rbp
0000000000010339	pushq	%r15
000000000001033b	pushq	%r14
000000000001033d	pushq	%rbx
000000000001033e	subq	$0x18, %rsp
0000000000010342	movl	%edx, %r14d
0000000000010345	movq	%rsi, %rbx
0000000000010348	movq	%rdi, %r15
000000000001034b	leaq	-0x30(%rbp), %rdi
000000000001034f	movl	$0x14, %esi
0000000000010354	callq	_bzero
0000000000010359	testq	%rbx, %rbx
000000000001035c	je	0x1036f
000000000001035e	leaq	-0x30(%rbp), %rsi
0000000000010362	movl	$0x10, %edx
0000000000010367	movq	%rbx, %rdi
000000000001036a	callq	_bcopy
000000000001036f	leaq	-0x30(%rbp), %rdx
0000000000010373	movl	%r14d, 0x10(%rdx)
0000000000010377	movl	(%r15), %edi
000000000001037a	movl	$0x16, %esi
000000000001037f	movl	$0x14, %ecx
0000000000010384	callq	___nexus_set_opt
0000000000010389	addq	$0x18, %rsp
000000000001038d	popq	%rbx
000000000001038e	popq	%r14
0000000000010390	popq	%r15
0000000000010392	popq	%rbp
0000000000010393	retq
_os_nexus_controller_read_provider_attr:
0000000000010394	pushq	%rbp
0000000000010395	movq	%rsp, %rbp
0000000000010398	pushq	%r15
000000000001039a	pushq	%r14
000000000001039c	pushq	%r12
000000000001039e	pushq	%rbx
000000000001039f	andq	$-0x40, %rsp
00000000000103a3	subq	$0x180, %rsp
00000000000103aa	movl	$0x100, 0x3c(%rsp)
00000000000103b2	testq	%rdx, %rdx
00000000000103b5	je	0x104cd
00000000000103bb	movq	%rdx, %rbx
00000000000103be	movq	%rsi, %r15
00000000000103c1	movq	%rdi, %r14
00000000000103c4	leaq	0x40(%rsp), %r12
00000000000103c9	movl	$0x100, %esi
00000000000103ce	movq	%r12, %rdi
00000000000103d1	callq	_bzero
00000000000103d6	movl	$0x10, %edx
00000000000103db	movq	%r15, %rdi
00000000000103de	movq	%r12, %rsi
00000000000103e1	callq	_bcopy
00000000000103e6	movl	(%r14), %edi
00000000000103e9	leaq	0x3c(%rsp), %rcx
00000000000103ee	movl	$0x2, %esi
00000000000103f3	movq	%r12, %rdx
00000000000103f6	callq	___nexus_get_opt
00000000000103fb	testl	%eax, %eax
00000000000103fd	jne	0x104d2
0000000000010403	movl	$0xa0, %esi
0000000000010408	movq	%rbx, %rdi
000000000001040b	callq	_bzero
0000000000010410	pmovzxdq	0xd8(%rsp), %xmm0
000000000001041a	movdqu	%xmm0, 0x8(%rbx)
000000000001041f	pmovzxdq	0xe0(%rsp), %xmm0
0000000000010429	movdqu	%xmm0, 0x18(%rbx)
000000000001042e	pmovzxdq	0xe8(%rsp), %xmm0
0000000000010438	movdqu	%xmm0, 0x28(%rbx)
000000000001043d	movl	0xf0(%rsp), %eax
0000000000010444	movq	%rax, 0x38(%rbx)
0000000000010448	movl	0xd0(%rsp), %eax
000000000001044f	movl	%eax, %ecx
0000000000010451	andl	$0x1, %ecx
0000000000010454	movq	%rcx, 0x40(%rbx)
0000000000010458	pmovzxdq	0xf4(%rsp), %xmm0
0000000000010462	movdqu	%xmm0, 0x48(%rbx)
0000000000010467	pmovzxdq	0xfc(%rsp), %xmm0
0000000000010471	movdqu	%xmm0, 0x58(%rbx)
0000000000010476	pmovzxdq	0x104(%rsp), %xmm0
0000000000010480	movdqu	%xmm0, 0x68(%rbx)
0000000000010485	movl	0x10c(%rsp), %ecx
000000000001048c	movl	%ecx, %edx
000000000001048e	andl	$0x1, %edx
0000000000010491	movq	%rdx, 0x78(%rbx)
0000000000010495	shrl	%ecx
0000000000010497	andl	$0x1, %ecx
000000000001049a	movq	%rcx, 0x80(%rbx)
00000000000104a1	movl	0x110(%rsp), %ecx
00000000000104a8	movq	%rcx, 0x88(%rbx)
00000000000104af	shrl	%eax
00000000000104b1	andl	$0x1, %eax
00000000000104b4	movq	%rax, 0x90(%rbx)
00000000000104bb	movl	0x114(%rsp), %eax
00000000000104c2	movq	%rax, 0x98(%rbx)
00000000000104c9	xorl	%eax, %eax
00000000000104cb	jmp	0x104d2
00000000000104cd	movl	$0x16, %eax
00000000000104d2	leaq	-0x20(%rbp), %rsp
00000000000104d6	popq	%rbx
00000000000104d7	popq	%r12
00000000000104d9	popq	%r14
00000000000104db	popq	%r15
00000000000104dd	popq	%rbp
00000000000104de	retq
_os_nexus_controller_destroy:
00000000000104df	pushq	%rbp
00000000000104e0	movq	%rsp, %rbp
00000000000104e3	pushq	%rbx
00000000000104e4	pushq	%rax
00000000000104e5	movq	%rdi, %rbx
00000000000104e8	movl	(%rdi), %edi
00000000000104ea	cmpl	$-0x1, %edi
00000000000104ed	je	0x104f8
00000000000104ef	leaq	0x8(%rbx), %rsi
00000000000104f3	callq	_guarded_close_np
00000000000104f8	movq	%rbx, %rdi
00000000000104fb	addq	$0x8, %rsp
00000000000104ff	popq	%rbx
0000000000010500	popq	%rbp
0000000000010501	jmp	_free
___os_nexus_ifattach:
0000000000010506	pushq	%rbp
0000000000010507	movq	%rsp, %rbp
000000000001050a	pushq	%r15
000000000001050c	pushq	%r14
000000000001050e	pushq	%r13
0000000000010510	pushq	%r12
0000000000010512	pushq	%rbx
0000000000010513	subq	$0x88, %rsp
000000000001051a	movq	%r9, -0x30(%rbp)
000000000001051e	movl	%r8d, %ebx
0000000000010521	movq	%rcx, %r14
0000000000010524	movq	%rdx, %r15
0000000000010527	movq	%rsi, %r13
000000000001052a	movq	%rdi, %r12
000000000001052d	leaq	-0xa8(%rbp), %rdi
0000000000010534	movl	$0x58, %esi
0000000000010539	callq	_bzero
000000000001053e	testq	%r15, %r15
0000000000010541	je	0x10559
0000000000010543	leaq	-0xa8(%rbp), %rdi
000000000001054a	movl	$0x40, %edx
000000000001054f	movq	%r15, %rsi
0000000000010552	callq	_strlcpy
0000000000010557	jmp	0x10575
0000000000010559	leaq	-0xa8(%rbp), %r15
0000000000010560	movl	$0x10, %edx
0000000000010565	movq	%r14, %rdi
0000000000010568	movq	%r15, %rsi
000000000001056b	callq	_bcopy
0000000000010570	orb	$0x1, 0x40(%r15)
0000000000010575	testl	%ebx, %ebx
0000000000010577	je	0x1057d
0000000000010579	orb	$0x2, -0x68(%rbp)
000000000001057d	leaq	-0x50(%rbp), %rdi
0000000000010581	movl	$0x20, %esi
0000000000010586	callq	_bzero
000000000001058b	testq	%r13, %r13
000000000001058e	je	0x105a1
0000000000010590	leaq	-0x50(%rbp), %rsi
0000000000010594	movl	$0x10, %edx
0000000000010599	movq	%r13, %rdi
000000000001059c	callq	_bcopy
00000000000105a1	movabsq	$0x5800000000, %rax
00000000000105ab	leaq	-0x50(%rbp), %rdx
00000000000105af	movq	%rax, 0x10(%rdx)
00000000000105b3	leaq	-0xa8(%rbp), %rax
00000000000105ba	movq	%rax, 0x18(%rdx)
00000000000105be	movl	(%r12), %edi
00000000000105c2	movl	$0x28, %esi
00000000000105c7	movl	$0x20, %ecx
00000000000105cc	callq	___nexus_set_opt
00000000000105d1	movl	%eax, %ebx
00000000000105d3	testl	%eax, %eax
00000000000105d5	jne	0x105e9
00000000000105d7	leaq	-0x64(%rbp), %rdi
00000000000105db	movl	$0x10, %edx
00000000000105e0	movq	-0x30(%rbp), %rsi
00000000000105e4	callq	_bcopy
00000000000105e9	movl	%ebx, %eax
00000000000105eb	addq	$0x88, %rsp
00000000000105f2	popq	%rbx
00000000000105f3	popq	%r12
00000000000105f5	popq	%r13
00000000000105f7	popq	%r14
00000000000105f9	popq	%r15
00000000000105fb	popq	%rbp
00000000000105fc	retq
___os_nexus_ifdetach:
00000000000105fd	pushq	%rbp
00000000000105fe	movq	%rsp, %rbp
0000000000010601	pushq	%r15
0000000000010603	pushq	%r14
0000000000010605	pushq	%r12
0000000000010607	pushq	%rbx
0000000000010608	subq	$0x80, %rsp
000000000001060f	movq	%rdx, %rbx
0000000000010612	movq	%rsi, %r12
0000000000010615	movq	%rdi, %r15
0000000000010618	leaq	-0x98(%rbp), %r14
000000000001061f	movl	$0x58, %esi
0000000000010624	movq	%r14, %rdi
0000000000010627	callq	_bzero
000000000001062c	leaq	-0x54(%rbp), %rsi
0000000000010630	movl	$0x10, %edx
0000000000010635	movq	%rbx, %rdi
0000000000010638	callq	_bcopy
000000000001063d	leaq	-0x40(%rbp), %rdi
0000000000010641	movl	$0x20, %esi
0000000000010646	callq	_bzero
000000000001064b	testq	%r12, %r12
000000000001064e	je	0x10661
0000000000010650	leaq	-0x40(%rbp), %rsi
0000000000010654	movl	$0x10, %edx
0000000000010659	movq	%r12, %rdi
000000000001065c	callq	_bcopy
0000000000010661	movabsq	$0x5800000001, %rax
000000000001066b	leaq	-0x40(%rbp), %rdx
000000000001066f	movq	%rax, 0x10(%rdx)
0000000000010673	movq	%r14, 0x18(%rdx)
0000000000010677	movl	(%r15), %edi
000000000001067a	movl	$0x28, %esi
000000000001067f	movl	$0x20, %ecx
0000000000010684	callq	___nexus_set_opt
0000000000010689	addq	$0x80, %rsp
0000000000010690	popq	%rbx
0000000000010691	popq	%r12
0000000000010693	popq	%r14
0000000000010695	popq	%r15
0000000000010697	popq	%rbp
0000000000010698	retq
___os_nexus_flow_add:
0000000000010699	pushq	%rbp
000000000001069a	movq	%rsp, %rbp
000000000001069d	pushq	%r15
000000000001069f	pushq	%r14
00000000000106a1	pushq	%rbx
00000000000106a2	subq	$0x28, %rsp
00000000000106a6	movq	%rdx, %r14
00000000000106a9	movq	%rsi, %rbx
00000000000106ac	movq	%rdi, %r15
00000000000106af	leaq	-0x38(%rbp), %rdi
00000000000106b3	movl	$0x20, %esi
00000000000106b8	callq	_bzero
00000000000106bd	testq	%rbx, %rbx
00000000000106c0	je	0x106d3
00000000000106c2	leaq	-0x38(%rbp), %rsi
00000000000106c6	movl	$0x10, %edx
00000000000106cb	movq	%rbx, %rdi
00000000000106ce	callq	_bcopy
00000000000106d3	movabsq	$0xc800000014, %rax
00000000000106dd	leaq	-0x38(%rbp), %rdx
00000000000106e1	movq	%rax, 0x10(%rdx)
00000000000106e5	movq	%r14, 0x18(%rdx)
00000000000106e9	movl	(%r15), %edi
00000000000106ec	movl	$0x28, %esi
00000000000106f1	movl	$0x20, %ecx
00000000000106f6	callq	___nexus_set_opt
00000000000106fb	addq	$0x28, %rsp
00000000000106ff	popq	%rbx
0000000000010700	popq	%r14
0000000000010702	popq	%r15
0000000000010704	popq	%rbp
0000000000010705	retq
___os_nexus_flow_del:
0000000000010706	pushq	%rbp
0000000000010707	movq	%rsp, %rbp
000000000001070a	pushq	%r15
000000000001070c	pushq	%r14
000000000001070e	pushq	%rbx
000000000001070f	subq	$0x28, %rsp
0000000000010713	movq	%rdx, %r14
0000000000010716	movq	%rsi, %rbx
0000000000010719	movq	%rdi, %r15
000000000001071c	leaq	-0x38(%rbp), %rdi
0000000000010720	movl	$0x20, %esi
0000000000010725	callq	_bzero
000000000001072a	testq	%rbx, %rbx
000000000001072d	je	0x10740
000000000001072f	leaq	-0x38(%rbp), %rsi
0000000000010733	movl	$0x10, %edx
0000000000010738	movq	%rbx, %rdi
000000000001073b	callq	_bcopy
0000000000010740	movabsq	$0xc800000015, %rax
000000000001074a	leaq	-0x38(%rbp), %rdx
000000000001074e	movq	%rax, 0x10(%rdx)
0000000000010752	movq	%r14, 0x18(%rdx)
0000000000010756	movl	(%r15), %edi
0000000000010759	movl	$0x28, %esi
000000000001075e	movl	$0x20, %ecx
0000000000010763	callq	___nexus_set_opt
0000000000010768	addq	$0x28, %rsp
000000000001076c	popq	%rbx
000000000001076d	popq	%r14
000000000001076f	popq	%r15
0000000000010771	popq	%rbp
0000000000010772	retq
_sigsuspend:
0000000000010773	testq	%rdi, %rdi
0000000000010776	je	0x1077f
0000000000010778	movl	(%rdi), %edi
000000000001077a	jmp	___sigsuspend
000000000001077f	xorl	%edi, %edi
0000000000010781	jmp	___sigsuspend
_work_interval_notify:
0000000000010786	pushq	%rbp
0000000000010787	movq	%rsp, %rbp
000000000001078a	subq	$0x30, %rsp
000000000001078e	movq	%rsi, -0x28(%rbp)
0000000000010792	movq	%rdx, -0x20(%rbp)
0000000000010796	movq	%rcx, -0x18(%rbp)
000000000001079a	movq	%r8, -0x10(%rbp)
000000000001079e	movl	%r9d, -0x8(%rbp)
00000000000107a2	movl	$0x0, -0x4(%rbp)
00000000000107a9	testq	%rdi, %rdi
00000000000107ac	je	0x107cd
00000000000107ae	movl	0x10(%rdi), %eax
00000000000107b1	leaq	-0x28(%rbp), %rdx
00000000000107b5	movl	%eax, 0x24(%rdx)
00000000000107b8	movq	0x8(%rdi), %rsi
00000000000107bc	movl	$0x28, %ecx
00000000000107c1	movl	$0x3, %edi
00000000000107c6	callq	___work_interval_ctl
00000000000107cb	jmp	0x107dd
00000000000107cd	callq	___error
00000000000107d2	movl	$0x16, (%rax)
00000000000107d8	movl	$0xffffffff, %eax
00000000000107dd	addq	$0x30, %rsp
00000000000107e1	popq	%rbp
00000000000107e2	retq
_work_interval_notify_simple:
00000000000107e3	pushq	%rbp
00000000000107e4	movq	%rsp, %rbp
00000000000107e7	pushq	%r15
00000000000107e9	pushq	%r14
00000000000107eb	pushq	%r12
00000000000107ed	pushq	%rbx
00000000000107ee	movq	%rcx, %r14
00000000000107f1	movq	%rdx, %r15
00000000000107f4	movq	%rsi, %r12
00000000000107f7	movq	%rdi, %rbx
00000000000107fa	callq	_mach_absolute_time
00000000000107ff	movq	%rbx, %rdi
0000000000010802	movq	%r12, %rsi
0000000000010805	movq	%rax, %rdx
0000000000010808	movq	%r15, %rcx
000000000001080b	movq	%r14, %r8
000000000001080e	xorl	%r9d, %r9d
0000000000010811	popq	%rbx
0000000000010812	popq	%r12
0000000000010814	popq	%r14
0000000000010816	popq	%r15
0000000000010818	popq	%rbp
0000000000010819	jmp	_work_interval_notify
_work_interval_instance_clear:
000000000001081e	xorl	%eax, %eax
0000000000010820	movq	%rax, 0x28(%rdi)
0000000000010824	movq	%rax, 0x20(%rdi)
0000000000010828	movq	%rax, 0x18(%rdi)
000000000001082c	movq	%rax, 0x10(%rdi)
0000000000010830	movq	%rax, 0x8(%rdi)
0000000000010834	retq
_work_interval_instance_free:
0000000000010835	jmp	_free
_work_interval_instance_set_start:
000000000001083a	movq	%rsi, 0x10(%rdi)
000000000001083e	retq
_work_interval_instance_set_deadline:
000000000001083f	movq	%rsi, 0x20(%rdi)
0000000000010843	retq
_work_interval_instance_set_finish:
0000000000010844	movq	%rsi, 0x18(%rdi)
0000000000010848	retq
_work_interval_instance_set_complexity:
0000000000010849	movq	%rsi, 0x28(%rdi)
000000000001084d	retq
_work_interval_instance_get_start:
000000000001084e	cmpq	$0x0, 0x8(%rdi)
0000000000010853	je	0x1085a
0000000000010855	movq	0x10(%rdi), %rax
0000000000010859	retq
000000000001085a	xorl	%eax, %eax
000000000001085c	retq
_work_interval_instance_get_deadline:
000000000001085d	cmpq	$0x0, 0x8(%rdi)
0000000000010862	je	0x10869
0000000000010864	movq	0x20(%rdi), %rax
0000000000010868	retq
0000000000010869	xorl	%eax, %eax
000000000001086b	retq
_work_interval_instance_get_finish:
000000000001086c	cmpq	$0x0, 0x8(%rdi)
0000000000010871	je	0x10878
0000000000010873	movq	0x18(%rdi), %rax
0000000000010877	retq
0000000000010878	xorl	%eax, %eax
000000000001087a	retq
_work_interval_instance_get_complexity:
000000000001087b	cmpq	$0x0, 0x8(%rdi)
0000000000010880	je	0x10887
0000000000010882	movq	0x28(%rdi), %rax
0000000000010886	retq
0000000000010887	xorl	%eax, %eax
0000000000010889	retq
_work_interval_instance_start:
000000000001088a	testq	%rdi, %rdi
000000000001088d	je	0x108a4
000000000001088f	movq	%rdi, %rdx
0000000000010892	movq	(%rdi), %rsi
0000000000010895	movl	$0x38, %ecx
000000000001089a	movl	$0x6, %edi
000000000001089f	jmp	___work_interval_ctl
00000000000108a4	pushq	%rbp
00000000000108a5	movq	%rsp, %rbp
00000000000108a8	callq	___error
00000000000108ad	movl	$0x16, (%rax)
00000000000108b3	movl	$0xffffffff, %eax
00000000000108b8	popq	%rbp
00000000000108b9	retq
_work_interval_instance_update:
00000000000108ba	testq	%rdi, %rdi
00000000000108bd	je	0x108db
00000000000108bf	movq	%rdi, %rdx
00000000000108c2	cmpq	$0x0, 0x8(%rdi)
00000000000108c7	je	0x108f1
00000000000108c9	movq	(%rdx), %rsi
00000000000108cc	movl	$0x38, %ecx
00000000000108d1	movl	$0x7, %edi
00000000000108d6	jmp	___work_interval_ctl
00000000000108db	pushq	%rbp
00000000000108dc	movq	%rsp, %rbp
00000000000108df	callq	___error
00000000000108e4	movl	$0x16, (%rax)
00000000000108ea	movl	$0xffffffff, %eax
00000000000108ef	popq	%rbp
00000000000108f0	retq
00000000000108f1	xorl	%eax, %eax
00000000000108f3	retq
_work_interval_instance_finish:
00000000000108f4	pushq	%rbp
00000000000108f5	movq	%rsp, %rbp
00000000000108f8	pushq	%rbx
00000000000108f9	pushq	%rax
00000000000108fa	testq	%rdi, %rdi
00000000000108fd	je	0x10932
00000000000108ff	movq	%rdi, %rbx
0000000000010902	cmpq	$0x0, 0x8(%rdi)
0000000000010907	je	0x10944
0000000000010909	movq	(%rbx), %rsi
000000000001090c	movl	$0x38, %ecx
0000000000010911	movl	$0x8, %edi
0000000000010916	movq	%rbx, %rdx
0000000000010919	callq	___work_interval_ctl
000000000001091e	xorl	%ecx, %ecx
0000000000010920	movq	%rcx, 0x28(%rbx)
0000000000010924	movq	%rcx, 0x20(%rbx)
0000000000010928	movq	%rcx, 0x18(%rbx)
000000000001092c	movq	%rcx, 0x10(%rbx)
0000000000010930	jmp	0x10946
0000000000010932	callq	___error
0000000000010937	movl	$0x16, (%rax)
000000000001093d	movl	$0xffffffff, %eax
0000000000010942	jmp	0x10946
0000000000010944	xorl	%eax, %eax
0000000000010946	addq	$0x8, %rsp
000000000001094a	popq	%rbx
000000000001094b	popq	%rbp
000000000001094c	retq
_work_interval_destroy:
000000000001094d	pushq	%rbp
000000000001094e	movq	%rsp, %rbp
0000000000010951	pushq	%r15
0000000000010953	pushq	%r14
0000000000010955	pushq	%rbx
0000000000010956	pushq	%rax
0000000000010957	testq	%rdi, %rdi
000000000001095a	je	0x109b4
000000000001095c	movq	%rdi, %rbx
000000000001095f	testb	$0x1, 0x10(%rdi)
0000000000010963	jne	0x1099f
0000000000010965	movq	0x8(%rbx), %rsi
0000000000010969	movl	$0x2, %edi
000000000001096e	xorl	%edx, %edx
0000000000010970	xorl	%ecx, %ecx
0000000000010972	callq	___work_interval_ctl
0000000000010977	movl	%eax, %r14d
000000000001097a	movq	$0x0, 0x8(%rbx)
0000000000010982	callq	___error
0000000000010987	movl	(%rax), %r15d
000000000001098a	movq	%rbx, %rdi
000000000001098d	callq	_free
0000000000010992	callq	___error
0000000000010997	movl	%r15d, (%rax)
000000000001099a	movl	%r14d, %eax
000000000001099d	jmp	0x109c4
000000000001099f	movl	0x14(%rbx), %esi
00000000000109a2	leaq	_mach_task_self_(%rip), %rax
00000000000109a9	movl	(%rax), %edi
00000000000109ab	callq	_mach_port_deallocate
00000000000109b0	testl	%eax, %eax
00000000000109b2	je	0x109cf
00000000000109b4	callq	___error
00000000000109b9	movl	$0x16, (%rax)
00000000000109bf	movl	$0xffffffff, %eax
00000000000109c4	addq	$0x8, %rsp
00000000000109c8	popq	%rbx
00000000000109c9	popq	%r14
00000000000109cb	popq	%r15
00000000000109cd	popq	%rbp
00000000000109ce	retq
00000000000109cf	movq	%rbx, %rdi
00000000000109d2	callq	_free
00000000000109d7	xorl	%eax, %eax
00000000000109d9	jmp	0x109c4
_work_interval_join:
00000000000109db	pushq	%rbp
00000000000109dc	movq	%rsp, %rbp
00000000000109df	testq	%rdi, %rdi
00000000000109e2	je	0x109ff
00000000000109e4	testb	$0x1, 0x10(%rdi)
00000000000109e8	je	0x109ff
00000000000109ea	movl	0x14(%rdi), %edi
00000000000109ed	leal	0x1(%rdi), %eax
00000000000109f0	movl	$0x1, %ecx
00000000000109f5	cmpl	%ecx, %eax
00000000000109f7	jbe	0x109ff
00000000000109f9	popq	%rbp
00000000000109fa	jmp	_work_interval_join_port
00000000000109ff	callq	___error
0000000000010a04	movl	$0x16, (%rax)
0000000000010a0a	movl	$0xffffffff, %eax
0000000000010a0f	popq	%rbp
0000000000010a10	retq
_work_interval_join_port:
0000000000010a11	testl	%edi, %edi
0000000000010a13	je	0x10a25
0000000000010a15	movl	%edi, %esi
0000000000010a17	movl	$0x5, %edi
0000000000010a1c	xorl	%edx, %edx
0000000000010a1e	xorl	%ecx, %ecx
0000000000010a20	jmp	___work_interval_ctl
0000000000010a25	pushq	%rbp
0000000000010a26	movq	%rsp, %rbp
0000000000010a29	callq	___error
0000000000010a2e	movl	$0x16, (%rax)
0000000000010a34	movl	$0xffffffff, %eax
0000000000010a39	popq	%rbp
0000000000010a3a	retq
_work_interval_leave:
0000000000010a3b	movl	$0x5, %edi
0000000000010a40	xorl	%esi, %esi
0000000000010a42	xorl	%edx, %edx
0000000000010a44	xorl	%ecx, %ecx
0000000000010a46	jmp	___work_interval_ctl
_work_interval_copy_port:
0000000000010a4b	pushq	%rbp
0000000000010a4c	movq	%rsp, %rbp
0000000000010a4f	pushq	%r15
0000000000010a51	pushq	%r14
0000000000010a53	pushq	%rbx
0000000000010a54	pushq	%rax
0000000000010a55	testq	%rsi, %rsi
0000000000010a58	je	0x10a91
0000000000010a5a	movq	%rsi, %rbx
0000000000010a5d	testq	%rdi, %rdi
0000000000010a60	je	0x10a8b
0000000000010a62	testb	$0x1, 0x10(%rdi)
0000000000010a66	je	0x10a8b
0000000000010a68	movl	0x14(%rdi), %r15d
0000000000010a6c	leaq	_mach_task_self_(%rip), %rax
0000000000010a73	movl	(%rax), %edi
0000000000010a75	xorl	%r14d, %r14d
0000000000010a78	movl	%r15d, %esi
0000000000010a7b	xorl	%edx, %edx
0000000000010a7d	movl	$0x1, %ecx
0000000000010a82	callq	_mach_port_mod_refs
0000000000010a87	testl	%eax, %eax
0000000000010a89	je	0x10ab0
0000000000010a8b	movl	$0x0, (%rbx)
0000000000010a91	callq	___error
0000000000010a96	movl	$0x16, (%rax)
0000000000010a9c	movl	$0xffffffff, %r14d
0000000000010aa2	movl	%r14d, %eax
0000000000010aa5	addq	$0x8, %rsp
0000000000010aa9	popq	%rbx
0000000000010aaa	popq	%r14
0000000000010aac	popq	%r15
0000000000010aae	popq	%rbp
0000000000010aaf	retq
0000000000010ab0	movl	%r15d, (%rbx)
0000000000010ab3	jmp	0x10aa2
0000000000010ab5	nop
0000000000010ab6	nop
0000000000010ab7	nop
0000000000010ab8	nop
0000000000010ab9	nop
0000000000010aba	nop
0000000000010abb	nop
0000000000010abc	nop
0000000000010abd	nop
0000000000010abe	nop
0000000000010abf	nop
_os_cpu_copy_in_cksum:
0000000000010ac0	pushq	%rbp
0000000000010ac1	movq	%rsp, %rbp
0000000000010ac4	movq	$0x0, %r10
0000000000010acb	movq	$0x0, %r8
0000000000010ad2	cmpq	$0x0, %rdx
0000000000010ad6	je	0x10f73
0000000000010adc	testq	$0x1, %rdi
0000000000010ae3	je	0x10b09
0000000000010ae5	movzbq	(%rdi), %r10
0000000000010ae9	addq	$0x1, %rdi
0000000000010aed	movb	%r10b, (%rsi)
0000000000010af0	addq	$0x1, %rsi
0000000000010af4	shlq	$0x8, %r10
0000000000010af8	movq	$0x1, %r8
0000000000010aff	subq	$0x1, %rdx
0000000000010b03	je	0x10f73
0000000000010b09	pxor	%xmm0, %xmm0
0000000000010b0d	pxor	%xmm1, %xmm1
0000000000010b11	cmpq	$0x80, %rdx
0000000000010b18	movq	%r10, %xmm0
0000000000010b1d	jl	0x10dcc
0000000000010b23	pxor	%xmm2, %xmm2
0000000000010b27	pxor	%xmm3, %xmm3
0000000000010b2b	movups	(%rdi), %xmm4
0000000000010b2e	movups	0x10(%rdi), %xmm5
0000000000010b32	movups	0x20(%rdi), %xmm6
0000000000010b36	movups	0x30(%rdi), %xmm7
0000000000010b3a	movups	0x40(%rdi), %xmm8
0000000000010b3f	movups	0x50(%rdi), %xmm9
0000000000010b44	movups	0x60(%rdi), %xmm10
0000000000010b49	movups	0x70(%rdi), %xmm11
0000000000010b4e	addq	$0x80, %rdi
0000000000010b55	subq	$0x100, %rdx
0000000000010b5c	jl	0x10cab
0000000000010b62	movups	%xmm4, (%rsi)
0000000000010b65	movdqa	%xmm4, %xmm12
0000000000010b6a	psrlq	$0x20, %xmm4
0000000000010b6f	movups	%xmm5, 0x10(%rsi)
0000000000010b73	movdqa	%xmm5, %xmm13
0000000000010b78	psrlq	$0x20, %xmm5
0000000000010b7d	movups	%xmm6, 0x20(%rsi)
0000000000010b81	movdqa	%xmm6, %xmm14
0000000000010b86	psrlq	$0x20, %xmm6
0000000000010b8b	movups	%xmm7, 0x30(%rsi)
0000000000010b8f	movdqa	%xmm7, %xmm15
0000000000010b94	psrlq	$0x20, %xmm7
0000000000010b99	movups	%xmm8, 0x40(%rsi)
0000000000010b9e	pand	0x120f9(%rip), %xmm12
0000000000010ba7	paddq	%xmm4, %xmm0
0000000000010bab	movups	%xmm9, 0x50(%rsi)
0000000000010bb0	pand	0x120e7(%rip), %xmm13
0000000000010bb9	paddq	%xmm5, %xmm1
0000000000010bbd	movups	%xmm10, 0x60(%rsi)
0000000000010bc2	pand	0x120d5(%rip), %xmm14
0000000000010bcb	paddq	%xmm6, %xmm2
0000000000010bcf	movups	%xmm11, 0x70(%rsi)
0000000000010bd4	pand	0x120c3(%rip), %xmm15
0000000000010bdd	paddq	%xmm7, %xmm3
0000000000010be1	addq	$0x80, %rsi
0000000000010be8	paddq	%xmm12, %xmm0
0000000000010bed	movdqa	%xmm8, %xmm12
0000000000010bf2	psrlq	$0x20, %xmm8
0000000000010bf8	paddq	%xmm13, %xmm1
0000000000010bfd	movdqa	%xmm9, %xmm13
0000000000010c02	psrlq	$0x20, %xmm9
0000000000010c08	paddq	%xmm14, %xmm2
0000000000010c0d	movdqa	%xmm10, %xmm14
0000000000010c12	psrlq	$0x20, %xmm10
0000000000010c18	paddq	%xmm15, %xmm3
0000000000010c1d	movdqa	%xmm11, %xmm15
0000000000010c22	psrlq	$0x20, %xmm11
0000000000010c28	movups	(%rdi), %xmm4
0000000000010c2b	paddq	%xmm8, %xmm0
0000000000010c30	pand	0x12067(%rip), %xmm12
0000000000010c39	movups	0x10(%rdi), %xmm5
0000000000010c3d	paddq	%xmm9, %xmm1
0000000000010c42	pand	0x12055(%rip), %xmm13
0000000000010c4b	movups	0x20(%rdi), %xmm6
0000000000010c4f	paddq	%xmm10, %xmm2
0000000000010c54	pand	0x12043(%rip), %xmm14
0000000000010c5d	movups	0x30(%rdi), %xmm7
0000000000010c61	paddq	%xmm11, %xmm3
0000000000010c66	pand	0x12031(%rip), %xmm15
0000000000010c6f	movups	0x40(%rdi), %xmm8
0000000000010c74	paddq	%xmm12, %xmm0
0000000000010c79	movups	0x50(%rdi), %xmm9
0000000000010c7e	paddq	%xmm13, %xmm1
0000000000010c83	movups	0x60(%rdi), %xmm10
0000000000010c88	paddq	%xmm14, %xmm2
0000000000010c8d	movups	0x70(%rdi), %xmm11
0000000000010c92	paddq	%xmm15, %xmm3
0000000000010c97	addq	$0x80, %rdi
0000000000010c9e	subq	$0x80, %rdx
0000000000010ca5	jge	0x10b62
0000000000010cab	movups	%xmm4, (%rsi)
0000000000010cae	movdqa	%xmm4, %xmm12
0000000000010cb3	psrlq	$0x20, %xmm4
0000000000010cb8	movups	%xmm5, 0x10(%rsi)
0000000000010cbc	movdqa	%xmm5, %xmm13
0000000000010cc1	psrlq	$0x20, %xmm5
0000000000010cc6	movups	%xmm6, 0x20(%rsi)
0000000000010cca	movdqa	%xmm6, %xmm14
0000000000010ccf	psrlq	$0x20, %xmm6
0000000000010cd4	movups	%xmm7, 0x30(%rsi)
0000000000010cd8	movdqa	%xmm7, %xmm15
0000000000010cdd	psrlq	$0x20, %xmm7
0000000000010ce2	pand	0x11fb5(%rip), %xmm12
0000000000010ceb	paddq	%xmm4, %xmm0
0000000000010cef	movups	%xmm8, 0x40(%rsi)
0000000000010cf4	pand	0x11fa3(%rip), %xmm13
0000000000010cfd	paddq	%xmm5, %xmm1
0000000000010d01	movups	%xmm9, 0x50(%rsi)
0000000000010d06	pand	0x11f91(%rip), %xmm14
0000000000010d0f	paddq	%xmm6, %xmm2
0000000000010d13	movups	%xmm10, 0x60(%rsi)
0000000000010d18	pand	0x11f7f(%rip), %xmm15
0000000000010d21	paddq	%xmm7, %xmm3
0000000000010d25	movups	%xmm11, 0x70(%rsi)
0000000000010d2a	addq	$0x80, %rsi
0000000000010d31	paddq	%xmm12, %xmm0
0000000000010d36	movdqa	%xmm8, %xmm12
0000000000010d3b	psrlq	$0x20, %xmm8
0000000000010d41	paddq	%xmm13, %xmm1
0000000000010d46	movdqa	%xmm9, %xmm13
0000000000010d4b	psrlq	$0x20, %xmm9
0000000000010d51	paddq	%xmm14, %xmm2
0000000000010d56	movdqa	%xmm10, %xmm14
0000000000010d5b	psrlq	$0x20, %xmm10
0000000000010d61	paddq	%xmm15, %xmm3
0000000000010d66	movdqa	%xmm11, %xmm15
0000000000010d6b	psrlq	$0x20, %xmm11
0000000000010d71	paddq	%xmm8, %xmm0
0000000000010d76	pand	0x11f21(%rip), %xmm12
0000000000010d7f	paddq	%xmm9, %xmm1
0000000000010d84	pand	0x11f13(%rip), %xmm13
0000000000010d8d	paddq	%xmm10, %xmm2
0000000000010d92	pand	0x11f05(%rip), %xmm14
0000000000010d9b	paddq	%xmm11, %xmm3
0000000000010da0	pand	0x11ef7(%rip), %xmm15
0000000000010da9	paddq	%xmm12, %xmm0
0000000000010dae	paddq	%xmm13, %xmm1
0000000000010db3	paddq	%xmm14, %xmm2
0000000000010db8	paddq	%xmm15, %xmm3
0000000000010dbd	addq	$0x80, %rdx
0000000000010dc4	paddq	%xmm2, %xmm0
0000000000010dc8	paddq	%xmm3, %xmm1
0000000000010dcc	cmpq	$0x40, %rdx
0000000000010dd0	jl	0x10e70
0000000000010dd6	movups	(%rdi), %xmm4
0000000000010dd9	movups	0x10(%rdi), %xmm5
0000000000010ddd	movups	0x20(%rdi), %xmm6
0000000000010de1	movups	0x30(%rdi), %xmm7
0000000000010de5	addq	$0x40, %rdi
0000000000010de9	movups	%xmm4, (%rsi)
0000000000010dec	movups	%xmm5, 0x10(%rsi)
0000000000010df0	movups	%xmm6, 0x20(%rsi)
0000000000010df4	movups	%xmm7, 0x30(%rsi)
0000000000010df8	addq	$0x40, %rsi
0000000000010dfc	movdqa	%xmm4, %xmm12
0000000000010e01	psrlq	$0x20, %xmm4
0000000000010e06	movdqa	%xmm5, %xmm13
0000000000010e0b	psrlq	$0x20, %xmm5
0000000000010e10	movdqa	%xmm6, %xmm14
0000000000010e15	psrlq	$0x20, %xmm6
0000000000010e1a	movdqa	%xmm7, %xmm15
0000000000010e1f	psrlq	$0x20, %xmm7
0000000000010e24	pand	0x11e73(%rip), %xmm12
0000000000010e2d	paddq	%xmm4, %xmm0
0000000000010e31	pand	0x11e66(%rip), %xmm13
0000000000010e3a	paddq	%xmm5, %xmm1
0000000000010e3e	pand	0x11e59(%rip), %xmm14
0000000000010e47	paddq	%xmm6, %xmm0
0000000000010e4b	pand	0x11e4c(%rip), %xmm15
0000000000010e54	paddq	%xmm7, %xmm1
0000000000010e58	paddq	%xmm12, %xmm0
0000000000010e5d	paddq	%xmm13, %xmm1
0000000000010e62	paddq	%xmm14, %xmm0
0000000000010e67	paddq	%xmm15, %xmm1
0000000000010e6c	subq	$0x40, %rdx
0000000000010e70	cmpq	$0x20, %rdx
0000000000010e74	jl	0x10ec8
0000000000010e76	movups	(%rdi), %xmm4
0000000000010e79	movups	0x10(%rdi), %xmm5
0000000000010e7d	addq	$0x20, %rdi
0000000000010e81	movups	%xmm4, (%rsi)
0000000000010e84	movups	%xmm5, 0x10(%rsi)
0000000000010e88	addq	$0x20, %rsi
0000000000010e8c	movdqa	%xmm4, %xmm12
0000000000010e91	movdqa	%xmm5, %xmm13
0000000000010e96	psrlq	$0x20, %xmm4
0000000000010e9b	psrlq	$0x20, %xmm5
0000000000010ea0	pand	0x11df7(%rip), %xmm12
0000000000010ea9	pand	0x11dee(%rip), %xmm13
0000000000010eb2	paddq	%xmm4, %xmm0
0000000000010eb6	paddq	%xmm5, %xmm1
0000000000010eba	paddq	%xmm12, %xmm0
0000000000010ebf	paddq	%xmm13, %xmm1
0000000000010ec4	subq	$0x20, %rdx
0000000000010ec8	paddq	%xmm1, %xmm0
0000000000010ecc	cmpq	$0x10, %rdx
0000000000010ed0	jl	0x10f00
0000000000010ed2	movups	(%rdi), %xmm4
0000000000010ed5	addq	$0x10, %rdi
0000000000010ed9	movups	%xmm4, (%rsi)
0000000000010edc	addq	$0x10, %rsi
0000000000010ee0	movdqa	%xmm4, %xmm12
0000000000010ee5	psrlq	$0x20, %xmm4
0000000000010eea	pand	0x11dad(%rip), %xmm12
0000000000010ef3	paddq	%xmm4, %xmm0
0000000000010ef7	paddq	%xmm12, %xmm0
0000000000010efc	subq	$0x10, %rdx
0000000000010f00	movq	%xmm0, %r10
0000000000010f05	psrldq	$0x8, %xmm0
0000000000010f0a	movq	%xmm0, %r9
0000000000010f0f	addq	%r9, %r10
0000000000010f12	subq	$0x4, %rdx
0000000000010f16	jl	0x10f2f
0000000000010f18	movl	(%rdi), %r9d
0000000000010f1b	addq	%r9, %r10
0000000000010f1e	movl	%r9d, (%rsi)
0000000000010f21	addq	$0x4, %rdi
0000000000010f25	addq	$0x4, %rsi
0000000000010f29	subq	$0x4, %rdx
0000000000010f2d	jge	0x10f18
0000000000010f2f	testq	$0x2, %rdx
0000000000010f36	je	0x10f4b
0000000000010f38	movzwl	(%rdi), %r9d
0000000000010f3c	addq	%r9, %r10
0000000000010f3f	movw	%r9w, (%rsi)
0000000000010f43	addq	$0x2, %rdi
0000000000010f47	addq	$0x2, %rsi
0000000000010f4b	testq	$0x1, %rdx
0000000000010f52	je	0x10f5e
0000000000010f54	movzbl	(%rdi), %r9d
0000000000010f58	movb	%r9b, (%rsi)
0000000000010f5b	addq	%r9, %r10
0000000000010f5e	movl	%r10d, %eax
0000000000010f61	shrq	$0x20, %r10
0000000000010f65	addq	%rax, %r10
0000000000010f68	movzwl	%r10w, %eax
0000000000010f6c	shrq	$0x10, %r10
0000000000010f70	addq	%rax, %r10
0000000000010f73	cmpq	$0x0, %r8
0000000000010f77	je	0x10f87
0000000000010f79	movq	%r10, %rax
0000000000010f7c	shlq	$0x8, %rax
0000000000010f80	shrq	$0x18, %r10
0000000000010f84	addq	%rax, %r10
0000000000010f87	movzwl	%cx, %eax
0000000000010f8a	shrl	$0x10, %ecx
0000000000010f8d	addl	%ecx, %eax
0000000000010f8f	movzwl	%r10w, %ecx
0000000000010f93	shrq	$0x10, %r10
0000000000010f97	addl	%ecx, %eax
0000000000010f99	addl	%r10d, %eax
0000000000010f9c	movzwl	%ax, %ecx
0000000000010f9f	shrl	$0x10, %eax
0000000000010fa2	addl	%ecx, %eax
0000000000010fa4	movzwl	%ax, %ecx
0000000000010fa7	shrl	$0x10, %eax
0000000000010faa	addl	%ecx, %eax
0000000000010fac	popq	%rbp
0000000000010fad	retq
_os_cpu_in_cksum:
0000000000010fae	movl	%edx, %ecx
0000000000010fb0	testb	$0x3, %sil
0000000000010fb4	jne	0x11013
0000000000010fb6	cmpl	$0x40, %esi
0000000000010fb9	ja	0x11013
0000000000010fbb	movl	%edi, %eax
0000000000010fbd	andl	$0x3, %eax
0000000000010fc0	testq	%rax, %rax
0000000000010fc3	jne	0x11013
0000000000010fc5	movl	%ecx, %eax
0000000000010fc7	cmpl	$0x14, %esi
0000000000010fca	jne	0x1103f
0000000000010fcc	movl	(%rdi), %ecx
0000000000010fce	movl	0x4(%rdi), %edx
0000000000010fd1	addq	%rax, %rcx
0000000000010fd4	addq	%rcx, %rdx
0000000000010fd7	movl	0x8(%rdi), %eax
0000000000010fda	addq	%rdx, %rax
0000000000010fdd	movl	0xc(%rdi), %ecx
0000000000010fe0	addq	%rax, %rcx
0000000000010fe3	movl	0x10(%rdi), %eax
0000000000010fe6	addq	%rcx, %rax
0000000000010fe9	movq	%rax, %rcx
0000000000010fec	shrq	$0x20, %rcx
0000000000010ff0	movl	%eax, %eax
0000000000010ff2	addq	%rcx, %rax
0000000000010ff5	movzwl	%ax, %ecx
0000000000010ff8	shrq	$0x10, %rax
0000000000010ffc	addq	%rax, %rcx
0000000000010fff	movzwl	%cx, %eax
0000000000011002	shrq	$0x10, %rcx
0000000000011006	addl	%eax, %ecx
0000000000011008	movl	%ecx, %eax
000000000001100a	shrl	$0x10, %eax
000000000001100d	addl	%ecx, %eax
000000000001100f	movzwl	%ax, %eax
0000000000011012	retq
0000000000011013	pushq	%rbp
0000000000011014	movq	%rsp, %rbp
0000000000011017	subq	$0x20, %rsp
000000000001101b	xorl	%edx, %edx
000000000001101d	leaq	-0x20(%rbp), %rax
0000000000011021	movq	%rdx, (%rax)
0000000000011024	movq	%rdx, 0x8(%rax)
0000000000011028	movq	%rdi, 0x10(%rax)
000000000001102c	movl	%esi, 0x18(%rax)
000000000001102f	movq	%rax, %rdi
0000000000011032	xorl	%edx, %edx
0000000000011034	callq	_os_cpu_in_cksum_mbuf
0000000000011039	addq	$0x20, %rsp
000000000001103d	popq	%rbp
000000000001103e	retq
000000000001103f	testl	%esi, %esi
0000000000011041	je	0x10fe9
0000000000011043	movl	%esi, %ecx
0000000000011045	xorl	%edx, %edx
0000000000011047	movl	(%rdi,%rdx), %esi
000000000001104a	addq	%rsi, %rax
000000000001104d	addq	$0x4, %rdx
0000000000011051	cmpl	%edx, %ecx
0000000000011053	jne	0x11047
0000000000011055	jmp	0x10fe9
_os_cpu_in_cksum_mbuf:
0000000000011057	pushq	%rbp
0000000000011058	movq	%rsp, %rbp
000000000001105b	pushq	%r14
000000000001105d	pushq	%rbx
000000000001105e	testl	%esi, %esi
0000000000011060	js	0x112f3
0000000000011066	testl	%edx, %edx
0000000000011068	js	0x112f8
000000000001106e	testq	%rdi, %rdi
0000000000011071	je	0x112d7
0000000000011077	movl	%ecx, %r8d
000000000001107a	movl	%edx, %eax
000000000001107c	movl	0x18(%rdi), %r10d
0000000000011080	subl	%r10d, %eax
0000000000011083	jl	0x1109c
0000000000011085	testl	%esi, %esi
0000000000011087	je	0x1129f
000000000001108d	movq	(%rdi), %rdi
0000000000011090	movl	%eax, %edx
0000000000011092	testq	%rdi, %rdi
0000000000011095	jne	0x1107c
0000000000011097	jmp	0x112d7
000000000001109c	subl	%edx, %r10d
000000000001109f	movslq	%edx, %rdx
00000000000110a2	addq	0x10(%rdi), %rdx
00000000000110a6	xorl	%r11d, %r11d
00000000000110a9	jmp	0x110bf
00000000000110ab	movq	(%rdi), %rdi
00000000000110ae	testq	%rdi, %rdi
00000000000110b1	je	0x112d7
00000000000110b7	movl	0x18(%rdi), %r10d
00000000000110bb	movq	0x10(%rdi), %rdx
00000000000110bf	testl	%r10d, %r10d
00000000000110c2	je	0x11297
00000000000110c8	cmpl	%esi, %r10d
00000000000110cb	cmovgl	%esi, %r10d
00000000000110cf	testb	$0x1, %dl
00000000000110d2	jne	0x110de
00000000000110d4	movl	%r10d, %r14d
00000000000110d7	xorl	%eax, %eax
00000000000110d9	movl	%r11d, %r9d
00000000000110dc	jmp	0x110f6
00000000000110de	xorl	%r9d, %r9d
00000000000110e1	testl	%r11d, %r11d
00000000000110e4	sete	%r9b
00000000000110e8	movzbl	(%rdx), %eax
00000000000110eb	shlq	$0x8, %rax
00000000000110ef	incq	%rdx
00000000000110f2	leal	-0x1(%r10), %r14d
00000000000110f6	testb	$0x2, %dl
00000000000110f9	je	0x11113
00000000000110fb	cmpl	$0x2, %r14d
00000000000110ff	jl	0x11257
0000000000011105	movzwl	(%rdx), %ecx
0000000000011108	addq	%rcx, %rax
000000000001110b	addq	$0x2, %rdx
000000000001110f	addl	$-0x2, %r14d
0000000000011113	cmpl	$0x40, %r14d
0000000000011117	jl	0x111c9
000000000001111d	leal	-0x40(%r14), %r11d
0000000000011121	jmp	0x11140
0000000000011123	testl	%r9d, %r9d
0000000000011126	je	0x1112c
0000000000011128	rolq	$0x8, %rax
000000000001112c	movq	%rax, %rcx
000000000001112f	shrq	$0x20, %rcx
0000000000011133	addq	%r8, %rcx
0000000000011136	movl	%eax, %r8d
0000000000011139	addq	%rcx, %r8
000000000001113c	xorl	%eax, %eax
000000000001113e	jmp	0x111b8
0000000000011140	prefetcht0	0x20(%rdx)
0000000000011144	prefetcht0	0x40(%rdx)
0000000000011148	movl	(%rdx), %ecx
000000000001114a	movl	0x4(%rdx), %ebx
000000000001114d	addq	%rax, %rcx
0000000000011150	addq	%rcx, %rbx
0000000000011153	movl	0x8(%rdx), %eax
0000000000011156	addq	%rbx, %rax
0000000000011159	movl	0xc(%rdx), %ecx
000000000001115c	addq	%rax, %rcx
000000000001115f	movl	0x10(%rdx), %eax
0000000000011162	addq	%rcx, %rax
0000000000011165	movl	0x14(%rdx), %ecx
0000000000011168	addq	%rax, %rcx
000000000001116b	movl	0x18(%rdx), %eax
000000000001116e	addq	%rcx, %rax
0000000000011171	movl	0x1c(%rdx), %ecx
0000000000011174	addq	%rax, %rcx
0000000000011177	movl	0x20(%rdx), %eax
000000000001117a	addq	%rcx, %rax
000000000001117d	movl	0x24(%rdx), %ecx
0000000000011180	addq	%rax, %rcx
0000000000011183	movl	0x28(%rdx), %eax
0000000000011186	addq	%rcx, %rax
0000000000011189	movl	0x2c(%rdx), %ecx
000000000001118c	addq	%rax, %rcx
000000000001118f	movl	0x30(%rdx), %eax
0000000000011192	addq	%rcx, %rax
0000000000011195	movl	0x34(%rdx), %ecx
0000000000011198	addq	%rax, %rcx
000000000001119b	movl	0x38(%rdx), %ebx
000000000001119e	addq	%rcx, %rbx
00000000000111a1	movl	0x3c(%rdx), %eax
00000000000111a4	addq	%rbx, %rax
00000000000111a7	addl	$-0x40, %r14d
00000000000111ab	movq	%rax, %rcx
00000000000111ae	shrq	$0x3e, %rcx
00000000000111b2	jne	0x11123
00000000000111b8	addq	$0x40, %rdx
00000000000111bc	cmpl	$0x3f, %r14d
00000000000111c0	jg	0x11140
00000000000111c6	movl	%r11d, %r14d
00000000000111c9	testb	$0x20, %r14b
00000000000111cd	je	0x11202
00000000000111cf	movl	(%rdx), %ecx
00000000000111d1	movl	0x4(%rdx), %ebx
00000000000111d4	addq	%rcx, %rax
00000000000111d7	addq	%rax, %rbx
00000000000111da	movl	0x8(%rdx), %eax
00000000000111dd	addq	%rbx, %rax
00000000000111e0	movl	0xc(%rdx), %ecx
00000000000111e3	addq	%rax, %rcx
00000000000111e6	movl	0x10(%rdx), %eax
00000000000111e9	addq	%rcx, %rax
00000000000111ec	movl	0x14(%rdx), %ecx
00000000000111ef	addq	%rax, %rcx
00000000000111f2	movl	0x18(%rdx), %ebx
00000000000111f5	addq	%rcx, %rbx
00000000000111f8	movl	0x1c(%rdx), %eax
00000000000111fb	addq	%rbx, %rax
00000000000111fe	addq	$0x20, %rdx
0000000000011202	testb	$0x10, %r14b
0000000000011206	je	0x11223
0000000000011208	movl	(%rdx), %ecx
000000000001120a	movl	0x4(%rdx), %ebx
000000000001120d	addq	%rcx, %rax
0000000000011210	addq	%rax, %rbx
0000000000011213	movl	0x8(%rdx), %ecx
0000000000011216	addq	%rbx, %rcx
0000000000011219	movl	0xc(%rdx), %eax
000000000001121c	addq	%rcx, %rax
000000000001121f	addq	$0x10, %rdx
0000000000011223	testb	$0x8, %r14b
0000000000011227	je	0x11238
0000000000011229	movl	(%rdx), %ecx
000000000001122b	movl	0x4(%rdx), %ebx
000000000001122e	addq	%rcx, %rax
0000000000011231	addq	%rbx, %rax
0000000000011234	addq	$0x8, %rdx
0000000000011238	testb	$0x4, %r14b
000000000001123c	je	0x11247
000000000001123e	movl	(%rdx), %ecx
0000000000011240	addq	%rcx, %rax
0000000000011243	addq	$0x4, %rdx
0000000000011247	testb	$0x2, %r14b
000000000001124b	je	0x11257
000000000001124d	movzwl	(%rdx), %ecx
0000000000011250	addq	%rcx, %rax
0000000000011253	addq	$0x2, %rdx
0000000000011257	testb	$0x1, %r14b
000000000001125b	jne	0x11262
000000000001125d	movl	%r9d, %r11d
0000000000011260	jmp	0x11272
0000000000011262	movzbl	(%rdx), %ecx
0000000000011265	addq	%rcx, %rax
0000000000011268	xorl	%r11d, %r11d
000000000001126b	testl	%r9d, %r9d
000000000001126e	sete	%r11b
0000000000011272	testl	%r9d, %r9d
0000000000011275	je	0x1127b
0000000000011277	rolq	$0x8, %rax
000000000001127b	subl	%r10d, %esi
000000000001127e	movq	%rax, %rcx
0000000000011281	shrq	$0x20, %rcx
0000000000011285	movl	%eax, %eax
0000000000011287	addq	%r8, %rax
000000000001128a	addq	%rcx, %rax
000000000001128d	movl	%eax, %r8d
0000000000011290	shrq	$0x20, %rax
0000000000011294	addq	%rax, %r8
0000000000011297	testl	%esi, %esi
0000000000011299	jg	0x110ab
000000000001129f	movq	%r8, %rax
00000000000112a2	shrq	$0x30, %rax
00000000000112a6	movq	%r8, %rcx
00000000000112a9	shrq	$0x20, %rcx
00000000000112ad	movzwl	%cx, %ecx
00000000000112b0	movl	%r8d, %edx
00000000000112b3	shrl	$0x10, %edx
00000000000112b6	movzwl	%r8w, %esi
00000000000112ba	addl	%esi, %eax
00000000000112bc	addl	%ecx, %eax
00000000000112be	addl	%edx, %eax
00000000000112c0	movzwl	%ax, %ecx
00000000000112c3	shrl	$0x10, %eax
00000000000112c6	addl	%eax, %ecx
00000000000112c8	movl	%ecx, %eax
00000000000112ca	shrl	$0x10, %eax
00000000000112cd	addl	%ecx, %eax
00000000000112cf	movzwl	%ax, %eax
00000000000112d2	popq	%rbx
00000000000112d3	popq	%r14
00000000000112d5	popq	%rbp
00000000000112d6	retq
00000000000112d7	leaq	0x16f79(%rip), %rdi ## literal pool for: "%s: out of data\n"
00000000000112de	leaq	0x16f83(%rip), %rsi ## literal pool for: "os_cpu_in_cksum_mbuf"
00000000000112e5	xorl	%eax, %eax
00000000000112e7	callq	_fprintf_stderr
00000000000112ec	movl	$0xffffffff, %eax
00000000000112f1	jmp	0x112d2
00000000000112f3	callq	_os_cpu_in_cksum_mbuf.cold.1
00000000000112f8	callq	_os_cpu_in_cksum_mbuf.cold.2
_proc_listpidspath:
00000000000112fd	pushq	%rbp
00000000000112fe	movq	%rsp, %rbp
0000000000011301	pushq	%r15
0000000000011303	pushq	%r14
0000000000011305	pushq	%r13
0000000000011307	pushq	%r12
0000000000011309	pushq	%rbx
000000000001130a	subq	$0xa48, %rsp
0000000000011311	movl	%esi, %r14d
0000000000011314	movl	%edi, %r15d
0000000000011317	testq	%r8, %r8
000000000001131a	je	0x11337
000000000001131c	cmpl	$0x3, %r9d
0000000000011320	ja	0x11357
0000000000011322	callq	___error
0000000000011327	movl	$0xc, (%rax)
000000000001132d	movl	$0xffffffff, %eax
0000000000011332	jmp	0x119ff
0000000000011337	movl	%r15d, %edi
000000000001133a	movl	%r14d, %esi
000000000001133d	xorl	%edx, %edx
000000000001133f	xorl	%ecx, %ecx
0000000000011341	addq	$0xa48, %rsp
0000000000011348	popq	%rbx
0000000000011349	popq	%r12
000000000001134b	popq	%r13
000000000001134d	popq	%r14
000000000001134f	popq	%r15
0000000000011351	popq	%rbp
0000000000011352	jmp	_proc_listpids
0000000000011357	movl	%ecx, %r13d
000000000001135a	movq	%rdx, %rbx
000000000001135d	movq	%r8, -0x48(%rbp)
0000000000011361	movl	%r9d, -0x2c(%rbp)
0000000000011365	movl	$0xe0, %edi
000000000001136a	callq	_malloc
000000000001136f	movq	%rax, %r12
0000000000011372	movl	$0xffffffff, %eax
0000000000011377	testq	%r12, %r12
000000000001137a	je	0x119ff
0000000000011380	xorl	%eax, %eax
0000000000011382	movq	%rax, (%r12)
0000000000011386	movl	%eax, 0x8(%r12)
000000000001138b	movq	%rax, 0x40(%r12)
0000000000011390	leaq	0x48(%r12), %rsi
0000000000011395	movl	%eax, 0x20(%r12)
000000000001139a	movq	%rax, 0x18(%r12)
000000000001139f	movq	%rax, 0x10(%r12)
00000000000113a4	movl	%eax, 0x38(%r12)
00000000000113a9	movq	%rax, 0x30(%r12)
00000000000113ae	movq	%rax, 0x28(%r12)
00000000000113b3	movq	%rbx, %rdi
00000000000113b6	movq	%rsi, -0x40(%rbp)
00000000000113ba	callq	_stat64
00000000000113bf	cmpl	$-0x1, %eax
00000000000113c2	je	0x1185c
00000000000113c8	movl	%r13d, 0xd8(%r12)
00000000000113d0	movl	%r15d, %edi
00000000000113d3	movl	%r14d, %esi
00000000000113d6	xorl	%edx, %edx
00000000000113d8	xorl	%ecx, %ecx
00000000000113da	callq	_proc_listpids
00000000000113df	movl	$0xffffffff, %ecx
00000000000113e4	movq	%rcx, -0x38(%rbp)
00000000000113e8	testl	%eax, %eax
00000000000113ea	jle	0x119c4
00000000000113f0	andl	$-0x4, -0x2c(%rbp)
00000000000113f4	leaq	0x10(%r12), %rbx
00000000000113f9	movq	%r12, %rcx
00000000000113fc	addq	$0x28, %rcx
0000000000011400	movq	%rcx, -0x50(%rbp)
0000000000011404	movq	(%rbx), %rcx
0000000000011407	cltq
0000000000011409	cmpq	%rax, %rcx
000000000001140c	jae	0x1142f
000000000001140e	subq	$-0x80, %rcx
0000000000011412	cmpq	%rax, %rcx
0000000000011415	jb	0x1140e
0000000000011417	movq	%rcx, 0x10(%r12)
000000000001141c	movq	(%r12), %rdi
0000000000011420	testq	%rdi, %rdi
0000000000011423	je	0x11435
0000000000011425	movq	%rcx, %rsi
0000000000011428	callq	_reallocf
000000000001142d	jmp	0x1143d
000000000001142f	movq	(%r12), %rdx
0000000000011433	jmp	0x11450
0000000000011435	movq	%rcx, %rdi
0000000000011438	callq	_malloc
000000000001143d	movq	%rax, %rdx
0000000000011440	movq	%rax, (%r12)
0000000000011444	testq	%rax, %rax
0000000000011447	je	0x11a11
000000000001144d	movq	(%rbx), %rcx
0000000000011450	movl	%r15d, %edi
0000000000011453	movl	%r14d, %esi
0000000000011456	callq	_proc_listpids
000000000001145b	testl	%eax, %eax
000000000001145d	jle	0x119c4
0000000000011463	movl	%eax, %r13d
0000000000011466	movslq	%eax, %rdx
0000000000011469	addq	$0x4, %rdx
000000000001146d	movq	(%rbx), %rcx
0000000000011470	leal	0x4(%rcx), %eax
0000000000011473	cmpq	%rcx, %rdx
0000000000011476	jae	0x11407
0000000000011478	shrl	$0x2, %r13d
000000000001147c	movl	%r13d, 0x8(%r12)
0000000000011481	xorl	%eax, %eax
0000000000011483	testl	%r13d, %r13d
0000000000011486	jle	0x1186d
000000000001148c	movq	%rax, -0x38(%rbp)
0000000000011490	movslq	%r13d, %r13
0000000000011493	movq	(%r12), %rax
0000000000011497	movl	-0x4(%rax,%r13,4), %r14d
000000000001149c	decq	%r13
000000000001149f	testl	%r14d, %r14d
00000000000114a2	je	0x116e4
00000000000114a8	movl	%r14d, %edi
00000000000114ab	movl	$0x9, %esi
00000000000114b0	xorl	%edx, %edx
00000000000114b2	leaq	-0xa68(%rbp), %rcx
00000000000114b9	movl	$0x930, %r8d
00000000000114bf	callq	_proc_pidinfo
00000000000114c4	testl	%eax, %eax
00000000000114c6	jle	0x114e4
00000000000114c8	movl	$0xffffffff, %r15d
00000000000114ce	cmpl	$0x930, %eax
00000000000114d3	jae	0x114f3
00000000000114d5	cmpl	$0x1, %r15d
00000000000114d9	jne	0x116e4
00000000000114df	jmp	0x1183b
00000000000114e4	callq	___error
00000000000114e9	cmpl	$0x3, (%rax)
00000000000114ec	je	0x11555
00000000000114ee	jmp	0x116e4
00000000000114f3	movl	-0xa68(%rbp), %eax
00000000000114f9	testl	%eax, %eax
00000000000114fb	je	0x11524
00000000000114fd	movq	-0x40(%rbp), %rcx
0000000000011501	cmpl	(%rcx), %eax
0000000000011503	jne	0x11524
0000000000011505	movl	$0x1, %r15d
000000000001150b	testb	$0x1, 0xd8(%r12)
0000000000011514	jne	0x114d5
0000000000011516	movq	-0xa60(%rbp), %rax
000000000001151d	cmpq	0x50(%r12), %rax
0000000000011522	je	0x114d5
0000000000011524	movl	-0x5d0(%rbp), %eax
000000000001152a	testl	%eax, %eax
000000000001152c	je	0x11555
000000000001152e	movq	-0x40(%rbp), %rcx
0000000000011532	cmpl	(%rcx), %eax
0000000000011534	jne	0x11555
0000000000011536	movl	$0x1, %r15d
000000000001153c	testb	$0x1, 0xd8(%r12)
0000000000011545	jne	0x114d5
0000000000011547	movq	-0x5c8(%rbp), %rax
000000000001154e	cmpq	0x50(%r12), %rax
0000000000011553	je	0x114d5
0000000000011555	movl	%r14d, %edi
0000000000011558	movl	$0x1, %esi
000000000001155d	xorl	%edx, %edx
000000000001155f	xorl	%ecx, %ecx
0000000000011561	xorl	%r8d, %r8d
0000000000011564	callq	_proc_pidinfo
0000000000011569	testl	%eax, %eax
000000000001156b	jle	0x116e4
0000000000011571	movl	%eax, %ecx
0000000000011573	movq	0x40(%r12), %r8
0000000000011578	movslq	%ecx, %rax
000000000001157b	cmpq	%rax, %r8
000000000001157e	jae	0x115a5
0000000000011580	addq	$0x100, %r8
0000000000011587	cmpq	%rax, %r8
000000000001158a	jb	0x11580
000000000001158c	movq	%r8, 0x40(%r12)
0000000000011591	movq	0x30(%r12), %rdi
0000000000011596	testq	%rdi, %rdi
0000000000011599	je	0x115ac
000000000001159b	movq	%r8, %rsi
000000000001159e	callq	_reallocf
00000000000115a3	jmp	0x115b4
00000000000115a5	movq	0x30(%r12), %rcx
00000000000115aa	jmp	0x115ca
00000000000115ac	movq	%r8, %rdi
00000000000115af	callq	_malloc
00000000000115b4	movq	%rax, %rcx
00000000000115b7	movq	%rax, 0x30(%r12)
00000000000115bc	testq	%rax, %rax
00000000000115bf	je	0x116e4
00000000000115c5	movq	0x40(%r12), %r8
00000000000115ca	movl	%r14d, %edi
00000000000115cd	movl	$0x1, %esi
00000000000115d2	xorl	%edx, %edx
00000000000115d4	callq	_proc_pidinfo
00000000000115d9	testl	%eax, %eax
00000000000115db	jle	0x116e4
00000000000115e1	movslq	%eax, %rdx
00000000000115e4	addq	$0x8, %rdx
00000000000115e8	movq	0x40(%r12), %r8
00000000000115ed	leal	0x8(%r8), %ecx
00000000000115f1	cmpq	%r8, %rdx
00000000000115f4	jae	0x11578
00000000000115f6	shrl	$0x3, %eax
00000000000115f9	movl	%eax, 0x38(%r12)
00000000000115fe	je	0x116a2
0000000000011604	xorl	%ebx, %ebx
0000000000011606	movq	0x30(%r12), %rax
000000000001160b	cmpl	$0x1, 0x4(%rax,%rbx,8)
0000000000011610	jne	0x11691
0000000000011612	movl	(%rax,%rbx,8), %esi
0000000000011615	movl	%r14d, %edi
0000000000011618	movl	$0x1, %edx
000000000001161d	leaq	-0xa68(%rbp), %rcx
0000000000011624	movl	$0xb0, %r8d
000000000001162a	callq	_proc_pidfdinfo
000000000001162f	testl	%eax, %eax
0000000000011631	jle	0x11687
0000000000011633	cmpl	$0xb0, %eax
0000000000011638	jb	0x11709
000000000001163e	movl	0xd8(%r12), %eax
0000000000011646	testb	$0x2, %al
0000000000011648	je	0x11654
000000000001164a	cmpw	$0x0, -0xa68(%rbp)
0000000000011652	js	0x11691
0000000000011654	movl	-0xa50(%rbp), %ecx
000000000001165a	testl	%ecx, %ecx
000000000001165c	je	0x11691
000000000001165e	movq	-0x40(%rbp), %rdx
0000000000011662	cmpl	(%rdx), %ecx
0000000000011664	jne	0x11691
0000000000011666	movl	$0x1, %r15d
000000000001166c	testb	$0x1, %al
000000000001166e	jne	0x114d5
0000000000011674	movq	-0xa48(%rbp), %rax
000000000001167b	cmpq	0x50(%r12), %rax
0000000000011680	jne	0x11691
0000000000011682	jmp	0x114d5
0000000000011687	callq	___error
000000000001168c	cmpl	$0x2, (%rax)
000000000001168f	jne	0x116e4
0000000000011691	incq	%rbx
0000000000011694	movslq	0x38(%r12), %rax
0000000000011699	cmpq	%rax, %rbx
000000000001169c	jl	0x11606
00000000000116a2	movl	%r14d, %edi
00000000000116a5	movl	$0x2, %esi
00000000000116aa	xorl	%edx, %edx
00000000000116ac	leaq	-0x138(%rbp), %rcx
00000000000116b3	movl	$0xe8, %r8d
00000000000116b9	callq	_proc_pidinfo
00000000000116be	testl	%eax, %eax
00000000000116c0	jle	0x116f2
00000000000116c2	movl	$0xffffffff, %r15d
00000000000116c8	cmpl	$0xe8, %eax
00000000000116cd	jb	0x114d5
00000000000116d3	testb	$0x1, -0x137(%rbp)
00000000000116da	jne	0x11714
00000000000116dc	xorl	%r15d, %r15d
00000000000116df	jmp	0x114d5
00000000000116e4	testq	%r13, %r13
00000000000116e7	jg	0x11493
00000000000116ed	jmp	0x11869
00000000000116f2	callq	___error
00000000000116f7	xorl	%r15d, %r15d
00000000000116fa	cmpl	$0x3, (%rax)
00000000000116fd	setne	%r15b
0000000000011701	negl	%r15d
0000000000011704	jmp	0x114d5
0000000000011709	movl	$0xffffffff, %r15d
000000000001170f	jmp	0x114d5
0000000000011714	movl	-0x5c(%rbp), %ecx
0000000000011717	shll	$0x3, %ecx
000000000001171a	movq	-0x50(%rbp), %rbx
000000000001171e	movq	(%rbx), %r8
0000000000011721	movslq	%ecx, %rax
0000000000011724	cmpq	%rax, %r8
0000000000011727	jae	0x1174e
0000000000011729	addq	$0x100, %r8
0000000000011730	cmpq	%rax, %r8
0000000000011733	jb	0x11729
0000000000011735	movq	%r8, 0x28(%r12)
000000000001173a	movq	0x18(%r12), %rdi
000000000001173f	testq	%rdi, %rdi
0000000000011742	je	0x11755
0000000000011744	movq	%r8, %rsi
0000000000011747	callq	_reallocf
000000000001174c	jmp	0x1175d
000000000001174e	movq	0x18(%r12), %rcx
0000000000011753	jmp	0x11771
0000000000011755	movq	%r8, %rdi
0000000000011758	callq	_malloc
000000000001175d	movq	%rax, %rcx
0000000000011760	movq	%rax, 0x18(%r12)
0000000000011765	testq	%rax, %rax
0000000000011768	je	0x114d5
000000000001176e	movq	(%rbx), %r8
0000000000011771	movl	%r14d, %edi
0000000000011774	movl	$0x6, %esi
0000000000011779	xorl	%edx, %edx
000000000001177b	callq	_proc_pidinfo
0000000000011780	testl	%eax, %eax
0000000000011782	jle	0x114d5
0000000000011788	movslq	%eax, %rdx
000000000001178b	addq	$0x8, %rdx
000000000001178f	movq	(%rbx), %r8
0000000000011792	leal	0x8(%r8), %ecx
0000000000011796	cmpq	%r8, %rdx
0000000000011799	jae	0x11721
000000000001179b	shrl	$0x3, %eax
000000000001179e	movl	%eax, 0x20(%r12)
00000000000117a3	je	0x116dc
00000000000117a9	xorl	%ebx, %ebx
00000000000117ab	movq	0x18(%r12), %rax
00000000000117b0	movq	(%rax,%rbx,8), %rdx
00000000000117b4	movl	%r14d, %edi
00000000000117b7	movl	$0xa, %esi
00000000000117bc	leaq	-0xa68(%rbp), %rcx
00000000000117c3	movl	$0x508, %r8d
00000000000117c9	callq	_proc_pidinfo
00000000000117ce	testl	%eax, %eax
00000000000117d0	jle	0x1180a
00000000000117d2	cmpl	$0xe7, %eax
00000000000117d7	jbe	0x114d5
00000000000117dd	movl	-0x9f8(%rbp), %eax
00000000000117e3	testl	%eax, %eax
00000000000117e5	je	0x1181e
00000000000117e7	movq	-0x40(%rbp), %rcx
00000000000117eb	cmpl	(%rcx), %eax
00000000000117ed	jne	0x1181e
00000000000117ef	testb	$0x1, 0xd8(%r12)
00000000000117f8	jne	0x11830
00000000000117fa	movq	-0x9f0(%rbp), %rax
0000000000011801	cmpq	0x50(%r12), %rax
0000000000011806	jne	0x1181e
0000000000011808	jmp	0x11830
000000000001180a	callq	___error
000000000001180f	cmpl	$0x3, (%rax)
0000000000011812	je	0x1181e
0000000000011814	callq	___error
0000000000011819	cmpl	$0x16, (%rax)
000000000001181c	jne	0x117dd
000000000001181e	incq	%rbx
0000000000011821	movslq	0x20(%r12), %rax
0000000000011826	cmpq	%rax, %rbx
0000000000011829	jl	0x117ab
000000000001182b	jmp	0x116dc
0000000000011830	movl	$0x1, %r15d
0000000000011836	jmp	0x114d5
000000000001183b	movq	-0x48(%rbp), %rax
000000000001183f	movl	%r14d, (%rax)
0000000000011842	addq	$0x4, %rax
0000000000011846	movq	%rax, -0x48(%rbp)
000000000001184a	movq	-0x38(%rbp), %rax
000000000001184e	addl	$0x4, %eax
0000000000011851	cmpl	-0x2c(%rbp), %eax
0000000000011854	jl	0x11483
000000000001185a	jmp	0x1186d
000000000001185c	movq	%r12, %rdi
000000000001185f	callq	_free
0000000000011864	jmp	0x1132d
0000000000011869	movq	-0x38(%rbp), %rax
000000000001186d	movq	%rax, -0x38(%rbp)
0000000000011871	cmpl	-0x2c(%rbp), %eax
0000000000011874	jge	0x119c4
000000000001187a	movl	0x8(%r12), %r15d
000000000001187f	leaq	-0xa68(%rbp), %r14
0000000000011886	movq	-0x40(%rbp), %r13
000000000001188a	testl	%r15d, %r15d
000000000001188d	jle	0x119c4
0000000000011893	movslq	%r15d, %r15
0000000000011896	movq	(%r12), %rax
000000000001189a	movl	-0x4(%rax,%r15,4), %ebx
000000000001189f	decq	%r15
00000000000118a2	testl	%ebx, %ebx
00000000000118a4	je	0x11997
00000000000118aa	testb	$0x1, 0xd8(%r12)
00000000000118b3	jne	0x11925
00000000000118b5	movl	%ebx, %edi
00000000000118b7	movl	$0x16, %esi
00000000000118bc	xorl	%edx, %edx
00000000000118be	jmp	0x118d5
00000000000118c0	movq	-0xa10(%rbp), %rdx
00000000000118c7	addq	-0xa18(%rbp), %rdx
00000000000118ce	movl	%ebx, %edi
00000000000118d0	movl	$0x16, %esi
00000000000118d5	movq	%r14, %rcx
00000000000118d8	movl	$0x4f8, %r8d
00000000000118de	callq	_proc_pidinfo
00000000000118e3	testl	%eax, %eax
00000000000118e5	jle	0x11974
00000000000118eb	cmpl	$0x4f8, %eax
00000000000118f0	jb	0x11997
00000000000118f6	movl	-0xa08(%rbp), %eax
00000000000118fc	testl	%eax, %eax
00000000000118fe	je	0x118c0
0000000000011900	cmpl	(%r13), %eax
0000000000011904	jne	0x118c0
0000000000011906	testb	$0x1, 0xd8(%r12)
000000000001190f	jne	0x119a2
0000000000011915	movq	-0xa00(%rbp), %rax
000000000001191c	cmpq	0x50(%r12), %rax
0000000000011921	jne	0x118c0
0000000000011923	jmp	0x119a2
0000000000011925	movslq	(%r13), %rdx
0000000000011929	movl	%ebx, %edi
000000000001192b	movl	$0x17, %esi
0000000000011930	movq	%r14, %rcx
0000000000011933	movl	$0x4f8, %r8d
0000000000011939	callq	_proc_pidinfo
000000000001193e	testl	%eax, %eax
0000000000011940	jle	0x11988
0000000000011942	cmpl	$0x4f8, %eax
0000000000011947	jb	0x11997
0000000000011949	movl	-0xa08(%rbp), %eax
000000000001194f	testl	%eax, %eax
0000000000011951	je	0x11997
0000000000011953	cmpl	(%r13), %eax
0000000000011957	jne	0x11997
0000000000011959	testb	$0x1, 0xd8(%r12)
0000000000011962	jne	0x119a2
0000000000011964	movq	-0xa00(%rbp), %rax
000000000001196b	cmpq	0x50(%r12), %rax
0000000000011970	jne	0x11997
0000000000011972	jmp	0x119a2
0000000000011974	callq	___error
0000000000011979	cmpl	$0x3, (%rax)
000000000001197c	je	0x11997
000000000001197e	callq	___error
0000000000011983	cmpl	$0x16, (%rax)
0000000000011986	jmp	0x11997
0000000000011988	callq	___error
000000000001198d	cmpl	$0x3, (%rax)
0000000000011990	je	0x11997
0000000000011992	callq	___error
0000000000011997	testq	%r15, %r15
000000000001199a	jg	0x11896
00000000000119a0	jmp	0x119c4
00000000000119a2	movq	-0x48(%rbp), %rax
00000000000119a6	movl	%ebx, (%rax)
00000000000119a8	addq	$0x4, %rax
00000000000119ac	movq	%rax, -0x48(%rbp)
00000000000119b0	movq	-0x38(%rbp), %rax
00000000000119b4	addl	$0x4, %eax
00000000000119b7	movq	%rax, -0x38(%rbp)
00000000000119bb	cmpl	-0x2c(%rbp), %eax
00000000000119be	jl	0x1188a
00000000000119c4	movq	(%r12), %rdx
00000000000119c8	testq	%rdx, %rdx
00000000000119cb	je	0x119d5
00000000000119cd	movq	%rdx, %rdi
00000000000119d0	callq	_free
00000000000119d5	movq	0x18(%r12), %rdi
00000000000119da	testq	%rdi, %rdi
00000000000119dd	je	0x119e4
00000000000119df	callq	_free
00000000000119e4	movq	0x30(%r12), %rdi
00000000000119e9	testq	%rdi, %rdi
00000000000119ec	je	0x119f3
00000000000119ee	callq	_free
00000000000119f3	movq	%r12, %rdi
00000000000119f6	callq	_free
00000000000119fb	movq	-0x38(%rbp), %rax
00000000000119ff	addq	$0xa48, %rsp
0000000000011a06	popq	%rbx
0000000000011a07	popq	%r12
0000000000011a09	popq	%r13
0000000000011a0b	popq	%r14
0000000000011a0d	popq	%r15
0000000000011a0f	popq	%rbp
0000000000011a10	retq
0000000000011a11	movl	$0xffffffff, %eax
0000000000011a16	movq	%rax, -0x38(%rbp)
0000000000011a1a	jmp	0x119c8
_os_channel_event_get_next_event:
0000000000011a1c	pushq	%rbp
0000000000011a1d	movq	%rsp, %rbp
0000000000011a20	pushq	%r15
0000000000011a22	pushq	%r14
0000000000011a24	pushq	%r13
0000000000011a26	pushq	%r12
0000000000011a28	pushq	%rbx
0000000000011a29	pushq	%rax
0000000000011a2a	xorl	%eax, %eax
0000000000011a2c	movq	%rax, (%rdx)
0000000000011a2f	movl	$0x16, %ebx
0000000000011a34	testq	%rdi, %rdi
0000000000011a37	je	0x11ac2
0000000000011a3d	movq	%rdx, %r14
0000000000011a40	movq	%rsi, %r15
0000000000011a43	xorl	%esi, %esi
0000000000011a45	callq	_os_packet_get_next_buflet
0000000000011a4a	testq	%rax, %rax
0000000000011a4d	je	0x11ac2
0000000000011a4f	movq	%rax, %r12
0000000000011a52	movq	%rax, %rdi
0000000000011a55	callq	_os_buflet_get_object_address
0000000000011a5a	testq	%rax, %rax
0000000000011a5d	je	0x11ad3
0000000000011a5f	movq	%rax, %r13
0000000000011a62	movq	%r12, %rdi
0000000000011a65	callq	_os_buflet_get_data_length
0000000000011a6a	movl	%eax, %ebx
0000000000011a6c	movq	%r12, %rdi
0000000000011a6f	callq	_os_buflet_get_data_offset
0000000000011a74	movzwl	%ax, %ecx
0000000000011a77	leaq	0x8(%r13,%rcx), %rax
0000000000011a7c	testq	%r15, %r15
0000000000011a7f	je	0x11aa3
0000000000011a81	movl	%ebx, %esi
0000000000011a83	movl	$0x60, %ebx
0000000000011a88	testb	$0x1, 0x4(%r15)
0000000000011a8d	je	0x11ac2
0000000000011a8f	movzwl	0xa(%r15), %edx
0000000000011a94	leaq	0xc(%r15,%rdx), %rdx
0000000000011a99	cmpq	%rax, %rdx
0000000000011a9c	movq	%rdx, %rax
0000000000011a9f	movl	%esi, %ebx
0000000000011aa1	jb	0x11ad3
0000000000011aa3	addq	%rcx, %r13
0000000000011aa6	movzwl	0xa(%rax), %ecx
0000000000011aaa	addq	%rax, %rcx
0000000000011aad	movzwl	%bx, %edx
0000000000011ab0	addq	%r13, %rdx
0000000000011ab3	movl	$0x6, %ebx
0000000000011ab8	cmpq	%rdx, %rcx
0000000000011abb	ja	0x11ac2
0000000000011abd	movq	%rax, (%r14)
0000000000011ac0	xorl	%ebx, %ebx
0000000000011ac2	movl	%ebx, %eax
0000000000011ac4	addq	$0x8, %rsp
0000000000011ac8	popq	%rbx
0000000000011ac9	popq	%r12
0000000000011acb	popq	%r13
0000000000011acd	popq	%r14
0000000000011acf	popq	%r15
0000000000011ad1	popq	%rbp
0000000000011ad2	retq
0000000000011ad3	movl	$0x6, %ebx
0000000000011ad8	jmp	0x11ac2
_os_channel_event_get_event_data:
0000000000011ada	movl	$0x16, %eax
0000000000011adf	testq	%rdi, %rdi
0000000000011ae2	je	0x11b0f
0000000000011ae4	testq	%rsi, %rsi
0000000000011ae7	je	0x11b0f
0000000000011ae9	cmpl	$0x1, (%rdi)
0000000000011aec	jne	0x11b10
0000000000011aee	movl	$0x1, (%rsi)
0000000000011af4	movl	0x4(%rdi), %eax
0000000000011af7	andl	$0x1, %eax
0000000000011afa	movl	%eax, 0x4(%rsi)
0000000000011afd	movzwl	0xa(%rdi), %eax
0000000000011b01	movw	%ax, 0x8(%rsi)
0000000000011b05	addq	$0xc, %rdi
0000000000011b09	movq	%rdi, 0x10(%rsi)
0000000000011b0d	xorl	%eax, %eax
0000000000011b0f	retq
0000000000011b10	movl	$0x6, %eax
0000000000011b15	retq
_mach_port_names:
0000000000011b16	jmp	__kernelrpc_mach_port_names
_mach_port_rename:
0000000000011b1b	jmp	__kernelrpc_mach_port_rename
_mach_port_allocate_name:
0000000000011b20	jmp	__kernelrpc_mach_port_allocate_name
_mach_port_peek:
0000000000011b25	jmp	__kernelrpc_mach_port_peek
_mach_port_set_mscount:
0000000000011b2a	jmp	__kernelrpc_mach_port_set_mscount
_mach_port_set_seqno:
0000000000011b2f	jmp	__kernelrpc_mach_port_set_seqno
_mach_port_allocate_qos:
0000000000011b34	jmp	__kernelrpc_mach_port_allocate_qos
_mach_port_allocate_full:
0000000000011b39	jmp	__kernelrpc_mach_port_allocate_full
_task_set_port_space:
0000000000011b3e	jmp	__kernelrpc_task_set_port_space
_mach_port_get_srights:
0000000000011b43	jmp	__kernelrpc_mach_port_get_srights
_mach_port_space_info:
0000000000011b48	jmp	__kernelrpc_mach_port_space_info
_mach_port_space_basic_info:
0000000000011b4d	jmp	__kernelrpc_mach_port_space_basic_info
_mig_dealloc_special_reply_port:
0000000000011b52	pushq	%rbp
0000000000011b53	movq	%rsp, %rbp
0000000000011b56	pushq	%r15
0000000000011b58	pushq	%r14
0000000000011b5a	pushq	%rbx
0000000000011b5b	pushq	%rax
0000000000011b5c	movl	%gs:0x40, %ebx
0000000000011b64	leal	0x1(%rbx), %eax
0000000000011b67	cmpl	$0x2, %eax
0000000000011b6a	jb	0x11ba4
0000000000011b6c	movl	%edi, %r14d
0000000000011b6f	leaq	_mach_task_self_(%rip), %r15
0000000000011b76	movl	(%r15), %edi
0000000000011b79	movl	%ebx, %esi
0000000000011b7b	movl	$0xffffffff, %edx
0000000000011b80	xorl	%ecx, %ecx
0000000000011b82	callq	_mach_port_destruct
0000000000011b87	cmpl	%r14d, %ebx
0000000000011b8a	je	0x11b97
0000000000011b8c	movl	(%r15), %edi
0000000000011b8f	movl	%r14d, %esi
0000000000011b92	callq	_mach_port_deallocate
0000000000011b97	movq	$0x0, %gs:0x40
0000000000011ba4	addq	$0x8, %rsp
0000000000011ba8	popq	%rbx
0000000000011ba9	popq	%r14
0000000000011bab	popq	%r15
0000000000011bad	popq	%rbp
0000000000011bae	retq
_mach_sync_ipc_link_monitoring_start:
0000000000011baf	pushq	%rbp
0000000000011bb0	movq	%rsp, %rbp
0000000000011bb3	pushq	%r15
0000000000011bb5	pushq	%r14
0000000000011bb7	pushq	%r12
0000000000011bb9	pushq	%rbx
0000000000011bba	subq	$0x10, %rsp
0000000000011bbe	movq	%rdi, %r14
0000000000011bc1	movl	$0xffffffff, (%rdi)
0000000000011bc7	movl	%gs:0x40, %r15d
0000000000011bd0	leal	0x1(%r15), %eax
0000000000011bd4	movl	$0x1, %ecx
0000000000011bd9	cmpl	%ecx, %eax
0000000000011bdb	ja	0x11bf0
0000000000011bdd	callq	_thread_get_special_reply_port
0000000000011be2	movl	%eax, %r15d
0000000000011be5	movl	%eax, %eax
0000000000011be7	movq	%rax, %gs:0x40
0000000000011bf0	leaq	_mach_task_self_(%rip), %r12
0000000000011bf7	movl	(%r12), %edi
0000000000011bfb	movl	%r15d, %esi
0000000000011bfe	xorl	%edx, %edx
0000000000011c00	movl	$0x1, %ecx
0000000000011c05	callq	_mach_port_mod_refs
0000000000011c0a	movl	%eax, %ebx
0000000000011c0c	testl	%eax, %eax
0000000000011c0e	jne	0x11c39
0000000000011c10	movl	(%r12), %edi
0000000000011c14	leaq	-0x24(%rbp), %rdx
0000000000011c18	movl	%r15d, %esi
0000000000011c1b	callq	__kernelrpc_mach_port_special_reply_port_reset_link
0000000000011c20	testl	%eax, %eax
0000000000011c22	je	0x11c34
0000000000011c24	movl	%eax, %ebx
0000000000011c26	movl	(%r12), %edi
0000000000011c2a	movl	%r15d, %esi
0000000000011c2d	callq	_mach_port_deallocate
0000000000011c32	jmp	0x11c39
0000000000011c34	movl	%r15d, (%r14)
0000000000011c37	xorl	%ebx, %ebx
0000000000011c39	movl	%ebx, %eax
0000000000011c3b	addq	$0x10, %rsp
0000000000011c3f	popq	%rbx
0000000000011c40	popq	%r12
0000000000011c42	popq	%r14
0000000000011c44	popq	%r15
0000000000011c46	popq	%rbp
0000000000011c47	retq
_mach_sync_ipc_link_monitoring_stop:
0000000000011c48	pushq	%rbp
0000000000011c49	movq	%rsp, %rbp
0000000000011c4c	pushq	%r15
0000000000011c4e	pushq	%r14
0000000000011c50	pushq	%r12
0000000000011c52	pushq	%rbx
0000000000011c53	subq	$0x10, %rsp
0000000000011c57	movq	%rsi, %r14
0000000000011c5a	movl	%edi, %ebx
0000000000011c5c	leaq	-0x24(%rbp), %r15
0000000000011c60	movl	$0x1, (%r15)
0000000000011c67	leaq	_mach_task_self_(%rip), %r12
0000000000011c6e	movl	(%r12), %edi
0000000000011c72	movl	%ebx, %esi
0000000000011c74	movq	%r15, %rdx
0000000000011c77	callq	__kernelrpc_mach_port_special_reply_port_reset_link
0000000000011c7c	xorl	%ecx, %ecx
0000000000011c7e	cmpl	$0x0, (%r15)
0000000000011c82	movl	%eax, %r15d
0000000000011c85	sete	%cl
0000000000011c88	movl	%ecx, (%r14)
0000000000011c8b	movl	(%r12), %edi
0000000000011c8f	movl	%ebx, %esi
0000000000011c91	callq	_mach_port_deallocate
0000000000011c96	movl	%r15d, %eax
0000000000011c99	addq	$0x10, %rsp
0000000000011c9d	popq	%rbx
0000000000011c9e	popq	%r12
0000000000011ca0	popq	%r14
0000000000011ca2	popq	%r15
0000000000011ca4	popq	%rbp
0000000000011ca5	retq
_mach_port_dnrequest_info:
0000000000011ca6	jmp	__kernelrpc_mach_port_dnrequest_info
_mach_port_kernel_object:
0000000000011cab	jmp	__kernelrpc_mach_port_kernel_object
_mach_port_kobject:
0000000000011cb0	jmp	__kernelrpc_mach_port_kobject
_mach_port_unguard:
0000000000011cb5	pushq	%rbp
0000000000011cb6	movq	%rsp, %rbp
0000000000011cb9	pushq	%r15
0000000000011cbb	pushq	%r14
0000000000011cbd	pushq	%rbx
0000000000011cbe	pushq	%rax
0000000000011cbf	movq	%rdx, %r14
0000000000011cc2	movl	%esi, %r15d
0000000000011cc5	movl	%edi, %ebx
0000000000011cc7	callq	__kernelrpc_mach_port_unguard_trap
0000000000011ccc	cmpl	$0x10000003, %eax
0000000000011cd1	jne	0x11cea
0000000000011cd3	movl	%ebx, %edi
0000000000011cd5	movl	%r15d, %esi
0000000000011cd8	movq	%r14, %rdx
0000000000011cdb	addq	$0x8, %rsp
0000000000011cdf	popq	%rbx
0000000000011ce0	popq	%r14
0000000000011ce2	popq	%r15
0000000000011ce4	popq	%rbp
0000000000011ce5	jmp	__kernelrpc_mach_port_unguard
0000000000011cea	addq	$0x8, %rsp
0000000000011cee	popq	%rbx
0000000000011cef	popq	%r14
0000000000011cf1	popq	%r15
0000000000011cf3	popq	%rbp
0000000000011cf4	retq
_mach_port_guard_with_flags:
0000000000011cf5	jmp	__kernelrpc_mach_port_guard_with_flags
_mach_port_swap_guard:
0000000000011cfa	jmp	__kernelrpc_mach_port_swap_guard
_mach_vm_remap:
0000000000011cff	pushq	%rbp
0000000000011d00	movq	%rsp, %rbp
0000000000011d03	pushq	%r15
0000000000011d05	pushq	%r14
0000000000011d07	pushq	%r13
0000000000011d09	pushq	%r12
0000000000011d0b	pushq	%rbx
0000000000011d0c	pushq	%rax
0000000000011d0d	movl	%r8d, %ebx
0000000000011d10	movq	%rdx, %r14
0000000000011d13	movq	%rsi, %r15
0000000000011d16	movl	%edi, %r12d
0000000000011d19	movl	0x18(%rbp), %r10d
0000000000011d1d	movl	0x30(%rbp), %eax
0000000000011d20	subq	$0x8, %rsp
0000000000011d24	pushq	%rax
0000000000011d25	pushq	0x28(%rbp)
0000000000011d28	pushq	0x20(%rbp)
0000000000011d2b	pushq	%r10
0000000000011d2d	pushq	0x10(%rbp)
0000000000011d30	callq	__kernelrpc_mach_vm_remap
0000000000011d35	addq	$0x30, %rsp
0000000000011d39	movl	%eax, %r13d
0000000000011d3c	testl	%eax, %eax
0000000000011d3e	jne	0x11d6a
0000000000011d40	movq	___syscall_logger(%rip), %rax
0000000000011d47	testq	%rax, %rax
0000000000011d4a	je	0x11d6a
0000000000011d4c	andl	$0xff000000, %ebx
0000000000011d52	orl	$0x90, %ebx
0000000000011d58	movl	%r12d, %esi
0000000000011d5b	movq	(%r15), %r8
0000000000011d5e	movl	%ebx, %edi
0000000000011d60	movq	%r14, %rdx
0000000000011d63	xorl	%ecx, %ecx
0000000000011d65	xorl	%r9d, %r9d
0000000000011d68	callq	*%rax
0000000000011d6a	movl	%r13d, %eax
0000000000011d6d	addq	$0x8, %rsp
0000000000011d71	popq	%rbx
0000000000011d72	popq	%r12
0000000000011d74	popq	%r13
0000000000011d76	popq	%r14
0000000000011d78	popq	%r15
0000000000011d7a	popq	%rbp
0000000000011d7b	retq
_mach_vm_read:
0000000000011d7c	pushq	%rbp
0000000000011d7d	movq	%rsp, %rbp
0000000000011d80	pushq	%r15
0000000000011d82	pushq	%r14
0000000000011d84	pushq	%rbx
0000000000011d85	pushq	%rax
0000000000011d86	movq	%r8, %r15
0000000000011d89	movq	%rcx, %r14
0000000000011d8c	callq	__kernelrpc_mach_vm_read
0000000000011d91	movl	%eax, %ebx
0000000000011d93	testl	%eax, %eax
0000000000011d95	jne	0x11dbe
0000000000011d97	movq	___syscall_logger(%rip), %rax
0000000000011d9e	testq	%rax, %rax
0000000000011da1	je	0x11dbe
0000000000011da3	leaq	_mach_task_self_(%rip), %rcx
0000000000011daa	movl	(%rcx), %esi
0000000000011dac	movl	(%r15), %edx
0000000000011daf	movq	(%r14), %r8
0000000000011db2	movl	$0x90, %edi
0000000000011db7	xorl	%ecx, %ecx
0000000000011db9	xorl	%r9d, %r9d
0000000000011dbc	callq	*%rax
0000000000011dbe	movl	%ebx, %eax
0000000000011dc0	addq	$0x8, %rsp
0000000000011dc4	popq	%rbx
0000000000011dc5	popq	%r14
0000000000011dc7	popq	%r15
0000000000011dc9	popq	%rbp
0000000000011dca	retq
_getaudit:
0000000000011dcb	pushq	%rbp
0000000000011dcc	movq	%rsp, %rbp
0000000000011dcf	pushq	%rbx
0000000000011dd0	subq	$0x38, %rsp
0000000000011dd4	movq	%rdi, %rbx
0000000000011dd7	leaq	-0x38(%rbp), %rdi
0000000000011ddb	movl	$0x30, %esi
0000000000011de0	callq	_getaudit_addr
0000000000011de5	testl	%eax, %eax
0000000000011de7	jne	0x11e08
0000000000011de9	movl	-0x38(%rbp), %ecx
0000000000011dec	movl	%ecx, (%rbx)
0000000000011dee	movq	-0x34(%rbp), %rcx
0000000000011df2	movq	%rcx, 0x4(%rbx)
0000000000011df6	movl	-0x2c(%rbp), %ecx
0000000000011df9	movl	%ecx, 0xc(%rbx)
0000000000011dfc	movl	-0x24(%rbp), %ecx
0000000000011dff	movl	%ecx, 0x10(%rbx)
0000000000011e02	movl	-0x14(%rbp), %ecx
0000000000011e05	movl	%ecx, 0x14(%rbx)
0000000000011e08	addq	$0x38, %rsp
0000000000011e0c	popq	%rbx
0000000000011e0d	popq	%rbp
0000000000011e0e	retq
_setaudit:
0000000000011e0f	pushq	%rbp
0000000000011e10	movq	%rsp, %rbp
0000000000011e13	pushq	%rbx
0000000000011e14	subq	$0x38, %rsp
0000000000011e18	movq	%rdi, %rbx
0000000000011e1b	leaq	-0x38(%rbp), %rdi
0000000000011e1f	movl	$0x30, %esi
0000000000011e24	callq	_getaudit_addr
0000000000011e29	testl	%eax, %eax
0000000000011e2b	jne	0x11e6c
0000000000011e2d	movl	(%rbx), %eax
0000000000011e2f	leaq	-0x38(%rbp), %rdi
0000000000011e33	movl	%eax, (%rdi)
0000000000011e35	movq	0x4(%rbx), %rax
0000000000011e39	movq	%rax, 0x4(%rdi)
0000000000011e3d	movl	0xc(%rbx), %eax
0000000000011e40	movl	%eax, 0xc(%rdi)
0000000000011e43	movl	$0x4, 0x10(%rdi)
0000000000011e4a	movl	0x10(%rbx), %eax
0000000000011e4d	movl	%eax, 0x14(%rdi)
0000000000011e50	movl	0x14(%rbx), %eax
0000000000011e53	movl	%eax, 0x24(%rdi)
0000000000011e56	movl	$0x30, %esi
0000000000011e5b	callq	_setaudit_addr
0000000000011e60	testl	%eax, %eax
0000000000011e62	jne	0x11e6c
0000000000011e64	movl	-0x14(%rbp), %eax
0000000000011e67	movl	%eax, 0x14(%rbx)
0000000000011e6a	xorl	%eax, %eax
0000000000011e6c	addq	$0x38, %rsp
0000000000011e70	popq	%rbx
0000000000011e71	popq	%rbp
0000000000011e72	retq
_kpersona_alloc:
0000000000011e73	pushq	%rbp
0000000000011e74	movq	%rsp, %rbp
0000000000011e77	subq	$0x10, %rsp
0000000000011e7b	movq	%rsi, %rcx
0000000000011e7e	movq	%rdi, %rdx
0000000000011e81	leaq	-0x8(%rbp), %r8
0000000000011e85	movq	$0x1, (%r8)
0000000000011e8c	movl	$0x1, %edi
0000000000011e91	xorl	%esi, %esi
0000000000011e93	xorl	%r9d, %r9d
0000000000011e96	callq	___persona
0000000000011e9b	addq	$0x10, %rsp
0000000000011e9f	popq	%rbp
0000000000011ea0	retq
_kpersona_palloc:
0000000000011ea1	pushq	%rbp
0000000000011ea2	movq	%rsp, %rbp
0000000000011ea5	subq	$0x10, %rsp
0000000000011ea9	movq	%rdx, %r9
0000000000011eac	movq	%rsi, %rcx
0000000000011eaf	movq	%rdi, %rdx
0000000000011eb2	leaq	-0x8(%rbp), %r8
0000000000011eb6	movq	$0x1, (%r8)
0000000000011ebd	movl	$0x2, %edi
0000000000011ec2	xorl	%esi, %esi
0000000000011ec4	callq	___persona
0000000000011ec9	addq	$0x10, %rsp
0000000000011ecd	popq	%rbp
0000000000011ece	retq
_kpersona_dealloc:
0000000000011ecf	pushq	%rbp
0000000000011ed0	movq	%rsp, %rbp
0000000000011ed3	subq	$0x10, %rsp
0000000000011ed7	leaq	-0x4(%rbp), %rcx
0000000000011edb	movl	%edi, (%rcx)
0000000000011edd	leaq	-0x10(%rbp), %r8
0000000000011ee1	movq	$0x1, (%r8)
0000000000011ee8	movl	$0x3, %edi
0000000000011eed	xorl	%esi, %esi
0000000000011eef	xorl	%edx, %edx
0000000000011ef1	xorl	%r9d, %r9d
0000000000011ef4	callq	___persona
0000000000011ef9	addq	$0x10, %rsp
0000000000011efd	popq	%rbp
0000000000011efe	retq
_kpersona_getpath:
0000000000011eff	pushq	%rbp
0000000000011f00	movq	%rsp, %rbp
0000000000011f03	subq	$0x10, %rsp
0000000000011f07	movq	%rsi, %r9
0000000000011f0a	leaq	-0x4(%rbp), %rcx
0000000000011f0e	movl	%edi, (%rcx)
0000000000011f10	leaq	-0x10(%rbp), %r8
0000000000011f14	movq	$0x1, (%r8)
0000000000011f1b	movl	$0x8, %edi
0000000000011f20	xorl	%esi, %esi
0000000000011f22	xorl	%edx, %edx
0000000000011f24	callq	___persona
0000000000011f29	addq	$0x10, %rsp
0000000000011f2d	popq	%rbp
0000000000011f2e	retq
_kpersona_pidinfo:
0000000000011f2f	pushq	%rbp
0000000000011f30	movq	%rsp, %rbp
0000000000011f33	subq	$0x10, %rsp
0000000000011f37	movq	%rsi, %rdx
0000000000011f3a	leaq	-0x10(%rbp), %r8
0000000000011f3e	movq	$0x1, (%r8)
0000000000011f45	leaq	-0x4(%rbp), %rcx
0000000000011f49	movl	%edi, (%rcx)
0000000000011f4b	movl	$0x6, %edi
0000000000011f50	xorl	%esi, %esi
0000000000011f52	xorl	%r9d, %r9d
0000000000011f55	callq	___persona
0000000000011f5a	addq	$0x10, %rsp
0000000000011f5e	popq	%rbp
0000000000011f5f	retq
_kpersona_find:
0000000000011f60	pushq	%rbp
0000000000011f61	movq	%rsp, %rbp
0000000000011f64	pushq	%r14
0000000000011f66	pushq	%rbx
0000000000011f67	subq	$0x160, %rsp
0000000000011f6e	movq	%rcx, %rbx
0000000000011f71	movq	%rdx, %r14
0000000000011f74	movl	$0x1, -0x168(%rbp)
0000000000011f7e	movl	%esi, -0x164(%rbp)
0000000000011f84	movb	$0x0, -0x110(%rbp)
0000000000011f8b	xorl	%ecx, %ecx
0000000000011f8d	movq	%rcx, -0x158(%rbp)
0000000000011f94	movq	%rcx, -0x160(%rbp)
0000000000011f9b	testq	%rdi, %rdi
0000000000011f9e	je	0x11fb7
0000000000011fa0	movq	%rdi, %rax
0000000000011fa3	leaq	-0x110(%rbp), %rdi
0000000000011faa	movl	$0x100, %edx
0000000000011faf	movq	%rax, %rsi
0000000000011fb2	callq	_strlcpy
0000000000011fb7	leaq	-0x168(%rbp), %rdx
0000000000011fbe	movl	$0x7, %edi
0000000000011fc3	xorl	%esi, %esi
0000000000011fc5	movq	%r14, %rcx
0000000000011fc8	movq	%rbx, %r8
0000000000011fcb	xorl	%r9d, %r9d
0000000000011fce	callq	___persona
0000000000011fd3	testl	%eax, %eax
0000000000011fd5	js	0x11fd9
0000000000011fd7	movl	(%rbx), %eax
0000000000011fd9	addq	$0x160, %rsp
0000000000011fe0	popq	%rbx
0000000000011fe1	popq	%r14
0000000000011fe3	popq	%rbp
0000000000011fe4	retq
_kpersona_find_by_type:
0000000000011fe5	pushq	%rbp
0000000000011fe6	movq	%rsp, %rbp
0000000000011fe9	pushq	%rbx
0000000000011fea	subq	$0x158, %rsp
0000000000011ff1	movq	%rdx, %rbx
0000000000011ff4	movq	%rsi, %rcx
0000000000011ff7	movabsq	$-0xffffffff, %rax
0000000000012001	leaq	-0x160(%rbp), %rdx
0000000000012008	movq	%rax, (%rdx)
000000000001200b	movl	%edi, 0x8(%rdx)
000000000001200e	movq	$0x0, 0xc(%rdx)
0000000000012016	movl	$0x0, 0x14(%rdx)
000000000001201d	movb	$0x0, 0x58(%rdx)
0000000000012021	movl	$0x9, %edi
0000000000012026	xorl	%esi, %esi
0000000000012028	movq	%rbx, %r8
000000000001202b	xorl	%r9d, %r9d
000000000001202e	callq	___persona
0000000000012033	testl	%eax, %eax
0000000000012035	js	0x12039
0000000000012037	movl	(%rbx), %eax
0000000000012039	addq	$0x158, %rsp
0000000000012040	popq	%rbx
0000000000012041	popq	%rbp
0000000000012042	retq
_clock_set_time:
0000000000012043	pushq	%rbp
0000000000012044	movq	%rsp, %rbp
0000000000012047	pushq	%rbx
0000000000012048	subq	$0x38, %rsp
000000000001204c	leaq	_NDR_record(%rip), %rax
0000000000012053	movq	(%rax), %rax
0000000000012056	leaq	-0x38(%rbp), %rbx
000000000001205a	movq	%rax, 0x18(%rbx)
000000000001205e	movq	%rsi, 0x20(%rbx)
0000000000012062	movl	$0x1513, (%rbx)
0000000000012068	movl	%edi, 0x8(%rbx)
000000000001206b	callq	_mig_get_reply_port
0000000000012070	movl	%eax, 0xc(%rbx)
0000000000012073	movabsq	$0x4b000000000, %rcx
000000000001207d	movq	%rcx, 0x10(%rbx)
0000000000012081	movl	$0x0, (%rsp)
0000000000012088	movq	%rbx, %rdi
000000000001208b	movl	$0x3, %esi
0000000000012090	movl	$0x28, %edx
0000000000012095	movl	$0x2c, %ecx
000000000001209a	movl	%eax, %r8d
000000000001209d	xorl	%r9d, %r9d
00000000000120a0	callq	_mach_msg
00000000000120a5	movl	%eax, %ebx
00000000000120a7	leal	-0x10000002(%rbx), %eax
00000000000120ad	cmpl	$0xe, %eax
00000000000120b0	ja	0x120c6
00000000000120b2	movl	$0x4003, %ecx
00000000000120b7	btl	%eax, %ecx
00000000000120ba	jae	0x120c6
00000000000120bc	movl	-0x2c(%rbp), %edi
00000000000120bf	callq	_mig_put_reply_port
00000000000120c4	jmp	0x1211b
00000000000120c6	testl	%ebx, %ebx
00000000000120c8	jne	0x120fc
00000000000120ca	movl	-0x24(%rbp), %eax
00000000000120cd	cmpl	$0x47, %eax
00000000000120d0	je	0x12106
00000000000120d2	cmpl	$0x514, %eax
00000000000120d7	jne	0x1210d
00000000000120d9	movl	$0xfffffed4, %ebx
00000000000120de	cmpl	$0x0, -0x38(%rbp)
00000000000120e2	js	0x12112
00000000000120e4	cmpl	$0x24, -0x34(%rbp)
00000000000120e8	jne	0x12112
00000000000120ea	movl	-0x30(%rbp), %eax
00000000000120ed	testl	%eax, %eax
00000000000120ef	jne	0x12112
00000000000120f1	movl	-0x18(%rbp), %ebx
00000000000120f4	testl	%ebx, %ebx
00000000000120f6	jne	0x12112
00000000000120f8	xorl	%ebx, %ebx
00000000000120fa	jmp	0x1211b
00000000000120fc	movl	-0x2c(%rbp), %edi
00000000000120ff	callq	_mig_dealloc_reply_port
0000000000012104	jmp	0x1211b
0000000000012106	movl	$0xfffffecc, %ebx
000000000001210b	jmp	0x12112
000000000001210d	movl	$0xfffffed3, %ebx
0000000000012112	leaq	-0x38(%rbp), %rdi
0000000000012116	callq	_mach_msg_destroy
000000000001211b	movl	%ebx, %eax
000000000001211d	addq	$0x38, %rsp
0000000000012121	popq	%rbx
0000000000012122	popq	%rbp
0000000000012123	retq
_clock_set_attributes:
0000000000012124	pushq	%rbp
0000000000012125	movq	%rsp, %rbp
0000000000012128	pushq	%r15
000000000001212a	pushq	%r14
000000000001212c	pushq	%rbx
000000000001212d	subq	$0x38, %rsp
0000000000012131	leaq	_NDR_record(%rip), %rax
0000000000012138	movq	(%rax), %rax
000000000001213b	movq	%rax, -0x30(%rbp)
000000000001213f	movl	%esi, -0x28(%rbp)
0000000000012142	movl	$0xfffffecd, %r14d
0000000000012148	cmpl	$0x1, %ecx
000000000001214b	ja	0x1223e
0000000000012151	movl	%ecx, %ebx
0000000000012153	movl	%edi, %r15d
0000000000012156	leaq	-0x20(%rbp), %r14
000000000001215a	leal	(,%rbx,4), %eax
0000000000012161	movq	%r14, %rdi
0000000000012164	movq	%rdx, %rsi
0000000000012167	movq	%rax, %rdx
000000000001216a	callq	_memcpy
000000000001216f	movl	%ebx, -0x4(%r14)
0000000000012173	leal	0x28(,%rbx,4), %ebx
000000000001217a	movl	$0x1513, -0x28(%r14)
0000000000012182	movl	%r15d, -0x20(%r14)
0000000000012186	callq	_mig_get_reply_port
000000000001218b	movl	%eax, -0x1c(%r14)
000000000001218f	movabsq	$0x4b100000000, %rcx
0000000000012199	movq	%rcx, -0x18(%r14)
000000000001219d	movl	$0x0, (%rsp)
00000000000121a4	leaq	-0x48(%rbp), %rdi
00000000000121a8	movl	$0x3, %esi
00000000000121ad	movl	%ebx, %edx
00000000000121af	movl	$0x2c, %ecx
00000000000121b4	movl	%eax, %r8d
00000000000121b7	xorl	%r9d, %r9d
00000000000121ba	callq	_mach_msg
00000000000121bf	movl	%eax, %r14d
00000000000121c2	leal	-0x10000002(%r14), %eax
00000000000121c9	cmpl	$0xe, %eax
00000000000121cc	ja	0x121e2
00000000000121ce	movl	$0x4003, %ecx
00000000000121d3	btl	%eax, %ecx
00000000000121d6	jae	0x121e2
00000000000121d8	movl	-0x3c(%rbp), %edi
00000000000121db	callq	_mig_put_reply_port
00000000000121e0	jmp	0x1223e
00000000000121e2	testl	%r14d, %r14d
00000000000121e5	jne	0x1221d
00000000000121e7	movl	-0x34(%rbp), %eax
00000000000121ea	cmpl	$0x47, %eax
00000000000121ed	je	0x12227
00000000000121ef	cmpl	$0x515, %eax
00000000000121f4	jne	0x1222f
00000000000121f6	movl	$0xfffffed4, %r14d
00000000000121fc	cmpl	$0x0, -0x48(%rbp)
0000000000012200	js	0x12235
0000000000012202	cmpl	$0x24, -0x44(%rbp)
0000000000012206	jne	0x12235
0000000000012208	movl	-0x40(%rbp), %eax
000000000001220b	testl	%eax, %eax
000000000001220d	jne	0x12235
000000000001220f	movl	-0x28(%rbp), %r14d
0000000000012213	testl	%r14d, %r14d
0000000000012216	jne	0x12235
0000000000012218	xorl	%r14d, %r14d
000000000001221b	jmp	0x1223e
000000000001221d	movl	-0x3c(%rbp), %edi
0000000000012220	callq	_mig_dealloc_reply_port
0000000000012225	jmp	0x1223e
0000000000012227	movl	$0xfffffecc, %r14d
000000000001222d	jmp	0x12235
000000000001222f	movl	$0xfffffed3, %r14d
0000000000012235	leaq	-0x48(%rbp), %rdi
0000000000012239	callq	_mach_msg_destroy
000000000001223e	movl	%r14d, %eax
0000000000012241	addq	$0x38, %rsp
0000000000012245	popq	%rbx
0000000000012246	popq	%r14
0000000000012248	popq	%r15
000000000001224a	popq	%rbp
000000000001224b	retq
_clock_alarm_reply:
000000000001224c	pushq	%rbp
000000000001224d	movq	%rsp, %rbp
0000000000012250	subq	$0x40, %rsp
0000000000012254	leaq	_NDR_record(%rip), %rax
000000000001225b	movq	(%rax), %r9
000000000001225e	leaq	-0x30(%rbp), %rax
0000000000012262	movq	%r9, 0x18(%rax)
0000000000012266	movl	%edx, 0x20(%rax)
0000000000012269	movl	%ecx, 0x24(%rax)
000000000001226c	movq	%r8, 0x28(%rax)
0000000000012270	movl	%esi, (%rax)
0000000000012272	movl	%edi, 0x8(%rax)
0000000000012275	movq	$0x0, 0xc(%rax)
000000000001227d	movl	$0x2faf73, 0x14(%rax)
0000000000012284	movl	$0x0, (%rsp)
000000000001228b	movq	%rax, %rdi
000000000001228e	movl	$0x1, %esi
0000000000012293	movl	$0x30, %edx
0000000000012298	xorl	%ecx, %ecx
000000000001229a	xorl	%r8d, %r8d
000000000001229d	xorl	%r9d, %r9d
00000000000122a0	callq	_mach_msg
00000000000122a5	addq	$0x40, %rsp
00000000000122a9	popq	%rbp
00000000000122aa	retq
_clock_get_attributes:
00000000000122ab	pushq	%rbp
00000000000122ac	movq	%rsp, %rbp
00000000000122af	pushq	%r15
00000000000122b1	pushq	%r14
00000000000122b3	pushq	%r12
00000000000122b5	pushq	%rbx
00000000000122b6	subq	$0x40, %rsp
00000000000122ba	movq	%rcx, %r15
00000000000122bd	movq	%rdx, %r14
00000000000122c0	leaq	_NDR_record(%rip), %rax
00000000000122c7	movq	(%rax), %rax
00000000000122ca	leaq	-0x58(%rbp), %rbx
00000000000122ce	movq	%rax, 0x18(%rbx)
00000000000122d2	movl	%esi, 0x20(%rbx)
00000000000122d5	xorl	%r12d, %r12d
00000000000122d8	xorl	%eax, %eax
00000000000122da	cmpl	%r12d, (%rcx)
00000000000122dd	setne	%al
00000000000122e0	movl	%eax, 0x24(%rbx)
00000000000122e3	movl	$0x1513, (%rbx)
00000000000122e9	movl	%edi, 0x8(%rbx)
00000000000122ec	callq	_mig_get_reply_port
00000000000122f1	movl	%eax, 0xc(%rbx)
00000000000122f4	movabsq	$0x3e900000000, %rcx
00000000000122fe	movq	%rcx, 0x10(%rbx)
0000000000012302	movl	%r12d, (%rsp)
0000000000012306	movq	%rbx, %rdi
0000000000012309	movl	$0x3, %esi
000000000001230e	movl	$0x28, %edx
0000000000012313	movl	$0x34, %ecx
0000000000012318	movl	%eax, %r8d
000000000001231b	xorl	%r9d, %r9d
000000000001231e	callq	_mach_msg
0000000000012323	movl	%eax, %ebx
0000000000012325	leal	-0x10000002(%rbx), %eax
000000000001232b	cmpl	$0xe, %eax
000000000001232e	ja	0x12344
0000000000012330	movl	$0x4003, %ecx
0000000000012335	btl	%eax, %ecx
0000000000012338	jae	0x12344
000000000001233a	movl	-0x4c(%rbp), %edi
000000000001233d	callq	_mig_put_reply_port
0000000000012342	jmp	0x123a0
0000000000012344	testl	%ebx, %ebx
0000000000012346	jne	0x12381
0000000000012348	movl	-0x44(%rbp), %eax
000000000001234b	cmpl	$0x47, %eax
000000000001234e	je	0x1238b
0000000000012350	cmpl	$0x44d, %eax
0000000000012355	jne	0x12392
0000000000012357	cmpl	$0x0, -0x58(%rbp)
000000000001235b	js	0x1237a
000000000001235d	movl	-0x54(%rbp), %eax
0000000000012360	leal	-0x28(%rax), %ecx
0000000000012363	cmpl	$0x5, %ecx
0000000000012366	jb	0x12374
0000000000012368	cmpl	$0x24, %eax
000000000001236b	jne	0x1237a
000000000001236d	movl	-0x38(%rbp), %edx
0000000000012370	testl	%edx, %edx
0000000000012372	je	0x1237a
0000000000012374	cmpl	$0x0, -0x50(%rbp)
0000000000012378	je	0x123af
000000000001237a	movl	$0xfffffed4, %ebx
000000000001237f	jmp	0x12397
0000000000012381	movl	-0x4c(%rbp), %edi
0000000000012384	callq	_mig_dealloc_reply_port
0000000000012389	jmp	0x123a0
000000000001238b	movl	$0xfffffecc, %ebx
0000000000012390	jmp	0x12397
0000000000012392	movl	$0xfffffed3, %ebx
0000000000012397	leaq	-0x58(%rbp), %rdi
000000000001239b	callq	_mach_msg_destroy
00000000000123a0	movl	%ebx, %eax
00000000000123a2	addq	$0x40, %rsp
00000000000123a6	popq	%rbx
00000000000123a7	popq	%r12
00000000000123a9	popq	%r14
00000000000123ab	popq	%r15
00000000000123ad	popq	%rbp
00000000000123ae	retq
00000000000123af	movl	-0x38(%rbp), %ebx
00000000000123b2	testl	%ebx, %ebx
00000000000123b4	jne	0x12397
00000000000123b6	movl	-0x34(%rbp), %r12d
00000000000123ba	cmpl	$0x1, %r12d
00000000000123be	ja	0x1237a
00000000000123c0	shrl	$0x2, %ecx
00000000000123c3	cmpl	%r12d, %ecx
00000000000123c6	jb	0x1237a
00000000000123c8	leal	0x28(,%r12,4), %ecx
00000000000123d0	movl	$0xfffffed4, %ebx
00000000000123d5	cmpl	%ecx, %eax
00000000000123d7	jne	0x12397
00000000000123d9	movl	(%r15), %edx
00000000000123dc	leaq	-0x30(%rbp), %rsi
00000000000123e0	cmpl	%edx, %r12d
00000000000123e3	jbe	0x123fa
00000000000123e5	shll	$0x2, %edx
00000000000123e8	movq	%r14, %rdi
00000000000123eb	callq	_memcpy
00000000000123f0	movl	%r12d, (%r15)
00000000000123f3	movl	$0xfffffecd, %ebx
00000000000123f8	jmp	0x123a0
00000000000123fa	leal	(,%r12,4), %eax
0000000000012402	movl	%eax, %edx
0000000000012404	movq	%r14, %rdi
0000000000012407	callq	_memcpy
000000000001240c	movl	%r12d, (%r15)
000000000001240f	xorl	%ebx, %ebx
0000000000012411	jmp	0x123a0
_clock_alarm:
0000000000012413	pushq	%rbp
0000000000012414	movq	%rsp, %rbp
0000000000012417	pushq	%rbx
0000000000012418	subq	$0x48, %rsp
000000000001241c	leaq	-0x48(%rbp), %rbx
0000000000012420	movl	$0x1, 0x18(%rbx)
0000000000012427	movl	%ecx, 0x1c(%rbx)
000000000001242a	movl	$0x150000, 0x24(%rbx)
0000000000012431	leaq	_NDR_record(%rip), %rax
0000000000012438	movq	(%rax), %rax
000000000001243b	movq	%rax, 0x28(%rbx)
000000000001243f	movl	%esi, 0x30(%rbx)
0000000000012442	movq	%rdx, 0x34(%rbx)
0000000000012446	movl	$0x80001513, (%rbx)
000000000001244c	movl	%edi, 0x8(%rbx)
000000000001244f	callq	_mig_get_reply_port
0000000000012454	movl	%eax, 0xc(%rbx)
0000000000012457	movabsq	$0x3ea00000000, %rcx
0000000000012461	movq	%rcx, 0x10(%rbx)
0000000000012465	movl	$0x0, (%rsp)
000000000001246c	movq	%rbx, %rdi
000000000001246f	movl	$0x3, %esi
0000000000012474	movl	$0x3c, %edx
0000000000012479	movl	$0x2c, %ecx
000000000001247e	movl	%eax, %r8d
0000000000012481	xorl	%r9d, %r9d
0000000000012484	callq	_mach_msg
0000000000012489	movl	%eax, %ebx
000000000001248b	leal	-0x10000002(%rbx), %eax
0000000000012491	cmpl	$0xe, %eax
0000000000012494	ja	0x124aa
0000000000012496	movl	$0x4003, %ecx
000000000001249b	btl	%eax, %ecx
000000000001249e	jae	0x124aa
00000000000124a0	movl	-0x3c(%rbp), %edi
00000000000124a3	callq	_mig_put_reply_port
00000000000124a8	jmp	0x124ff
00000000000124aa	testl	%ebx, %ebx
00000000000124ac	jne	0x124e0
00000000000124ae	movl	-0x34(%rbp), %eax
00000000000124b1	cmpl	$0x47, %eax
00000000000124b4	je	0x124ea
00000000000124b6	cmpl	$0x44e, %eax
00000000000124bb	jne	0x124f1
00000000000124bd	movl	$0xfffffed4, %ebx
00000000000124c2	cmpl	$0x0, -0x48(%rbp)
00000000000124c6	js	0x124f6
00000000000124c8	cmpl	$0x24, -0x44(%rbp)
00000000000124cc	jne	0x124f6
00000000000124ce	movl	-0x40(%rbp), %eax
00000000000124d1	testl	%eax, %eax
00000000000124d3	jne	0x124f6
00000000000124d5	movl	-0x28(%rbp), %ebx
00000000000124d8	testl	%ebx, %ebx
00000000000124da	jne	0x124f6
00000000000124dc	xorl	%ebx, %ebx
00000000000124de	jmp	0x124ff
00000000000124e0	movl	-0x3c(%rbp), %edi
00000000000124e3	callq	_mig_dealloc_reply_port
00000000000124e8	jmp	0x124ff
00000000000124ea	movl	$0xfffffecc, %ebx
00000000000124ef	jmp	0x124f6
00000000000124f1	movl	$0xfffffed3, %ebx
00000000000124f6	leaq	-0x48(%rbp), %rdi
00000000000124fa	callq	_mach_msg_destroy
00000000000124ff	movl	%ebx, %eax
0000000000012501	addq	$0x48, %rsp
0000000000012505	popq	%rbx
0000000000012506	popq	%rbp
0000000000012507	retq
_exception_raise:
0000000000012508	pushq	%rbp
0000000000012509	movq	%rsp, %rbp
000000000001250c	pushq	%r15
000000000001250e	pushq	%r14
0000000000012510	pushq	%rbx
0000000000012511	subq	$0x58, %rsp
0000000000012515	movl	$0x2, %eax
000000000001251a	movl	%eax, -0x50(%rbp)
000000000001251d	movl	%esi, -0x4c(%rbp)
0000000000012520	movl	$0x130000, %esi
0000000000012525	movl	%esi, -0x44(%rbp)
0000000000012528	movl	%edx, -0x40(%rbp)
000000000001252b	movl	%esi, -0x38(%rbp)
000000000001252e	leaq	_NDR_record(%rip), %rdx
0000000000012535	movq	(%rdx), %rdx
0000000000012538	movq	%rdx, -0x34(%rbp)
000000000001253c	movl	%ecx, -0x2c(%rbp)
000000000001253f	movl	$0xfffffecd, %r14d
0000000000012545	cmpl	%eax, %r9d
0000000000012548	ja	0x12639
000000000001254e	movl	%r9d, %ebx
0000000000012551	movl	%edi, %r15d
0000000000012554	leaq	-0x24(%rbp), %r14
0000000000012558	leal	(,%rbx,4), %edx
000000000001255f	movq	%r14, %rdi
0000000000012562	movq	%r8, %rsi
0000000000012565	callq	_memcpy
000000000001256a	movl	%ebx, -0x4(%r14)
000000000001256e	leal	0x44(,%rbx,4), %ebx
0000000000012575	movl	$0x80001513, -0x44(%r14)
000000000001257d	movl	%r15d, -0x3c(%r14)
0000000000012581	callq	_mig_get_reply_port
0000000000012586	movl	%eax, -0x38(%r14)
000000000001258a	movabsq	$0x96100000000, %rcx
0000000000012594	movq	%rcx, -0x34(%r14)
0000000000012598	movl	$0x0, (%rsp)
000000000001259f	leaq	-0x68(%rbp), %rdi
00000000000125a3	movl	$0x3, %esi
00000000000125a8	movl	%ebx, %edx
00000000000125aa	movl	$0x2c, %ecx
00000000000125af	movl	%eax, %r8d
00000000000125b2	xorl	%r9d, %r9d
00000000000125b5	callq	_mach_msg
00000000000125ba	movl	%eax, %r14d
00000000000125bd	leal	-0x10000002(%r14), %eax
00000000000125c4	cmpl	$0xe, %eax
00000000000125c7	ja	0x125dd
00000000000125c9	movl	$0x4003, %ecx
00000000000125ce	btl	%eax, %ecx
00000000000125d1	jae	0x125dd
00000000000125d3	movl	-0x5c(%rbp), %edi
00000000000125d6	callq	_mig_put_reply_port
00000000000125db	jmp	0x12639
00000000000125dd	testl	%r14d, %r14d
00000000000125e0	jne	0x12618
00000000000125e2	movl	-0x54(%rbp), %eax
00000000000125e5	cmpl	$0x47, %eax
00000000000125e8	je	0x12622
00000000000125ea	cmpl	$0x9c5, %eax
00000000000125ef	jne	0x1262a
00000000000125f1	movl	$0xfffffed4, %r14d
00000000000125f7	cmpl	$0x0, -0x68(%rbp)
00000000000125fb	js	0x12630
00000000000125fd	cmpl	$0x24, -0x64(%rbp)
0000000000012601	jne	0x12630
0000000000012603	movl	-0x60(%rbp), %eax
0000000000012606	testl	%eax, %eax
0000000000012608	jne	0x12630
000000000001260a	movl	-0x48(%rbp), %r14d
000000000001260e	testl	%r14d, %r14d
0000000000012611	jne	0x12630
0000000000012613	xorl	%r14d, %r14d
0000000000012616	jmp	0x12639
0000000000012618	movl	-0x5c(%rbp), %edi
000000000001261b	callq	_mig_dealloc_reply_port
0000000000012620	jmp	0x12639
0000000000012622	movl	$0xfffffecc, %r14d
0000000000012628	jmp	0x12630
000000000001262a	movl	$0xfffffed3, %r14d
0000000000012630	leaq	-0x68(%rbp), %rdi
0000000000012634	callq	_mach_msg_destroy
0000000000012639	movl	%r14d, %eax
000000000001263c	addq	$0x58, %rsp
0000000000012640	popq	%rbx
0000000000012641	popq	%r14
0000000000012643	popq	%r15
0000000000012645	popq	%rbp
0000000000012646	retq
_exception_raise_state:
0000000000012647	pushq	%rbp
0000000000012648	movq	%rsp, %rbp
000000000001264b	pushq	%r15
000000000001264d	pushq	%r14
000000000001264f	pushq	%r13
0000000000012651	pushq	%r12
0000000000012653	pushq	%rbx
0000000000012654	subq	$0x9e8, %rsp
000000000001265b	leaq	_NDR_record(%rip), %rax
0000000000012662	movq	(%rax), %rax
0000000000012665	movq	%rax, -0x9f0(%rbp)
000000000001266c	movl	%esi, -0x9e8(%rbp)
0000000000012672	movl	$0xfffffecd, %r13d
0000000000012678	cmpl	$0x2, %ecx
000000000001267b	ja	0x127db
0000000000012681	movl	%ecx, %r14d
0000000000012684	movq	%r9, -0x38(%rbp)
0000000000012688	movl	%edi, -0x2c(%rbp)
000000000001268b	movq	%r8, %r15
000000000001268e	leaq	-0x9e0(%rbp), %r12
0000000000012695	leal	(,%r14,4), %ebx
000000000001269d	movq	%r12, %rdi
00000000000126a0	movq	%rdx, %rsi
00000000000126a3	movq	%rbx, %rdx
00000000000126a6	callq	_memcpy
00000000000126ab	movl	%r14d, -0x4(%r12)
00000000000126b0	movl	0x10(%rbp), %r12d
00000000000126b4	leaq	-0xa08(%rbp), %rax
00000000000126bb	movl	(%r15), %ecx
00000000000126be	movl	%ecx, 0x28(%rbx,%rax)
00000000000126c2	cmpl	$0x266, %r12d
00000000000126c9	ja	0x127db
00000000000126cf	leaq	-0x8(%rbx,%rax), %r14
00000000000126d4	leaq	0x38(%r14), %rdi
00000000000126d8	leal	(,%r12,4), %edx
00000000000126e0	movq	-0x38(%rbp), %rsi
00000000000126e4	callq	_memcpy
00000000000126e9	movl	%r12d, 0x34(%r14)
00000000000126ed	leal	0x30(%rbx,%r12,4), %r14d
00000000000126f2	leaq	-0xa08(%rbp), %rbx
00000000000126f9	movl	$0x1513, (%rbx)
00000000000126ff	movl	-0x2c(%rbp), %eax
0000000000012702	movl	%eax, 0x8(%rbx)
0000000000012705	callq	_mig_get_reply_port
000000000001270a	movl	%eax, 0xc(%rbx)
000000000001270d	movabsq	$0x96200000000, %rcx
0000000000012717	movq	%rcx, 0x10(%rbx)
000000000001271b	movl	$0x0, (%rsp)
0000000000012722	movq	%rbx, %rdi
0000000000012725	movl	$0x3, %esi
000000000001272a	movl	%r14d, %edx
000000000001272d	movl	$0x9cc, %ecx
0000000000012732	movl	%eax, %r8d
0000000000012735	xorl	%r9d, %r9d
0000000000012738	callq	_mach_msg
000000000001273d	movl	%eax, %r13d
0000000000012740	leal	-0x10000002(%r13), %eax
0000000000012747	cmpl	$0xe, %eax
000000000001274a	ja	0x12763
000000000001274c	movl	$0x4003, %ecx
0000000000012751	btl	%eax, %ecx
0000000000012754	jae	0x12763
0000000000012756	movl	-0x9fc(%rbp), %edi
000000000001275c	callq	_mig_put_reply_port
0000000000012761	jmp	0x127db
0000000000012763	testl	%r13d, %r13d
0000000000012766	jne	0x127b4
0000000000012768	movl	-0x9f4(%rbp), %eax
000000000001276e	cmpl	$0x47, %eax
0000000000012771	je	0x127c1
0000000000012773	cmpl	$0x9c6, %eax
0000000000012778	jne	0x127c9
000000000001277a	cmpl	$0x0, -0xa08(%rbp)
0000000000012781	js	0x127ac
0000000000012783	movl	-0xa04(%rbp), %eax
0000000000012789	leal	-0x2c(%rax), %ecx
000000000001278c	cmpl	$0x999, %ecx
0000000000012792	jb	0x127a3
0000000000012794	cmpl	$0x24, %eax
0000000000012797	jne	0x127ac
0000000000012799	movl	-0x9e8(%rbp), %edx
000000000001279f	testl	%edx, %edx
00000000000127a1	je	0x127ac
00000000000127a3	cmpl	$0x0, -0xa00(%rbp)
00000000000127aa	je	0x127f0
00000000000127ac	movl	$0xfffffed4, %r13d
00000000000127b2	jmp	0x127cf
00000000000127b4	movl	-0x9fc(%rbp), %edi
00000000000127ba	callq	_mig_dealloc_reply_port
00000000000127bf	jmp	0x127db
00000000000127c1	movl	$0xfffffecc, %r13d
00000000000127c7	jmp	0x127cf
00000000000127c9	movl	$0xfffffed3, %r13d
00000000000127cf	leaq	-0xa08(%rbp), %rdi
00000000000127d6	callq	_mach_msg_destroy
00000000000127db	movl	%r13d, %eax
00000000000127de	addq	$0x9e8, %rsp
00000000000127e5	popq	%rbx
00000000000127e6	popq	%r12
00000000000127e8	popq	%r13
00000000000127ea	popq	%r14
00000000000127ec	popq	%r15
00000000000127ee	popq	%rbp
00000000000127ef	retq
00000000000127f0	movl	-0x9e8(%rbp), %r13d
00000000000127f7	testl	%r13d, %r13d
00000000000127fa	jne	0x127cf
00000000000127fc	movl	-0x9e0(%rbp), %ebx
0000000000012802	cmpl	$0x266, %ebx
0000000000012808	ja	0x127ac
000000000001280a	shrl	$0x2, %ecx
000000000001280d	cmpl	%ebx, %ecx
000000000001280f	jb	0x127ac
0000000000012811	leal	0x2c(,%rbx,4), %ecx
0000000000012818	movl	$0xfffffed4, %r13d
000000000001281e	cmpl	%ecx, %eax
0000000000012820	jne	0x127cf
0000000000012822	movq	0x20(%rbp), %r14
0000000000012826	movq	0x18(%rbp), %rdi
000000000001282a	leal	(,%rbx,4), %eax
0000000000012831	leaq	-0x9dc(%rbp), %rsi
0000000000012838	movl	-0x8(%rsi), %ecx
000000000001283b	movl	%ecx, (%r15)
000000000001283e	movl	%eax, %edx
0000000000012840	callq	_memcpy
0000000000012845	movl	%ebx, (%r14)
0000000000012848	xorl	%r13d, %r13d
000000000001284b	jmp	0x127db
_exception_raise_state_identity:
000000000001284d	pushq	%rbp
000000000001284e	movq	%rsp, %rbp
0000000000012851	pushq	%r15
0000000000012853	pushq	%r14
0000000000012855	pushq	%r13
0000000000012857	pushq	%r12
0000000000012859	pushq	%rbx
000000000001285a	subq	$0x9f8, %rsp
0000000000012861	movl	$0x2, %eax
0000000000012866	movl	%eax, -0xa00(%rbp)
000000000001286c	movl	%esi, -0x9fc(%rbp)
0000000000012872	movl	$0x130000, %esi
0000000000012877	movl	%esi, -0x9f4(%rbp)
000000000001287d	movl	%edx, -0x9f0(%rbp)
0000000000012883	movl	%esi, -0x9e8(%rbp)
0000000000012889	leaq	_NDR_record(%rip), %rdx
0000000000012890	movq	(%rdx), %rdx
0000000000012893	movq	%rdx, -0x9e4(%rbp)
000000000001289a	movl	%ecx, -0x9dc(%rbp)
00000000000128a0	movl	$0xfffffecd, %r15d
00000000000128a6	cmpl	%eax, %r9d
00000000000128a9	ja	0x12a08
00000000000128af	movl	%r9d, %ebx
00000000000128b2	movl	%edi, -0x2c(%rbp)
00000000000128b5	movl	0x20(%rbp), %r14d
00000000000128b9	leaq	-0x9d4(%rbp), %r13
00000000000128c0	leal	(,%rbx,4), %r12d
00000000000128c8	movq	%r13, %rdi
00000000000128cb	movq	%r8, %rsi
00000000000128ce	movq	%r12, %rdx
00000000000128d1	callq	_memcpy
00000000000128d6	movl	%ebx, -0x4(%r13)
00000000000128da	movq	0x10(%rbp), %r13
00000000000128de	leaq	-0xa18(%rbp), %rax
00000000000128e5	movl	(%r13), %ecx
00000000000128e9	movl	%ecx, 0x44(%r12,%rax)
00000000000128ee	cmpl	$0x266, %r14d
00000000000128f5	ja	0x12a08
00000000000128fb	movq	%r14, %rcx
00000000000128fe	movq	0x18(%rbp), %rsi
0000000000012902	leaq	-0x8(%r12,%rax), %rbx
0000000000012907	leaq	0x54(%rbx), %rdi
000000000001290b	leal	(,%rcx,4), %edx
0000000000012912	callq	_memcpy
0000000000012917	movl	%r14d, 0x50(%rbx)
000000000001291b	leal	0x4c(%r12,%r14,4), %r15d
0000000000012920	leaq	-0xa18(%rbp), %rbx
0000000000012927	movl	$0x80001513, (%rbx)
000000000001292d	movl	-0x2c(%rbp), %eax
0000000000012930	movl	%eax, 0x8(%rbx)
0000000000012933	callq	_mig_get_reply_port
0000000000012938	movl	%eax, 0xc(%rbx)
000000000001293b	movabsq	$0x96300000000, %rcx
0000000000012945	movq	%rcx, 0x10(%rbx)
0000000000012949	movl	$0x0, (%rsp)
0000000000012950	movq	%rbx, %rdi
0000000000012953	movl	$0x3, %esi
0000000000012958	movl	%r15d, %edx
000000000001295b	movl	$0x9cc, %ecx
0000000000012960	movl	%eax, %r8d
0000000000012963	xorl	%r9d, %r9d
0000000000012966	callq	_mach_msg
000000000001296b	movl	%eax, %r15d
000000000001296e	leal	-0x10000002(%r15), %eax
0000000000012975	cmpl	$0xe, %eax
0000000000012978	ja	0x12991
000000000001297a	movl	$0x4003, %ecx
000000000001297f	btl	%eax, %ecx
0000000000012982	jae	0x12991
0000000000012984	movl	-0xa0c(%rbp), %edi
000000000001298a	callq	_mig_put_reply_port
000000000001298f	jmp	0x12a08
0000000000012991	testl	%r15d, %r15d
0000000000012994	jne	0x129e1
0000000000012996	movl	-0xa04(%rbp), %eax
000000000001299c	cmpl	$0x47, %eax
000000000001299f	je	0x129ee
00000000000129a1	cmpl	$0x9c7, %eax
00000000000129a6	jne	0x129f6
00000000000129a8	cmpl	$0x0, -0xa18(%rbp)
00000000000129af	js	0x129d9
00000000000129b1	movl	-0xa14(%rbp), %eax
00000000000129b7	leal	-0x2c(%rax), %ecx
00000000000129ba	cmpl	$0x999, %ecx
00000000000129c0	jb	0x129d0
00000000000129c2	cmpl	$0x24, %eax
00000000000129c5	jne	0x129d9
00000000000129c7	cmpl	$0x0, -0x9f8(%rbp)
00000000000129ce	je	0x129d9
00000000000129d0	cmpl	$0x0, -0xa10(%rbp)
00000000000129d7	je	0x12a1d
00000000000129d9	movl	$0xfffffed4, %r15d
00000000000129df	jmp	0x129fc
00000000000129e1	movl	-0xa0c(%rbp), %edi
00000000000129e7	callq	_mig_dealloc_reply_port
00000000000129ec	jmp	0x12a08
00000000000129ee	movl	$0xfffffecc, %r15d
00000000000129f4	jmp	0x129fc
00000000000129f6	movl	$0xfffffed3, %r15d
00000000000129fc	leaq	-0xa18(%rbp), %rdi
0000000000012a03	callq	_mach_msg_destroy
0000000000012a08	movl	%r15d, %eax
0000000000012a0b	addq	$0x9f8, %rsp
0000000000012a12	popq	%rbx
0000000000012a13	popq	%r12
0000000000012a15	popq	%r13
0000000000012a17	popq	%r14
0000000000012a19	popq	%r15
0000000000012a1b	popq	%rbp
0000000000012a1c	retq
0000000000012a1d	movl	-0x9f8(%rbp), %r15d
0000000000012a24	testl	%r15d, %r15d
0000000000012a27	jne	0x129fc
0000000000012a29	movl	-0x9f0(%rbp), %ebx
0000000000012a2f	cmpl	$0x266, %ebx
0000000000012a35	ja	0x129d9
0000000000012a37	shrl	$0x2, %ecx
0000000000012a3a	cmpl	%ebx, %ecx
0000000000012a3c	jb	0x129d9
0000000000012a3e	leal	0x2c(,%rbx,4), %ecx
0000000000012a45	movl	$0xfffffed4, %r15d
0000000000012a4b	cmpl	%ecx, %eax
0000000000012a4d	jne	0x129fc
0000000000012a4f	movq	0x30(%rbp), %r14
0000000000012a53	movq	0x28(%rbp), %rdi
0000000000012a57	leal	(,%rbx,4), %eax
0000000000012a5e	leaq	-0x9ec(%rbp), %rsi
0000000000012a65	movl	-0x8(%rsi), %ecx
0000000000012a68	movl	%ecx, (%r13)
0000000000012a6c	movl	%eax, %edx
0000000000012a6e	callq	_memcpy
0000000000012a73	movl	%ebx, (%r14)
0000000000012a76	xorl	%r15d, %r15d
0000000000012a79	jmp	0x12a08
_exc_server_routine:
0000000000012a7b	movslq	0x14(%rdi), %rax
0000000000012a7f	addq	$-0x961, %rax
0000000000012a85	cmpl	$0x2, %eax
0000000000012a88	jbe	0x12a8d
0000000000012a8a	xorl	%eax, %eax
0000000000012a8c	retq
0000000000012a8d	leaq	(%rax,%rax,4), %rax
0000000000012a91	leaq	_internal_catch_exc_subsystem(%rip), %rcx
0000000000012a98	movq	0x28(%rcx,%rax,8), %rax
0000000000012a9d	retq
__Xexception_raise:
0000000000012a9e	pushq	%rbp
0000000000012a9f	movq	%rsp, %rbp
0000000000012aa2	pushq	%rbx
0000000000012aa3	pushq	%rax
0000000000012aa4	movq	%rsi, %rbx
0000000000012aa7	cmpl	$0x0, (%rdi)
0000000000012aaa	js	0x12ac9
0000000000012aac	movl	$0xfffffed0, %eax
0000000000012ab1	movl	%eax, 0x20(%rbx)
0000000000012ab4	leaq	_NDR_record(%rip), %rax
0000000000012abb	movq	(%rax), %rax
0000000000012abe	movq	%rax, 0x18(%rbx)
0000000000012ac2	addq	$0x8, %rsp
0000000000012ac6	popq	%rbx
0000000000012ac7	popq	%rbp
0000000000012ac8	retq
0000000000012ac9	movq	%rdi, %r8
0000000000012acc	movl	0x4(%rdi), %ecx
0000000000012acf	leal	-0x44(%rcx), %edx
0000000000012ad2	cmpl	$0x8, %edx
0000000000012ad5	ja	0x12aac
0000000000012ad7	cmpl	$0x2, 0x18(%r8)
0000000000012adc	jne	0x12aac
0000000000012ade	movzwl	0x26(%r8), %esi
0000000000012ae3	shll	$0x10, %esi
0000000000012ae6	movl	$0xfffffed4, %eax
0000000000012aeb	cmpl	$0x110000, %esi
0000000000012af1	jne	0x12ab1
0000000000012af3	movzwl	0x32(%r8), %esi
0000000000012af8	shll	$0x10, %esi
0000000000012afb	cmpl	$0x110000, %esi
0000000000012b01	jne	0x12ab1
0000000000012b03	movl	0x40(%r8), %r9d
0000000000012b07	cmpl	$0x2, %r9d
0000000000012b0b	ja	0x12aac
0000000000012b0d	shrl	$0x2, %edx
0000000000012b10	cmpl	%r9d, %edx
0000000000012b13	jb	0x12aac
0000000000012b15	leal	0x44(,%r9,4), %edx
0000000000012b1d	movl	$0xfffffed0, %eax
0000000000012b22	cmpl	%edx, %ecx
0000000000012b24	jne	0x12ab1
0000000000012b26	movl	0xc(%r8), %edi
0000000000012b2a	movl	0x1c(%r8), %esi
0000000000012b2e	movl	0x28(%r8), %edx
0000000000012b32	movl	0x3c(%r8), %ecx
0000000000012b36	addq	$0x44, %r8
0000000000012b3a	callq	_internal_catch_exception_raise
0000000000012b3f	jmp	0x12ab1
__Xexception_raise_state:
0000000000012b44	pushq	%rbp
0000000000012b45	movq	%rsp, %rbp
0000000000012b48	pushq	%r14
0000000000012b4a	pushq	%rbx
0000000000012b4b	movq	%rsi, %rbx
0000000000012b4e	movl	0x4(%rdi), %eax
0000000000012b51	leal	-0x30(%rax), %esi
0000000000012b54	cmpl	$0x9a0, %esi
0000000000012b5a	ja	0x12b6d
0000000000012b5c	movq	%rdi, %rdx
0000000000012b5f	movl	(%rdi), %ecx
0000000000012b61	testl	%ecx, %ecx
0000000000012b63	js	0x12b6d
0000000000012b65	movl	0x24(%rdx), %ecx
0000000000012b68	cmpl	$0x2, %ecx
0000000000012b6b	jbe	0x12b87
0000000000012b6d	movl	$0xfffffed0, 0x20(%rbx)
0000000000012b74	leaq	_NDR_record(%rip), %rax
0000000000012b7b	movq	(%rax), %rax
0000000000012b7e	movq	%rax, 0x18(%rbx)
0000000000012b82	popq	%rbx
0000000000012b83	popq	%r14
0000000000012b85	popq	%rbp
0000000000012b86	retq
0000000000012b87	shrl	$0x2, %esi
0000000000012b8a	cmpl	%ecx, %esi
0000000000012b8c	jb	0x12b6d
0000000000012b8e	leal	(,%rcx,4), %esi
0000000000012b95	leal	0x30(%rsi), %edi
0000000000012b98	cmpl	%edi, %eax
0000000000012b9a	jb	0x12b6d
0000000000012b9c	movl	%esi, %r8d
0000000000012b9f	movl	0x2c(%rdx,%r8), %edi
0000000000012ba4	cmpl	$0x266, %edi
0000000000012baa	ja	0x12b6d
0000000000012bac	subl	%esi, %eax
0000000000012bae	leal	-0x30(%rax), %esi
0000000000012bb1	shrl	$0x2, %esi
0000000000012bb4	cmpl	%edi, %esi
0000000000012bb6	jb	0x12b6d
0000000000012bb8	leal	0x30(,%rdi,4), %esi
0000000000012bbf	cmpl	%esi, %eax
0000000000012bc1	jne	0x12b6d
0000000000012bc3	leaq	-0x8(%rdx,%r8), %rax
0000000000012bc8	leaq	0x28(%rbx), %r10
0000000000012bcc	movl	$0x266, 0x28(%rbx)
0000000000012bd3	movl	0xc(%rdx), %edi
0000000000012bd6	movl	0x20(%rdx), %esi
0000000000012bd9	addq	$0x28, %rdx
0000000000012bdd	movl	0x34(%rax), %r11d
0000000000012be1	leaq	0x30(%rax), %r14
0000000000012be5	leaq	0x38(%rax), %r9
0000000000012be9	leaq	0x2c(%rbx), %rax
0000000000012bed	subq	$0x8, %rsp
0000000000012bf1	movq	%r14, %r8
0000000000012bf4	pushq	%r10
0000000000012bf6	pushq	%rax
0000000000012bf7	pushq	%r11
0000000000012bf9	callq	_internal_catch_exception_raise_state
0000000000012bfe	addq	$0x20, %rsp
0000000000012c02	movl	%eax, 0x20(%rbx)
0000000000012c05	testl	%eax, %eax
0000000000012c07	je	0x12c11
0000000000012c09	movl	%eax, 0x20(%rbx)
0000000000012c0c	jmp	0x12b74
0000000000012c11	leaq	_NDR_record(%rip), %rax
0000000000012c18	movq	(%rax), %rax
0000000000012c1b	movq	%rax, 0x18(%rbx)
0000000000012c1f	movl	(%r14), %eax
0000000000012c22	movl	%eax, 0x24(%rbx)
0000000000012c25	movl	0x28(%rbx), %eax
0000000000012c28	leal	0x2c(,%rax,4), %eax
0000000000012c2f	movl	%eax, 0x4(%rbx)
0000000000012c32	jmp	0x12b82
__Xexception_raise_state_identity:
0000000000012c37	pushq	%rbp
0000000000012c38	movq	%rsp, %rbp
0000000000012c3b	pushq	%r15
0000000000012c3d	pushq	%r14
0000000000012c3f	pushq	%rbx
0000000000012c40	pushq	%rax
0000000000012c41	movq	%rsi, %rbx
0000000000012c44	cmpl	$0x0, (%rdi)
0000000000012c47	js	0x12c6a
0000000000012c49	movl	$0xfffffed0, %ecx
0000000000012c4e	movl	%ecx, 0x20(%rbx)
0000000000012c51	leaq	_NDR_record(%rip), %rax
0000000000012c58	movq	(%rax), %rax
0000000000012c5b	movq	%rax, 0x18(%rbx)
0000000000012c5f	addq	$0x8, %rsp
0000000000012c63	popq	%rbx
0000000000012c64	popq	%r14
0000000000012c66	popq	%r15
0000000000012c68	popq	%rbp
0000000000012c69	retq
0000000000012c6a	movq	%rdi, %r8
0000000000012c6d	movl	0x4(%rdi), %eax
0000000000012c70	leal	-0x4c(%rax), %edx
0000000000012c73	cmpl	$0x9a0, %edx
0000000000012c79	ja	0x12c49
0000000000012c7b	cmpl	$0x2, 0x18(%r8)
0000000000012c80	jne	0x12c49
0000000000012c82	movzwl	0x26(%r8), %esi
0000000000012c87	shll	$0x10, %esi
0000000000012c8a	movl	$0xfffffed4, %ecx
0000000000012c8f	cmpl	$0x110000, %esi
0000000000012c95	jne	0x12c4e
0000000000012c97	movzwl	0x32(%r8), %esi
0000000000012c9c	shll	$0x10, %esi
0000000000012c9f	cmpl	$0x110000, %esi
0000000000012ca5	jne	0x12c4e
0000000000012ca7	movl	0x40(%r8), %r9d
0000000000012cab	cmpl	$0x2, %r9d
0000000000012caf	ja	0x12c49
0000000000012cb1	shrl	$0x2, %edx
0000000000012cb4	cmpl	%r9d, %edx
0000000000012cb7	jb	0x12c49
0000000000012cb9	leal	(,%r9,4), %esi
0000000000012cc1	leal	0x4c(%rsi), %ecx
0000000000012cc4	cmpl	%ecx, %eax
0000000000012cc6	jb	0x12c49
0000000000012cc8	movl	%esi, %edx
0000000000012cca	movl	0x48(%r8,%rdx), %ecx
0000000000012ccf	cmpl	$0x266, %ecx
0000000000012cd5	ja	0x12c49
0000000000012cdb	subl	%esi, %eax
0000000000012cdd	leal	-0x4c(%rax), %esi
0000000000012ce0	shrl	$0x2, %esi
0000000000012ce3	cmpl	%ecx, %esi
0000000000012ce5	jb	0x12c49
0000000000012ceb	leal	0x4c(,%rcx,4), %esi
0000000000012cf2	movl	$0xfffffed0, %ecx
0000000000012cf7	cmpl	%esi, %eax
0000000000012cf9	jne	0x12c4e
0000000000012cff	leaq	-0x8(%r8,%rdx), %rax
0000000000012d04	leaq	0x28(%rbx), %r10
0000000000012d08	movl	$0x266, 0x28(%rbx)
0000000000012d0f	movl	0xc(%r8), %edi
0000000000012d13	movl	0x1c(%r8), %esi
0000000000012d17	movl	0x28(%r8), %edx
0000000000012d1b	movl	0x3c(%r8), %ecx
0000000000012d1f	addq	$0x44, %r8
0000000000012d23	movl	0x50(%rax), %r11d
0000000000012d27	leaq	0x4c(%rax), %r14
0000000000012d2b	leaq	0x54(%rax), %r15
0000000000012d2f	leaq	0x2c(%rbx), %rax
0000000000012d33	subq	$0x8, %rsp
0000000000012d37	pushq	%r10
0000000000012d39	pushq	%rax
0000000000012d3a	pushq	%r11
0000000000012d3c	pushq	%r15
0000000000012d3e	pushq	%r14
0000000000012d40	callq	_internal_catch_exception_raise_state_identity
0000000000012d45	addq	$0x30, %rsp
0000000000012d49	movl	%eax, 0x20(%rbx)
0000000000012d4c	testl	%eax, %eax
0000000000012d4e	je	0x12d58
0000000000012d50	movl	%eax, 0x20(%rbx)
0000000000012d53	jmp	0x12c51
0000000000012d58	leaq	_NDR_record(%rip), %rax
0000000000012d5f	movq	(%rax), %rax
0000000000012d62	movq	%rax, 0x18(%rbx)
0000000000012d66	movl	(%r14), %eax
0000000000012d69	movl	%eax, 0x24(%rbx)
0000000000012d6c	movl	0x28(%rbx), %eax
0000000000012d6f	leal	0x2c(,%rax,4), %eax
0000000000012d76	movl	%eax, 0x4(%rbx)
0000000000012d79	jmp	0x12c5f
_exc_server:
0000000000012d7e	movl	(%rdi), %eax
0000000000012d80	andl	$0x1f, %eax
0000000000012d83	movl	%eax, (%rsi)
0000000000012d85	movl	0x8(%rdi), %eax
0000000000012d88	movl	%eax, 0x8(%rsi)
0000000000012d8b	movl	$0x24, 0x4(%rsi)
0000000000012d92	xorl	%eax, %eax
0000000000012d94	movl	%eax, 0xc(%rsi)
0000000000012d97	movl	0x14(%rdi), %ecx
0000000000012d9a	addl	$0x64, %ecx
0000000000012d9d	movl	%ecx, 0x14(%rsi)
0000000000012da0	movl	%eax, 0x10(%rsi)
0000000000012da3	movl	$0xfffff69f, %ecx
0000000000012da8	addl	0x14(%rdi), %ecx
0000000000012dab	cmpl	$0x2, %ecx
0000000000012dae	ja	0x12dd5
0000000000012db0	movslq	%ecx, %rcx
0000000000012db3	leaq	(%rcx,%rcx,4), %rcx
0000000000012db7	leaq	_internal_catch_exc_subsystem(%rip), %rdx
0000000000012dbe	movq	0x28(%rdx,%rcx,8), %rcx
0000000000012dc3	testq	%rcx, %rcx
0000000000012dc6	je	0x12dd5
0000000000012dc8	pushq	%rbp
0000000000012dc9	movq	%rsp, %rbp
0000000000012dcc	callq	*%rcx
0000000000012dce	movl	$0x1, %eax
0000000000012dd3	popq	%rbp
0000000000012dd4	retq
0000000000012dd5	leaq	_NDR_record(%rip), %rcx
0000000000012ddc	movq	(%rcx), %rcx
0000000000012ddf	movq	%rcx, 0x18(%rsi)
0000000000012de3	movl	$0xfffffed1, 0x20(%rsi)
0000000000012dea	retq
_host_get_boot_info:
0000000000012deb	pushq	%rbp
0000000000012dec	movq	%rsp, %rbp
0000000000012def	pushq	%r14
0000000000012df1	pushq	%rbx
0000000000012df2	subq	$0x1040, %rsp
0000000000012df9	movq	%rsi, %r14
0000000000012dfc	leaq	-0x1048(%rbp), %rbx
0000000000012e03	movl	$0x1513, (%rbx)
0000000000012e09	movl	%edi, 0x8(%rbx)
0000000000012e0c	callq	_mig_get_reply_port
0000000000012e11	movl	%eax, 0xc(%rbx)
0000000000012e14	movabsq	$0x19000000000, %rcx
0000000000012e1e	movq	%rcx, 0x10(%rbx)
0000000000012e22	movl	$0x0, (%rsp)
0000000000012e29	movq	%rbx, %rdi
0000000000012e2c	movl	$0x3, %esi
0000000000012e31	movl	$0x18, %edx
0000000000012e36	movl	$0x1034, %ecx
0000000000012e3b	movl	%eax, %r8d
0000000000012e3e	xorl	%r9d, %r9d
0000000000012e41	callq	_mach_msg
0000000000012e46	movl	%eax, %ebx
0000000000012e48	leal	-0x10000002(%rbx), %eax
0000000000012e4e	cmpl	$0xe, %eax
0000000000012e51	ja	0x12e6a
0000000000012e53	movl	$0x4003, %ecx
0000000000012e58	btl	%eax, %ecx
0000000000012e5b	jae	0x12e6a
0000000000012e5d	movl	-0x103c(%rbp), %edi
0000000000012e63	callq	_mig_put_reply_port
0000000000012e68	jmp	0x12edd
0000000000012e6a	testl	%ebx, %ebx
0000000000012e6c	jne	0x12eb8
0000000000012e6e	movl	-0x1034(%rbp), %eax
0000000000012e74	cmpl	$0x47, %eax
0000000000012e77	je	0x12ec5
0000000000012e79	cmpl	$0x1f4, %eax
0000000000012e7e	jne	0x12ecc
0000000000012e80	cmpl	$0x0, -0x1048(%rbp)
0000000000012e87	js	0x12eb1
0000000000012e89	movl	-0x1044(%rbp), %eax
0000000000012e8f	leal	-0x2c(%rax), %ecx
0000000000012e92	cmpl	$0x1001, %ecx
0000000000012e98	jb	0x12ea8
0000000000012e9a	cmpl	$0x24, %eax
0000000000012e9d	jne	0x12eb1
0000000000012e9f	cmpl	$0x0, -0x1028(%rbp)
0000000000012ea6	je	0x12eb1
0000000000012ea8	cmpl	$0x0, -0x1040(%rbp)
0000000000012eaf	je	0x12eeb
0000000000012eb1	movl	$0xfffffed4, %ebx
0000000000012eb6	jmp	0x12ed1
0000000000012eb8	movl	-0x103c(%rbp), %edi
0000000000012ebe	callq	_mig_dealloc_reply_port
0000000000012ec3	jmp	0x12edd
0000000000012ec5	movl	$0xfffffecc, %ebx
0000000000012eca	jmp	0x12ed1
0000000000012ecc	movl	$0xfffffed3, %ebx
0000000000012ed1	leaq	-0x1048(%rbp), %rdi
0000000000012ed8	callq	_mach_msg_destroy
0000000000012edd	movl	%ebx, %eax
0000000000012edf	addq	$0x1040, %rsp
0000000000012ee6	popq	%rbx
0000000000012ee7	popq	%r14
0000000000012ee9	popq	%rbp
0000000000012eea	retq
0000000000012eeb	movl	-0x1028(%rbp), %ebx
0000000000012ef1	testl	%ebx, %ebx
0000000000012ef3	jne	0x12ed1
0000000000012ef5	movl	-0x1020(%rbp), %edx
0000000000012efb	cmpl	$0x1000, %edx
0000000000012f01	ja	0x12eb1
0000000000012f03	cmpl	%edx, %ecx
0000000000012f05	jb	0x12eb1
0000000000012f07	addl	$0x2f, %edx
0000000000012f0a	andl	$-0x4, %edx
0000000000012f0d	movl	$0xfffffed4, %ebx
0000000000012f12	cmpl	%edx, %eax
0000000000012f14	jne	0x12ed1
0000000000012f16	leaq	-0x101c(%rbp), %rsi
0000000000012f1d	movq	%r14, %rdi
0000000000012f20	movl	$0x1000, %edx
0000000000012f25	callq	_mig_strncpy
0000000000012f2a	xorl	%ebx, %ebx
0000000000012f2c	jmp	0x12edd
_host_reboot:
0000000000012f2e	pushq	%rbp
0000000000012f2f	movq	%rsp, %rbp
0000000000012f32	pushq	%rbx
0000000000012f33	subq	$0x38, %rsp
0000000000012f37	leaq	_NDR_record(%rip), %rax
0000000000012f3e	movq	(%rax), %rax
0000000000012f41	leaq	-0x38(%rbp), %rbx
0000000000012f45	movq	%rax, 0x18(%rbx)
0000000000012f49	movl	%esi, 0x20(%rbx)
0000000000012f4c	movl	$0x1513, (%rbx)
0000000000012f52	movl	%edi, 0x8(%rbx)
0000000000012f55	callq	_mig_get_reply_port
0000000000012f5a	movl	%eax, 0xc(%rbx)
0000000000012f5d	movabsq	$0x19100000000, %rcx
0000000000012f67	movq	%rcx, 0x10(%rbx)
0000000000012f6b	movl	$0x0, (%rsp)
0000000000012f72	movq	%rbx, %rdi
0000000000012f75	movl	$0x3, %esi
0000000000012f7a	movl	$0x24, %edx
0000000000012f7f	movl	$0x2c, %ecx
0000000000012f84	movl	%eax, %r8d
0000000000012f87	xorl	%r9d, %r9d
0000000000012f8a	callq	_mach_msg
0000000000012f8f	movl	%eax, %ebx
0000000000012f91	leal	-0x10000002(%rbx), %eax
0000000000012f97	cmpl	$0xe, %eax
0000000000012f9a	ja	0x12fb0
0000000000012f9c	movl	$0x4003, %ecx
0000000000012fa1	btl	%eax, %ecx
0000000000012fa4	jae	0x12fb0
0000000000012fa6	movl	-0x2c(%rbp), %edi
0000000000012fa9	callq	_mig_put_reply_port
0000000000012fae	jmp	0x13005
0000000000012fb0	testl	%ebx, %ebx
0000000000012fb2	jne	0x12fe6
0000000000012fb4	movl	-0x24(%rbp), %eax
0000000000012fb7	cmpl	$0x47, %eax
0000000000012fba	je	0x12ff0
0000000000012fbc	cmpl	$0x1f5, %eax
0000000000012fc1	jne	0x12ff7
0000000000012fc3	movl	$0xfffffed4, %ebx
0000000000012fc8	cmpl	$0x0, -0x38(%rbp)
0000000000012fcc	js	0x12ffc
0000000000012fce	cmpl	$0x24, -0x34(%rbp)
0000000000012fd2	jne	0x12ffc
0000000000012fd4	movl	-0x30(%rbp), %eax
0000000000012fd7	testl	%eax, %eax
0000000000012fd9	jne	0x12ffc
0000000000012fdb	movl	-0x18(%rbp), %ebx
0000000000012fde	testl	%ebx, %ebx
0000000000012fe0	jne	0x12ffc
0000000000012fe2	xorl	%ebx, %ebx
0000000000012fe4	jmp	0x13005
0000000000012fe6	movl	-0x2c(%rbp), %edi
0000000000012fe9	callq	_mig_dealloc_reply_port
0000000000012fee	jmp	0x13005
0000000000012ff0	movl	$0xfffffecc, %ebx
0000000000012ff5	jmp	0x12ffc
0000000000012ff7	movl	$0xfffffed3, %ebx
0000000000012ffc	leaq	-0x38(%rbp), %rdi
0000000000013000	callq	_mach_msg_destroy
0000000000013005	movl	%ebx, %eax
0000000000013007	addq	$0x38, %rsp
000000000001300b	popq	%rbx
000000000001300c	popq	%rbp
000000000001300d	retq
_host_priv_statistics:
000000000001300e	pushq	%rbp
000000000001300f	movq	%rsp, %rbp
0000000000013012	pushq	%r15
0000000000013014	pushq	%r14
0000000000013016	pushq	%r12
0000000000013018	pushq	%rbx
0000000000013019	subq	$0x150, %rsp
0000000000013020	movq	%rcx, %r15
0000000000013023	leaq	_NDR_record(%rip), %rax
000000000001302a	movq	(%rax), %rax
000000000001302d	leaq	-0x160(%rbp), %rbx
0000000000013034	movq	%rax, 0x18(%rbx)
0000000000013038	movl	%esi, 0x20(%rbx)
000000000001303b	movl	(%rcx), %eax
000000000001303d	movl	$0x44, %ecx
0000000000013042	cmpl	%ecx, %eax
0000000000013044	cmovbl	%eax, %ecx
0000000000013047	movq	%rdx, %r14
000000000001304a	movl	%ecx, 0x24(%rbx)
000000000001304d	movl	$0x1513, (%rbx)
0000000000013053	movl	%edi, 0x8(%rbx)
0000000000013056	callq	_mig_get_reply_port
000000000001305b	movl	%eax, 0xc(%rbx)
000000000001305e	movabsq	$0x19200000000, %rcx
0000000000013068	movq	%rcx, 0x10(%rbx)
000000000001306c	movl	$0x0, (%rsp)
0000000000013073	movq	%rbx, %rdi
0000000000013076	movl	$0x3, %esi
000000000001307b	movl	$0x28, %edx
0000000000013080	movl	$0x140, %ecx
0000000000013085	movl	%eax, %r8d
0000000000013088	xorl	%r9d, %r9d
000000000001308b	callq	_mach_msg
0000000000013090	movl	%eax, %ebx
0000000000013092	leal	-0x10000002(%rbx), %eax
0000000000013098	cmpl	$0xe, %eax
000000000001309b	ja	0x130b4
000000000001309d	movl	$0x4003, %ecx
00000000000130a2	btl	%eax, %ecx
00000000000130a5	jae	0x130b4
00000000000130a7	movl	-0x154(%rbp), %edi
00000000000130ad	callq	_mig_put_reply_port
00000000000130b2	jmp	0x13128
00000000000130b4	testl	%ebx, %ebx
00000000000130b6	jne	0x13103
00000000000130b8	movl	-0x14c(%rbp), %eax
00000000000130be	cmpl	$0x47, %eax
00000000000130c1	je	0x13110
00000000000130c3	cmpl	$0x1f6, %eax
00000000000130c8	jne	0x13117
00000000000130ca	cmpl	$0x0, -0x160(%rbp)
00000000000130d1	js	0x130fc
00000000000130d3	movl	-0x15c(%rbp), %eax
00000000000130d9	leal	-0x28(%rax), %ecx
00000000000130dc	cmpl	$0x111, %ecx
00000000000130e2	jb	0x130f3
00000000000130e4	cmpl	$0x24, %eax
00000000000130e7	jne	0x130fc
00000000000130e9	movl	-0x140(%rbp), %edx
00000000000130ef	testl	%edx, %edx
00000000000130f1	je	0x130fc
00000000000130f3	cmpl	$0x0, -0x158(%rbp)
00000000000130fa	je	0x1313a
00000000000130fc	movl	$0xfffffed4, %ebx
0000000000013101	jmp	0x1311c
0000000000013103	movl	-0x154(%rbp), %edi
0000000000013109	callq	_mig_dealloc_reply_port
000000000001310e	jmp	0x13128
0000000000013110	movl	$0xfffffecc, %ebx
0000000000013115	jmp	0x1311c
0000000000013117	movl	$0xfffffed3, %ebx
000000000001311c	leaq	-0x160(%rbp), %rdi
0000000000013123	callq	_mach_msg_destroy
0000000000013128	movl	%ebx, %eax
000000000001312a	addq	$0x150, %rsp
0000000000013131	popq	%rbx
0000000000013132	popq	%r12
0000000000013134	popq	%r14
0000000000013136	popq	%r15
0000000000013138	popq	%rbp
0000000000013139	retq
000000000001313a	movl	-0x140(%rbp), %ebx
0000000000013140	testl	%ebx, %ebx
0000000000013142	jne	0x1311c
0000000000013144	movl	-0x13c(%rbp), %r12d
000000000001314b	cmpl	$0x44, %r12d
000000000001314f	ja	0x130fc
0000000000013151	shrl	$0x2, %ecx
0000000000013154	cmpl	%r12d, %ecx
0000000000013157	jb	0x130fc
0000000000013159	leal	0x28(,%r12,4), %ecx
0000000000013161	movl	$0xfffffed4, %ebx
0000000000013166	cmpl	%ecx, %eax
0000000000013168	jne	0x1311c
000000000001316a	movl	(%r15), %edx
000000000001316d	leaq	-0x138(%rbp), %rsi
0000000000013174	cmpl	%edx, %r12d
0000000000013177	jbe	0x1318e
0000000000013179	shll	$0x2, %edx
000000000001317c	movq	%r14, %rdi
000000000001317f	callq	_memcpy
0000000000013184	movl	%r12d, (%r15)
0000000000013187	movl	$0xfffffecd, %ebx
000000000001318c	jmp	0x13128
000000000001318e	leal	(,%r12,4), %eax
0000000000013196	movl	%eax, %edx
0000000000013198	movq	%r14, %rdi
000000000001319b	callq	_memcpy
00000000000131a0	movl	%r12d, (%r15)
00000000000131a3	xorl	%ebx, %ebx
00000000000131a5	jmp	0x13128
_host_default_memory_manager:
00000000000131a7	pushq	%rbp
00000000000131a8	movq	%rsp, %rbp
00000000000131ab	pushq	%r14
00000000000131ad	pushq	%rbx
00000000000131ae	subq	$0x40, %rsp
00000000000131b2	movq	%rsi, %r14
00000000000131b5	leaq	-0x48(%rbp), %rbx
00000000000131b9	movl	$0x1, 0x18(%rbx)
00000000000131c0	movl	(%rsi), %eax
00000000000131c2	movl	%eax, 0x1c(%rbx)
00000000000131c5	movl	$0x140000, 0x24(%rbx)
00000000000131cc	leaq	_NDR_record(%rip), %rax
00000000000131d3	movq	(%rax), %rax
00000000000131d6	movq	%rax, 0x28(%rbx)
00000000000131da	movl	%edx, 0x30(%rbx)
00000000000131dd	movl	$0x80001513, (%rbx)
00000000000131e3	movl	%edi, 0x8(%rbx)
00000000000131e6	callq	_mig_get_reply_port
00000000000131eb	movl	%eax, 0xc(%rbx)
00000000000131ee	movabsq	$0x19300000000, %rcx
00000000000131f8	movq	%rcx, 0x10(%rbx)
00000000000131fc	movl	$0x0, (%rsp)
0000000000013203	movq	%rbx, %rdi
0000000000013206	movl	$0x3, %esi
000000000001320b	movl	$0x34, %edx
0000000000013210	movl	$0x30, %ecx
0000000000013215	movl	%eax, %r8d
0000000000013218	xorl	%r9d, %r9d
000000000001321b	callq	_mach_msg
0000000000013220	movl	%eax, %ebx
0000000000013222	leal	-0x10000002(%rbx), %eax
0000000000013228	cmpl	$0xe, %eax
000000000001322b	ja	0x13241
000000000001322d	movl	$0x4003, %ecx
0000000000013232	btl	%eax, %ecx
0000000000013235	jae	0x13241
0000000000013237	movl	-0x3c(%rbp), %edi
000000000001323a	callq	_mig_put_reply_port
000000000001323f	jmp	0x1328f
0000000000013241	testl	%ebx, %ebx
0000000000013243	jne	0x13270
0000000000013245	movl	-0x34(%rbp), %eax
0000000000013248	cmpl	$0x47, %eax
000000000001324b	je	0x1327a
000000000001324d	cmpl	$0x1f7, %eax
0000000000013252	jne	0x13281
0000000000013254	movl	-0x48(%rbp), %eax
0000000000013257	movl	-0x44(%rbp), %ecx
000000000001325a	movl	$0xfffffed4, %ebx
000000000001325f	testl	%eax, %eax
0000000000013261	js	0x1329a
0000000000013263	cmpl	$0x24, %ecx
0000000000013266	jne	0x13286
0000000000013268	cmpl	$0x0, -0x28(%rbp)
000000000001326c	jne	0x132a5
000000000001326e	jmp	0x13286
0000000000013270	movl	-0x3c(%rbp), %edi
0000000000013273	callq	_mig_dealloc_reply_port
0000000000013278	jmp	0x1328f
000000000001327a	movl	$0xfffffecc, %ebx
000000000001327f	jmp	0x13286
0000000000013281	movl	$0xfffffed3, %ebx
0000000000013286	leaq	-0x48(%rbp), %rdi
000000000001328a	callq	_mach_msg_destroy
000000000001328f	movl	%ebx, %eax
0000000000013291	addq	$0x40, %rsp
0000000000013295	popq	%rbx
0000000000013296	popq	%r14
0000000000013298	popq	%rbp
0000000000013299	retq
000000000001329a	cmpl	$0x28, %ecx
000000000001329d	jne	0x13286
000000000001329f	cmpl	$0x1, -0x30(%rbp)
00000000000132a3	jne	0x13286
00000000000132a5	movl	$0xfffffed4, %ebx
00000000000132aa	cmpl	$0x0, -0x40(%rbp)
00000000000132ae	jne	0x13286
00000000000132b0	testl	%eax, %eax
00000000000132b2	js	0x132bd
00000000000132b4	movl	-0x28(%rbp), %ebx
00000000000132b7	testl	%ebx, %ebx
00000000000132b9	jne	0x13286
00000000000132bb	jmp	0x132cb
00000000000132bd	movzwl	-0x22(%rbp), %eax
00000000000132c1	shll	$0x10, %eax
00000000000132c4	cmpl	$0x110000, %eax
00000000000132c9	jne	0x13286
00000000000132cb	movl	-0x2c(%rbp), %eax
00000000000132ce	movl	%eax, (%r14)
00000000000132d1	xorl	%ebx, %ebx
00000000000132d3	jmp	0x1328f
_vm_wire:
00000000000132d5	pushq	%rbp
00000000000132d6	movq	%rsp, %rbp
00000000000132d9	pushq	%rbx
00000000000132da	subq	$0x58, %rsp
00000000000132de	leaq	-0x50(%rbp), %rbx
00000000000132e2	movl	$0x1, 0x18(%rbx)
00000000000132e9	movl	%esi, 0x1c(%rbx)
00000000000132ec	movl	$0x130000, 0x24(%rbx)
00000000000132f3	leaq	_NDR_record(%rip), %rax
00000000000132fa	movq	(%rax), %rax
00000000000132fd	movq	%rax, 0x28(%rbx)
0000000000013301	movq	%rdx, 0x30(%rbx)
0000000000013305	movq	%rcx, 0x38(%rbx)
0000000000013309	movl	%r8d, 0x40(%rbx)
000000000001330d	movl	$0x80001513, (%rbx)
0000000000013313	movl	%edi, 0x8(%rbx)
0000000000013316	callq	_mig_get_reply_port
000000000001331b	movl	%eax, 0xc(%rbx)
000000000001331e	movabsq	$0x19400000000, %rcx
0000000000013328	movq	%rcx, 0x10(%rbx)
000000000001332c	movl	$0x0, (%rsp)
0000000000013333	movq	%rbx, %rdi
0000000000013336	movl	$0x3, %esi
000000000001333b	movl	$0x44, %edx
0000000000013340	movl	$0x2c, %ecx
0000000000013345	movl	%eax, %r8d
0000000000013348	xorl	%r9d, %r9d
000000000001334b	callq	_mach_msg
0000000000013350	movl	%eax, %ebx
0000000000013352	leal	-0x10000002(%rbx), %eax
0000000000013358	cmpl	$0xe, %eax
000000000001335b	ja	0x13371
000000000001335d	movl	$0x4003, %ecx
0000000000013362	btl	%eax, %ecx
0000000000013365	jae	0x13371
0000000000013367	movl	-0x44(%rbp), %edi
000000000001336a	callq	_mig_put_reply_port
000000000001336f	jmp	0x133c6
0000000000013371	testl	%ebx, %ebx
0000000000013373	jne	0x133a7
0000000000013375	movl	-0x3c(%rbp), %eax
0000000000013378	cmpl	$0x47, %eax
000000000001337b	je	0x133b1
000000000001337d	cmpl	$0x1f8, %eax
0000000000013382	jne	0x133b8
0000000000013384	movl	$0xfffffed4, %ebx
0000000000013389	cmpl	$0x0, -0x50(%rbp)
000000000001338d	js	0x133bd
000000000001338f	cmpl	$0x24, -0x4c(%rbp)
0000000000013393	jne	0x133bd
0000000000013395	movl	-0x48(%rbp), %eax
0000000000013398	testl	%eax, %eax
000000000001339a	jne	0x133bd
000000000001339c	movl	-0x30(%rbp), %ebx
000000000001339f	testl	%ebx, %ebx
00000000000133a1	jne	0x133bd
00000000000133a3	xorl	%ebx, %ebx
00000000000133a5	jmp	0x133c6
00000000000133a7	movl	-0x44(%rbp), %edi
00000000000133aa	callq	_mig_dealloc_reply_port
00000000000133af	jmp	0x133c6
00000000000133b1	movl	$0xfffffecc, %ebx
00000000000133b6	jmp	0x133bd
00000000000133b8	movl	$0xfffffed3, %ebx
00000000000133bd	leaq	-0x50(%rbp), %rdi
00000000000133c1	callq	_mach_msg_destroy
00000000000133c6	movl	%ebx, %eax
00000000000133c8	addq	$0x58, %rsp
00000000000133cc	popq	%rbx
00000000000133cd	popq	%rbp
00000000000133ce	retq
_thread_wire:
00000000000133cf	pushq	%rbp
00000000000133d0	movq	%rsp, %rbp
00000000000133d3	pushq	%rbx
00000000000133d4	subq	$0x48, %rsp
00000000000133d8	leaq	-0x40(%rbp), %rbx
00000000000133dc	movl	$0x1, 0x18(%rbx)
00000000000133e3	movl	%esi, 0x1c(%rbx)
00000000000133e6	movl	$0x130000, 0x24(%rbx)
00000000000133ed	leaq	_NDR_record(%rip), %rax
00000000000133f4	movq	(%rax), %rax
00000000000133f7	movq	%rax, 0x28(%rbx)
00000000000133fb	movl	%edx, 0x30(%rbx)
00000000000133fe	movl	$0x80001513, (%rbx)
0000000000013404	movl	%edi, 0x8(%rbx)
0000000000013407	callq	_mig_get_reply_port
000000000001340c	movl	%eax, 0xc(%rbx)
000000000001340f	movabsq	$0x19500000000, %rcx
0000000000013419	movq	%rcx, 0x10(%rbx)
000000000001341d	movl	$0x0, (%rsp)
0000000000013424	movq	%rbx, %rdi
0000000000013427	movl	$0x3, %esi
000000000001342c	movl	$0x34, %edx
0000000000013431	movl	$0x2c, %ecx
0000000000013436	movl	%eax, %r8d
0000000000013439	xorl	%r9d, %r9d
000000000001343c	callq	_mach_msg
0000000000013441	movl	%eax, %ebx
0000000000013443	leal	-0x10000002(%rbx), %eax
0000000000013449	cmpl	$0xe, %eax
000000000001344c	ja	0x13462
000000000001344e	movl	$0x4003, %ecx
0000000000013453	btl	%eax, %ecx
0000000000013456	jae	0x13462
0000000000013458	movl	-0x34(%rbp), %edi
000000000001345b	callq	_mig_put_reply_port
0000000000013460	jmp	0x134b7
0000000000013462	testl	%ebx, %ebx
0000000000013464	jne	0x13498
0000000000013466	movl	-0x2c(%rbp), %eax
0000000000013469	cmpl	$0x47, %eax
000000000001346c	je	0x134a2
000000000001346e	cmpl	$0x1f9, %eax
0000000000013473	jne	0x134a9
0000000000013475	movl	$0xfffffed4, %ebx
000000000001347a	cmpl	$0x0, -0x40(%rbp)
000000000001347e	js	0x134ae
0000000000013480	cmpl	$0x24, -0x3c(%rbp)
0000000000013484	jne	0x134ae
0000000000013486	movl	-0x38(%rbp), %eax
0000000000013489	testl	%eax, %eax
000000000001348b	jne	0x134ae
000000000001348d	movl	-0x20(%rbp), %ebx
0000000000013490	testl	%ebx, %ebx
0000000000013492	jne	0x134ae
0000000000013494	xorl	%ebx, %ebx
0000000000013496	jmp	0x134b7
0000000000013498	movl	-0x34(%rbp), %edi
000000000001349b	callq	_mig_dealloc_reply_port
00000000000134a0	jmp	0x134b7
00000000000134a2	movl	$0xfffffecc, %ebx
00000000000134a7	jmp	0x134ae
00000000000134a9	movl	$0xfffffed3, %ebx
00000000000134ae	leaq	-0x40(%rbp), %rdi
00000000000134b2	callq	_mach_msg_destroy
00000000000134b7	movl	%ebx, %eax
00000000000134b9	addq	$0x48, %rsp
00000000000134bd	popq	%rbx
00000000000134be	popq	%rbp
00000000000134bf	retq
_vm_allocate_cpm:
00000000000134c0	pushq	%rbp
00000000000134c1	movq	%rsp, %rbp
00000000000134c4	pushq	%r14
00000000000134c6	pushq	%rbx
00000000000134c7	subq	$0x50, %rsp
00000000000134cb	movq	%rdx, %r14
00000000000134ce	leaq	-0x58(%rbp), %rbx
00000000000134d2	movl	$0x1, 0x18(%rbx)
00000000000134d9	movl	%esi, 0x1c(%rbx)
00000000000134dc	movl	$0x130000, 0x24(%rbx)
00000000000134e3	leaq	_NDR_record(%rip), %rax
00000000000134ea	movq	(%rax), %rax
00000000000134ed	movq	%rax, 0x28(%rbx)
00000000000134f1	movq	(%rdx), %rax
00000000000134f4	movq	%rax, 0x30(%rbx)
00000000000134f8	movq	%rcx, 0x38(%rbx)
00000000000134fc	movl	%r8d, 0x40(%rbx)
0000000000013500	movl	$0x80001513, (%rbx)
0000000000013506	movl	%edi, 0x8(%rbx)
0000000000013509	callq	_mig_get_reply_port
000000000001350e	movl	%eax, 0xc(%rbx)
0000000000013511	movabsq	$0x19600000000, %rcx
000000000001351b	movq	%rcx, 0x10(%rbx)
000000000001351f	movl	$0x0, (%rsp)
0000000000013526	movq	%rbx, %rdi
0000000000013529	movl	$0x3, %esi
000000000001352e	movl	$0x44, %edx
0000000000013533	movl	$0x34, %ecx
0000000000013538	movl	%eax, %r8d
000000000001353b	xorl	%r9d, %r9d
000000000001353e	callq	_mach_msg
0000000000013543	movl	%eax, %ebx
0000000000013545	leal	-0x10000002(%rbx), %eax
000000000001354b	cmpl	$0xe, %eax
000000000001354e	ja	0x13564
0000000000013550	movl	$0x4003, %ecx
0000000000013555	btl	%eax, %ecx
0000000000013558	jae	0x13564
000000000001355a	movl	-0x4c(%rbp), %edi
000000000001355d	callq	_mig_put_reply_port
0000000000013562	jmp	0x135cc
0000000000013564	testl	%ebx, %ebx
0000000000013566	jne	0x135ad
0000000000013568	movl	-0x44(%rbp), %eax
000000000001356b	cmpl	$0x47, %eax
000000000001356e	je	0x135b7
0000000000013570	cmpl	$0x1fa, %eax
0000000000013575	jne	0x135be
0000000000013577	movl	$0xfffffed4, %ebx
000000000001357c	cmpl	$0x0, -0x58(%rbp)
0000000000013580	js	0x135c3
0000000000013582	movl	-0x54(%rbp), %eax
0000000000013585	cmpl	$0x2c, %eax
0000000000013588	je	0x13595
000000000001358a	cmpl	$0x24, %eax
000000000001358d	jne	0x135c3
000000000001358f	cmpl	$0x0, -0x38(%rbp)
0000000000013593	je	0x135c3
0000000000013595	cmpl	$0x0, -0x50(%rbp)
0000000000013599	jne	0x135c3
000000000001359b	movl	-0x38(%rbp), %ebx
000000000001359e	testl	%ebx, %ebx
00000000000135a0	jne	0x135c3
00000000000135a2	movq	-0x34(%rbp), %rax
00000000000135a6	movq	%rax, (%r14)
00000000000135a9	xorl	%ebx, %ebx
00000000000135ab	jmp	0x135cc
00000000000135ad	movl	-0x4c(%rbp), %edi
00000000000135b0	callq	_mig_dealloc_reply_port
00000000000135b5	jmp	0x135cc
00000000000135b7	movl	$0xfffffecc, %ebx
00000000000135bc	jmp	0x135c3
00000000000135be	movl	$0xfffffed3, %ebx
00000000000135c3	leaq	-0x58(%rbp), %rdi
00000000000135c7	callq	_mach_msg_destroy
00000000000135cc	movl	%ebx, %eax
00000000000135ce	addq	$0x50, %rsp
00000000000135d2	popq	%rbx
00000000000135d3	popq	%r14
00000000000135d5	popq	%rbp
00000000000135d6	retq
_host_processors:
00000000000135d7	pushq	%rbp
00000000000135d8	movq	%rsp, %rbp
00000000000135db	pushq	%r15
00000000000135dd	pushq	%r14
00000000000135df	pushq	%rbx
00000000000135e0	subq	$0x48, %rsp
00000000000135e4	movq	%rdx, %r14
00000000000135e7	movq	%rsi, %r15
00000000000135ea	leaq	-0x58(%rbp), %rbx
00000000000135ee	movl	$0x1513, (%rbx)
00000000000135f4	movl	%edi, 0x8(%rbx)
00000000000135f7	callq	_mig_get_reply_port
00000000000135fc	movl	%eax, 0xc(%rbx)
00000000000135ff	movabsq	$0x19700000000, %rcx
0000000000013609	movq	%rcx, 0x10(%rbx)
000000000001360d	movl	$0x0, (%rsp)
0000000000013614	movq	%rbx, %rdi
0000000000013617	movl	$0x3, %esi
000000000001361c	movl	$0x18, %edx
0000000000013621	movl	$0x40, %ecx
0000000000013626	movl	%eax, %r8d
0000000000013629	xorl	%r9d, %r9d
000000000001362c	callq	_mach_msg
0000000000013631	movl	%eax, %ebx
0000000000013633	leal	-0x10000002(%rbx), %eax
0000000000013639	cmpl	$0xe, %eax
000000000001363c	ja	0x13652
000000000001363e	movl	$0x4003, %ecx
0000000000013643	btl	%eax, %ecx
0000000000013646	jae	0x13652
0000000000013648	movl	-0x4c(%rbp), %edi
000000000001364b	callq	_mig_put_reply_port
0000000000013650	jmp	0x136a0
0000000000013652	testl	%ebx, %ebx
0000000000013654	jne	0x13681
0000000000013656	movl	-0x44(%rbp), %eax
0000000000013659	cmpl	$0x47, %eax
000000000001365c	je	0x1368b
000000000001365e	cmpl	$0x1fb, %eax
0000000000013663	jne	0x13692
0000000000013665	movl	-0x58(%rbp), %eax
0000000000013668	movl	-0x54(%rbp), %ecx
000000000001366b	movl	$0xfffffed4, %ebx
0000000000013670	testl	%eax, %eax
0000000000013672	js	0x136ad
0000000000013674	cmpl	$0x24, %ecx
0000000000013677	jne	0x13697
0000000000013679	cmpl	$0x0, -0x38(%rbp)
000000000001367d	jne	0x136b8
000000000001367f	jmp	0x13697
0000000000013681	movl	-0x4c(%rbp), %edi
0000000000013684	callq	_mig_dealloc_reply_port
0000000000013689	jmp	0x136a0
000000000001368b	movl	$0xfffffecc, %ebx
0000000000013690	jmp	0x13697
0000000000013692	movl	$0xfffffed3, %ebx
0000000000013697	leaq	-0x58(%rbp), %rdi
000000000001369b	callq	_mach_msg_destroy
00000000000136a0	movl	%ebx, %eax
00000000000136a2	addq	$0x48, %rsp
00000000000136a6	popq	%rbx
00000000000136a7	popq	%r14
00000000000136a9	popq	%r15
00000000000136ab	popq	%rbp
00000000000136ac	retq
00000000000136ad	cmpl	$0x38, %ecx
00000000000136b0	jne	0x13697
00000000000136b2	cmpl	$0x1, -0x40(%rbp)
00000000000136b6	jne	0x13697
00000000000136b8	movl	$0xfffffed4, %ebx
00000000000136bd	cmpl	$0x0, -0x50(%rbp)
00000000000136c1	jne	0x13697
00000000000136c3	testl	%eax, %eax
00000000000136c5	js	0x136d3
00000000000136c7	movl	-0x38(%rbp), %ebx
00000000000136ca	testl	%ebx, %ebx
00000000000136cc	jne	0x13697
00000000000136ce	movl	-0x24(%rbp), %eax
00000000000136d1	jmp	0x136e9
00000000000136d3	movzwl	-0x32(%rbp), %eax
00000000000136d7	shll	$0x10, %eax
00000000000136da	cmpl	$0x2110000, %eax
00000000000136df	jne	0x13697
00000000000136e1	movl	-0x30(%rbp), %eax
00000000000136e4	cmpl	-0x24(%rbp), %eax
00000000000136e7	jne	0x13697
00000000000136e9	movq	-0x3c(%rbp), %rcx
00000000000136ed	movq	%rcx, (%r15)
00000000000136f0	movl	%eax, (%r14)
00000000000136f3	xorl	%ebx, %ebx
00000000000136f5	jmp	0x136a0
_host_get_clock_control:
00000000000136f7	pushq	%rbp
00000000000136f8	movq	%rsp, %rbp
00000000000136fb	pushq	%r14
00000000000136fd	pushq	%rbx
00000000000136fe	subq	$0x40, %rsp
0000000000013702	movq	%rdx, %r14
0000000000013705	leaq	_NDR_record(%rip), %rax
000000000001370c	movq	(%rax), %rax
000000000001370f	leaq	-0x40(%rbp), %rbx
0000000000013713	movq	%rax, 0x18(%rbx)
0000000000013717	movl	%esi, 0x20(%rbx)
000000000001371a	movl	$0x1513, (%rbx)
0000000000013720	movl	%edi, 0x8(%rbx)
0000000000013723	callq	_mig_get_reply_port
0000000000013728	movl	%eax, 0xc(%rbx)
000000000001372b	movabsq	$0x19800000000, %rcx
0000000000013735	movq	%rcx, 0x10(%rbx)
0000000000013739	movl	$0x0, (%rsp)
0000000000013740	movq	%rbx, %rdi
0000000000013743	movl	$0x3, %esi
0000000000013748	movl	$0x24, %edx
000000000001374d	movl	$0x30, %ecx
0000000000013752	movl	%eax, %r8d
0000000000013755	xorl	%r9d, %r9d
0000000000013758	callq	_mach_msg
000000000001375d	movl	%eax, %ebx
000000000001375f	leal	-0x10000002(%rbx), %eax
0000000000013765	cmpl	$0xe, %eax
0000000000013768	ja	0x1377e
000000000001376a	movl	$0x4003, %ecx
000000000001376f	btl	%eax, %ecx
0000000000013772	jae	0x1377e
0000000000013774	movl	-0x34(%rbp), %edi
0000000000013777	callq	_mig_put_reply_port
000000000001377c	jmp	0x137e5
000000000001377e	testl	%ebx, %ebx
0000000000013780	jne	0x137ae
0000000000013782	movl	-0x2c(%rbp), %eax
0000000000013785	cmpl	$0x47, %eax
0000000000013788	je	0x137b8
000000000001378a	cmpl	$0x1fc, %eax
000000000001378f	jne	0x137bf
0000000000013791	movl	-0x40(%rbp), %eax
0000000000013794	movl	-0x3c(%rbp), %ecx
0000000000013797	movl	$0xfffffed4, %ebx
000000000001379c	testl	%eax, %eax
000000000001379e	js	0x137c6
00000000000137a0	cmpl	$0x24, %ecx
00000000000137a3	jne	0x137dc
00000000000137a5	movl	-0x20(%rbp), %ecx
00000000000137a8	testl	%ecx, %ecx
00000000000137aa	jne	0x137d1
00000000000137ac	jmp	0x137dc
00000000000137ae	movl	-0x34(%rbp), %edi
00000000000137b1	callq	_mig_dealloc_reply_port
00000000000137b6	jmp	0x137e5
00000000000137b8	movl	$0xfffffecc, %ebx
00000000000137bd	jmp	0x137dc
00000000000137bf	movl	$0xfffffed3, %ebx
00000000000137c4	jmp	0x137dc
00000000000137c6	cmpl	$0x28, %ecx
00000000000137c9	jne	0x137dc
00000000000137cb	cmpl	$0x1, -0x28(%rbp)
00000000000137cf	jne	0x137dc
00000000000137d1	movl	$0xfffffed4, %ebx
00000000000137d6	cmpl	$0x0, -0x38(%rbp)
00000000000137da	je	0x137f0
00000000000137dc	leaq	-0x40(%rbp), %rdi
00000000000137e0	callq	_mach_msg_destroy
00000000000137e5	movl	%ebx, %eax
00000000000137e7	addq	$0x40, %rsp
00000000000137eb	popq	%rbx
00000000000137ec	popq	%r14
00000000000137ee	popq	%rbp
00000000000137ef	retq
00000000000137f0	testl	%eax, %eax
00000000000137f2	js	0x137fd
00000000000137f4	movl	-0x20(%rbp), %ebx
00000000000137f7	testl	%ebx, %ebx
00000000000137f9	jne	0x137dc
00000000000137fb	jmp	0x1380b
00000000000137fd	movzwl	-0x1a(%rbp), %eax
0000000000013801	shll	$0x10, %eax
0000000000013804	cmpl	$0x110000, %eax
0000000000013809	jne	0x137dc
000000000001380b	movl	-0x24(%rbp), %eax
000000000001380e	movl	%eax, (%r14)
0000000000013811	xorl	%ebx, %ebx
0000000000013813	jmp	0x137e5
_kmod_create:
0000000000013815	pushq	%rbp
0000000000013816	movq	%rsp, %rbp
0000000000013819	pushq	%r14
000000000001381b	pushq	%rbx
000000000001381c	subq	$0x40, %rsp
0000000000013820	movq	%rdx, %r14
0000000000013823	leaq	_NDR_record(%rip), %rax
000000000001382a	movq	(%rax), %rax
000000000001382d	leaq	-0x40(%rbp), %rbx
0000000000013831	movq	%rax, 0x18(%rbx)
0000000000013835	movq	%rsi, 0x20(%rbx)
0000000000013839	movl	$0x1513, (%rbx)
000000000001383f	movl	%edi, 0x8(%rbx)
0000000000013842	callq	_mig_get_reply_port
0000000000013847	movl	%eax, 0xc(%rbx)
000000000001384a	movabsq	$0x19900000000, %rcx
0000000000013854	movq	%rcx, 0x10(%rbx)
0000000000013858	movl	$0x0, (%rsp)
000000000001385f	movq	%rbx, %rdi
0000000000013862	movl	$0x3, %esi
0000000000013867	movl	$0x28, %edx
000000000001386c	movl	$0x30, %ecx
0000000000013871	movl	%eax, %r8d
0000000000013874	xorl	%r9d, %r9d
0000000000013877	callq	_mach_msg
000000000001387c	movl	%eax, %ebx
000000000001387e	leal	-0x10000002(%rbx), %eax
0000000000013884	cmpl	$0xe, %eax
0000000000013887	ja	0x1389d
0000000000013889	movl	$0x4003, %ecx
000000000001388e	btl	%eax, %ecx
0000000000013891	jae	0x1389d
0000000000013893	movl	-0x34(%rbp), %edi
0000000000013896	callq	_mig_put_reply_port
000000000001389b	jmp	0x13904
000000000001389d	testl	%ebx, %ebx
000000000001389f	jne	0x138e5
00000000000138a1	movl	-0x2c(%rbp), %eax
00000000000138a4	cmpl	$0x47, %eax
00000000000138a7	je	0x138ef
00000000000138a9	cmpl	$0x1fd, %eax
00000000000138ae	jne	0x138f6
00000000000138b0	movl	$0xfffffed4, %ebx
00000000000138b5	cmpl	$0x0, -0x40(%rbp)
00000000000138b9	js	0x138fb
00000000000138bb	movl	-0x3c(%rbp), %eax
00000000000138be	cmpl	$0x28, %eax
00000000000138c1	je	0x138ce
00000000000138c3	cmpl	$0x24, %eax
00000000000138c6	jne	0x138fb
00000000000138c8	cmpl	$0x0, -0x20(%rbp)
00000000000138cc	je	0x138fb
00000000000138ce	cmpl	$0x0, -0x38(%rbp)
00000000000138d2	jne	0x138fb
00000000000138d4	movl	-0x20(%rbp), %ebx
00000000000138d7	testl	%ebx, %ebx
00000000000138d9	jne	0x138fb
00000000000138db	movl	-0x1c(%rbp), %eax
00000000000138de	movl	%eax, (%r14)
00000000000138e1	xorl	%ebx, %ebx
00000000000138e3	jmp	0x13904
00000000000138e5	movl	-0x34(%rbp), %edi
00000000000138e8	callq	_mig_dealloc_reply_port
00000000000138ed	jmp	0x13904
00000000000138ef	movl	$0xfffffecc, %ebx
00000000000138f4	jmp	0x138fb
00000000000138f6	movl	$0xfffffed3, %ebx
00000000000138fb	leaq	-0x40(%rbp), %rdi
00000000000138ff	callq	_mach_msg_destroy
0000000000013904	movl	%ebx, %eax
0000000000013906	addq	$0x40, %rsp
000000000001390a	popq	%rbx
000000000001390b	popq	%r14
000000000001390d	popq	%rbp
000000000001390e	retq
_kmod_destroy:
000000000001390f	pushq	%rbp
0000000000013910	movq	%rsp, %rbp
0000000000013913	pushq	%rbx
0000000000013914	subq	$0x38, %rsp
0000000000013918	leaq	_NDR_record(%rip), %rax
000000000001391f	movq	(%rax), %rax
0000000000013922	leaq	-0x38(%rbp), %rbx
0000000000013926	movq	%rax, 0x18(%rbx)
000000000001392a	movl	%esi, 0x20(%rbx)
000000000001392d	movl	$0x1513, (%rbx)
0000000000013933	movl	%edi, 0x8(%rbx)
0000000000013936	callq	_mig_get_reply_port
000000000001393b	movl	%eax, 0xc(%rbx)
000000000001393e	movabsq	$0x19a00000000, %rcx
0000000000013948	movq	%rcx, 0x10(%rbx)
000000000001394c	movl	$0x0, (%rsp)
0000000000013953	movq	%rbx, %rdi
0000000000013956	movl	$0x3, %esi
000000000001395b	movl	$0x24, %edx
0000000000013960	movl	$0x2c, %ecx
0000000000013965	movl	%eax, %r8d
0000000000013968	xorl	%r9d, %r9d
000000000001396b	callq	_mach_msg
0000000000013970	movl	%eax, %ebx
0000000000013972	leal	-0x10000002(%rbx), %eax
0000000000013978	cmpl	$0xe, %eax
000000000001397b	ja	0x13991
000000000001397d	movl	$0x4003, %ecx
0000000000013982	btl	%eax, %ecx
0000000000013985	jae	0x13991
0000000000013987	movl	-0x2c(%rbp), %edi
000000000001398a	callq	_mig_put_reply_port
000000000001398f	jmp	0x139e6
0000000000013991	testl	%ebx, %ebx
0000000000013993	jne	0x139c7
0000000000013995	movl	-0x24(%rbp), %eax
0000000000013998	cmpl	$0x47, %eax
000000000001399b	je	0x139d1
000000000001399d	cmpl	$0x1fe, %eax
00000000000139a2	jne	0x139d8
00000000000139a4	movl	$0xfffffed4, %ebx
00000000000139a9	cmpl	$0x0, -0x38(%rbp)
00000000000139ad	js	0x139dd
00000000000139af	cmpl	$0x24, -0x34(%rbp)
00000000000139b3	jne	0x139dd
00000000000139b5	movl	-0x30(%rbp), %eax
00000000000139b8	testl	%eax, %eax
00000000000139ba	jne	0x139dd
00000000000139bc	movl	-0x18(%rbp), %ebx
00000000000139bf	testl	%ebx, %ebx
00000000000139c1	jne	0x139dd
00000000000139c3	xorl	%ebx, %ebx
00000000000139c5	jmp	0x139e6
00000000000139c7	movl	-0x2c(%rbp), %edi
00000000000139ca	callq	_mig_dealloc_reply_port
00000000000139cf	jmp	0x139e6
00000000000139d1	movl	$0xfffffecc, %ebx
00000000000139d6	jmp	0x139dd
00000000000139d8	movl	$0xfffffed3, %ebx
00000000000139dd	leaq	-0x38(%rbp), %rdi
00000000000139e1	callq	_mach_msg_destroy
00000000000139e6	movl	%ebx, %eax
00000000000139e8	addq	$0x38, %rsp
00000000000139ec	popq	%rbx
00000000000139ed	popq	%rbp
00000000000139ee	retq
_kmod_control:
00000000000139ef	pushq	%rbp
00000000000139f0	movq	%rsp, %rbp
00000000000139f3	pushq	%r15
00000000000139f5	pushq	%r14
00000000000139f7	pushq	%rbx
00000000000139f8	subq	$0x48, %rsp
00000000000139fc	movq	%r8, %r14
00000000000139ff	movq	%rcx, %r15
0000000000013a02	leaq	-0x58(%rbp), %rbx
0000000000013a06	movl	$0x1, 0x18(%rbx)
0000000000013a0d	movq	(%rcx), %rax
0000000000013a10	movq	%rax, 0x1c(%rbx)
0000000000013a14	movl	(%r8), %eax
0000000000013a17	movl	%eax, 0x28(%rbx)
0000000000013a1a	movl	$0x1000100, 0x24(%rbx)
0000000000013a21	leaq	_NDR_record(%rip), %rcx
0000000000013a28	movq	(%rcx), %rcx
0000000000013a2b	movq	%rcx, 0x2c(%rbx)
0000000000013a2f	movl	%esi, 0x34(%rbx)
0000000000013a32	movl	%edx, 0x38(%rbx)
0000000000013a35	movl	%eax, 0x3c(%rbx)
0000000000013a38	movl	$0x80001513, (%rbx)
0000000000013a3e	movl	%edi, 0x8(%rbx)
0000000000013a41	callq	_mig_get_reply_port
0000000000013a46	movl	%eax, 0xc(%rbx)
0000000000013a49	movabsq	$0x19b00000000, %rcx
0000000000013a53	movq	%rcx, 0x10(%rbx)
0000000000013a57	movl	$0x0, (%rsp)
0000000000013a5e	movq	%rbx, %rdi
0000000000013a61	movl	$0x3, %esi
0000000000013a66	movl	$0x40, %edx
0000000000013a6b	movl	$0x40, %ecx
0000000000013a70	movl	%eax, %r8d
0000000000013a73	xorl	%r9d, %r9d
0000000000013a76	callq	_mach_msg
0000000000013a7b	movl	%eax, %ebx
0000000000013a7d	leal	-0x10000002(%rbx), %eax
0000000000013a83	cmpl	$0xe, %eax
0000000000013a86	ja	0x13a9c
0000000000013a88	movl	$0x4003, %ecx
0000000000013a8d	btl	%eax, %ecx
0000000000013a90	jae	0x13a9c
0000000000013a92	movl	-0x4c(%rbp), %edi
0000000000013a95	callq	_mig_put_reply_port
0000000000013a9a	jmp	0x13aea
0000000000013a9c	testl	%ebx, %ebx
0000000000013a9e	jne	0x13acb
0000000000013aa0	movl	-0x44(%rbp), %eax
0000000000013aa3	cmpl	$0x47, %eax
0000000000013aa6	je	0x13ad5
0000000000013aa8	cmpl	$0x1ff, %eax
0000000000013aad	jne	0x13adc
0000000000013aaf	movl	-0x58(%rbp), %eax
0000000000013ab2	movl	-0x54(%rbp), %ecx
0000000000013ab5	movl	$0xfffffed4, %ebx
0000000000013aba	testl	%eax, %eax
0000000000013abc	js	0x13af7
0000000000013abe	cmpl	$0x24, %ecx
0000000000013ac1	jne	0x13ae1
0000000000013ac3	cmpl	$0x0, -0x38(%rbp)
0000000000013ac7	jne	0x13b02
0000000000013ac9	jmp	0x13ae1
0000000000013acb	movl	-0x4c(%rbp), %edi
0000000000013ace	callq	_mig_dealloc_reply_port
0000000000013ad3	jmp	0x13aea
0000000000013ad5	movl	$0xfffffecc, %ebx
0000000000013ada	jmp	0x13ae1
0000000000013adc	movl	$0xfffffed3, %ebx
0000000000013ae1	leaq	-0x58(%rbp), %rdi
0000000000013ae5	callq	_mach_msg_destroy
0000000000013aea	movl	%ebx, %eax
0000000000013aec	addq	$0x48, %rsp
0000000000013af0	popq	%rbx
0000000000013af1	popq	%r14
0000000000013af3	popq	%r15
0000000000013af5	popq	%rbp
0000000000013af6	retq
0000000000013af7	cmpl	$0x38, %ecx
0000000000013afa	jne	0x13ae1
0000000000013afc	cmpl	$0x1, -0x40(%rbp)
0000000000013b00	jne	0x13ae1
0000000000013b02	movl	$0xfffffed4, %ebx
0000000000013b07	cmpl	$0x0, -0x50(%rbp)
0000000000013b0b	jne	0x13ae1
0000000000013b0d	testl	%eax, %eax
0000000000013b0f	js	0x13b1d
0000000000013b11	movl	-0x38(%rbp), %ebx
0000000000013b14	testl	%ebx, %ebx
0000000000013b16	jne	0x13ae1
0000000000013b18	movl	-0x24(%rbp), %eax
0000000000013b1b	jmp	0x13b33
0000000000013b1d	movzbl	-0x31(%rbp), %eax
0000000000013b21	shll	$0x18, %eax
0000000000013b24	cmpl	$0x1000000, %eax
0000000000013b29	jne	0x13ae1
0000000000013b2b	movl	-0x30(%rbp), %eax
0000000000013b2e	cmpl	-0x24(%rbp), %eax
0000000000013b31	jne	0x13ae1
0000000000013b33	movq	-0x3c(%rbp), %rcx
0000000000013b37	movq	%rcx, (%r15)
0000000000013b3a	movl	%eax, (%r14)
0000000000013b3d	xorl	%ebx, %ebx
0000000000013b3f	jmp	0x13aea
_host_set_special_port:
0000000000013b41	pushq	%rbp
0000000000013b42	movq	%rsp, %rbp
0000000000013b45	pushq	%rbx
0000000000013b46	subq	$0x48, %rsp
0000000000013b4a	leaq	-0x40(%rbp), %rbx
0000000000013b4e	movl	$0x1, 0x18(%rbx)
0000000000013b55	movl	%edx, 0x1c(%rbx)
0000000000013b58	movl	$0x130000, 0x24(%rbx)
0000000000013b5f	leaq	_NDR_record(%rip), %rax
0000000000013b66	movq	(%rax), %rax
0000000000013b69	movq	%rax, 0x28(%rbx)
0000000000013b6d	movl	%esi, 0x30(%rbx)
0000000000013b70	movl	$0x80001513, (%rbx)
0000000000013b76	movl	%edi, 0x8(%rbx)
0000000000013b79	callq	_mig_get_reply_port
0000000000013b7e	movl	%eax, 0xc(%rbx)
0000000000013b81	movabsq	$0x19d00000000, %rcx
0000000000013b8b	movq	%rcx, 0x10(%rbx)
0000000000013b8f	movl	$0x0, (%rsp)
0000000000013b96	movq	%rbx, %rdi
0000000000013b99	movl	$0x3, %esi
0000000000013b9e	movl	$0x34, %edx
0000000000013ba3	movl	$0x2c, %ecx
0000000000013ba8	movl	%eax, %r8d
0000000000013bab	xorl	%r9d, %r9d
0000000000013bae	callq	_mach_msg
0000000000013bb3	movl	%eax, %ebx
0000000000013bb5	leal	-0x10000002(%rbx), %eax
0000000000013bbb	cmpl	$0xe, %eax
0000000000013bbe	ja	0x13bd4
0000000000013bc0	movl	$0x4003, %ecx
0000000000013bc5	btl	%eax, %ecx
0000000000013bc8	jae	0x13bd4
0000000000013bca	movl	-0x34(%rbp), %edi
0000000000013bcd	callq	_mig_put_reply_port
0000000000013bd2	jmp	0x13c29
0000000000013bd4	testl	%ebx, %ebx
0000000000013bd6	jne	0x13c0a
0000000000013bd8	movl	-0x2c(%rbp), %eax
0000000000013bdb	cmpl	$0x47, %eax
0000000000013bde	je	0x13c14
0000000000013be0	cmpl	$0x201, %eax
0000000000013be5	jne	0x13c1b
0000000000013be7	movl	$0xfffffed4, %ebx
0000000000013bec	cmpl	$0x0, -0x40(%rbp)
0000000000013bf0	js	0x13c20
0000000000013bf2	cmpl	$0x24, -0x3c(%rbp)
0000000000013bf6	jne	0x13c20
0000000000013bf8	movl	-0x38(%rbp), %eax
0000000000013bfb	testl	%eax, %eax
0000000000013bfd	jne	0x13c20
0000000000013bff	movl	-0x20(%rbp), %ebx
0000000000013c02	testl	%ebx, %ebx
0000000000013c04	jne	0x13c20
0000000000013c06	xorl	%ebx, %ebx
0000000000013c08	jmp	0x13c29
0000000000013c0a	movl	-0x34(%rbp), %edi
0000000000013c0d	callq	_mig_dealloc_reply_port
0000000000013c12	jmp	0x13c29
0000000000013c14	movl	$0xfffffecc, %ebx
0000000000013c19	jmp	0x13c20
0000000000013c1b	movl	$0xfffffed3, %ebx
0000000000013c20	leaq	-0x40(%rbp), %rdi
0000000000013c24	callq	_mach_msg_destroy
0000000000013c29	movl	%ebx, %eax
0000000000013c2b	addq	$0x48, %rsp
0000000000013c2f	popq	%rbx
0000000000013c30	popq	%rbp
0000000000013c31	retq
_host_set_exception_ports:
0000000000013c32	pushq	%rbp
0000000000013c33	movq	%rsp, %rbp
0000000000013c36	pushq	%rbx
0000000000013c37	subq	$0x48, %rsp
0000000000013c3b	leaq	-0x48(%rbp), %rbx
0000000000013c3f	movl	$0x1, 0x18(%rbx)
0000000000013c46	movl	%edx, 0x1c(%rbx)
0000000000013c49	movl	$0x130000, 0x24(%rbx)
0000000000013c50	leaq	_NDR_record(%rip), %rax
0000000000013c57	movq	(%rax), %rax
0000000000013c5a	movq	%rax, 0x28(%rbx)
0000000000013c5e	movl	%esi, 0x30(%rbx)
0000000000013c61	movl	%ecx, 0x34(%rbx)
0000000000013c64	movl	%r8d, 0x38(%rbx)
0000000000013c68	movl	$0x80001513, (%rbx)
0000000000013c6e	movl	%edi, 0x8(%rbx)
0000000000013c71	callq	_mig_get_reply_port
0000000000013c76	movl	%eax, 0xc(%rbx)
0000000000013c79	movabsq	$0x19e00000000, %rcx
0000000000013c83	movq	%rcx, 0x10(%rbx)
0000000000013c87	movl	$0x0, (%rsp)
0000000000013c8e	movq	%rbx, %rdi
0000000000013c91	movl	$0x3, %esi
0000000000013c96	movl	$0x3c, %edx
0000000000013c9b	movl	$0x2c, %ecx
0000000000013ca0	movl	%eax, %r8d
0000000000013ca3	xorl	%r9d, %r9d
0000000000013ca6	callq	_mach_msg
0000000000013cab	movl	%eax, %ebx
0000000000013cad	leal	-0x10000002(%rbx), %eax
0000000000013cb3	cmpl	$0xe, %eax
0000000000013cb6	ja	0x13ccc
0000000000013cb8	movl	$0x4003, %ecx
0000000000013cbd	btl	%eax, %ecx
0000000000013cc0	jae	0x13ccc
0000000000013cc2	movl	-0x3c(%rbp), %edi
0000000000013cc5	callq	_mig_put_reply_port
0000000000013cca	jmp	0x13d21
0000000000013ccc	testl	%ebx, %ebx
0000000000013cce	jne	0x13d02
0000000000013cd0	movl	-0x34(%rbp), %eax
0000000000013cd3	cmpl	$0x47, %eax
0000000000013cd6	je	0x13d0c
0000000000013cd8	cmpl	$0x202, %eax
0000000000013cdd	jne	0x13d13
0000000000013cdf	movl	$0xfffffed4, %ebx
0000000000013ce4	cmpl	$0x0, -0x48(%rbp)
0000000000013ce8	js	0x13d18
0000000000013cea	cmpl	$0x24, -0x44(%rbp)
0000000000013cee	jne	0x13d18
0000000000013cf0	movl	-0x40(%rbp), %eax
0000000000013cf3	testl	%eax, %eax
0000000000013cf5	jne	0x13d18
0000000000013cf7	movl	-0x28(%rbp), %ebx
0000000000013cfa	testl	%ebx, %ebx
0000000000013cfc	jne	0x13d18
0000000000013cfe	xorl	%ebx, %ebx
0000000000013d00	jmp	0x13d21
0000000000013d02	movl	-0x3c(%rbp), %edi
0000000000013d05	callq	_mig_dealloc_reply_port
0000000000013d0a	jmp	0x13d21
0000000000013d0c	movl	$0xfffffecc, %ebx
0000000000013d11	jmp	0x13d18
0000000000013d13	movl	$0xfffffed3, %ebx
0000000000013d18	leaq	-0x48(%rbp), %rdi
0000000000013d1c	callq	_mach_msg_destroy
0000000000013d21	movl	%ebx, %eax
0000000000013d23	addq	$0x48, %rsp
0000000000013d27	popq	%rbx
0000000000013d28	popq	%rbp
0000000000013d29	retq
_host_get_exception_ports:
0000000000013d2a	pushq	%rbp
0000000000013d2b	movq	%rsp, %rbp
0000000000013d2e	pushq	%r15
0000000000013d30	pushq	%r14
0000000000013d32	pushq	%r13
0000000000013d34	pushq	%r12
0000000000013d36	pushq	%rbx
0000000000013d37	subq	$0x358, %rsp
0000000000013d3e	movq	%r9, -0x40(%rbp)
0000000000013d42	movq	%r8, %r15
0000000000013d45	movq	%rcx, %r12
0000000000013d48	movq	%rdx, %r13
0000000000013d4b	leaq	_NDR_record(%rip), %rax
0000000000013d52	movq	(%rax), %rax
0000000000013d55	movq	%rax, -0x358(%rbp)
0000000000013d5c	movl	%esi, -0x350(%rbp)
0000000000013d62	movl	$0x1513, -0x370(%rbp)
0000000000013d6c	movl	%edi, -0x368(%rbp)
0000000000013d72	callq	_mig_get_reply_port
0000000000013d77	movl	%eax, -0x364(%rbp)
0000000000013d7d	movabsq	$0x19f00000000, %rcx
0000000000013d87	movq	%rcx, -0x360(%rbp)
0000000000013d8e	movl	$0x0, (%rsp)
0000000000013d95	leaq	-0x370(%rbp), %r14
0000000000013d9c	movq	%r14, %rdi
0000000000013d9f	movl	$0x3, %esi
0000000000013da4	movl	$0x24, %edx
0000000000013da9	movl	$0x330, %ecx
0000000000013dae	movl	%eax, %r8d
0000000000013db1	xorl	%r9d, %r9d
0000000000013db4	callq	_mach_msg
0000000000013db9	movl	%eax, %ebx
0000000000013dbb	leal	-0x10000002(%rbx), %eax
0000000000013dc1	cmpl	$0xe, %eax
0000000000013dc4	ja	0x13de0
0000000000013dc6	movl	$0x4003, %ecx
0000000000013dcb	btl	%eax, %ecx
0000000000013dce	jae	0x13de0
0000000000013dd0	movl	-0x364(%rbp), %edi
0000000000013dd6	callq	_mig_put_reply_port
0000000000013ddb	jmp	0x13e6d
0000000000013de0	testl	%ebx, %ebx
0000000000013de2	jne	0x13e1c
0000000000013de4	movl	-0x35c(%rbp), %eax
0000000000013dea	cmpl	$0x47, %eax
0000000000013ded	je	0x13e29
0000000000013def	cmpl	$0x203, %eax
0000000000013df4	jne	0x13e30
0000000000013df6	movl	-0x370(%rbp), %ecx
0000000000013dfc	movl	-0x36c(%rbp), %eax
0000000000013e02	testl	%ecx, %ecx
0000000000013e04	js	0x13e37
0000000000013e06	movl	$0xfffffed4, %ebx
0000000000013e0b	cmpl	$0x24, %eax
0000000000013e0e	jne	0x13e61
0000000000013e10	movl	-0x350(%rbp), %edx
0000000000013e16	testl	%edx, %edx
0000000000013e18	jne	0x13e53
0000000000013e1a	jmp	0x13e61
0000000000013e1c	movl	-0x364(%rbp), %edi
0000000000013e22	callq	_mig_dealloc_reply_port
0000000000013e27	jmp	0x13e6d
0000000000013e29	movl	$0xfffffecc, %ebx
0000000000013e2e	jmp	0x13e61
0000000000013e30	movl	$0xfffffed3, %ebx
0000000000013e35	jmp	0x13e61
0000000000013e37	leal	-0x1a8(%rax), %edx
0000000000013e3d	movl	$0xfffffed4, %ebx
0000000000013e42	cmpl	$0x180, %edx
0000000000013e48	ja	0x13e61
0000000000013e4a	cmpl	$0x20, -0x358(%rbp)
0000000000013e51	jne	0x13e61
0000000000013e53	movl	$0xfffffed4, %ebx
0000000000013e58	cmpl	$0x0, -0x368(%rbp)
0000000000013e5f	je	0x13e81
0000000000013e61	leaq	-0x370(%rbp), %rdi
0000000000013e68	callq	_mach_msg_destroy
0000000000013e6d	movl	%ebx, %eax
0000000000013e6f	addq	$0x358, %rsp
0000000000013e76	popq	%rbx
0000000000013e77	popq	%r12
0000000000013e79	popq	%r13
0000000000013e7b	popq	%r14
0000000000013e7d	popq	%r15
0000000000013e7f	popq	%rbp
0000000000013e80	retq
0000000000013e81	testl	%ecx, %ecx
0000000000013e83	js	0x13ebd
0000000000013e85	movl	-0x350(%rbp), %ebx
0000000000013e8b	testl	%ebx, %ebx
0000000000013e8d	jne	0x13e61
0000000000013e8f	leaq	-0x1c8(%rbp), %rsi
0000000000013e96	movl	-0x4(%rsi), %edi
0000000000013e99	cmpl	$0x21, %edi
0000000000013e9c	jb	0x13f65
0000000000013ea2	movl	$0x80, %edx
0000000000013ea7	movq	%rdi, %rbx
0000000000013eaa	movq	%r13, %rdi
0000000000013ead	callq	_memcpy
0000000000013eb2	movl	%ebx, (%r12)
0000000000013eb6	movl	$0xfffffecd, %ebx
0000000000013ebb	jmp	0x13e6d
0000000000013ebd	leaq	-0x34c(%rbp), %rcx
0000000000013ec4	xorl	%edx, %edx
0000000000013ec6	cmpl	$0xffffff, (%rcx)
0000000000013ecc	ja	0x13e61
0000000000013ece	incl	%edx
0000000000013ed0	addq	$0xc, %rcx
0000000000013ed4	cmpl	$0x20, %edx
0000000000013ed7	jb	0x13ec6
0000000000013ed9	movl	-0x1cc(%rbp), %edi
0000000000013edf	cmpl	$0x20, %edi
0000000000013ee2	ja	0x13e61
0000000000013ee8	leal	-0x1a8(%rax), %ecx
0000000000013eee	shrl	$0x2, %ecx
0000000000013ef1	cmpl	%edi, %ecx
0000000000013ef3	jb	0x13e61
0000000000013ef9	leal	(,%rdi,4), %ecx
0000000000013f00	leal	0x1a8(%rcx), %edx
0000000000013f06	cmpl	%edx, %eax
0000000000013f08	jb	0x13e61
0000000000013f0e	subl	%ecx, %eax
0000000000013f10	cmpl	%edx, %eax
0000000000013f12	jb	0x13e61
0000000000013f18	leal	-0x1a8(%rax), %esi
0000000000013f1e	shrl	$0x2, %esi
0000000000013f21	cmpl	%edi, %esi
0000000000013f23	jb	0x13e61
0000000000013f29	subl	%ecx, %eax
0000000000013f2b	cmpl	%edx, %eax
0000000000013f2d	jne	0x13e61
0000000000013f33	addl	$0xfffffe58, %eax
0000000000013f38	shrl	$0x2, %eax
0000000000013f3b	cmpl	%edi, %eax
0000000000013f3d	jb	0x13e61
0000000000013f43	movl	%ecx, %eax
0000000000013f45	leaq	-0x80(%rax,%r14), %rdx
0000000000013f4a	addq	$-0x80, %rax
0000000000013f4e	movq	%rdx, %rcx
0000000000013f51	movq	%rdx, -0x30(%rbp)
0000000000013f55	addq	%rdx, %rax
0000000000013f58	movq	%rax, -0x38(%rbp)
0000000000013f5c	leaq	-0x1c8(%rbp), %rsi
0000000000013f63	jmp	0x13f71
0000000000013f65	xorl	%eax, %eax
0000000000013f67	movq	%rax, -0x30(%rbp)
0000000000013f6b	xorl	%eax, %eax
0000000000013f6d	movq	%rax, -0x38(%rbp)
0000000000013f71	leal	(,%rdi,4), %r14d
0000000000013f79	movq	%rdi, %rbx
0000000000013f7c	movq	%r13, %rdi
0000000000013f7f	movq	%r14, %rdx
0000000000013f82	callq	_memcpy
0000000000013f87	movl	%ebx, (%r12)
0000000000013f8b	testl	%ebx, %ebx
0000000000013f8d	je	0x13fad
0000000000013f8f	leaq	-0x354(%rbp), %rax
0000000000013f96	movslq	%ebx, %rcx
0000000000013f99	xorl	%edx, %edx
0000000000013f9b	movl	(%rax), %esi
0000000000013f9d	movl	%esi, (%r15,%rdx,4)
0000000000013fa1	addq	$0xc, %rax
0000000000013fa5	incq	%rdx
0000000000013fa8	cmpq	%rcx, %rdx
0000000000013fab	jl	0x13f9b
0000000000013fad	movq	-0x30(%rbp), %rsi
0000000000013fb1	addq	$0x228, %rsi
0000000000013fb8	movq	-0x40(%rbp), %rdi
0000000000013fbc	movq	%r14, %rdx
0000000000013fbf	callq	_memcpy
0000000000013fc4	movq	-0x38(%rbp), %rsi
0000000000013fc8	addq	$0x2a8, %rsi
0000000000013fcf	movq	0x10(%rbp), %rdi
0000000000013fd3	movq	%r14, %rdx
0000000000013fd6	callq	_memcpy
0000000000013fdb	xorl	%ebx, %ebx
0000000000013fdd	jmp	0x13e6d
_host_swap_exception_ports:
0000000000013fe2	pushq	%rbp
0000000000013fe3	movq	%rsp, %rbp
0000000000013fe6	pushq	%r15
0000000000013fe8	pushq	%r14
0000000000013fea	pushq	%r13
0000000000013fec	pushq	%r12
0000000000013fee	pushq	%rbx
0000000000013fef	subq	$0x338, %rsp
0000000000013ff6	movq	%r9, %r14
0000000000013ff9	movl	$0x1, -0x340(%rbp)
0000000000014003	movl	%edx, -0x33c(%rbp)
0000000000014009	movl	$0x130000, -0x334(%rbp)
0000000000014013	leaq	_NDR_record(%rip), %rax
000000000001401a	movq	(%rax), %rax
000000000001401d	movq	%rax, -0x330(%rbp)
0000000000014024	movl	%esi, -0x328(%rbp)
000000000001402a	movl	%ecx, -0x324(%rbp)
0000000000014030	movl	%r8d, -0x320(%rbp)
0000000000014037	movl	$0x80001513, -0x358(%rbp)
0000000000014041	movl	%edi, -0x350(%rbp)
0000000000014047	callq	_mig_get_reply_port
000000000001404c	movl	%eax, -0x34c(%rbp)
0000000000014052	movabsq	$0x1a000000000, %rcx
000000000001405c	movq	%rcx, -0x348(%rbp)
0000000000014063	movl	$0x0, (%rsp)
000000000001406a	leaq	-0x358(%rbp), %r15
0000000000014071	movq	%r15, %rdi
0000000000014074	movl	$0x3, %esi
0000000000014079	movl	$0x3c, %edx
000000000001407e	movl	$0x330, %ecx
0000000000014083	movl	%eax, %r8d
0000000000014086	xorl	%r9d, %r9d
0000000000014089	callq	_mach_msg
000000000001408e	movl	%eax, %ebx
0000000000014090	leal	-0x10000002(%rbx), %eax
0000000000014096	cmpl	$0xe, %eax
0000000000014099	ja	0x140b2
000000000001409b	movl	$0x4003, %ecx
00000000000140a0	btl	%eax, %ecx
00000000000140a3	jae	0x140b2
00000000000140a5	movl	-0x34c(%rbp), %edi
00000000000140ab	callq	_mig_put_reply_port
00000000000140b0	jmp	0x14112
00000000000140b2	testl	%ebx, %ebx
00000000000140b4	jne	0x140ed
00000000000140b6	movl	-0x344(%rbp), %eax
00000000000140bc	cmpl	$0x47, %eax
00000000000140bf	je	0x140fa
00000000000140c1	cmpl	$0x204, %eax
00000000000140c6	jne	0x14101
00000000000140c8	movl	-0x358(%rbp), %ecx
00000000000140ce	movl	-0x354(%rbp), %eax
00000000000140d4	testl	%ecx, %ecx
00000000000140d6	js	0x14126
00000000000140d8	movl	$0xfffffed4, %ebx
00000000000140dd	cmpl	$0x24, %eax
00000000000140e0	jne	0x14106
00000000000140e2	cmpl	$0x0, -0x338(%rbp)
00000000000140e9	jne	0x14142
00000000000140eb	jmp	0x14106
00000000000140ed	movl	-0x34c(%rbp), %edi
00000000000140f3	callq	_mig_dealloc_reply_port
00000000000140f8	jmp	0x14112
00000000000140fa	movl	$0xfffffecc, %ebx
00000000000140ff	jmp	0x14106
0000000000014101	movl	$0xfffffed3, %ebx
0000000000014106	leaq	-0x358(%rbp), %rdi
000000000001410d	callq	_mach_msg_destroy
0000000000014112	movl	%ebx, %eax
0000000000014114	addq	$0x338, %rsp
000000000001411b	popq	%rbx
000000000001411c	popq	%r12
000000000001411e	popq	%r13
0000000000014120	popq	%r14
0000000000014122	popq	%r15
0000000000014124	popq	%rbp
0000000000014125	retq
0000000000014126	leal	-0x1a8(%rax), %edx
000000000001412c	movl	$0xfffffed4, %ebx
0000000000014131	cmpl	$0x180, %edx
0000000000014137	ja	0x14106
0000000000014139	cmpl	$0x20, -0x340(%rbp)
0000000000014140	jne	0x14106
0000000000014142	movl	$0xfffffed4, %ebx
0000000000014147	cmpl	$0x0, -0x350(%rbp)
000000000001414e	jne	0x14106
0000000000014150	movq	0x10(%rbp), %r13
0000000000014154	testl	%ecx, %ecx
0000000000014156	js	0x1418f
0000000000014158	movl	-0x338(%rbp), %ebx
000000000001415e	testl	%ebx, %ebx
0000000000014160	jne	0x14106
0000000000014162	leaq	-0x1b0(%rbp), %rsi
0000000000014169	movl	-0x4(%rsi), %r12d
000000000001416d	cmpl	$0x21, %r12d
0000000000014171	jb	0x14237
0000000000014177	movl	$0x80, %edx
000000000001417c	movq	%r14, %rdi
000000000001417f	callq	_memcpy
0000000000014184	movl	%r12d, (%r13)
0000000000014188	movl	$0xfffffecd, %ebx
000000000001418d	jmp	0x14112
000000000001418f	leaq	-0x334(%rbp), %rcx
0000000000014196	xorl	%edx, %edx
0000000000014198	cmpl	$0xffffff, (%rcx)
000000000001419e	ja	0x14106
00000000000141a4	incl	%edx
00000000000141a6	addq	$0xc, %rcx
00000000000141aa	cmpl	$0x20, %edx
00000000000141ad	jb	0x14198
00000000000141af	movl	-0x1b4(%rbp), %r12d
00000000000141b6	cmpl	$0x20, %r12d
00000000000141ba	ja	0x14106
00000000000141c0	leal	-0x1a8(%rax), %ecx
00000000000141c6	shrl	$0x2, %ecx
00000000000141c9	cmpl	%r12d, %ecx
00000000000141cc	jb	0x14106
00000000000141d2	leal	(,%r12,4), %ecx
00000000000141da	leal	0x1a8(%rcx), %edx
00000000000141e0	cmpl	%edx, %eax
00000000000141e2	jb	0x14106
00000000000141e8	subl	%ecx, %eax
00000000000141ea	cmpl	%edx, %eax
00000000000141ec	jb	0x14106
00000000000141f2	leal	-0x1a8(%rax), %esi
00000000000141f8	shrl	$0x2, %esi
00000000000141fb	cmpl	%r12d, %esi
00000000000141fe	jb	0x14106
0000000000014204	subl	%ecx, %eax
0000000000014206	cmpl	%edx, %eax
0000000000014208	jne	0x14106
000000000001420e	addl	$0xfffffe58, %eax
0000000000014213	shrl	$0x2, %eax
0000000000014216	cmpl	%r12d, %eax
0000000000014219	jb	0x14106
000000000001421f	movl	%ecx, %r13d
0000000000014222	leaq	-0x80(%r13,%r15), %r15
0000000000014227	addq	$-0x80, %r13
000000000001422b	addq	%r15, %r13
000000000001422e	leaq	-0x1b0(%rbp), %rsi
0000000000014235	jmp	0x1423d
0000000000014237	xorl	%r15d, %r15d
000000000001423a	xorl	%r13d, %r13d
000000000001423d	leal	(,%r12,4), %ebx
0000000000014245	movq	%r14, %rdi
0000000000014248	movq	%rbx, %rdx
000000000001424b	callq	_memcpy
0000000000014250	movq	0x10(%rbp), %rax
0000000000014254	movl	%r12d, (%rax)
0000000000014257	testl	%r12d, %r12d
000000000001425a	je	0x1427d
000000000001425c	movq	0x18(%rbp), %rax
0000000000014260	leaq	-0x33c(%rbp), %rcx
0000000000014267	movslq	%r12d, %rdx
000000000001426a	xorl	%esi, %esi
000000000001426c	movl	(%rcx), %edi
000000000001426e	movl	%edi, (%rax,%rsi,4)
0000000000014271	addq	$0xc, %rcx
0000000000014275	incq	%rsi
0000000000014278	cmpq	%rdx, %rsi
000000000001427b	jl	0x1426c
000000000001427d	addq	$0x228, %r15
0000000000014284	movq	0x20(%rbp), %rdi
0000000000014288	movq	%r15, %rsi
000000000001428b	movq	%rbx, %rdx
000000000001428e	callq	_memcpy
0000000000014293	addq	$0x2a8, %r13
000000000001429a	movq	0x28(%rbp), %rdi
000000000001429e	movq	%r13, %rsi
00000000000142a1	movq	%rbx, %rdx
00000000000142a4	callq	_memcpy
00000000000142a9	xorl	%ebx, %ebx
00000000000142ab	jmp	0x14112
_mach_vm_wire:
00000000000142b0	pushq	%rbp
00000000000142b1	movq	%rsp, %rbp
00000000000142b4	pushq	%rbx
00000000000142b5	subq	$0x58, %rsp
00000000000142b9	leaq	-0x50(%rbp), %rbx
00000000000142bd	movl	$0x1, 0x18(%rbx)
00000000000142c4	movl	%esi, 0x1c(%rbx)
00000000000142c7	movl	$0x130000, 0x24(%rbx)
00000000000142ce	leaq	_NDR_record(%rip), %rax
00000000000142d5	movq	(%rax), %rax
00000000000142d8	movq	%rax, 0x28(%rbx)
00000000000142dc	movq	%rdx, 0x30(%rbx)
00000000000142e0	movq	%rcx, 0x38(%rbx)
00000000000142e4	movl	%r8d, 0x40(%rbx)
00000000000142e8	movl	$0x80001513, (%rbx)
00000000000142ee	movl	%edi, 0x8(%rbx)
00000000000142f1	callq	_mig_get_reply_port
00000000000142f6	movl	%eax, 0xc(%rbx)
00000000000142f9	movabsq	$0x1a200000000, %rcx
0000000000014303	movq	%rcx, 0x10(%rbx)
0000000000014307	movl	$0x0, (%rsp)
000000000001430e	movq	%rbx, %rdi
0000000000014311	movl	$0x3, %esi
0000000000014316	movl	$0x44, %edx
000000000001431b	movl	$0x2c, %ecx
0000000000014320	movl	%eax, %r8d
0000000000014323	xorl	%r9d, %r9d
0000000000014326	callq	_mach_msg
000000000001432b	movl	%eax, %ebx
000000000001432d	leal	-0x10000002(%rbx), %eax
0000000000014333	cmpl	$0xe, %eax
0000000000014336	ja	0x1434c
0000000000014338	movl	$0x4003, %ecx
000000000001433d	btl	%eax, %ecx
0000000000014340	jae	0x1434c
0000000000014342	movl	-0x44(%rbp), %edi
0000000000014345	callq	_mig_put_reply_port
000000000001434a	jmp	0x143a1
000000000001434c	testl	%ebx, %ebx
000000000001434e	jne	0x14382
0000000000014350	movl	-0x3c(%rbp), %eax
0000000000014353	cmpl	$0x47, %eax
0000000000014356	je	0x1438c
0000000000014358	cmpl	$0x206, %eax
000000000001435d	jne	0x14393
000000000001435f	movl	$0xfffffed4, %ebx
0000000000014364	cmpl	$0x0, -0x50(%rbp)
0000000000014368	js	0x14398
000000000001436a	cmpl	$0x24, -0x4c(%rbp)
000000000001436e	jne	0x14398
0000000000014370	movl	-0x48(%rbp), %eax
0000000000014373	testl	%eax, %eax
0000000000014375	jne	0x14398
0000000000014377	movl	-0x30(%rbp), %ebx
000000000001437a	testl	%ebx, %ebx
000000000001437c	jne	0x14398
000000000001437e	xorl	%ebx, %ebx
0000000000014380	jmp	0x143a1
0000000000014382	movl	-0x44(%rbp), %edi
0000000000014385	callq	_mig_dealloc_reply_port
000000000001438a	jmp	0x143a1
000000000001438c	movl	$0xfffffecc, %ebx
0000000000014391	jmp	0x14398
0000000000014393	movl	$0xfffffed3, %ebx
0000000000014398	leaq	-0x50(%rbp), %rdi
000000000001439c	callq	_mach_msg_destroy
00000000000143a1	movl	%ebx, %eax
00000000000143a3	addq	$0x58, %rsp
00000000000143a7	popq	%rbx
00000000000143a8	popq	%rbp
00000000000143a9	retq
_host_processor_sets:
00000000000143aa	pushq	%rbp
00000000000143ab	movq	%rsp, %rbp
00000000000143ae	pushq	%r15
00000000000143b0	pushq	%r14
00000000000143b2	pushq	%rbx
00000000000143b3	subq	$0x48, %rsp
00000000000143b7	movq	%rdx, %r14
00000000000143ba	movq	%rsi, %r15
00000000000143bd	leaq	-0x58(%rbp), %rbx
00000000000143c1	movl	$0x1513, (%rbx)
00000000000143c7	movl	%edi, 0x8(%rbx)
00000000000143ca	callq	_mig_get_reply_port
00000000000143cf	movl	%eax, 0xc(%rbx)
00000000000143d2	movabsq	$0x1a300000000, %rcx
00000000000143dc	movq	%rcx, 0x10(%rbx)
00000000000143e0	movl	$0x0, (%rsp)
00000000000143e7	movq	%rbx, %rdi
00000000000143ea	movl	$0x3, %esi
00000000000143ef	movl	$0x18, %edx
00000000000143f4	movl	$0x40, %ecx
00000000000143f9	movl	%eax, %r8d
00000000000143fc	xorl	%r9d, %r9d
00000000000143ff	callq	_mach_msg
0000000000014404	movl	%eax, %ebx
0000000000014406	leal	-0x10000002(%rbx), %eax
000000000001440c	cmpl	$0xe, %eax
000000000001440f	ja	0x14425
0000000000014411	movl	$0x4003, %ecx
0000000000014416	btl	%eax, %ecx
0000000000014419	jae	0x14425
000000000001441b	movl	-0x4c(%rbp), %edi
000000000001441e	callq	_mig_put_reply_port
0000000000014423	jmp	0x14473
0000000000014425	testl	%ebx, %ebx
0000000000014427	jne	0x14454
0000000000014429	movl	-0x44(%rbp), %eax
000000000001442c	cmpl	$0x47, %eax
000000000001442f	je	0x1445e
0000000000014431	cmpl	$0x207, %eax
0000000000014436	jne	0x14465
0000000000014438	movl	-0x58(%rbp), %eax
000000000001443b	movl	-0x54(%rbp), %ecx
000000000001443e	movl	$0xfffffed4, %ebx
0000000000014443	testl	%eax, %eax
0000000000014445	js	0x14480
0000000000014447	cmpl	$0x24, %ecx
000000000001444a	jne	0x1446a
000000000001444c	cmpl	$0x0, -0x38(%rbp)
0000000000014450	jne	0x1448b
0000000000014452	jmp	0x1446a
0000000000014454	movl	-0x4c(%rbp), %edi
0000000000014457	callq	_mig_dealloc_reply_port
000000000001445c	jmp	0x14473
000000000001445e	movl	$0xfffffecc, %ebx
0000000000014463	jmp	0x1446a
0000000000014465	movl	$0xfffffed3, %ebx
000000000001446a	leaq	-0x58(%rbp), %rdi
000000000001446e	callq	_mach_msg_destroy
0000000000014473	movl	%ebx, %eax
0000000000014475	addq	$0x48, %rsp
0000000000014479	popq	%rbx
000000000001447a	popq	%r14
000000000001447c	popq	%r15
000000000001447e	popq	%rbp
000000000001447f	retq
0000000000014480	cmpl	$0x38, %ecx
0000000000014483	jne	0x1446a
0000000000014485	cmpl	$0x1, -0x40(%rbp)
0000000000014489	jne	0x1446a
000000000001448b	movl	$0xfffffed4, %ebx
0000000000014490	cmpl	$0x0, -0x50(%rbp)
0000000000014494	jne	0x1446a
0000000000014496	testl	%eax, %eax
0000000000014498	js	0x144a6
000000000001449a	movl	-0x38(%rbp), %ebx
000000000001449d	testl	%ebx, %ebx
000000000001449f	jne	0x1446a
00000000000144a1	movl	-0x24(%rbp), %eax
00000000000144a4	jmp	0x144bc
00000000000144a6	movzwl	-0x32(%rbp), %eax
00000000000144aa	shll	$0x10, %eax
00000000000144ad	cmpl	$0x2110000, %eax
00000000000144b2	jne	0x1446a
00000000000144b4	movl	-0x30(%rbp), %eax
00000000000144b7	cmpl	-0x24(%rbp), %eax
00000000000144ba	jne	0x1446a
00000000000144bc	movq	-0x3c(%rbp), %rcx
00000000000144c0	movq	%rcx, (%r15)
00000000000144c3	movl	%eax, (%r14)
00000000000144c6	xorl	%ebx, %ebx
00000000000144c8	jmp	0x14473
_host_processor_set_priv:
00000000000144ca	pushq	%rbp
00000000000144cb	movq	%rsp, %rbp
00000000000144ce	pushq	%r14
00000000000144d0	pushq	%rbx
00000000000144d1	subq	$0x40, %rsp
00000000000144d5	movq	%rdx, %r14
00000000000144d8	leaq	-0x40(%rbp), %rbx
00000000000144dc	movl	$0x1, 0x18(%rbx)
00000000000144e3	movl	%esi, 0x1c(%rbx)
00000000000144e6	movl	$0x130000, 0x24(%rbx)
00000000000144ed	movl	$0x80001513, (%rbx)
00000000000144f3	movl	%edi, 0x8(%rbx)
00000000000144f6	callq	_mig_get_reply_port
00000000000144fb	movl	%eax, 0xc(%rbx)
00000000000144fe	movabsq	$0x1a400000000, %rcx
0000000000014508	movq	%rcx, 0x10(%rbx)
000000000001450c	movl	$0x0, (%rsp)
0000000000014513	movq	%rbx, %rdi
0000000000014516	movl	$0x3, %esi
000000000001451b	movl	$0x28, %edx
0000000000014520	movl	$0x30, %ecx
0000000000014525	movl	%eax, %r8d
0000000000014528	xorl	%r9d, %r9d
000000000001452b	callq	_mach_msg
0000000000014530	movl	%eax, %ebx
0000000000014532	leal	-0x10000002(%rbx), %eax
0000000000014538	cmpl	$0xe, %eax
000000000001453b	ja	0x14551
000000000001453d	movl	$0x4003, %ecx
0000000000014542	btl	%eax, %ecx
0000000000014545	jae	0x14551
0000000000014547	movl	-0x34(%rbp), %edi
000000000001454a	callq	_mig_put_reply_port
000000000001454f	jmp	0x1459f
0000000000014551	testl	%ebx, %ebx
0000000000014553	jne	0x14580
0000000000014555	movl	-0x2c(%rbp), %eax
0000000000014558	cmpl	$0x47, %eax
000000000001455b	je	0x1458a
000000000001455d	cmpl	$0x208, %eax
0000000000014562	jne	0x14591
0000000000014564	movl	-0x40(%rbp), %eax
0000000000014567	movl	-0x3c(%rbp), %ecx
000000000001456a	movl	$0xfffffed4, %ebx
000000000001456f	testl	%eax, %eax
0000000000014571	js	0x145aa
0000000000014573	cmpl	$0x24, %ecx
0000000000014576	jne	0x14596
0000000000014578	cmpl	$0x0, -0x20(%rbp)
000000000001457c	jne	0x145b5
000000000001457e	jmp	0x14596
0000000000014580	movl	-0x34(%rbp), %edi
0000000000014583	callq	_mig_dealloc_reply_port
0000000000014588	jmp	0x1459f
000000000001458a	movl	$0xfffffecc, %ebx
000000000001458f	jmp	0x14596
0000000000014591	movl	$0xfffffed3, %ebx
0000000000014596	leaq	-0x40(%rbp), %rdi
000000000001459a	callq	_mach_msg_destroy
000000000001459f	movl	%ebx, %eax
00000000000145a1	addq	$0x40, %rsp
00000000000145a5	popq	%rbx
00000000000145a6	popq	%r14
00000000000145a8	popq	%rbp
00000000000145a9	retq
00000000000145aa	cmpl	$0x28, %ecx
00000000000145ad	jne	0x14596
00000000000145af	cmpl	$0x1, -0x28(%rbp)
00000000000145b3	jne	0x14596
00000000000145b5	movl	$0xfffffed4, %ebx
00000000000145ba	cmpl	$0x0, -0x38(%rbp)
00000000000145be	jne	0x14596
00000000000145c0	testl	%eax, %eax
00000000000145c2	js	0x145cd
00000000000145c4	movl	-0x20(%rbp), %ebx
00000000000145c7	testl	%ebx, %ebx
00000000000145c9	jne	0x14596
00000000000145cb	jmp	0x145db
00000000000145cd	movzwl	-0x1a(%rbp), %eax
00000000000145d1	shll	$0x10, %eax
00000000000145d4	cmpl	$0x110000, %eax
00000000000145d9	jne	0x14596
00000000000145db	movl	-0x24(%rbp), %eax
00000000000145de	movl	%eax, (%r14)
00000000000145e1	xorl	%ebx, %ebx
00000000000145e3	jmp	0x1459f
_host_set_UNDServer:
00000000000145e5	pushq	%rbp
00000000000145e6	movq	%rsp, %rbp
00000000000145e9	pushq	%rbx
00000000000145ea	subq	$0x38, %rsp
00000000000145ee	leaq	-0x38(%rbp), %rbx
00000000000145f2	movl	$0x1, 0x18(%rbx)
00000000000145f9	movl	%esi, 0x1c(%rbx)
00000000000145fc	movl	$0x130000, 0x24(%rbx)
0000000000014603	movl	$0x80001513, (%rbx)
0000000000014609	movl	%edi, 0x8(%rbx)
000000000001460c	callq	_mig_get_reply_port
0000000000014611	movl	%eax, 0xc(%rbx)
0000000000014614	movabsq	$0x1a700000000, %rcx
000000000001461e	movq	%rcx, 0x10(%rbx)
0000000000014622	movl	$0x0, (%rsp)
0000000000014629	movq	%rbx, %rdi
000000000001462c	movl	$0x3, %esi
0000000000014631	movl	$0x28, %edx
0000000000014636	movl	$0x2c, %ecx
000000000001463b	movl	%eax, %r8d
000000000001463e	xorl	%r9d, %r9d
0000000000014641	callq	_mach_msg
0000000000014646	movl	%eax, %ebx
0000000000014648	leal	-0x10000002(%rbx), %eax
000000000001464e	cmpl	$0xe, %eax
0000000000014651	ja	0x14667
0000000000014653	movl	$0x4003, %ecx
0000000000014658	btl	%eax, %ecx
000000000001465b	jae	0x14667
000000000001465d	movl	-0x2c(%rbp), %edi
0000000000014660	callq	_mig_put_reply_port
0000000000014665	jmp	0x146bc
0000000000014667	testl	%ebx, %ebx
0000000000014669	jne	0x1469d
000000000001466b	movl	-0x24(%rbp), %eax
000000000001466e	cmpl	$0x47, %eax
0000000000014671	je	0x146a7
0000000000014673	cmpl	$0x20b, %eax
0000000000014678	jne	0x146ae
000000000001467a	movl	$0xfffffed4, %ebx
000000000001467f	cmpl	$0x0, -0x38(%rbp)
0000000000014683	js	0x146b3
0000000000014685	cmpl	$0x24, -0x34(%rbp)
0000000000014689	jne	0x146b3
000000000001468b	movl	-0x30(%rbp), %eax
000000000001468e	testl	%eax, %eax
0000000000014690	jne	0x146b3
0000000000014692	movl	-0x18(%rbp), %ebx
0000000000014695	testl	%ebx, %ebx
0000000000014697	jne	0x146b3
0000000000014699	xorl	%ebx, %ebx
000000000001469b	jmp	0x146bc
000000000001469d	movl	-0x2c(%rbp), %edi
00000000000146a0	callq	_mig_dealloc_reply_port
00000000000146a5	jmp	0x146bc
00000000000146a7	movl	$0xfffffecc, %ebx
00000000000146ac	jmp	0x146b3
00000000000146ae	movl	$0xfffffed3, %ebx
00000000000146b3	leaq	-0x38(%rbp), %rdi
00000000000146b7	callq	_mach_msg_destroy
00000000000146bc	movl	%ebx, %eax
00000000000146be	addq	$0x38, %rsp
00000000000146c2	popq	%rbx
00000000000146c3	popq	%rbp
00000000000146c4	retq
_host_get_UNDServer:
00000000000146c5	pushq	%rbp
00000000000146c6	movq	%rsp, %rbp
00000000000146c9	pushq	%r14
00000000000146cb	pushq	%rbx
00000000000146cc	subq	$0x40, %rsp
00000000000146d0	movq	%rsi, %r14
00000000000146d3	leaq	-0x40(%rbp), %rbx
00000000000146d7	movl	$0x1513, (%rbx)
00000000000146dd	movl	%edi, 0x8(%rbx)
00000000000146e0	callq	_mig_get_reply_port
00000000000146e5	movl	%eax, 0xc(%rbx)
00000000000146e8	movabsq	$0x1a800000000, %rcx
00000000000146f2	movq	%rcx, 0x10(%rbx)
00000000000146f6	movl	$0x0, (%rsp)
00000000000146fd	movq	%rbx, %rdi
0000000000014700	movl	$0x3, %esi
0000000000014705	movl	$0x18, %edx
000000000001470a	movl	$0x30, %ecx
000000000001470f	movl	%eax, %r8d
0000000000014712	xorl	%r9d, %r9d
0000000000014715	callq	_mach_msg
000000000001471a	movl	%eax, %ebx
000000000001471c	leal	-0x10000002(%rbx), %eax
0000000000014722	cmpl	$0xe, %eax
0000000000014725	ja	0x1473b
0000000000014727	movl	$0x4003, %ecx
000000000001472c	btl	%eax, %ecx
000000000001472f	jae	0x1473b
0000000000014731	movl	-0x34(%rbp), %edi
0000000000014734	callq	_mig_put_reply_port
0000000000014739	jmp	0x14789
000000000001473b	testl	%ebx, %ebx
000000000001473d	jne	0x1476a
000000000001473f	movl	-0x2c(%rbp), %eax
0000000000014742	cmpl	$0x47, %eax
0000000000014745	je	0x14774
0000000000014747	cmpl	$0x20c, %eax
000000000001474c	jne	0x1477b
000000000001474e	movl	-0x40(%rbp), %eax
0000000000014751	movl	-0x3c(%rbp), %ecx
0000000000014754	movl	$0xfffffed4, %ebx
0000000000014759	testl	%eax, %eax
000000000001475b	js	0x14794
000000000001475d	cmpl	$0x24, %ecx
0000000000014760	jne	0x14780
0000000000014762	cmpl	$0x0, -0x20(%rbp)
0000000000014766	jne	0x1479f
0000000000014768	jmp	0x14780
000000000001476a	movl	-0x34(%rbp), %edi
000000000001476d	callq	_mig_dealloc_reply_port
0000000000014772	jmp	0x14789
0000000000014774	movl	$0xfffffecc, %ebx
0000000000014779	jmp	0x14780
000000000001477b	movl	$0xfffffed3, %ebx
0000000000014780	leaq	-0x40(%rbp), %rdi
0000000000014784	callq	_mach_msg_destroy
0000000000014789	movl	%ebx, %eax
000000000001478b	addq	$0x40, %rsp
000000000001478f	popq	%rbx
0000000000014790	popq	%r14
0000000000014792	popq	%rbp
0000000000014793	retq
0000000000014794	cmpl	$0x28, %ecx
0000000000014797	jne	0x14780
0000000000014799	cmpl	$0x1, -0x28(%rbp)
000000000001479d	jne	0x14780
000000000001479f	movl	$0xfffffed4, %ebx
00000000000147a4	cmpl	$0x0, -0x38(%rbp)
00000000000147a8	jne	0x14780
00000000000147aa	testl	%eax, %eax
00000000000147ac	js	0x147b7
00000000000147ae	movl	-0x20(%rbp), %ebx
00000000000147b1	testl	%ebx, %ebx
00000000000147b3	jne	0x14780
00000000000147b5	jmp	0x147c5
00000000000147b7	movzwl	-0x1a(%rbp), %eax
00000000000147bb	shll	$0x10, %eax
00000000000147be	cmpl	$0x110000, %eax
00000000000147c3	jne	0x14780
00000000000147c5	movl	-0x24(%rbp), %eax
00000000000147c8	movl	%eax, (%r14)
00000000000147cb	xorl	%ebx, %ebx
00000000000147cd	jmp	0x14789
_kext_request:
00000000000147cf	pushq	%rbp
00000000000147d0	movq	%rsp, %rbp
00000000000147d3	pushq	%r15
00000000000147d5	pushq	%r14
00000000000147d7	pushq	%rbx
00000000000147d8	subq	$0x68, %rsp
00000000000147dc	movq	%r9, %r14
00000000000147df	movq	%r8, %r15
00000000000147e2	leaq	-0x70(%rbp), %rbx
00000000000147e6	movl	$0x1, 0x18(%rbx)
00000000000147ed	movq	%rdx, 0x1c(%rbx)
00000000000147f1	movl	%ecx, 0x28(%rbx)
00000000000147f4	movl	$0x1000100, 0x24(%rbx)
00000000000147fb	leaq	_NDR_record(%rip), %rax
0000000000014802	movq	(%rax), %rax
0000000000014805	movq	%rax, 0x2c(%rbx)
0000000000014809	movl	%esi, 0x34(%rbx)
000000000001480c	movl	%ecx, 0x38(%rbx)
000000000001480f	movl	$0x80001513, (%rbx)
0000000000014815	movl	%edi, 0x8(%rbx)
0000000000014818	callq	_mig_get_reply_port
000000000001481d	movl	%eax, 0xc(%rbx)
0000000000014820	movabsq	$0x1a900000000, %rcx
000000000001482a	movq	%rcx, 0x10(%rbx)
000000000001482e	movl	$0x0, (%rsp)
0000000000014835	movq	%rbx, %rdi
0000000000014838	movl	$0x3, %esi
000000000001483d	movl	$0x3c, %edx
0000000000014842	movl	$0x58, %ecx
0000000000014847	movl	%eax, %r8d
000000000001484a	xorl	%r9d, %r9d
000000000001484d	callq	_mach_msg
0000000000014852	movl	%eax, %ebx
0000000000014854	leal	-0x10000002(%rbx), %eax
000000000001485a	cmpl	$0xe, %eax
000000000001485d	ja	0x14873
000000000001485f	movl	$0x4003, %ecx
0000000000014864	btl	%eax, %ecx
0000000000014867	jae	0x14873
0000000000014869	movl	-0x64(%rbp), %edi
000000000001486c	callq	_mig_put_reply_port
0000000000014871	jmp	0x148c1
0000000000014873	testl	%ebx, %ebx
0000000000014875	jne	0x148a2
0000000000014877	movl	-0x5c(%rbp), %eax
000000000001487a	cmpl	$0x47, %eax
000000000001487d	je	0x148ac
000000000001487f	cmpl	$0x20d, %eax
0000000000014884	jne	0x148b3
0000000000014886	movl	-0x70(%rbp), %eax
0000000000014889	movl	-0x6c(%rbp), %ecx
000000000001488c	movl	$0xfffffed4, %ebx
0000000000014891	testl	%eax, %eax
0000000000014893	js	0x148ce
0000000000014895	cmpl	$0x24, %ecx
0000000000014898	jne	0x148b8
000000000001489a	cmpl	$0x0, -0x50(%rbp)
000000000001489e	jne	0x148d9
00000000000148a0	jmp	0x148b8
00000000000148a2	movl	-0x64(%rbp), %edi
00000000000148a5	callq	_mig_dealloc_reply_port
00000000000148aa	jmp	0x148c1
00000000000148ac	movl	$0xfffffecc, %ebx
00000000000148b1	jmp	0x148b8
00000000000148b3	movl	$0xfffffed3, %ebx
00000000000148b8	leaq	-0x70(%rbp), %rdi
00000000000148bc	callq	_mach_msg_destroy
00000000000148c1	movl	%ebx, %eax
00000000000148c3	addq	$0x68, %rsp
00000000000148c7	popq	%rbx
00000000000148c8	popq	%r14
00000000000148ca	popq	%r15
00000000000148cc	popq	%rbp
00000000000148cd	retq
00000000000148ce	cmpl	$0x50, %ecx
00000000000148d1	jne	0x148b8
00000000000148d3	cmpl	$0x2, -0x58(%rbp)
00000000000148d7	jne	0x148b8
00000000000148d9	movl	$0xfffffed4, %ebx
00000000000148de	cmpl	$0x0, -0x68(%rbp)
00000000000148e2	jne	0x148b8
00000000000148e4	testl	%eax, %eax
00000000000148e6	js	0x1491d
00000000000148e8	movl	-0x50(%rbp), %ebx
00000000000148eb	testl	%ebx, %ebx
00000000000148ed	jne	0x148b8
00000000000148ef	movl	-0x2c(%rbp), %eax
00000000000148f2	movl	-0x28(%rbp), %ecx
00000000000148f5	movq	0x20(%rbp), %rdx
00000000000148f9	movq	0x18(%rbp), %rsi
00000000000148fd	movq	0x10(%rbp), %rdi
0000000000014901	movq	-0x54(%rbp), %rbx
0000000000014905	movq	%rbx, (%r15)
0000000000014908	movl	%eax, (%r14)
000000000001490b	movq	-0x44(%rbp), %rax
000000000001490f	movq	%rax, (%rdi)
0000000000014912	movl	%ecx, (%rsi)
0000000000014914	movl	-0x24(%rbp), %eax
0000000000014917	movl	%eax, (%rdx)
0000000000014919	xorl	%ebx, %ebx
000000000001491b	jmp	0x148c1
000000000001491d	movzbl	-0x49(%rbp), %eax
0000000000014921	shll	$0x18, %eax
0000000000014924	cmpl	$0x1000000, %eax
0000000000014929	jne	0x148b8
000000000001492b	movzbl	-0x39(%rbp), %eax
000000000001492f	shll	$0x18, %eax
0000000000014932	cmpl	$0x1000000, %eax
0000000000014937	jne	0x148b8
000000000001493d	movl	-0x48(%rbp), %eax
0000000000014940	cmpl	-0x2c(%rbp), %eax
0000000000014943	jne	0x148b8
0000000000014949	movl	-0x38(%rbp), %ecx
000000000001494c	cmpl	-0x28(%rbp), %ecx
000000000001494f	jne	0x148b8
0000000000014955	jmp	0x148f5
_host_security_create_task_token:
0000000000014957	pushq	%rbp
0000000000014958	movq	%rsp, %rbp
000000000001495b	pushq	%rbx
000000000001495c	subq	$0x88, %rsp
0000000000014963	movl	0x30(%rbp), %eax
0000000000014966	leaq	-0x88(%rbp), %rbx
000000000001496d	movl	$0x3, 0x18(%rbx)
0000000000014974	movl	%esi, 0x1c(%rbx)
0000000000014977	movl	$0x130000, %esi
000000000001497c	movl	%esi, 0x24(%rbx)
000000000001497f	movl	%ecx, 0x28(%rbx)
0000000000014982	movl	%esi, 0x30(%rbx)
0000000000014985	movq	%r8, 0x34(%rbx)
0000000000014989	movl	%r9d, 0x40(%rbx)
000000000001498d	movl	$0x2130000, 0x3c(%rbx)
0000000000014994	leaq	_NDR_record(%rip), %rcx
000000000001499b	movq	(%rcx), %rcx
000000000001499e	movq	%rcx, 0x44(%rbx)
00000000000149a2	movq	%rdx, 0x4c(%rbx)
00000000000149a6	movq	0x10(%rbp), %rcx
00000000000149aa	movq	0x18(%rbp), %rdx
00000000000149ae	movq	%rcx, 0x54(%rbx)
00000000000149b2	movq	%rdx, 0x5c(%rbx)
00000000000149b6	movq	0x20(%rbp), %rcx
00000000000149ba	movq	%rcx, 0x64(%rbx)
00000000000149be	movq	0x28(%rbp), %rcx
00000000000149c2	movq	%rcx, 0x6c(%rbx)
00000000000149c6	movl	%r9d, 0x74(%rbx)
00000000000149ca	movl	%eax, 0x78(%rbx)
00000000000149cd	movl	$0x80001513, (%rbx)
00000000000149d3	movl	%edi, 0x8(%rbx)
00000000000149d6	callq	_mig_get_reply_port
00000000000149db	movl	%eax, 0xc(%rbx)
00000000000149de	movabsq	$0x25800000000, %rcx
00000000000149e8	movq	%rcx, 0x10(%rbx)
00000000000149ec	movl	$0x0, (%rsp)
00000000000149f3	movq	%rbx, %rdi
00000000000149f6	movl	$0x3, %esi
00000000000149fb	movl	$0x7c, %edx
0000000000014a00	movl	$0x30, %ecx
0000000000014a05	movl	%eax, %r8d
0000000000014a08	xorl	%r9d, %r9d
0000000000014a0b	callq	_mach_msg
0000000000014a10	movl	%eax, %ebx
0000000000014a12	leal	-0x10000002(%rbx), %eax
0000000000014a18	cmpl	$0xe, %eax
0000000000014a1b	ja	0x14a31
0000000000014a1d	movl	$0x4003, %ecx
0000000000014a22	btl	%eax, %ecx
0000000000014a25	jae	0x14a31
0000000000014a27	movl	-0x7c(%rbp), %edi
0000000000014a2a	callq	_mig_put_reply_port
0000000000014a2f	jmp	0x14a88
0000000000014a31	testl	%ebx, %ebx
0000000000014a33	jne	0x14a66
0000000000014a35	movl	-0x74(%rbp), %eax
0000000000014a38	cmpl	$0x47, %eax
0000000000014a3b	je	0x14a70
0000000000014a3d	cmpl	$0x2bc, %eax
0000000000014a42	jne	0x14a77
0000000000014a44	movl	-0x88(%rbp), %eax
0000000000014a4a	movl	-0x84(%rbp), %ecx
0000000000014a50	movl	$0xfffffed4, %ebx
0000000000014a55	testl	%eax, %eax
0000000000014a57	js	0x14a94
0000000000014a59	cmpl	$0x24, %ecx
0000000000014a5c	jne	0x14a7c
0000000000014a5e	cmpl	$0x0, -0x68(%rbp)
0000000000014a62	jne	0x14a9f
0000000000014a64	jmp	0x14a7c
0000000000014a66	movl	-0x7c(%rbp), %edi
0000000000014a69	callq	_mig_dealloc_reply_port
0000000000014a6e	jmp	0x14a88
0000000000014a70	movl	$0xfffffecc, %ebx
0000000000014a75	jmp	0x14a7c
0000000000014a77	movl	$0xfffffed3, %ebx
0000000000014a7c	leaq	-0x88(%rbp), %rdi
0000000000014a83	callq	_mach_msg_destroy
0000000000014a88	movl	%ebx, %eax
0000000000014a8a	addq	$0x88, %rsp
0000000000014a91	popq	%rbx
0000000000014a92	popq	%rbp
0000000000014a93	retq
0000000000014a94	cmpl	$0x28, %ecx
0000000000014a97	jne	0x14a7c
0000000000014a99	cmpl	$0x1, -0x70(%rbp)
0000000000014a9d	jne	0x14a7c
0000000000014a9f	movl	$0xfffffed4, %ebx
0000000000014aa4	cmpl	$0x0, -0x80(%rbp)
0000000000014aa8	jne	0x14a7c
0000000000014aaa	testl	%eax, %eax
0000000000014aac	js	0x14ab7
0000000000014aae	movl	-0x68(%rbp), %ebx
0000000000014ab1	testl	%ebx, %ebx
0000000000014ab3	jne	0x14a7c
0000000000014ab5	jmp	0x14ac5
0000000000014ab7	movzwl	-0x62(%rbp), %eax
0000000000014abb	shll	$0x10, %eax
0000000000014abe	cmpl	$0x110000, %eax
0000000000014ac3	jne	0x14a7c
0000000000014ac5	movq	0x38(%rbp), %rax
0000000000014ac9	movl	-0x6c(%rbp), %ecx
0000000000014acc	movl	%ecx, (%rax)
0000000000014ace	xorl	%ebx, %ebx
0000000000014ad0	jmp	0x14a88
_host_security_set_task_token:
0000000000014ad2	pushq	%rbp
0000000000014ad3	movq	%rsp, %rbp
0000000000014ad6	pushq	%rbx
0000000000014ad7	subq	$0x78, %rsp
0000000000014adb	leaq	-0x70(%rbp), %rbx
0000000000014adf	movl	$0x2, 0x18(%rbx)
0000000000014ae6	movl	%esi, 0x1c(%rbx)
0000000000014ae9	movl	$0x130000, %eax
0000000000014aee	movl	%eax, 0x24(%rbx)
0000000000014af1	movl	%ecx, 0x28(%rbx)
0000000000014af4	movl	%eax, 0x30(%rbx)
0000000000014af7	leaq	_NDR_record(%rip), %rax
0000000000014afe	movq	(%rax), %rax
0000000000014b01	movq	%rax, 0x34(%rbx)
0000000000014b05	movq	%rdx, 0x3c(%rbx)
0000000000014b09	movq	0x10(%rbp), %rax
0000000000014b0d	movq	0x18(%rbp), %rcx
0000000000014b11	movq	%rax, 0x44(%rbx)
0000000000014b15	movq	%rcx, 0x4c(%rbx)
0000000000014b19	movq	0x20(%rbp), %rax
0000000000014b1d	movq	%rax, 0x54(%rbx)
0000000000014b21	movq	0x28(%rbp), %rax
0000000000014b25	movq	%rax, 0x5c(%rbx)
0000000000014b29	movl	$0x80001513, (%rbx)
0000000000014b2f	movl	%edi, 0x8(%rbx)
0000000000014b32	callq	_mig_get_reply_port
0000000000014b37	movl	%eax, 0xc(%rbx)
0000000000014b3a	movabsq	$0x25900000000, %rcx
0000000000014b44	movq	%rcx, 0x10(%rbx)
0000000000014b48	movl	$0x0, (%rsp)
0000000000014b4f	movq	%rbx, %rdi
0000000000014b52	movl	$0x3, %esi
0000000000014b57	movl	$0x64, %edx
0000000000014b5c	movl	$0x2c, %ecx
0000000000014b61	movl	%eax, %r8d
0000000000014b64	xorl	%r9d, %r9d
0000000000014b67	callq	_mach_msg
0000000000014b6c	movl	%eax, %ebx
0000000000014b6e	leal	-0x10000002(%rbx), %eax
0000000000014b74	cmpl	$0xe, %eax
0000000000014b77	ja	0x14b8d
0000000000014b79	movl	$0x4003, %ecx
0000000000014b7e	btl	%eax, %ecx
0000000000014b81	jae	0x14b8d
0000000000014b83	movl	-0x64(%rbp), %edi
0000000000014b86	callq	_mig_put_reply_port
0000000000014b8b	jmp	0x14be2
0000000000014b8d	testl	%ebx, %ebx
0000000000014b8f	jne	0x14bc3
0000000000014b91	movl	-0x5c(%rbp), %eax
0000000000014b94	cmpl	$0x47, %eax
0000000000014b97	je	0x14bcd
0000000000014b99	cmpl	$0x2bd, %eax
0000000000014b9e	jne	0x14bd4
0000000000014ba0	movl	$0xfffffed4, %ebx
0000000000014ba5	cmpl	$0x0, -0x70(%rbp)
0000000000014ba9	js	0x14bd9
0000000000014bab	cmpl	$0x24, -0x6c(%rbp)
0000000000014baf	jne	0x14bd9
0000000000014bb1	movl	-0x68(%rbp), %eax
0000000000014bb4	testl	%eax, %eax
0000000000014bb6	jne	0x14bd9
0000000000014bb8	movl	-0x50(%rbp), %ebx
0000000000014bbb	testl	%ebx, %ebx
0000000000014bbd	jne	0x14bd9
0000000000014bbf	xorl	%ebx, %ebx
0000000000014bc1	jmp	0x14be2
0000000000014bc3	movl	-0x64(%rbp), %edi
0000000000014bc6	callq	_mig_dealloc_reply_port
0000000000014bcb	jmp	0x14be2
0000000000014bcd	movl	$0xfffffecc, %ebx
0000000000014bd2	jmp	0x14bd9
0000000000014bd4	movl	$0xfffffed3, %ebx
0000000000014bd9	leaq	-0x70(%rbp), %rdi
0000000000014bdd	callq	_mach_msg_destroy
0000000000014be2	movl	%ebx, %eax
0000000000014be4	addq	$0x78, %rsp
0000000000014be8	popq	%rbx
0000000000014be9	popq	%rbp
0000000000014bea	retq
_lock_acquire:
0000000000014beb	pushq	%rbp
0000000000014bec	movq	%rsp, %rbp
0000000000014bef	pushq	%rbx
0000000000014bf0	subq	$0x38, %rsp
0000000000014bf4	leaq	_NDR_record(%rip), %rax
0000000000014bfb	movq	(%rax), %rax
0000000000014bfe	leaq	-0x38(%rbp), %rbx
0000000000014c02	movq	%rax, 0x18(%rbx)
0000000000014c06	movl	%esi, 0x20(%rbx)
0000000000014c09	movl	$0x1513, (%rbx)
0000000000014c0f	movl	%edi, 0x8(%rbx)
0000000000014c12	callq	_mig_get_reply_port
0000000000014c17	movl	%eax, 0xc(%rbx)
0000000000014c1a	movabsq	$0x96a2800000000, %rcx
0000000000014c24	movq	%rcx, 0x10(%rbx)
0000000000014c28	movl	$0x0, (%rsp)
0000000000014c2f	movq	%rbx, %rdi
0000000000014c32	movl	$0x3, %esi
0000000000014c37	movl	$0x24, %edx
0000000000014c3c	movl	$0x2c, %ecx
0000000000014c41	movl	%eax, %r8d
0000000000014c44	xorl	%r9d, %r9d
0000000000014c47	callq	_mach_msg
0000000000014c4c	movl	%eax, %ebx
0000000000014c4e	leal	-0x10000002(%rbx), %eax
0000000000014c54	cmpl	$0xe, %eax
0000000000014c57	ja	0x14c6d
0000000000014c59	movl	$0x4003, %ecx
0000000000014c5e	btl	%eax, %ecx
0000000000014c61	jae	0x14c6d
0000000000014c63	movl	-0x2c(%rbp), %edi
0000000000014c66	callq	_mig_put_reply_port
0000000000014c6b	jmp	0x14cc2
0000000000014c6d	testl	%ebx, %ebx
0000000000014c6f	jne	0x14ca3
0000000000014c71	movl	-0x24(%rbp), %eax
0000000000014c74	cmpl	$0x47, %eax
0000000000014c77	je	0x14cad
0000000000014c79	cmpl	$0x96a8c, %eax
0000000000014c7e	jne	0x14cb4
0000000000014c80	movl	$0xfffffed4, %ebx
0000000000014c85	cmpl	$0x0, -0x38(%rbp)
0000000000014c89	js	0x14cb9
0000000000014c8b	cmpl	$0x24, -0x34(%rbp)
0000000000014c8f	jne	0x14cb9
0000000000014c91	movl	-0x30(%rbp), %eax
0000000000014c94	testl	%eax, %eax
0000000000014c96	jne	0x14cb9
0000000000014c98	movl	-0x18(%rbp), %ebx
0000000000014c9b	testl	%ebx, %ebx
0000000000014c9d	jne	0x14cb9
0000000000014c9f	xorl	%ebx, %ebx
0000000000014ca1	jmp	0x14cc2
0000000000014ca3	movl	-0x2c(%rbp), %edi
0000000000014ca6	callq	_mig_dealloc_reply_port
0000000000014cab	jmp	0x14cc2
0000000000014cad	movl	$0xfffffecc, %ebx
0000000000014cb2	jmp	0x14cb9
0000000000014cb4	movl	$0xfffffed3, %ebx
0000000000014cb9	leaq	-0x38(%rbp), %rdi
0000000000014cbd	callq	_mach_msg_destroy
0000000000014cc2	movl	%ebx, %eax
0000000000014cc4	addq	$0x38, %rsp
0000000000014cc8	popq	%rbx
0000000000014cc9	popq	%rbp
0000000000014cca	retq
_lock_release:
0000000000014ccb	pushq	%rbp
0000000000014ccc	movq	%rsp, %rbp
0000000000014ccf	pushq	%rbx
0000000000014cd0	subq	$0x38, %rsp
0000000000014cd4	leaq	_NDR_record(%rip), %rax
0000000000014cdb	movq	(%rax), %rax
0000000000014cde	leaq	-0x38(%rbp), %rbx
0000000000014ce2	movq	%rax, 0x18(%rbx)
0000000000014ce6	movl	%esi, 0x20(%rbx)
0000000000014ce9	movl	$0x1513, (%rbx)
0000000000014cef	movl	%edi, 0x8(%rbx)
0000000000014cf2	callq	_mig_get_reply_port
0000000000014cf7	movl	%eax, 0xc(%rbx)
0000000000014cfa	movabsq	$0x96a2900000000, %rcx
0000000000014d04	movq	%rcx, 0x10(%rbx)
0000000000014d08	movl	$0x0, (%rsp)
0000000000014d0f	movq	%rbx, %rdi
0000000000014d12	movl	$0x3, %esi
0000000000014d17	movl	$0x24, %edx
0000000000014d1c	movl	$0x2c, %ecx
0000000000014d21	movl	%eax, %r8d
0000000000014d24	xorl	%r9d, %r9d
0000000000014d27	callq	_mach_msg
0000000000014d2c	movl	%eax, %ebx
0000000000014d2e	leal	-0x10000002(%rbx), %eax
0000000000014d34	cmpl	$0xe, %eax
0000000000014d37	ja	0x14d4d
0000000000014d39	movl	$0x4003, %ecx
0000000000014d3e	btl	%eax, %ecx
0000000000014d41	jae	0x14d4d
0000000000014d43	movl	-0x2c(%rbp), %edi
0000000000014d46	callq	_mig_put_reply_port
0000000000014d4b	jmp	0x14da2
0000000000014d4d	testl	%ebx, %ebx
0000000000014d4f	jne	0x14d83
0000000000014d51	movl	-0x24(%rbp), %eax
0000000000014d54	cmpl	$0x47, %eax
0000000000014d57	je	0x14d8d
0000000000014d59	cmpl	$0x96a8d, %eax
0000000000014d5e	jne	0x14d94
0000000000014d60	movl	$0xfffffed4, %ebx
0000000000014d65	cmpl	$0x0, -0x38(%rbp)
0000000000014d69	js	0x14d99
0000000000014d6b	cmpl	$0x24, -0x34(%rbp)
0000000000014d6f	jne	0x14d99
0000000000014d71	movl	-0x30(%rbp), %eax
0000000000014d74	testl	%eax, %eax
0000000000014d76	jne	0x14d99
0000000000014d78	movl	-0x18(%rbp), %ebx
0000000000014d7b	testl	%ebx, %ebx
0000000000014d7d	jne	0x14d99
0000000000014d7f	xorl	%ebx, %ebx
0000000000014d81	jmp	0x14da2
0000000000014d83	movl	-0x2c(%rbp), %edi
0000000000014d86	callq	_mig_dealloc_reply_port
0000000000014d8b	jmp	0x14da2
0000000000014d8d	movl	$0xfffffecc, %ebx
0000000000014d92	jmp	0x14d99
0000000000014d94	movl	$0xfffffed3, %ebx
0000000000014d99	leaq	-0x38(%rbp), %rdi
0000000000014d9d	callq	_mach_msg_destroy
0000000000014da2	movl	%ebx, %eax
0000000000014da4	addq	$0x38, %rsp
0000000000014da8	popq	%rbx
0000000000014da9	popq	%rbp
0000000000014daa	retq
_lock_try:
0000000000014dab	pushq	%rbp
0000000000014dac	movq	%rsp, %rbp
0000000000014daf	pushq	%rbx
0000000000014db0	subq	$0x38, %rsp
0000000000014db4	leaq	_NDR_record(%rip), %rax
0000000000014dbb	movq	(%rax), %rax
0000000000014dbe	leaq	-0x38(%rbp), %rbx
0000000000014dc2	movq	%rax, 0x18(%rbx)
0000000000014dc6	movl	%esi, 0x20(%rbx)
0000000000014dc9	movl	$0x1513, (%rbx)
0000000000014dcf	movl	%edi, 0x8(%rbx)
0000000000014dd2	callq	_mig_get_reply_port
0000000000014dd7	movl	%eax, 0xc(%rbx)
0000000000014dda	movabsq	$0x96a2a00000000, %rcx
0000000000014de4	movq	%rcx, 0x10(%rbx)
0000000000014de8	movl	$0x0, (%rsp)
0000000000014def	movq	%rbx, %rdi
0000000000014df2	movl	$0x3, %esi
0000000000014df7	movl	$0x24, %edx
0000000000014dfc	movl	$0x2c, %ecx
0000000000014e01	movl	%eax, %r8d
0000000000014e04	xorl	%r9d, %r9d
0000000000014e07	callq	_mach_msg
0000000000014e0c	movl	%eax, %ebx
0000000000014e0e	leal	-0x10000002(%rbx), %eax
0000000000014e14	cmpl	$0xe, %eax
0000000000014e17	ja	0x14e2d
0000000000014e19	movl	$0x4003, %ecx
0000000000014e1e	btl	%eax, %ecx
0000000000014e21	jae	0x14e2d
0000000000014e23	movl	-0x2c(%rbp), %edi
0000000000014e26	callq	_mig_put_reply_port
0000000000014e2b	jmp	0x14e82
0000000000014e2d	testl	%ebx, %ebx
0000000000014e2f	jne	0x14e63
0000000000014e31	movl	-0x24(%rbp), %eax
0000000000014e34	cmpl	$0x47, %eax
0000000000014e37	je	0x14e6d
0000000000014e39	cmpl	$0x96a8e, %eax
0000000000014e3e	jne	0x14e74
0000000000014e40	movl	$0xfffffed4, %ebx
0000000000014e45	cmpl	$0x0, -0x38(%rbp)
0000000000014e49	js	0x14e79
0000000000014e4b	cmpl	$0x24, -0x34(%rbp)
0000000000014e4f	jne	0x14e79
0000000000014e51	movl	-0x30(%rbp), %eax
0000000000014e54	testl	%eax, %eax
0000000000014e56	jne	0x14e79
0000000000014e58	movl	-0x18(%rbp), %ebx
0000000000014e5b	testl	%ebx, %ebx
0000000000014e5d	jne	0x14e79
0000000000014e5f	xorl	%ebx, %ebx
0000000000014e61	jmp	0x14e82
0000000000014e63	movl	-0x2c(%rbp), %edi
0000000000014e66	callq	_mig_dealloc_reply_port
0000000000014e6b	jmp	0x14e82
0000000000014e6d	movl	$0xfffffecc, %ebx
0000000000014e72	jmp	0x14e79
0000000000014e74	movl	$0xfffffed3, %ebx
0000000000014e79	leaq	-0x38(%rbp), %rdi
0000000000014e7d	callq	_mach_msg_destroy
0000000000014e82	movl	%ebx, %eax
0000000000014e84	addq	$0x38, %rsp
0000000000014e88	popq	%rbx
0000000000014e89	popq	%rbp
0000000000014e8a	retq
_lock_make_stable:
0000000000014e8b	pushq	%rbp
0000000000014e8c	movq	%rsp, %rbp
0000000000014e8f	pushq	%rbx
0000000000014e90	subq	$0x38, %rsp
0000000000014e94	leaq	_NDR_record(%rip), %rax
0000000000014e9b	movq	(%rax), %rax
0000000000014e9e	leaq	-0x38(%rbp), %rbx
0000000000014ea2	movq	%rax, 0x18(%rbx)
0000000000014ea6	movl	%esi, 0x20(%rbx)
0000000000014ea9	movl	$0x1513, (%rbx)
0000000000014eaf	movl	%edi, 0x8(%rbx)
0000000000014eb2	callq	_mig_get_reply_port
0000000000014eb7	movl	%eax, 0xc(%rbx)
0000000000014eba	movabsq	$0x96a2b00000000, %rcx
0000000000014ec4	movq	%rcx, 0x10(%rbx)
0000000000014ec8	movl	$0x0, (%rsp)
0000000000014ecf	movq	%rbx, %rdi
0000000000014ed2	movl	$0x3, %esi
0000000000014ed7	movl	$0x24, %edx
0000000000014edc	movl	$0x2c, %ecx
0000000000014ee1	movl	%eax, %r8d
0000000000014ee4	xorl	%r9d, %r9d
0000000000014ee7	callq	_mach_msg
0000000000014eec	movl	%eax, %ebx
0000000000014eee	leal	-0x10000002(%rbx), %eax
0000000000014ef4	cmpl	$0xe, %eax
0000000000014ef7	ja	0x14f0d
0000000000014ef9	movl	$0x4003, %ecx
0000000000014efe	btl	%eax, %ecx
0000000000014f01	jae	0x14f0d
0000000000014f03	movl	-0x2c(%rbp), %edi
0000000000014f06	callq	_mig_put_reply_port
0000000000014f0b	jmp	0x14f62
0000000000014f0d	testl	%ebx, %ebx
0000000000014f0f	jne	0x14f43
0000000000014f11	movl	-0x24(%rbp), %eax
0000000000014f14	cmpl	$0x47, %eax
0000000000014f17	je	0x14f4d
0000000000014f19	cmpl	$0x96a8f, %eax
0000000000014f1e	jne	0x14f54
0000000000014f20	movl	$0xfffffed4, %ebx
0000000000014f25	cmpl	$0x0, -0x38(%rbp)
0000000000014f29	js	0x14f59
0000000000014f2b	cmpl	$0x24, -0x34(%rbp)
0000000000014f2f	jne	0x14f59
0000000000014f31	movl	-0x30(%rbp), %eax
0000000000014f34	testl	%eax, %eax
0000000000014f36	jne	0x14f59
0000000000014f38	movl	-0x18(%rbp), %ebx
0000000000014f3b	testl	%ebx, %ebx
0000000000014f3d	jne	0x14f59
0000000000014f3f	xorl	%ebx, %ebx
0000000000014f41	jmp	0x14f62
0000000000014f43	movl	-0x2c(%rbp), %edi
0000000000014f46	callq	_mig_dealloc_reply_port
0000000000014f4b	jmp	0x14f62
0000000000014f4d	movl	$0xfffffecc, %ebx
0000000000014f52	jmp	0x14f59
0000000000014f54	movl	$0xfffffed3, %ebx
0000000000014f59	leaq	-0x38(%rbp), %rdi
0000000000014f5d	callq	_mach_msg_destroy
0000000000014f62	movl	%ebx, %eax
0000000000014f64	addq	$0x38, %rsp
0000000000014f68	popq	%rbx
0000000000014f69	popq	%rbp
0000000000014f6a	retq
_lock_handoff:
0000000000014f6b	pushq	%rbp
0000000000014f6c	movq	%rsp, %rbp
0000000000014f6f	pushq	%rbx
0000000000014f70	subq	$0x38, %rsp
0000000000014f74	leaq	_NDR_record(%rip), %rax
0000000000014f7b	movq	(%rax), %rax
0000000000014f7e	leaq	-0x38(%rbp), %rbx
0000000000014f82	movq	%rax, 0x18(%rbx)
0000000000014f86	movl	%esi, 0x20(%rbx)
0000000000014f89	movl	$0x1513, (%rbx)
0000000000014f8f	movl	%edi, 0x8(%rbx)
0000000000014f92	callq	_mig_get_reply_port
0000000000014f97	movl	%eax, 0xc(%rbx)
0000000000014f9a	movabsq	$0x96a2c00000000, %rcx
0000000000014fa4	movq	%rcx, 0x10(%rbx)
0000000000014fa8	movl	$0x0, (%rsp)
0000000000014faf	movq	%rbx, %rdi
0000000000014fb2	movl	$0x3, %esi
0000000000014fb7	movl	$0x24, %edx
0000000000014fbc	movl	$0x2c, %ecx
0000000000014fc1	movl	%eax, %r8d
0000000000014fc4	xorl	%r9d, %r9d
0000000000014fc7	callq	_mach_msg
0000000000014fcc	movl	%eax, %ebx
0000000000014fce	leal	-0x10000002(%rbx), %eax
0000000000014fd4	cmpl	$0xe, %eax
0000000000014fd7	ja	0x14fed
0000000000014fd9	movl	$0x4003, %ecx
0000000000014fde	btl	%eax, %ecx
0000000000014fe1	jae	0x14fed
0000000000014fe3	movl	-0x2c(%rbp), %edi
0000000000014fe6	callq	_mig_put_reply_port
0000000000014feb	jmp	0x15042
0000000000014fed	testl	%ebx, %ebx
0000000000014fef	jne	0x15023
0000000000014ff1	movl	-0x24(%rbp), %eax
0000000000014ff4	cmpl	$0x47, %eax
0000000000014ff7	je	0x1502d
0000000000014ff9	cmpl	$0x96a90, %eax
0000000000014ffe	jne	0x15034
0000000000015000	movl	$0xfffffed4, %ebx
0000000000015005	cmpl	$0x0, -0x38(%rbp)
0000000000015009	js	0x15039
000000000001500b	cmpl	$0x24, -0x34(%rbp)
000000000001500f	jne	0x15039
0000000000015011	movl	-0x30(%rbp), %eax
0000000000015014	testl	%eax, %eax
0000000000015016	jne	0x15039
0000000000015018	movl	-0x18(%rbp), %ebx
000000000001501b	testl	%ebx, %ebx
000000000001501d	jne	0x15039
000000000001501f	xorl	%ebx, %ebx
0000000000015021	jmp	0x15042
0000000000015023	movl	-0x2c(%rbp), %edi
0000000000015026	callq	_mig_dealloc_reply_port
000000000001502b	jmp	0x15042
000000000001502d	movl	$0xfffffecc, %ebx
0000000000015032	jmp	0x15039
0000000000015034	movl	$0xfffffed3, %ebx
0000000000015039	leaq	-0x38(%rbp), %rdi
000000000001503d	callq	_mach_msg_destroy
0000000000015042	movl	%ebx, %eax
0000000000015044	addq	$0x38, %rsp
0000000000015048	popq	%rbx
0000000000015049	popq	%rbp
000000000001504a	retq
_lock_handoff_accept:
000000000001504b	pushq	%rbp
000000000001504c	movq	%rsp, %rbp
000000000001504f	pushq	%rbx
0000000000015050	subq	$0x38, %rsp
0000000000015054	leaq	_NDR_record(%rip), %rax
000000000001505b	movq	(%rax), %rax
000000000001505e	leaq	-0x38(%rbp), %rbx
0000000000015062	movq	%rax, 0x18(%rbx)
0000000000015066	movl	%esi, 0x20(%rbx)
0000000000015069	movl	$0x1513, (%rbx)
000000000001506f	movl	%edi, 0x8(%rbx)
0000000000015072	callq	_mig_get_reply_port
0000000000015077	movl	%eax, 0xc(%rbx)
000000000001507a	movabsq	$0x96a2d00000000, %rcx
0000000000015084	movq	%rcx, 0x10(%rbx)
0000000000015088	movl	$0x0, (%rsp)
000000000001508f	movq	%rbx, %rdi
0000000000015092	movl	$0x3, %esi
0000000000015097	movl	$0x24, %edx
000000000001509c	movl	$0x2c, %ecx
00000000000150a1	movl	%eax, %r8d
00000000000150a4	xorl	%r9d, %r9d
00000000000150a7	callq	_mach_msg
00000000000150ac	movl	%eax, %ebx
00000000000150ae	leal	-0x10000002(%rbx), %eax
00000000000150b4	cmpl	$0xe, %eax
00000000000150b7	ja	0x150cd
00000000000150b9	movl	$0x4003, %ecx
00000000000150be	btl	%eax, %ecx
00000000000150c1	jae	0x150cd
00000000000150c3	movl	-0x2c(%rbp), %edi
00000000000150c6	callq	_mig_put_reply_port
00000000000150cb	jmp	0x15122
00000000000150cd	testl	%ebx, %ebx
00000000000150cf	jne	0x15103
00000000000150d1	movl	-0x24(%rbp), %eax
00000000000150d4	cmpl	$0x47, %eax
00000000000150d7	je	0x1510d
00000000000150d9	cmpl	$0x96a91, %eax
00000000000150de	jne	0x15114
00000000000150e0	movl	$0xfffffed4, %ebx
00000000000150e5	cmpl	$0x0, -0x38(%rbp)
00000000000150e9	js	0x15119
00000000000150eb	cmpl	$0x24, -0x34(%rbp)
00000000000150ef	jne	0x15119
00000000000150f1	movl	-0x30(%rbp), %eax
00000000000150f4	testl	%eax, %eax
00000000000150f6	jne	0x15119
00000000000150f8	movl	-0x18(%rbp), %ebx
00000000000150fb	testl	%ebx, %ebx
00000000000150fd	jne	0x15119
00000000000150ff	xorl	%ebx, %ebx
0000000000015101	jmp	0x15122
0000000000015103	movl	-0x2c(%rbp), %edi
0000000000015106	callq	_mig_dealloc_reply_port
000000000001510b	jmp	0x15122
000000000001510d	movl	$0xfffffecc, %ebx
0000000000015112	jmp	0x15119
0000000000015114	movl	$0xfffffed3, %ebx
0000000000015119	leaq	-0x38(%rbp), %rdi
000000000001511d	callq	_mach_msg_destroy
0000000000015122	movl	%ebx, %eax
0000000000015124	addq	$0x38, %rsp
0000000000015128	popq	%rbx
0000000000015129	popq	%rbp
000000000001512a	retq
_host_kernel_version:
000000000001512b	pushq	%rbp
000000000001512c	movq	%rsp, %rbp
000000000001512f	pushq	%r14
0000000000015131	pushq	%rbx
0000000000015132	subq	$0x240, %rsp
0000000000015139	movq	%rsi, %r14
000000000001513c	leaq	-0x248(%rbp), %rbx
0000000000015143	movl	$0x1513, (%rbx)
0000000000015149	movl	%edi, 0x8(%rbx)
000000000001514c	callq	_mig_get_reply_port
0000000000015151	movl	%eax, 0xc(%rbx)
0000000000015154	movabsq	$0xc900000000, %rcx
000000000001515e	movq	%rcx, 0x10(%rbx)
0000000000015162	movl	$0x0, (%rsp)
0000000000015169	movq	%rbx, %rdi
000000000001516c	movl	$0x3, %esi
0000000000015171	movl	$0x18, %edx
0000000000015176	movl	$0x234, %ecx
000000000001517b	movl	%eax, %r8d
000000000001517e	xorl	%r9d, %r9d
0000000000015181	callq	_mach_msg
0000000000015186	movl	%eax, %ebx
0000000000015188	leal	-0x10000002(%rbx), %eax
000000000001518e	cmpl	$0xe, %eax
0000000000015191	ja	0x151aa
0000000000015193	movl	$0x4003, %ecx
0000000000015198	btl	%eax, %ecx
000000000001519b	jae	0x151aa
000000000001519d	movl	-0x23c(%rbp), %edi
00000000000151a3	callq	_mig_put_reply_port
00000000000151a8	jmp	0x1521d
00000000000151aa	testl	%ebx, %ebx
00000000000151ac	jne	0x151f8
00000000000151ae	movl	-0x234(%rbp), %eax
00000000000151b4	cmpl	$0x47, %eax
00000000000151b7	je	0x15205
00000000000151b9	cmpl	$0x12d, %eax
00000000000151be	jne	0x1520c
00000000000151c0	cmpl	$0x0, -0x248(%rbp)
00000000000151c7	js	0x151f1
00000000000151c9	movl	-0x244(%rbp), %eax
00000000000151cf	leal	-0x2c(%rax), %ecx
00000000000151d2	cmpl	$0x201, %ecx
00000000000151d8	jb	0x151e8
00000000000151da	cmpl	$0x24, %eax
00000000000151dd	jne	0x151f1
00000000000151df	cmpl	$0x0, -0x228(%rbp)
00000000000151e6	je	0x151f1
00000000000151e8	cmpl	$0x0, -0x240(%rbp)
00000000000151ef	je	0x1522b
00000000000151f1	movl	$0xfffffed4, %ebx
00000000000151f6	jmp	0x15211
00000000000151f8	movl	-0x23c(%rbp), %edi
00000000000151fe	callq	_mig_dealloc_reply_port
0000000000015203	jmp	0x1521d
0000000000015205	movl	$0xfffffecc, %ebx
000000000001520a	jmp	0x15211
000000000001520c	movl	$0xfffffed3, %ebx
0000000000015211	leaq	-0x248(%rbp), %rdi
0000000000015218	callq	_mach_msg_destroy
000000000001521d	movl	%ebx, %eax
000000000001521f	addq	$0x240, %rsp
0000000000015226	popq	%rbx
0000000000015227	popq	%r14
0000000000015229	popq	%rbp
000000000001522a	retq
000000000001522b	movl	-0x228(%rbp), %ebx
0000000000015231	testl	%ebx, %ebx
0000000000015233	jne	0x15211
0000000000015235	movl	-0x220(%rbp), %edx
000000000001523b	cmpl	$0x200, %edx
0000000000015241	ja	0x151f1
0000000000015243	cmpl	%edx, %ecx
0000000000015245	jb	0x151f1
0000000000015247	addl	$0x2f, %edx
000000000001524a	andl	$-0x4, %edx
000000000001524d	movl	$0xfffffed4, %ebx
0000000000015252	cmpl	%edx, %eax
0000000000015254	jne	0x15211
0000000000015256	leaq	-0x21c(%rbp), %rsi
000000000001525d	movq	%r14, %rdi
0000000000015260	movl	$0x200, %edx
0000000000015265	callq	_mig_strncpy
000000000001526a	xorl	%ebx, %ebx
000000000001526c	jmp	0x1521d
__host_page_size:
000000000001526e	pushq	%rbp
000000000001526f	movq	%rsp, %rbp
0000000000015272	pushq	%r14
0000000000015274	pushq	%rbx
0000000000015275	subq	$0x40, %rsp
0000000000015279	movq	%rsi, %r14
000000000001527c	leaq	-0x48(%rbp), %rbx
0000000000015280	movl	$0x1513, (%rbx)
0000000000015286	movl	%edi, 0x8(%rbx)
0000000000015289	callq	_mig_get_reply_port
000000000001528e	movl	%eax, 0xc(%rbx)
0000000000015291	movabsq	$0xca00000000, %rcx
000000000001529b	movq	%rcx, 0x10(%rbx)
000000000001529f	movl	$0x0, (%rsp)
00000000000152a6	movq	%rbx, %rdi
00000000000152a9	movl	$0x3, %esi
00000000000152ae	movl	$0x18, %edx
00000000000152b3	movl	$0x34, %ecx
00000000000152b8	movl	%eax, %r8d
00000000000152bb	xorl	%r9d, %r9d
00000000000152be	callq	_mach_msg
00000000000152c3	movl	%eax, %ebx
00000000000152c5	leal	-0x10000002(%rbx), %eax
00000000000152cb	cmpl	$0xe, %eax
00000000000152ce	ja	0x152e4
00000000000152d0	movl	$0x4003, %ecx
00000000000152d5	btl	%eax, %ecx
00000000000152d8	jae	0x152e4
00000000000152da	movl	-0x3c(%rbp), %edi
00000000000152dd	callq	_mig_put_reply_port
00000000000152e2	jmp	0x1534c
00000000000152e4	testl	%ebx, %ebx
00000000000152e6	jne	0x1532d
00000000000152e8	movl	-0x34(%rbp), %eax
00000000000152eb	cmpl	$0x47, %eax
00000000000152ee	je	0x15337
00000000000152f0	cmpl	$0x12e, %eax
00000000000152f5	jne	0x1533e
00000000000152f7	movl	$0xfffffed4, %ebx
00000000000152fc	cmpl	$0x0, -0x48(%rbp)
0000000000015300	js	0x15343
0000000000015302	movl	-0x44(%rbp), %eax
0000000000015305	cmpl	$0x2c, %eax
0000000000015308	je	0x15315
000000000001530a	cmpl	$0x24, %eax
000000000001530d	jne	0x15343
000000000001530f	cmpl	$0x0, -0x28(%rbp)
0000000000015313	je	0x15343
0000000000015315	cmpl	$0x0, -0x40(%rbp)
0000000000015319	jne	0x15343
000000000001531b	movl	-0x28(%rbp), %ebx
000000000001531e	testl	%ebx, %ebx
0000000000015320	jne	0x15343
0000000000015322	movq	-0x24(%rbp), %rax
0000000000015326	movq	%rax, (%r14)
0000000000015329	xorl	%ebx, %ebx
000000000001532b	jmp	0x1534c
000000000001532d	movl	-0x3c(%rbp), %edi
0000000000015330	callq	_mig_dealloc_reply_port
0000000000015335	jmp	0x1534c
0000000000015337	movl	$0xfffffecc, %ebx
000000000001533c	jmp	0x15343
000000000001533e	movl	$0xfffffed3, %ebx
0000000000015343	leaq	-0x48(%rbp), %rdi
0000000000015347	callq	_mach_msg_destroy
000000000001534c	movl	%ebx, %eax
000000000001534e	addq	$0x40, %rsp
0000000000015352	popq	%rbx
0000000000015353	popq	%r14
0000000000015355	popq	%rbp
0000000000015356	retq
_mach_memory_object_memory_entry:
0000000000015357	pushq	%rbp
0000000000015358	movq	%rsp, %rbp
000000000001535b	pushq	%r14
000000000001535d	pushq	%rbx
000000000001535e	subq	$0x50, %rsp
0000000000015362	movq	%r9, %r14
0000000000015365	leaq	-0x50(%rbp), %rbx
0000000000015369	movl	$0x1, 0x18(%rbx)
0000000000015370	movl	%r8d, 0x1c(%rbx)
0000000000015374	movl	$0x130000, 0x24(%rbx)
000000000001537b	leaq	_NDR_record(%rip), %rax
0000000000015382	movq	(%rax), %rax
0000000000015385	movq	%rax, 0x28(%rbx)
0000000000015389	movl	%esi, 0x30(%rbx)
000000000001538c	movq	%rdx, 0x34(%rbx)
0000000000015390	movl	%ecx, 0x3c(%rbx)
0000000000015393	movl	$0x80001513, (%rbx)
0000000000015399	movl	%edi, 0x8(%rbx)
000000000001539c	callq	_mig_get_reply_port
00000000000153a1	movl	%eax, 0xc(%rbx)
00000000000153a4	movabsq	$0xcb00000000, %rcx
00000000000153ae	movq	%rcx, 0x10(%rbx)
00000000000153b2	movl	$0x0, (%rsp)
00000000000153b9	movq	%rbx, %rdi
00000000000153bc	movl	$0x3, %esi
00000000000153c1	movl	$0x40, %edx
00000000000153c6	movl	$0x30, %ecx
00000000000153cb	movl	%eax, %r8d
00000000000153ce	xorl	%r9d, %r9d
00000000000153d1	callq	_mach_msg
00000000000153d6	movl	%eax, %ebx
00000000000153d8	leal	-0x10000002(%rbx), %eax
00000000000153de	cmpl	$0xe, %eax
00000000000153e1	ja	0x153f7
00000000000153e3	movl	$0x4003, %ecx
00000000000153e8	btl	%eax, %ecx
00000000000153eb	jae	0x153f7
00000000000153ed	movl	-0x44(%rbp), %edi
00000000000153f0	callq	_mig_put_reply_port
00000000000153f5	jmp	0x15445
00000000000153f7	testl	%ebx, %ebx
00000000000153f9	jne	0x15426
00000000000153fb	movl	-0x3c(%rbp), %eax
00000000000153fe	cmpl	$0x47, %eax
0000000000015401	je	0x15430
0000000000015403	cmpl	$0x12f, %eax
0000000000015408	jne	0x15437
000000000001540a	movl	-0x50(%rbp), %eax
000000000001540d	movl	-0x4c(%rbp), %ecx
0000000000015410	movl	$0xfffffed4, %ebx
0000000000015415	testl	%eax, %eax
0000000000015417	js	0x15450
0000000000015419	cmpl	$0x24, %ecx
000000000001541c	jne	0x1543c
000000000001541e	cmpl	$0x0, -0x30(%rbp)
0000000000015422	jne	0x1545b
0000000000015424	jmp	0x1543c
0000000000015426	movl	-0x44(%rbp), %edi
0000000000015429	callq	_mig_dealloc_reply_port
000000000001542e	jmp	0x15445
0000000000015430	movl	$0xfffffecc, %ebx
0000000000015435	jmp	0x1543c
0000000000015437	movl	$0xfffffed3, %ebx
000000000001543c	leaq	-0x50(%rbp), %rdi
0000000000015440	callq	_mach_msg_destroy
0000000000015445	movl	%ebx, %eax
0000000000015447	addq	$0x50, %rsp
000000000001544b	popq	%rbx
000000000001544c	popq	%r14
000000000001544e	popq	%rbp
000000000001544f	retq
0000000000015450	cmpl	$0x28, %ecx
0000000000015453	jne	0x1543c
0000000000015455	cmpl	$0x1, -0x38(%rbp)
0000000000015459	jne	0x1543c
000000000001545b	movl	$0xfffffed4, %ebx
0000000000015460	cmpl	$0x0, -0x48(%rbp)
0000000000015464	jne	0x1543c
0000000000015466	testl	%eax, %eax
0000000000015468	js	0x15473
000000000001546a	movl	-0x30(%rbp), %ebx
000000000001546d	testl	%ebx, %ebx
000000000001546f	jne	0x1543c
0000000000015471	jmp	0x15481
0000000000015473	movzwl	-0x2a(%rbp), %eax
0000000000015477	shll	$0x10, %eax
000000000001547a	cmpl	$0x110000, %eax
000000000001547f	jne	0x1543c
0000000000015481	movl	-0x34(%rbp), %eax
0000000000015484	movl	%eax, (%r14)
0000000000015487	xorl	%ebx, %ebx
0000000000015489	jmp	0x15445
_host_processor_info:
000000000001548b	pushq	%rbp
000000000001548c	movq	%rsp, %rbp
000000000001548f	pushq	%r15
0000000000015491	pushq	%r14
0000000000015493	pushq	%r12
0000000000015495	pushq	%rbx
0000000000015496	subq	$0x50, %rsp
000000000001549a	movq	%r8, %r14
000000000001549d	movq	%rcx, %r15
00000000000154a0	movq	%rdx, %r12
00000000000154a3	leaq	_NDR_record(%rip), %rax
00000000000154aa	movq	(%rax), %rax
00000000000154ad	leaq	-0x68(%rbp), %rbx
00000000000154b1	movq	%rax, 0x18(%rbx)
00000000000154b5	movl	%esi, 0x20(%rbx)
00000000000154b8	movl	$0x1513, (%rbx)
00000000000154be	movl	%edi, 0x8(%rbx)
00000000000154c1	callq	_mig_get_reply_port
00000000000154c6	movl	%eax, 0xc(%rbx)
00000000000154c9	movabsq	$0xcc00000000, %rcx
00000000000154d3	movq	%rcx, 0x10(%rbx)
00000000000154d7	movl	$0x0, (%rsp)
00000000000154de	movq	%rbx, %rdi
00000000000154e1	movl	$0x3, %esi
00000000000154e6	movl	$0x24, %edx
00000000000154eb	movl	$0x44, %ecx
00000000000154f0	movl	%eax, %r8d
00000000000154f3	xorl	%r9d, %r9d
00000000000154f6	callq	_mach_msg
00000000000154fb	movl	%eax, %ebx
00000000000154fd	leal	-0x10000002(%rbx), %eax
0000000000015503	cmpl	$0xe, %eax
0000000000015506	ja	0x1551c
0000000000015508	movl	$0x4003, %ecx
000000000001550d	btl	%eax, %ecx
0000000000015510	jae	0x1551c
0000000000015512	movl	-0x5c(%rbp), %edi
0000000000015515	callq	_mig_put_reply_port
000000000001551a	jmp	0x15583
000000000001551c	testl	%ebx, %ebx
000000000001551e	jne	0x1554c
0000000000015520	movl	-0x54(%rbp), %eax
0000000000015523	cmpl	$0x47, %eax
0000000000015526	je	0x15556
0000000000015528	cmpl	$0x130, %eax
000000000001552d	jne	0x1555d
000000000001552f	movl	-0x68(%rbp), %eax
0000000000015532	movl	-0x64(%rbp), %ecx
0000000000015535	movl	$0xfffffed4, %ebx
000000000001553a	testl	%eax, %eax
000000000001553c	js	0x15564
000000000001553e	cmpl	$0x24, %ecx
0000000000015541	jne	0x1557a
0000000000015543	movl	-0x48(%rbp), %ecx
0000000000015546	testl	%ecx, %ecx
0000000000015548	jne	0x1556f
000000000001554a	jmp	0x1557a
000000000001554c	movl	-0x5c(%rbp), %edi
000000000001554f	callq	_mig_dealloc_reply_port
0000000000015554	jmp	0x15583
0000000000015556	movl	$0xfffffecc, %ebx
000000000001555b	jmp	0x1557a
000000000001555d	movl	$0xfffffed3, %ebx
0000000000015562	jmp	0x1557a
0000000000015564	cmpl	$0x3c, %ecx
0000000000015567	jne	0x1557a
0000000000015569	cmpl	$0x1, -0x50(%rbp)
000000000001556d	jne	0x1557a
000000000001556f	movl	$0xfffffed4, %ebx
0000000000015574	cmpl	$0x0, -0x60(%rbp)
0000000000015578	je	0x15592
000000000001557a	leaq	-0x68(%rbp), %rdi
000000000001557e	callq	_mach_msg_destroy
0000000000015583	movl	%ebx, %eax
0000000000015585	addq	$0x50, %rsp
0000000000015589	popq	%rbx
000000000001558a	popq	%r12
000000000001558c	popq	%r14
000000000001558e	popq	%r15
0000000000015590	popq	%rbp
0000000000015591	retq
0000000000015592	testl	%eax, %eax
0000000000015594	js	0x155a2
0000000000015596	movl	-0x48(%rbp), %ebx
0000000000015599	testl	%ebx, %ebx
000000000001559b	jne	0x1557a
000000000001559d	movl	-0x30(%rbp), %eax
00000000000155a0	jmp	0x155bb
00000000000155a2	movzbl	-0x41(%rbp), %eax
00000000000155a6	shll	$0x18, %eax
00000000000155a9	cmpl	$0x1000000, %eax
00000000000155ae	jne	0x1557a
00000000000155b0	movl	-0x40(%rbp), %eax
00000000000155b3	shrl	$0x2, %eax
00000000000155b6	cmpl	-0x30(%rbp), %eax
00000000000155b9	jne	0x1557a
00000000000155bb	movl	-0x34(%rbp), %ecx
00000000000155be	movl	%ecx, (%r12)
00000000000155c2	movq	-0x4c(%rbp), %rcx
00000000000155c6	movq	%rcx, (%r15)
00000000000155c9	movl	%eax, (%r14)
00000000000155cc	xorl	%ebx, %ebx
00000000000155ce	jmp	0x15583
_kmod_get_info:
00000000000155d0	pushq	%rbp
00000000000155d1	movq	%rsp, %rbp
00000000000155d4	pushq	%r15
00000000000155d6	pushq	%r14
00000000000155d8	pushq	%rbx
00000000000155d9	subq	$0x48, %rsp
00000000000155dd	movq	%rdx, %r14
00000000000155e0	movq	%rsi, %r15
00000000000155e3	leaq	-0x58(%rbp), %rbx
00000000000155e7	movl	$0x1513, (%rbx)
00000000000155ed	movl	%edi, 0x8(%rbx)
00000000000155f0	callq	_mig_get_reply_port
00000000000155f5	movl	%eax, 0xc(%rbx)
00000000000155f8	movabsq	$0xcf00000000, %rcx
0000000000015602	movq	%rcx, 0x10(%rbx)
0000000000015606	movl	$0x0, (%rsp)
000000000001560d	movq	%rbx, %rdi
0000000000015610	movl	$0x3, %esi
0000000000015615	movl	$0x18, %edx
000000000001561a	movl	$0x40, %ecx
000000000001561f	movl	%eax, %r8d
0000000000015622	xorl	%r9d, %r9d
0000000000015625	callq	_mach_msg
000000000001562a	movl	%eax, %ebx
000000000001562c	leal	-0x10000002(%rbx), %eax
0000000000015632	cmpl	$0xe, %eax
0000000000015635	ja	0x1564b
0000000000015637	movl	$0x4003, %ecx
000000000001563c	btl	%eax, %ecx
000000000001563f	jae	0x1564b
0000000000015641	movl	-0x4c(%rbp), %edi
0000000000015644	callq	_mig_put_reply_port
0000000000015649	jmp	0x15699
000000000001564b	testl	%ebx, %ebx
000000000001564d	jne	0x1567a
000000000001564f	movl	-0x44(%rbp), %eax
0000000000015652	cmpl	$0x47, %eax
0000000000015655	je	0x15684
0000000000015657	cmpl	$0x133, %eax
000000000001565c	jne	0x1568b
000000000001565e	movl	-0x58(%rbp), %eax
0000000000015661	movl	-0x54(%rbp), %ecx
0000000000015664	movl	$0xfffffed4, %ebx
0000000000015669	testl	%eax, %eax
000000000001566b	js	0x156a6
000000000001566d	cmpl	$0x24, %ecx
0000000000015670	jne	0x15690
0000000000015672	cmpl	$0x0, -0x38(%rbp)
0000000000015676	jne	0x156b1
0000000000015678	jmp	0x15690
000000000001567a	movl	-0x4c(%rbp), %edi
000000000001567d	callq	_mig_dealloc_reply_port
0000000000015682	jmp	0x15699
0000000000015684	movl	$0xfffffecc, %ebx
0000000000015689	jmp	0x15690
000000000001568b	movl	$0xfffffed3, %ebx
0000000000015690	leaq	-0x58(%rbp), %rdi
0000000000015694	callq	_mach_msg_destroy
0000000000015699	movl	%ebx, %eax
000000000001569b	addq	$0x48, %rsp
000000000001569f	popq	%rbx
00000000000156a0	popq	%r14
00000000000156a2	popq	%r15
00000000000156a4	popq	%rbp
00000000000156a5	retq
00000000000156a6	cmpl	$0x38, %ecx
00000000000156a9	jne	0x15690
00000000000156ab	cmpl	$0x1, -0x40(%rbp)
00000000000156af	jne	0x15690
00000000000156b1	movl	$0xfffffed4, %ebx
00000000000156b6	cmpl	$0x0, -0x50(%rbp)
00000000000156ba	jne	0x15690
00000000000156bc	testl	%eax, %eax
00000000000156be	js	0x156cc
00000000000156c0	movl	-0x38(%rbp), %ebx
00000000000156c3	testl	%ebx, %ebx
00000000000156c5	jne	0x15690
00000000000156c7	movl	-0x24(%rbp), %eax
00000000000156ca	jmp	0x156e2
00000000000156cc	movzbl	-0x31(%rbp), %eax
00000000000156d0	shll	$0x18, %eax
00000000000156d3	cmpl	$0x1000000, %eax
00000000000156d8	jne	0x15690
00000000000156da	movl	-0x30(%rbp), %eax
00000000000156dd	cmpl	-0x24(%rbp), %eax
00000000000156e0	jne	0x15690
00000000000156e2	movq	-0x3c(%rbp), %rcx
00000000000156e6	movq	%rcx, (%r15)
00000000000156e9	movl	%eax, (%r14)
00000000000156ec	xorl	%ebx, %ebx
00000000000156ee	jmp	0x15699
_host_virtual_physical_table_info:
00000000000156f0	pushq	%rbp
00000000000156f1	movq	%rsp, %rbp
00000000000156f4	pushq	%r15
00000000000156f6	pushq	%r14
00000000000156f8	pushq	%rbx
00000000000156f9	subq	$0x48, %rsp
00000000000156fd	movq	%rdx, %r14
0000000000015700	movq	%rsi, %r15
0000000000015703	leaq	-0x58(%rbp), %rbx
0000000000015707	movl	$0x1513, (%rbx)
000000000001570d	movl	%edi, 0x8(%rbx)
0000000000015710	callq	_mig_get_reply_port
0000000000015715	movl	%eax, 0xc(%rbx)
0000000000015718	movabsq	$0xd100000000, %rcx
0000000000015722	movq	%rcx, 0x10(%rbx)
0000000000015726	movl	$0x0, (%rsp)
000000000001572d	movq	%rbx, %rdi
0000000000015730	movl	$0x3, %esi
0000000000015735	movl	$0x18, %edx
000000000001573a	movl	$0x40, %ecx
000000000001573f	movl	%eax, %r8d
0000000000015742	xorl	%r9d, %r9d
0000000000015745	callq	_mach_msg
000000000001574a	movl	%eax, %ebx
000000000001574c	leal	-0x10000002(%rbx), %eax
0000000000015752	cmpl	$0xe, %eax
0000000000015755	ja	0x1576b
0000000000015757	movl	$0x4003, %ecx
000000000001575c	btl	%eax, %ecx
000000000001575f	jae	0x1576b
0000000000015761	movl	-0x4c(%rbp), %edi
0000000000015764	callq	_mig_put_reply_port
0000000000015769	jmp	0x157b9
000000000001576b	testl	%ebx, %ebx
000000000001576d	jne	0x1579a
000000000001576f	movl	-0x44(%rbp), %eax
0000000000015772	cmpl	$0x47, %eax
0000000000015775	je	0x157a4
0000000000015777	cmpl	$0x135, %eax
000000000001577c	jne	0x157ab
000000000001577e	movl	-0x58(%rbp), %eax
0000000000015781	movl	-0x54(%rbp), %ecx
0000000000015784	movl	$0xfffffed4, %ebx
0000000000015789	testl	%eax, %eax
000000000001578b	js	0x157c6
000000000001578d	cmpl	$0x24, %ecx
0000000000015790	jne	0x157b0
0000000000015792	cmpl	$0x0, -0x38(%rbp)
0000000000015796	jne	0x157d1
0000000000015798	jmp	0x157b0
000000000001579a	movl	-0x4c(%rbp), %edi
000000000001579d	callq	_mig_dealloc_reply_port
00000000000157a2	jmp	0x157b9
00000000000157a4	movl	$0xfffffecc, %ebx
00000000000157a9	jmp	0x157b0
00000000000157ab	movl	$0xfffffed3, %ebx
00000000000157b0	leaq	-0x58(%rbp), %rdi
00000000000157b4	callq	_mach_msg_destroy
00000000000157b9	movl	%ebx, %eax
00000000000157bb	addq	$0x48, %rsp
00000000000157bf	popq	%rbx
00000000000157c0	popq	%r14
00000000000157c2	popq	%r15
00000000000157c4	popq	%rbp
00000000000157c5	retq
00000000000157c6	cmpl	$0x38, %ecx
00000000000157c9	jne	0x157b0
00000000000157cb	cmpl	$0x1, -0x40(%rbp)
00000000000157cf	jne	0x157b0
00000000000157d1	movl	$0xfffffed4, %ebx
00000000000157d6	cmpl	$0x0, -0x50(%rbp)
00000000000157da	jne	0x157b0
00000000000157dc	testl	%eax, %eax
00000000000157de	js	0x157ec
00000000000157e0	movl	-0x38(%rbp), %ebx
00000000000157e3	testl	%ebx, %ebx
00000000000157e5	jne	0x157b0
00000000000157e7	movl	-0x24(%rbp), %eax
00000000000157ea	jmp	0x15805
00000000000157ec	movzbl	-0x31(%rbp), %eax
00000000000157f0	shll	$0x18, %eax
00000000000157f3	cmpl	$0x1000000, %eax
00000000000157f8	jne	0x157b0
00000000000157fa	movl	-0x30(%rbp), %eax
00000000000157fd	shrl	$0x2, %eax
0000000000015800	cmpl	-0x24(%rbp), %eax
0000000000015803	jne	0x157b0
0000000000015805	movq	-0x3c(%rbp), %rcx
0000000000015809	movq	%rcx, (%r15)
000000000001580c	movl	%eax, (%r14)
000000000001580f	xorl	%ebx, %ebx
0000000000015811	jmp	0x157b9
_processor_set_default:
0000000000015813	pushq	%rbp
0000000000015814	movq	%rsp, %rbp
0000000000015817	pushq	%r14
0000000000015819	pushq	%rbx
000000000001581a	subq	$0x40, %rsp
000000000001581e	movq	%rsi, %r14
0000000000015821	leaq	-0x40(%rbp), %rbx
0000000000015825	movl	$0x1513, (%rbx)
000000000001582b	movl	%edi, 0x8(%rbx)
000000000001582e	callq	_mig_get_reply_port
0000000000015833	movl	%eax, 0xc(%rbx)
0000000000015836	movabsq	$0xd500000000, %rcx
0000000000015840	movq	%rcx, 0x10(%rbx)
0000000000015844	movl	$0x0, (%rsp)
000000000001584b	movq	%rbx, %rdi
000000000001584e	movl	$0x3, %esi
0000000000015853	movl	$0x18, %edx
0000000000015858	movl	$0x30, %ecx
000000000001585d	movl	%eax, %r8d
0000000000015860	xorl	%r9d, %r9d
0000000000015863	callq	_mach_msg
0000000000015868	movl	%eax, %ebx
000000000001586a	leal	-0x10000002(%rbx), %eax
0000000000015870	cmpl	$0xe, %eax
0000000000015873	ja	0x15889
0000000000015875	movl	$0x4003, %ecx
000000000001587a	btl	%eax, %ecx
000000000001587d	jae	0x15889
000000000001587f	movl	-0x34(%rbp), %edi
0000000000015882	callq	_mig_put_reply_port
0000000000015887	jmp	0x158d7
0000000000015889	testl	%ebx, %ebx
000000000001588b	jne	0x158b8
000000000001588d	movl	-0x2c(%rbp), %eax
0000000000015890	cmpl	$0x47, %eax
0000000000015893	je	0x158c2
0000000000015895	cmpl	$0x139, %eax
000000000001589a	jne	0x158c9
000000000001589c	movl	-0x40(%rbp), %eax
000000000001589f	movl	-0x3c(%rbp), %ecx
00000000000158a2	movl	$0xfffffed4, %ebx
00000000000158a7	testl	%eax, %eax
00000000000158a9	js	0x158e2
00000000000158ab	cmpl	$0x24, %ecx
00000000000158ae	jne	0x158ce
00000000000158b0	cmpl	$0x0, -0x20(%rbp)
00000000000158b4	jne	0x158ed
00000000000158b6	jmp	0x158ce
00000000000158b8	movl	-0x34(%rbp), %edi
00000000000158bb	callq	_mig_dealloc_reply_port
00000000000158c0	jmp	0x158d7
00000000000158c2	movl	$0xfffffecc, %ebx
00000000000158c7	jmp	0x158ce
00000000000158c9	movl	$0xfffffed3, %ebx
00000000000158ce	leaq	-0x40(%rbp), %rdi
00000000000158d2	callq	_mach_msg_destroy
00000000000158d7	movl	%ebx, %eax
00000000000158d9	addq	$0x40, %rsp
00000000000158dd	popq	%rbx
00000000000158de	popq	%r14
00000000000158e0	popq	%rbp
00000000000158e1	retq
00000000000158e2	cmpl	$0x28, %ecx
00000000000158e5	jne	0x158ce
00000000000158e7	cmpl	$0x1, -0x28(%rbp)
00000000000158eb	jne	0x158ce
00000000000158ed	movl	$0xfffffed4, %ebx
00000000000158f2	cmpl	$0x0, -0x38(%rbp)
00000000000158f6	jne	0x158ce
00000000000158f8	testl	%eax, %eax
00000000000158fa	js	0x15905
00000000000158fc	movl	-0x20(%rbp), %ebx
00000000000158ff	testl	%ebx, %ebx
0000000000015901	jne	0x158ce
0000000000015903	jmp	0x15913
0000000000015905	movzwl	-0x1a(%rbp), %eax
0000000000015909	shll	$0x10, %eax
000000000001590c	cmpl	$0x110000, %eax
0000000000015911	jne	0x158ce
0000000000015913	movl	-0x24(%rbp), %eax
0000000000015916	movl	%eax, (%r14)
0000000000015919	xorl	%ebx, %ebx
000000000001591b	jmp	0x158d7
_processor_set_create:
000000000001591d	pushq	%rbp
000000000001591e	movq	%rsp, %rbp
0000000000015921	pushq	%r15
0000000000015923	pushq	%r14
0000000000015925	pushq	%rbx
0000000000015926	subq	$0x48, %rsp
000000000001592a	movq	%rdx, %r14
000000000001592d	movq	%rsi, %r15
0000000000015930	leaq	-0x58(%rbp), %rbx
0000000000015934	movl	$0x1513, (%rbx)
000000000001593a	movl	%edi, 0x8(%rbx)
000000000001593d	callq	_mig_get_reply_port
0000000000015942	movl	%eax, 0xc(%rbx)
0000000000015945	movabsq	$0xd600000000, %rcx
000000000001594f	movq	%rcx, 0x10(%rbx)
0000000000015953	movl	$0x0, (%rsp)
000000000001595a	movq	%rbx, %rdi
000000000001595d	movl	$0x3, %esi
0000000000015962	movl	$0x18, %edx
0000000000015967	movl	$0x3c, %ecx
000000000001596c	movl	%eax, %r8d
000000000001596f	xorl	%r9d, %r9d
0000000000015972	callq	_mach_msg
0000000000015977	movl	%eax, %ebx
0000000000015979	leal	-0x10000002(%rbx), %eax
000000000001597f	cmpl	$0xe, %eax
0000000000015982	ja	0x15998
0000000000015984	movl	$0x4003, %ecx
0000000000015989	btl	%eax, %ecx
000000000001598c	jae	0x15998
000000000001598e	movl	-0x4c(%rbp), %edi
0000000000015991	callq	_mig_put_reply_port
0000000000015996	jmp	0x159e6
0000000000015998	testl	%ebx, %ebx
000000000001599a	jne	0x159c7
000000000001599c	movl	-0x44(%rbp), %eax
000000000001599f	cmpl	$0x47, %eax
00000000000159a2	je	0x159d1
00000000000159a4	cmpl	$0x13a, %eax
00000000000159a9	jne	0x159d8
00000000000159ab	movl	-0x58(%rbp), %eax
00000000000159ae	movl	-0x54(%rbp), %ecx
00000000000159b1	movl	$0xfffffed4, %ebx
00000000000159b6	testl	%eax, %eax
00000000000159b8	js	0x159f3
00000000000159ba	cmpl	$0x24, %ecx
00000000000159bd	jne	0x159dd
00000000000159bf	cmpl	$0x0, -0x38(%rbp)
00000000000159c3	jne	0x159fe
00000000000159c5	jmp	0x159dd
00000000000159c7	movl	-0x4c(%rbp), %edi
00000000000159ca	callq	_mig_dealloc_reply_port
00000000000159cf	jmp	0x159e6
00000000000159d1	movl	$0xfffffecc, %ebx
00000000000159d6	jmp	0x159dd
00000000000159d8	movl	$0xfffffed3, %ebx
00000000000159dd	leaq	-0x58(%rbp), %rdi
00000000000159e1	callq	_mach_msg_destroy
00000000000159e6	movl	%ebx, %eax
00000000000159e8	addq	$0x48, %rsp
00000000000159ec	popq	%rbx
00000000000159ed	popq	%r14
00000000000159ef	popq	%r15
00000000000159f1	popq	%rbp
00000000000159f2	retq
00000000000159f3	cmpl	$0x34, %ecx
00000000000159f6	jne	0x159dd
00000000000159f8	cmpl	$0x2, -0x40(%rbp)
00000000000159fc	jne	0x159dd
00000000000159fe	movl	$0xfffffed4, %ebx
0000000000015a03	cmpl	$0x0, -0x50(%rbp)
0000000000015a07	jne	0x159dd
0000000000015a09	testl	%eax, %eax
0000000000015a0b	js	0x15a16
0000000000015a0d	movl	-0x38(%rbp), %ebx
0000000000015a10	testl	%ebx, %ebx
0000000000015a12	jne	0x159dd
0000000000015a14	jmp	0x15a32
0000000000015a16	movzwl	-0x32(%rbp), %eax
0000000000015a1a	shll	$0x10, %eax
0000000000015a1d	cmpl	$0x110000, %eax
0000000000015a22	jne	0x159dd
0000000000015a24	movzwl	-0x26(%rbp), %eax
0000000000015a28	shll	$0x10, %eax
0000000000015a2b	cmpl	$0x110000, %eax
0000000000015a30	jne	0x159dd
0000000000015a32	movl	-0x3c(%rbp), %eax
0000000000015a35	movl	%eax, (%r15)
0000000000015a38	movl	-0x30(%rbp), %eax
0000000000015a3b	movl	%eax, (%r14)
0000000000015a3e	xorl	%ebx, %ebx
0000000000015a40	jmp	0x159e6
_mach_memory_object_memory_entry_64:
0000000000015a42	pushq	%rbp
0000000000015a43	movq	%rsp, %rbp
0000000000015a46	pushq	%r14
0000000000015a48	pushq	%rbx
0000000000015a49	subq	$0x50, %rsp
0000000000015a4d	movq	%r9, %r14
0000000000015a50	leaq	-0x50(%rbp), %rbx
0000000000015a54	movl	$0x1, 0x18(%rbx)
0000000000015a5b	movl	%r8d, 0x1c(%rbx)
0000000000015a5f	movl	$0x130000, 0x24(%rbx)
0000000000015a66	leaq	_NDR_record(%rip), %rax
0000000000015a6d	movq	(%rax), %rax
0000000000015a70	movq	%rax, 0x28(%rbx)
0000000000015a74	movl	%esi, 0x30(%rbx)
0000000000015a77	movq	%rdx, 0x34(%rbx)
0000000000015a7b	movl	%ecx, 0x3c(%rbx)
0000000000015a7e	movl	$0x80001513, (%rbx)
0000000000015a84	movl	%edi, 0x8(%rbx)
0000000000015a87	callq	_mig_get_reply_port
0000000000015a8c	movl	%eax, 0xc(%rbx)
0000000000015a8f	movabsq	$0xd700000000, %rcx
0000000000015a99	movq	%rcx, 0x10(%rbx)
0000000000015a9d	movl	$0x0, (%rsp)
0000000000015aa4	movq	%rbx, %rdi
0000000000015aa7	movl	$0x3, %esi
0000000000015aac	movl	$0x40, %edx
0000000000015ab1	movl	$0x30, %ecx
0000000000015ab6	movl	%eax, %r8d
0000000000015ab9	xorl	%r9d, %r9d
0000000000015abc	callq	_mach_msg
0000000000015ac1	movl	%eax, %ebx
0000000000015ac3	leal	-0x10000002(%rbx), %eax
0000000000015ac9	cmpl	$0xe, %eax
0000000000015acc	ja	0x15ae2
0000000000015ace	movl	$0x4003, %ecx
0000000000015ad3	btl	%eax, %ecx
0000000000015ad6	jae	0x15ae2
0000000000015ad8	movl	-0x44(%rbp), %edi
0000000000015adb	callq	_mig_put_reply_port
0000000000015ae0	jmp	0x15b30
0000000000015ae2	testl	%ebx, %ebx
0000000000015ae4	jne	0x15b11
0000000000015ae6	movl	-0x3c(%rbp), %eax
0000000000015ae9	cmpl	$0x47, %eax
0000000000015aec	je	0x15b1b
0000000000015aee	cmpl	$0x13b, %eax
0000000000015af3	jne	0x15b22
0000000000015af5	movl	-0x50(%rbp), %eax
0000000000015af8	movl	-0x4c(%rbp), %ecx
0000000000015afb	movl	$0xfffffed4, %ebx
0000000000015b00	testl	%eax, %eax
0000000000015b02	js	0x15b3b
0000000000015b04	cmpl	$0x24, %ecx
0000000000015b07	jne	0x15b27
0000000000015b09	cmpl	$0x0, -0x30(%rbp)
0000000000015b0d	jne	0x15b46
0000000000015b0f	jmp	0x15b27
0000000000015b11	movl	-0x44(%rbp), %edi
0000000000015b14	callq	_mig_dealloc_reply_port
0000000000015b19	jmp	0x15b30
0000000000015b1b	movl	$0xfffffecc, %ebx
0000000000015b20	jmp	0x15b27
0000000000015b22	movl	$0xfffffed3, %ebx
0000000000015b27	leaq	-0x50(%rbp), %rdi
0000000000015b2b	callq	_mach_msg_destroy
0000000000015b30	movl	%ebx, %eax
0000000000015b32	addq	$0x50, %rsp
0000000000015b36	popq	%rbx
0000000000015b37	popq	%r14
0000000000015b39	popq	%rbp
0000000000015b3a	retq
0000000000015b3b	cmpl	$0x28, %ecx
0000000000015b3e	jne	0x15b27
0000000000015b40	cmpl	$0x1, -0x38(%rbp)
0000000000015b44	jne	0x15b27
0000000000015b46	movl	$0xfffffed4, %ebx
0000000000015b4b	cmpl	$0x0, -0x48(%rbp)
0000000000015b4f	jne	0x15b27
0000000000015b51	testl	%eax, %eax
0000000000015b53	js	0x15b5e
0000000000015b55	movl	-0x30(%rbp), %ebx
0000000000015b58	testl	%ebx, %ebx
0000000000015b5a	jne	0x15b27
0000000000015b5c	jmp	0x15b6c
0000000000015b5e	movzwl	-0x2a(%rbp), %eax
0000000000015b62	shll	$0x10, %eax
0000000000015b65	cmpl	$0x110000, %eax
0000000000015b6a	jne	0x15b27
0000000000015b6c	movl	-0x34(%rbp), %eax
0000000000015b6f	movl	%eax, (%r14)
0000000000015b72	xorl	%ebx, %ebx
0000000000015b74	jmp	0x15b30
_host_lockgroup_info:
0000000000015b76	pushq	%rbp
0000000000015b77	movq	%rsp, %rbp
0000000000015b7a	pushq	%r15
0000000000015b7c	pushq	%r14
0000000000015b7e	pushq	%rbx
0000000000015b7f	subq	$0x48, %rsp
0000000000015b83	movq	%rdx, %r14
0000000000015b86	movq	%rsi, %r15
0000000000015b89	leaq	-0x58(%rbp), %rbx
0000000000015b8d	movl	$0x1513, (%rbx)
0000000000015b93	movl	%edi, 0x8(%rbx)
0000000000015b96	callq	_mig_get_reply_port
0000000000015b9b	movl	%eax, 0xc(%rbx)
0000000000015b9e	movabsq	$0xda00000000, %rcx
0000000000015ba8	movq	%rcx, 0x10(%rbx)
0000000000015bac	movl	$0x0, (%rsp)
0000000000015bb3	movq	%rbx, %rdi
0000000000015bb6	movl	$0x3, %esi
0000000000015bbb	movl	$0x18, %edx
0000000000015bc0	movl	$0x40, %ecx
0000000000015bc5	movl	%eax, %r8d
0000000000015bc8	xorl	%r9d, %r9d
0000000000015bcb	callq	_mach_msg
0000000000015bd0	movl	%eax, %ebx
0000000000015bd2	leal	-0x10000002(%rbx), %eax
0000000000015bd8	cmpl	$0xe, %eax
0000000000015bdb	ja	0x15bf1
0000000000015bdd	movl	$0x4003, %ecx
0000000000015be2	btl	%eax, %ecx
0000000000015be5	jae	0x15bf1
0000000000015be7	movl	-0x4c(%rbp), %edi
0000000000015bea	callq	_mig_put_reply_port
0000000000015bef	jmp	0x15c3f
0000000000015bf1	testl	%ebx, %ebx
0000000000015bf3	jne	0x15c20
0000000000015bf5	movl	-0x44(%rbp), %eax
0000000000015bf8	cmpl	$0x47, %eax
0000000000015bfb	je	0x15c2a
0000000000015bfd	cmpl	$0x13e, %eax
0000000000015c02	jne	0x15c31
0000000000015c04	movl	-0x58(%rbp), %eax
0000000000015c07	movl	-0x54(%rbp), %ecx
0000000000015c0a	movl	$0xfffffed4, %ebx
0000000000015c0f	testl	%eax, %eax
0000000000015c11	js	0x15c4c
0000000000015c13	cmpl	$0x24, %ecx
0000000000015c16	jne	0x15c36
0000000000015c18	cmpl	$0x0, -0x38(%rbp)
0000000000015c1c	jne	0x15c57
0000000000015c1e	jmp	0x15c36
0000000000015c20	movl	-0x4c(%rbp), %edi
0000000000015c23	callq	_mig_dealloc_reply_port
0000000000015c28	jmp	0x15c3f
0000000000015c2a	movl	$0xfffffecc, %ebx
0000000000015c2f	jmp	0x15c36
0000000000015c31	movl	$0xfffffed3, %ebx
0000000000015c36	leaq	-0x58(%rbp), %rdi
0000000000015c3a	callq	_mach_msg_destroy
0000000000015c3f	movl	%ebx, %eax
0000000000015c41	addq	$0x48, %rsp
0000000000015c45	popq	%rbx
0000000000015c46	popq	%r14
0000000000015c48	popq	%r15
0000000000015c4a	popq	%rbp
0000000000015c4b	retq
0000000000015c4c	cmpl	$0x38, %ecx
0000000000015c4f	jne	0x15c36
0000000000015c51	cmpl	$0x1, -0x40(%rbp)
0000000000015c55	jne	0x15c36
0000000000015c57	movl	$0xfffffed4, %ebx
0000000000015c5c	cmpl	$0x0, -0x50(%rbp)
0000000000015c60	jne	0x15c36
0000000000015c62	testl	%eax, %eax
0000000000015c64	js	0x15c72
0000000000015c66	movl	-0x38(%rbp), %ebx
0000000000015c69	testl	%ebx, %ebx
0000000000015c6b	jne	0x15c36
0000000000015c6d	movl	-0x24(%rbp), %eax
0000000000015c70	jmp	0x15c93
0000000000015c72	movzbl	-0x31(%rbp), %eax
0000000000015c76	shll	$0x18, %eax
0000000000015c79	cmpl	$0x1000000, %eax
0000000000015c7e	jne	0x15c36
0000000000015c80	movl	-0x30(%rbp), %eax
0000000000015c83	imulq	$0x3e0f83e1, %rax, %rax
0000000000015c8a	shrq	$0x26, %rax
0000000000015c8e	cmpl	-0x24(%rbp), %eax
0000000000015c91	jne	0x15c36
0000000000015c93	movq	-0x3c(%rbp), %rcx
0000000000015c97	movq	%rcx, (%r15)
0000000000015c9a	movl	%eax, (%r14)
0000000000015c9d	xorl	%ebx, %ebx
0000000000015c9f	jmp	0x15c3f
_mach_zone_info:
0000000000015ca1	pushq	%rbp
0000000000015ca2	movq	%rsp, %rbp
0000000000015ca5	pushq	%r15
0000000000015ca7	pushq	%r14
0000000000015ca9	pushq	%r13
0000000000015cab	pushq	%r12
0000000000015cad	pushq	%rbx
0000000000015cae	subq	$0x68, %rsp
0000000000015cb2	movq	%r8, %r14
0000000000015cb5	movq	%rcx, %r15
0000000000015cb8	movq	%rdx, %r12
0000000000015cbb	movq	%rsi, %r13
0000000000015cbe	leaq	-0x80(%rbp), %rbx
0000000000015cc2	movl	$0x1513, (%rbx)
0000000000015cc8	movl	%edi, 0x8(%rbx)
0000000000015ccb	callq	_mig_get_reply_port
0000000000015cd0	movl	%eax, 0xc(%rbx)
0000000000015cd3	movabsq	$0xdc00000000, %rcx
0000000000015cdd	movq	%rcx, 0x10(%rbx)
0000000000015ce1	movl	$0x0, (%rsp)
0000000000015ce8	movq	%rbx, %rdi
0000000000015ceb	movl	$0x3, %esi
0000000000015cf0	movl	$0x18, %edx
0000000000015cf5	movl	$0x54, %ecx
0000000000015cfa	movl	%eax, %r8d
0000000000015cfd	xorl	%r9d, %r9d
0000000000015d00	callq	_mach_msg
0000000000015d05	movl	%eax, %ebx
0000000000015d07	leal	-0x10000002(%rbx), %eax
0000000000015d0d	cmpl	$0xe, %eax
0000000000015d10	ja	0x15d26
0000000000015d12	movl	$0x4003, %ecx
0000000000015d17	btl	%eax, %ecx
0000000000015d1a	jae	0x15d26
0000000000015d1c	movl	-0x74(%rbp), %edi
0000000000015d1f	callq	_mig_put_reply_port
0000000000015d24	jmp	0x15d74
0000000000015d26	testl	%ebx, %ebx
0000000000015d28	jne	0x15d55
0000000000015d2a	movl	-0x6c(%rbp), %eax
0000000000015d2d	cmpl	$0x47, %eax
0000000000015d30	je	0x15d5f
0000000000015d32	cmpl	$0x140, %eax
0000000000015d37	jne	0x15d66
0000000000015d39	movl	-0x80(%rbp), %eax
0000000000015d3c	movl	-0x7c(%rbp), %ecx
0000000000015d3f	movl	$0xfffffed4, %ebx
0000000000015d44	testl	%eax, %eax
0000000000015d46	js	0x15d85
0000000000015d48	cmpl	$0x24, %ecx
0000000000015d4b	jne	0x15d6b
0000000000015d4d	cmpl	$0x0, -0x60(%rbp)
0000000000015d51	jne	0x15d90
0000000000015d53	jmp	0x15d6b
0000000000015d55	movl	-0x74(%rbp), %edi
0000000000015d58	callq	_mig_dealloc_reply_port
0000000000015d5d	jmp	0x15d74
0000000000015d5f	movl	$0xfffffecc, %ebx
0000000000015d64	jmp	0x15d6b
0000000000015d66	movl	$0xfffffed3, %ebx
0000000000015d6b	leaq	-0x80(%rbp), %rdi
0000000000015d6f	callq	_mach_msg_destroy
0000000000015d74	movl	%ebx, %eax
0000000000015d76	addq	$0x68, %rsp
0000000000015d7a	popq	%rbx
0000000000015d7b	popq	%r12
0000000000015d7d	popq	%r13
0000000000015d7f	popq	%r14
0000000000015d81	popq	%r15
0000000000015d83	popq	%rbp
0000000000015d84	retq
0000000000015d85	cmpl	$0x4c, %ecx
0000000000015d88	jne	0x15d6b
0000000000015d8a	cmpl	$0x2, -0x68(%rbp)
0000000000015d8e	jne	0x15d6b
0000000000015d90	movl	$0xfffffed4, %ebx
0000000000015d95	cmpl	$0x0, -0x78(%rbp)
0000000000015d99	jne	0x15d6b
0000000000015d9b	testl	%eax, %eax
0000000000015d9d	js	0x15dc6
0000000000015d9f	movl	-0x60(%rbp), %ebx
0000000000015da2	testl	%ebx, %ebx
0000000000015da4	jne	0x15d6b
0000000000015da6	movl	-0x3c(%rbp), %eax
0000000000015da9	movl	-0x38(%rbp), %ecx
0000000000015dac	movq	-0x64(%rbp), %rdx
0000000000015db0	movq	%rdx, (%r13)
0000000000015db4	movl	%eax, (%r12)
0000000000015db8	movq	-0x54(%rbp), %rax
0000000000015dbc	movq	%rax, (%r15)
0000000000015dbf	movl	%ecx, (%r14)
0000000000015dc2	xorl	%ebx, %ebx
0000000000015dc4	jmp	0x15d74
0000000000015dc6	movzbl	-0x59(%rbp), %eax
0000000000015dca	shll	$0x18, %eax
0000000000015dcd	cmpl	$0x1000000, %eax
0000000000015dd2	jne	0x15d6b
0000000000015dd4	movzbl	-0x49(%rbp), %eax
0000000000015dd8	shll	$0x18, %eax
0000000000015ddb	cmpl	$0x1000000, %eax
0000000000015de0	jne	0x15d6b
0000000000015de2	movl	-0x58(%rbp), %ecx
0000000000015de5	movl	$0xcccccccd, %eax
0000000000015dea	imulq	%rcx, %rax
0000000000015dee	shrq	$0x26, %rax
0000000000015df2	cmpl	-0x3c(%rbp), %eax
0000000000015df5	jne	0x15d6b
0000000000015dfb	movl	-0x48(%rbp), %ecx
0000000000015dfe	shrl	$0x6, %ecx
0000000000015e01	cmpl	-0x38(%rbp), %ecx
0000000000015e04	jne	0x15d6b
0000000000015e0a	jmp	0x15dac
_mach_zone_force_gc:
0000000000015e0c	pushq	%rbp
0000000000015e0d	movq	%rsp, %rbp
0000000000015e10	pushq	%rbx
0000000000015e11	subq	$0x38, %rsp
0000000000015e15	leaq	-0x38(%rbp), %rbx
0000000000015e19	movl	$0x1513, (%rbx)
0000000000015e1f	movl	%edi, 0x8(%rbx)
0000000000015e22	callq	_mig_get_reply_port
0000000000015e27	movl	%eax, 0xc(%rbx)
0000000000015e2a	movabsq	$0xdd00000000, %rcx
0000000000015e34	movq	%rcx, 0x10(%rbx)
0000000000015e38	movl	$0x0, (%rsp)
0000000000015e3f	movq	%rbx, %rdi
0000000000015e42	movl	$0x3, %esi
0000000000015e47	movl	$0x18, %edx
0000000000015e4c	movl	$0x2c, %ecx
0000000000015e51	movl	%eax, %r8d
0000000000015e54	xorl	%r9d, %r9d
0000000000015e57	callq	_mach_msg
0000000000015e5c	movl	%eax, %ebx
0000000000015e5e	leal	-0x10000002(%rbx), %eax
0000000000015e64	cmpl	$0xe, %eax
0000000000015e67	ja	0x15e7d
0000000000015e69	movl	$0x4003, %ecx
0000000000015e6e	btl	%eax, %ecx
0000000000015e71	jae	0x15e7d
0000000000015e73	movl	-0x2c(%rbp), %edi
0000000000015e76	callq	_mig_put_reply_port
0000000000015e7b	jmp	0x15ed2
0000000000015e7d	testl	%ebx, %ebx
0000000000015e7f	jne	0x15eb3
0000000000015e81	movl	-0x24(%rbp), %eax
0000000000015e84	cmpl	$0x47, %eax
0000000000015e87	je	0x15ebd
0000000000015e89	cmpl	$0x141, %eax
0000000000015e8e	jne	0x15ec4
0000000000015e90	movl	$0xfffffed4, %ebx
0000000000015e95	cmpl	$0x0, -0x38(%rbp)
0000000000015e99	js	0x15ec9
0000000000015e9b	cmpl	$0x24, -0x34(%rbp)
0000000000015e9f	jne	0x15ec9
0000000000015ea1	movl	-0x30(%rbp), %eax
0000000000015ea4	testl	%eax, %eax
0000000000015ea6	jne	0x15ec9
0000000000015ea8	movl	-0x18(%rbp), %ebx
0000000000015eab	testl	%ebx, %ebx
0000000000015ead	jne	0x15ec9
0000000000015eaf	xorl	%ebx, %ebx
0000000000015eb1	jmp	0x15ed2
0000000000015eb3	movl	-0x2c(%rbp), %edi
0000000000015eb6	callq	_mig_dealloc_reply_port
0000000000015ebb	jmp	0x15ed2
0000000000015ebd	movl	$0xfffffecc, %ebx
0000000000015ec2	jmp	0x15ec9
0000000000015ec4	movl	$0xfffffed3, %ebx
0000000000015ec9	leaq	-0x38(%rbp), %rdi
0000000000015ecd	callq	_mach_msg_destroy
0000000000015ed2	movl	%ebx, %eax
0000000000015ed4	addq	$0x38, %rsp
0000000000015ed8	popq	%rbx
0000000000015ed9	popq	%rbp
0000000000015eda	retq
__kernelrpc_host_create_mach_voucher:
0000000000015edb	pushq	%rbp
0000000000015edc	movq	%rsp, %rbp
0000000000015edf	pushq	%r15
0000000000015ee1	pushq	%r14
0000000000015ee3	pushq	%r12
0000000000015ee5	pushq	%rbx
0000000000015ee6	subq	$0x1430, %rsp
0000000000015eed	leaq	_NDR_record(%rip), %rax
0000000000015ef4	movq	(%rax), %rax
0000000000015ef7	movq	%rax, -0x1430(%rbp)
0000000000015efe	movl	$0xfffffecd, %r15d
0000000000015f04	cmpl	$_mk_timer_arm_leeway, %edx
0000000000015f0a	ja	0x16028
0000000000015f10	movq	%rcx, %r14
0000000000015f13	movl	%edx, %ebx
0000000000015f15	movl	%edi, %r12d
0000000000015f18	leaq	-0x1424(%rbp), %r15
0000000000015f1f	movl	%edx, %edx
0000000000015f21	movq	%r15, %rdi
0000000000015f24	callq	_memcpy
0000000000015f29	movl	%ebx, -0x4(%r15)
0000000000015f2d	addl	$0x27, %ebx
0000000000015f30	andl	$-0x4, %ebx
0000000000015f33	movl	$0x1513, -0x24(%r15)
0000000000015f3b	movl	%r12d, -0x1c(%r15)
0000000000015f3f	callq	_mig_get_reply_port
0000000000015f44	movl	%eax, -0x18(%r15)
0000000000015f48	movabsq	$0xde00000000, %rcx
0000000000015f52	movq	%rcx, -0x14(%r15)
0000000000015f56	movl	$0x0, (%rsp)
0000000000015f5d	leaq	-0x1448(%rbp), %rdi
0000000000015f64	movl	$0x3, %esi
0000000000015f69	movl	%ebx, %edx
0000000000015f6b	movl	$0x30, %ecx
0000000000015f70	movl	%eax, %r8d
0000000000015f73	xorl	%r9d, %r9d
0000000000015f76	callq	_mach_msg
0000000000015f7b	movl	%eax, %r15d
0000000000015f7e	leal	-0x10000002(%r15), %eax
0000000000015f85	cmpl	$0xe, %eax
0000000000015f88	ja	0x15fa4
0000000000015f8a	movl	$0x4003, %ecx
0000000000015f8f	btl	%eax, %ecx
0000000000015f92	jae	0x15fa4
0000000000015f94	movl	-0x143c(%rbp), %edi
0000000000015f9a	callq	_mig_put_reply_port
0000000000015f9f	jmp	0x16028
0000000000015fa4	testl	%r15d, %r15d
0000000000015fa7	jne	0x15fe2
0000000000015fa9	movl	-0x1434(%rbp), %eax
0000000000015faf	cmpl	$0x47, %eax
0000000000015fb2	je	0x15fef
0000000000015fb4	cmpl	$0x142, %eax
0000000000015fb9	jne	0x15ff7
0000000000015fbb	movl	-0x1448(%rbp), %eax
0000000000015fc1	movl	-0x1444(%rbp), %ecx
0000000000015fc7	movl	$0xfffffed4, %r15d
0000000000015fcd	testl	%eax, %eax
0000000000015fcf	js	0x15fff
0000000000015fd1	cmpl	$0x24, %ecx
0000000000015fd4	jne	0x1601c
0000000000015fd6	movl	-0x1428(%rbp), %ecx
0000000000015fdc	testl	%ecx, %ecx
0000000000015fde	jne	0x1600d
0000000000015fe0	jmp	0x1601c
0000000000015fe2	movl	-0x143c(%rbp), %edi
0000000000015fe8	callq	_mig_dealloc_reply_port
0000000000015fed	jmp	0x16028
0000000000015fef	movl	$0xfffffecc, %r15d
0000000000015ff5	jmp	0x1601c
0000000000015ff7	movl	$0xfffffed3, %r15d
0000000000015ffd	jmp	0x1601c
0000000000015fff	cmpl	$0x28, %ecx
0000000000016002	jne	0x1601c
0000000000016004	cmpl	$0x1, -0x1430(%rbp)
000000000001600b	jne	0x1601c
000000000001600d	movl	$0xfffffed4, %r15d
0000000000016013	cmpl	$0x0, -0x1440(%rbp)
000000000001601a	je	0x1603b
000000000001601c	leaq	-0x1448(%rbp), %rdi
0000000000016023	callq	_mach_msg_destroy
0000000000016028	movl	%r15d, %eax
000000000001602b	addq	$0x1430, %rsp
0000000000016032	popq	%rbx
0000000000016033	popq	%r12
0000000000016035	popq	%r14
0000000000016037	popq	%r15
0000000000016039	popq	%rbp
000000000001603a	retq
000000000001603b	testl	%eax, %eax
000000000001603d	js	0x1604d
000000000001603f	movl	-0x1428(%rbp), %r15d
0000000000016046	testl	%r15d, %r15d
0000000000016049	jne	0x1601c
000000000001604b	jmp	0x1605e
000000000001604d	movzwl	-0x1422(%rbp), %eax
0000000000016054	shll	$0x10, %eax
0000000000016057	cmpl	$0x110000, %eax
000000000001605c	jne	0x1601c
000000000001605e	movl	-0x142c(%rbp), %eax
0000000000016064	movl	%eax, (%r14)
0000000000016067	xorl	%r15d, %r15d
000000000001606a	jmp	0x16028
_host_register_mach_voucher_attr_manager:
000000000001606c	pushq	%rbp
000000000001606d	movq	%rsp, %rbp
0000000000016070	pushq	%r15
0000000000016072	pushq	%r14
0000000000016074	pushq	%rbx
0000000000016075	subq	$0x48, %rsp
0000000000016079	movq	%r8, %r14
000000000001607c	movq	%rcx, %r15
000000000001607f	leaq	-0x58(%rbp), %rbx
0000000000016083	movl	$0x1, 0x18(%rbx)
000000000001608a	movl	%esi, 0x1c(%rbx)
000000000001608d	movl	$0x130000, 0x24(%rbx)
0000000000016094	leaq	_NDR_record(%rip), %rax
000000000001609b	movq	(%rax), %rax
000000000001609e	movq	%rax, 0x28(%rbx)
00000000000160a2	movq	%rdx, 0x30(%rbx)
00000000000160a6	movl	$0x80001513, (%rbx)
00000000000160ac	movl	%edi, 0x8(%rbx)
00000000000160af	callq	_mig_get_reply_port
00000000000160b4	movl	%eax, 0xc(%rbx)
00000000000160b7	movabsq	$0xdf00000000, %rcx
00000000000160c1	movq	%rcx, 0x10(%rbx)
00000000000160c5	movl	$0x0, (%rsp)
00000000000160cc	movq	%rbx, %rdi
00000000000160cf	movl	$0x3, %esi
00000000000160d4	movl	$0x38, %edx
00000000000160d9	movl	$0x3c, %ecx
00000000000160de	movl	%eax, %r8d
00000000000160e1	xorl	%r9d, %r9d
00000000000160e4	callq	_mach_msg
00000000000160e9	movl	%eax, %ebx
00000000000160eb	leal	-0x10000002(%rbx), %eax
00000000000160f1	cmpl	$0xe, %eax
00000000000160f4	ja	0x1610a
00000000000160f6	movl	$0x4003, %ecx
00000000000160fb	btl	%eax, %ecx
00000000000160fe	jae	0x1610a
0000000000016100	movl	-0x4c(%rbp), %edi
0000000000016103	callq	_mig_put_reply_port
0000000000016108	jmp	0x16158
000000000001610a	testl	%ebx, %ebx
000000000001610c	jne	0x16139
000000000001610e	movl	-0x44(%rbp), %eax
0000000000016111	cmpl	$0x47, %eax
0000000000016114	je	0x16143
0000000000016116	cmpl	$0x143, %eax
000000000001611b	jne	0x1614a
000000000001611d	movl	-0x58(%rbp), %eax
0000000000016120	movl	-0x54(%rbp), %ecx
0000000000016123	movl	$0xfffffed4, %ebx
0000000000016128	testl	%eax, %eax
000000000001612a	js	0x16165
000000000001612c	cmpl	$0x24, %ecx
000000000001612f	jne	0x1614f
0000000000016131	cmpl	$0x0, -0x38(%rbp)
0000000000016135	jne	0x16170
0000000000016137	jmp	0x1614f
0000000000016139	movl	-0x4c(%rbp), %edi
000000000001613c	callq	_mig_dealloc_reply_port
0000000000016141	jmp	0x16158
0000000000016143	movl	$0xfffffecc, %ebx
0000000000016148	jmp	0x1614f
000000000001614a	movl	$0xfffffed3, %ebx
000000000001614f	leaq	-0x58(%rbp), %rdi
0000000000016153	callq	_mach_msg_destroy
0000000000016158	movl	%ebx, %eax
000000000001615a	addq	$0x48, %rsp
000000000001615e	popq	%rbx
000000000001615f	popq	%r14
0000000000016161	popq	%r15
0000000000016163	popq	%rbp
0000000000016164	retq
0000000000016165	cmpl	$0x34, %ecx
0000000000016168	jne	0x1614f
000000000001616a	cmpl	$0x1, -0x40(%rbp)
000000000001616e	jne	0x1614f
0000000000016170	movl	$0xfffffed4, %ebx
0000000000016175	cmpl	$0x0, -0x50(%rbp)
0000000000016179	jne	0x1614f
000000000001617b	testl	%eax, %eax
000000000001617d	js	0x16188
000000000001617f	movl	-0x38(%rbp), %ebx
0000000000016182	testl	%ebx, %ebx
0000000000016184	jne	0x1614f
0000000000016186	jmp	0x16196
0000000000016188	movzwl	-0x32(%rbp), %eax
000000000001618c	shll	$0x10, %eax
000000000001618f	cmpl	$0x110000, %eax
0000000000016194	jne	0x1614f
0000000000016196	movl	-0x28(%rbp), %eax
0000000000016199	movl	%eax, (%r15)
000000000001619c	movl	-0x3c(%rbp), %eax
000000000001619f	movl	%eax, (%r14)
00000000000161a2	xorl	%ebx, %ebx
00000000000161a4	jmp	0x16158
_host_register_well_known_mach_voucher_attr_manager:
00000000000161a6	pushq	%rbp
00000000000161a7	movq	%rsp, %rbp
00000000000161aa	pushq	%r14
00000000000161ac	pushq	%rbx
00000000000161ad	subq	$0x50, %rsp
00000000000161b1	movq	%r8, %r14
00000000000161b4	leaq	-0x50(%rbp), %rbx
00000000000161b8	movl	$0x1, 0x18(%rbx)
00000000000161bf	movl	%esi, 0x1c(%rbx)
00000000000161c2	movl	$0x130000, 0x24(%rbx)
00000000000161c9	leaq	_NDR_record(%rip), %rax
00000000000161d0	movq	(%rax), %rax
00000000000161d3	movq	%rax, 0x28(%rbx)
00000000000161d7	movq	%rdx, 0x30(%rbx)
00000000000161db	movl	%ecx, 0x38(%rbx)
00000000000161de	movl	$0x80001513, (%rbx)
00000000000161e4	movl	%edi, 0x8(%rbx)
00000000000161e7	callq	_mig_get_reply_port
00000000000161ec	movl	%eax, 0xc(%rbx)
00000000000161ef	movabsq	$0xe000000000, %rcx
00000000000161f9	movq	%rcx, 0x10(%rbx)
00000000000161fd	movl	$0x0, (%rsp)
0000000000016204	movq	%rbx, %rdi
0000000000016207	movl	$0x3, %esi
000000000001620c	movl	$0x3c, %edx
0000000000016211	movl	$0x30, %ecx
0000000000016216	movl	%eax, %r8d
0000000000016219	xorl	%r9d, %r9d
000000000001621c	callq	_mach_msg
0000000000016221	movl	%eax, %ebx
0000000000016223	leal	-0x10000002(%rbx), %eax
0000000000016229	cmpl	$0xe, %eax
000000000001622c	ja	0x16242
000000000001622e	movl	$0x4003, %ecx
0000000000016233	btl	%eax, %ecx
0000000000016236	jae	0x16242
0000000000016238	movl	-0x44(%rbp), %edi
000000000001623b	callq	_mig_put_reply_port
0000000000016240	jmp	0x16290
0000000000016242	testl	%ebx, %ebx
0000000000016244	jne	0x16271
0000000000016246	movl	-0x3c(%rbp), %eax
0000000000016249	cmpl	$0x47, %eax
000000000001624c	je	0x1627b
000000000001624e	cmpl	$0x144, %eax
0000000000016253	jne	0x16282
0000000000016255	movl	-0x50(%rbp), %eax
0000000000016258	movl	-0x4c(%rbp), %ecx
000000000001625b	movl	$0xfffffed4, %ebx
0000000000016260	testl	%eax, %eax
0000000000016262	js	0x1629b
0000000000016264	cmpl	$0x24, %ecx
0000000000016267	jne	0x16287
0000000000016269	cmpl	$0x0, -0x30(%rbp)
000000000001626d	jne	0x162a6
000000000001626f	jmp	0x16287
0000000000016271	movl	-0x44(%rbp), %edi
0000000000016274	callq	_mig_dealloc_reply_port
0000000000016279	jmp	0x16290
000000000001627b	movl	$0xfffffecc, %ebx
0000000000016280	jmp	0x16287
0000000000016282	movl	$0xfffffed3, %ebx
0000000000016287	leaq	-0x50(%rbp), %rdi
000000000001628b	callq	_mach_msg_destroy
0000000000016290	movl	%ebx, %eax
0000000000016292	addq	$0x50, %rsp
0000000000016296	popq	%rbx
0000000000016297	popq	%r14
0000000000016299	popq	%rbp
000000000001629a	retq
000000000001629b	cmpl	$0x28, %ecx
000000000001629e	jne	0x16287
00000000000162a0	cmpl	$0x1, -0x38(%rbp)
00000000000162a4	jne	0x16287
00000000000162a6	movl	$0xfffffed4, %ebx
00000000000162ab	cmpl	$0x0, -0x48(%rbp)
00000000000162af	jne	0x16287
00000000000162b1	testl	%eax, %eax
00000000000162b3	js	0x162be
00000000000162b5	movl	-0x30(%rbp), %ebx
00000000000162b8	testl	%ebx, %ebx
00000000000162ba	jne	0x16287
00000000000162bc	jmp	0x162cc
00000000000162be	movzwl	-0x2a(%rbp), %eax
00000000000162c2	shll	$0x10, %eax
00000000000162c5	cmpl	$0x110000, %eax
00000000000162ca	jne	0x16287
00000000000162cc	movl	-0x34(%rbp), %eax
00000000000162cf	movl	%eax, (%r14)
00000000000162d2	xorl	%ebx, %ebx
00000000000162d4	jmp	0x16290
_host_set_atm_diagnostic_flag:
00000000000162d6	pushq	%rbp
00000000000162d7	movq	%rsp, %rbp
00000000000162da	pushq	%rbx
00000000000162db	subq	$0x38, %rsp
00000000000162df	leaq	_NDR_record(%rip), %rax
00000000000162e6	movq	(%rax), %rax
00000000000162e9	leaq	-0x38(%rbp), %rbx
00000000000162ed	movq	%rax, 0x18(%rbx)
00000000000162f1	movl	%esi, 0x20(%rbx)
00000000000162f4	movl	$0x1513, (%rbx)
00000000000162fa	movl	%edi, 0x8(%rbx)
00000000000162fd	callq	_mig_get_reply_port
0000000000016302	movl	%eax, 0xc(%rbx)
0000000000016305	movabsq	$0xe100000000, %rcx
000000000001630f	movq	%rcx, 0x10(%rbx)
0000000000016313	movl	$0x0, (%rsp)
000000000001631a	movq	%rbx, %rdi
000000000001631d	movl	$0x3, %esi
0000000000016322	movl	$0x24, %edx
0000000000016327	movl	$0x2c, %ecx
000000000001632c	movl	%eax, %r8d
000000000001632f	xorl	%r9d, %r9d
0000000000016332	callq	_mach_msg
0000000000016337	movl	%eax, %ebx
0000000000016339	leal	-0x10000002(%rbx), %eax
000000000001633f	cmpl	$0xe, %eax
0000000000016342	ja	0x16358
0000000000016344	movl	$0x4003, %ecx
0000000000016349	btl	%eax, %ecx
000000000001634c	jae	0x16358
000000000001634e	movl	-0x2c(%rbp), %edi
0000000000016351	callq	_mig_put_reply_port
0000000000016356	jmp	0x163ad
0000000000016358	testl	%ebx, %ebx
000000000001635a	jne	0x1638e
000000000001635c	movl	-0x24(%rbp), %eax
000000000001635f	cmpl	$0x47, %eax
0000000000016362	je	0x16398
0000000000016364	cmpl	$0x145, %eax
0000000000016369	jne	0x1639f
000000000001636b	movl	$0xfffffed4, %ebx
0000000000016370	cmpl	$0x0, -0x38(%rbp)
0000000000016374	js	0x163a4
0000000000016376	cmpl	$0x24, -0x34(%rbp)
000000000001637a	jne	0x163a4
000000000001637c	movl	-0x30(%rbp), %eax
000000000001637f	testl	%eax, %eax
0000000000016381	jne	0x163a4
0000000000016383	movl	-0x18(%rbp), %ebx
0000000000016386	testl	%ebx, %ebx
0000000000016388	jne	0x163a4
000000000001638a	xorl	%ebx, %ebx
000000000001638c	jmp	0x163ad
000000000001638e	movl	-0x2c(%rbp), %edi
0000000000016391	callq	_mig_dealloc_reply_port
0000000000016396	jmp	0x163ad
0000000000016398	movl	$0xfffffecc, %ebx
000000000001639d	jmp	0x163a4
000000000001639f	movl	$0xfffffed3, %ebx
00000000000163a4	leaq	-0x38(%rbp), %rdi
00000000000163a8	callq	_mach_msg_destroy
00000000000163ad	movl	%ebx, %eax
00000000000163af	addq	$0x38, %rsp
00000000000163b3	popq	%rbx
00000000000163b4	popq	%rbp
00000000000163b5	retq
_mach_memory_info:
00000000000163b6	pushq	%rbp
00000000000163b7	movq	%rsp, %rbp
00000000000163ba	pushq	%r15
00000000000163bc	pushq	%r14
00000000000163be	pushq	%r13
00000000000163c0	pushq	%r12
00000000000163c2	pushq	%rbx
00000000000163c3	subq	$0x88, %rsp
00000000000163ca	movq	%r9, -0x38(%rbp)
00000000000163ce	movq	%r8, -0x30(%rbp)
00000000000163d2	movq	%rcx, %r12
00000000000163d5	movq	%rdx, %r13
00000000000163d8	movq	%rsi, %r15
00000000000163db	leaq	-0xa0(%rbp), %rbx
00000000000163e2	movl	$0x1513, (%rbx)
00000000000163e8	movl	%edi, 0x8(%rbx)
00000000000163eb	callq	_mig_get_reply_port
00000000000163f0	movl	%eax, 0xc(%rbx)
00000000000163f3	movabsq	$0xe300000000, %rcx
00000000000163fd	movq	%rcx, 0x10(%rbx)
0000000000016401	movl	$0x0, (%rsp)
0000000000016408	movq	%rbx, %rdi
000000000001640b	movl	$0x3, %esi
0000000000016410	movl	$0x18, %edx
0000000000016415	movl	$0x68, %ecx
000000000001641a	movl	%eax, %r8d
000000000001641d	xorl	%r9d, %r9d
0000000000016420	callq	_mach_msg
0000000000016425	movl	%eax, %r14d
0000000000016428	leal	-0x10000002(%r14), %eax
000000000001642f	cmpl	$0xe, %eax
0000000000016432	ja	0x1644b
0000000000016434	movl	$0x4003, %ecx
0000000000016439	btl	%eax, %ecx
000000000001643c	jae	0x1644b
000000000001643e	movl	-0x94(%rbp), %edi
0000000000016444	callq	_mig_put_reply_port
0000000000016449	jmp	0x164ac
000000000001644b	testl	%r14d, %r14d
000000000001644e	jne	0x16485
0000000000016450	movl	-0x8c(%rbp), %eax
0000000000016456	cmpl	$0x47, %eax
0000000000016459	je	0x16492
000000000001645b	cmpl	$0x147, %eax
0000000000016460	jne	0x1649a
0000000000016462	movl	-0xa0(%rbp), %eax
0000000000016468	movl	-0x9c(%rbp), %ecx
000000000001646e	movl	$0xfffffed4, %r14d
0000000000016474	testl	%eax, %eax
0000000000016476	js	0x164c1
0000000000016478	cmpl	$0x24, %ecx
000000000001647b	jne	0x164a0
000000000001647d	cmpl	$0x0, -0x80(%rbp)
0000000000016481	jne	0x164cf
0000000000016483	jmp	0x164a0
0000000000016485	movl	-0x94(%rbp), %edi
000000000001648b	callq	_mig_dealloc_reply_port
0000000000016490	jmp	0x164ac
0000000000016492	movl	$0xfffffecc, %r14d
0000000000016498	jmp	0x164a0
000000000001649a	movl	$0xfffffed3, %r14d
00000000000164a0	leaq	-0xa0(%rbp), %rdi
00000000000164a7	callq	_mach_msg_destroy
00000000000164ac	movl	%r14d, %eax
00000000000164af	addq	$0x88, %rsp
00000000000164b6	popq	%rbx
00000000000164b7	popq	%r12
00000000000164b9	popq	%r13
00000000000164bb	popq	%r14
00000000000164bd	popq	%r15
00000000000164bf	popq	%rbp
00000000000164c0	retq
00000000000164c1	cmpl	$0x60, %ecx
00000000000164c4	jne	0x164a0
00000000000164c6	cmpl	$0x3, -0x88(%rbp)
00000000000164cd	jne	0x164a0
00000000000164cf	movl	$0xfffffed4, %r14d
00000000000164d5	cmpl	$0x0, -0x98(%rbp)
00000000000164dc	jne	0x164a0
00000000000164de	testl	%eax, %eax
00000000000164e0	js	0x16526
00000000000164e2	movl	-0x80(%rbp), %r14d
00000000000164e6	testl	%r14d, %r14d
00000000000164e9	jne	0x164a0
00000000000164eb	movl	-0x4c(%rbp), %eax
00000000000164ee	movl	-0x48(%rbp), %ecx
00000000000164f1	movl	-0x44(%rbp), %edx
00000000000164f4	movq	0x10(%rbp), %rsi
00000000000164f8	movq	-0x84(%rbp), %rdi
00000000000164ff	movq	%rdi, (%r15)
0000000000016502	movl	%eax, (%r13)
0000000000016506	movq	-0x74(%rbp), %rax
000000000001650a	movq	%rax, (%r12)
000000000001650e	movq	-0x30(%rbp), %rax
0000000000016512	movl	%ecx, (%rax)
0000000000016514	movq	-0x64(%rbp), %rax
0000000000016518	movq	-0x38(%rbp), %rcx
000000000001651c	movq	%rax, (%rcx)
000000000001651f	movl	%edx, (%rsi)
0000000000016521	xorl	%r14d, %r14d
0000000000016524	jmp	0x164ac
0000000000016526	movzbl	-0x79(%rbp), %eax
000000000001652a	shll	$0x18, %eax
000000000001652d	cmpl	$0x1000000, %eax
0000000000016532	jne	0x164a0
0000000000016538	movzbl	-0x69(%rbp), %eax
000000000001653c	shll	$0x18, %eax
000000000001653f	cmpl	$0x1000000, %eax
0000000000016544	jne	0x164a0
000000000001654a	movzbl	-0x59(%rbp), %eax
000000000001654e	shll	$0x18, %eax
0000000000016551	cmpl	$0x1000000, %eax
0000000000016556	jne	0x164a0
000000000001655c	movl	-0x78(%rbp), %ecx
000000000001655f	movl	$0xcccccccd, %eax
0000000000016564	imulq	%rcx, %rax
0000000000016568	shrq	$0x26, %rax
000000000001656c	cmpl	-0x4c(%rbp), %eax
000000000001656f	jne	0x164a0
0000000000016575	movl	-0x68(%rbp), %ecx
0000000000016578	shrl	$0x6, %ecx
000000000001657b	cmpl	-0x48(%rbp), %ecx
000000000001657e	jne	0x164a0
0000000000016584	movl	-0x58(%rbp), %esi
0000000000016587	movl	$0xba2e8ba3, %edx
000000000001658c	imulq	%rsi, %rdx
0000000000016590	shrq	$0x27, %rdx
0000000000016594	cmpl	-0x44(%rbp), %edx
0000000000016597	jne	0x164a0
000000000001659d	jmp	0x164f4
_host_set_multiuser_config_flags:
00000000000165a2	pushq	%rbp
00000000000165a3	movq	%rsp, %rbp
00000000000165a6	pushq	%rbx
00000000000165a7	subq	$0x38, %rsp
00000000000165ab	leaq	_NDR_record(%rip), %rax
00000000000165b2	movq	(%rax), %rax
00000000000165b5	leaq	-0x38(%rbp), %rbx
00000000000165b9	movq	%rax, 0x18(%rbx)
00000000000165bd	movl	%esi, 0x20(%rbx)
00000000000165c0	movl	$0x1513, (%rbx)
00000000000165c6	movl	%edi, 0x8(%rbx)
00000000000165c9	callq	_mig_get_reply_port
00000000000165ce	movl	%eax, 0xc(%rbx)
00000000000165d1	movabsq	$0xe400000000, %rcx
00000000000165db	movq	%rcx, 0x10(%rbx)
00000000000165df	movl	$0x0, (%rsp)
00000000000165e6	movq	%rbx, %rdi
00000000000165e9	movl	$0x3, %esi
00000000000165ee	movl	$0x24, %edx
00000000000165f3	movl	$0x2c, %ecx
00000000000165f8	movl	%eax, %r8d
00000000000165fb	xorl	%r9d, %r9d
00000000000165fe	callq	_mach_msg
0000000000016603	movl	%eax, %ebx
0000000000016605	leal	-0x10000002(%rbx), %eax
000000000001660b	cmpl	$0xe, %eax
000000000001660e	ja	0x16624
0000000000016610	movl	$0x4003, %ecx
0000000000016615	btl	%eax, %ecx
0000000000016618	jae	0x16624
000000000001661a	movl	-0x2c(%rbp), %edi
000000000001661d	callq	_mig_put_reply_port
0000000000016622	jmp	0x16679
0000000000016624	testl	%ebx, %ebx
0000000000016626	jne	0x1665a
0000000000016628	movl	-0x24(%rbp), %eax
000000000001662b	cmpl	$0x47, %eax
000000000001662e	je	0x16664
0000000000016630	cmpl	$0x148, %eax
0000000000016635	jne	0x1666b
0000000000016637	movl	$0xfffffed4, %ebx
000000000001663c	cmpl	$0x0, -0x38(%rbp)
0000000000016640	js	0x16670
0000000000016642	cmpl	$0x24, -0x34(%rbp)
0000000000016646	jne	0x16670
0000000000016648	movl	-0x30(%rbp), %eax
000000000001664b	testl	%eax, %eax
000000000001664d	jne	0x16670
000000000001664f	movl	-0x18(%rbp), %ebx
0000000000016652	testl	%ebx, %ebx
0000000000016654	jne	0x16670
0000000000016656	xorl	%ebx, %ebx
0000000000016658	jmp	0x16679
000000000001665a	movl	-0x2c(%rbp), %edi
000000000001665d	callq	_mig_dealloc_reply_port
0000000000016662	jmp	0x16679
0000000000016664	movl	$0xfffffecc, %ebx
0000000000016669	jmp	0x16670
000000000001666b	movl	$0xfffffed3, %ebx
0000000000016670	leaq	-0x38(%rbp), %rdi
0000000000016674	callq	_mach_msg_destroy
0000000000016679	movl	%ebx, %eax
000000000001667b	addq	$0x38, %rsp
000000000001667f	popq	%rbx
0000000000016680	popq	%rbp
0000000000016681	retq
_mach_zone_info_for_zone:
0000000000016682	pushq	%rbp
0000000000016683	movq	%rsp, %rbp
0000000000016686	pushq	%r14
0000000000016688	pushq	%rbx
0000000000016689	subq	$0x80, %rsp
0000000000016690	movq	%rsi, %r14
0000000000016693	movl	%edi, %eax
0000000000016695	leaq	_NDR_record(%rip), %rcx
000000000001669c	movq	(%rcx), %rcx
000000000001669f	leaq	-0x60(%rbp), %rbx
00000000000166a3	movq	%rcx, -0x8(%rbx)
00000000000166a7	leaq	0x10(%rbp), %rsi
00000000000166ab	movl	$0x14, %ecx
00000000000166b0	movq	%rbx, %rdi
00000000000166b3	rep		movsl	(%rsi), %es:(%rdi)
00000000000166b5	movl	$0x1513, -0x20(%rbx)
00000000000166bc	movl	%eax, -0x18(%rbx)
00000000000166bf	callq	_mig_get_reply_port
00000000000166c4	movl	%eax, -0x14(%rbx)
00000000000166c7	movabsq	$0xe700000000, %rcx
00000000000166d1	movq	%rcx, -0x10(%rbx)
00000000000166d5	movl	$0x0, (%rsp)
00000000000166dc	leaq	-0x80(%rbp), %rdi
00000000000166e0	movl	$0x3, %esi
00000000000166e5	movl	$0x70, %edx
00000000000166ea	movl	$0x6c, %ecx
00000000000166ef	movl	%eax, %r8d
00000000000166f2	xorl	%r9d, %r9d
00000000000166f5	callq	_mach_msg
00000000000166fa	movl	%eax, %ebx
00000000000166fc	leal	-0x10000002(%rbx), %eax
0000000000016702	cmpl	$0xe, %eax
0000000000016705	ja	0x1671e
0000000000016707	movl	$0x4003, %ecx
000000000001670c	btl	%eax, %ecx
000000000001670f	jae	0x1671e
0000000000016711	movl	-0x74(%rbp), %edi
0000000000016714	callq	_mig_put_reply_port
0000000000016719	jmp	0x167be
000000000001671e	testl	%ebx, %ebx
0000000000016720	jne	0x1679f
0000000000016722	movl	-0x6c(%rbp), %eax
0000000000016725	cmpl	$0x47, %eax
0000000000016728	je	0x167a9
000000000001672a	cmpl	$0x14b, %eax
000000000001672f	jne	0x167b0
0000000000016731	movl	$0xfffffed4, %ebx
0000000000016736	cmpl	$0x0, -0x80(%rbp)
000000000001673a	js	0x167b5
000000000001673c	movl	-0x7c(%rbp), %eax
000000000001673f	cmpl	$0x64, %eax
0000000000016742	je	0x1674f
0000000000016744	cmpl	$0x24, %eax
0000000000016747	jne	0x167b5
0000000000016749	cmpl	$0x0, -0x60(%rbp)
000000000001674d	je	0x167b5
000000000001674f	cmpl	$0x0, -0x78(%rbp)
0000000000016753	jne	0x167b5
0000000000016755	movl	-0x60(%rbp), %ebx
0000000000016758	testl	%ebx, %ebx
000000000001675a	jne	0x167b5
000000000001675c	movq	-0x24(%rbp), %rax
0000000000016760	movq	%rax, 0x38(%r14)
0000000000016764	movq	-0x2c(%rbp), %rax
0000000000016768	movq	%rax, 0x30(%r14)
000000000001676c	movq	-0x34(%rbp), %rax
0000000000016770	movq	%rax, 0x28(%r14)
0000000000016774	movq	-0x3c(%rbp), %rax
0000000000016778	movq	%rax, 0x20(%r14)
000000000001677c	movq	-0x44(%rbp), %rax
0000000000016780	movq	%rax, 0x18(%r14)
0000000000016784	movq	-0x4c(%rbp), %rax
0000000000016788	movq	%rax, 0x10(%r14)
000000000001678c	movq	-0x5c(%rbp), %rax
0000000000016790	movq	-0x54(%rbp), %rcx
0000000000016794	movq	%rcx, 0x8(%r14)
0000000000016798	movq	%rax, (%r14)
000000000001679b	xorl	%ebx, %ebx
000000000001679d	jmp	0x167be
000000000001679f	movl	-0x74(%rbp), %edi
00000000000167a2	callq	_mig_dealloc_reply_port
00000000000167a7	jmp	0x167be
00000000000167a9	movl	$0xfffffecc, %ebx
00000000000167ae	jmp	0x167b5
00000000000167b0	movl	$0xfffffed3, %ebx
00000000000167b5	leaq	-0x80(%rbp), %rdi
00000000000167b9	callq	_mach_msg_destroy
00000000000167be	movl	%ebx, %eax
00000000000167c0	addq	$0x80, %rsp
00000000000167c7	popq	%rbx
00000000000167c8	popq	%r14
00000000000167ca	popq	%rbp
00000000000167cb	retq
_mach_zone_info_for_largest_zone:
00000000000167cc	pushq	%rbp
00000000000167cd	movq	%rsp, %rbp
00000000000167d0	pushq	%r15
00000000000167d2	pushq	%r14
00000000000167d4	pushq	%rbx
00000000000167d5	subq	$0xc8, %rsp
00000000000167dc	movq	%rdx, %r14
00000000000167df	movq	%rsi, %r15
00000000000167e2	leaq	-0xd8(%rbp), %rbx
00000000000167e9	movl	$0x1513, (%rbx)
00000000000167ef	movl	%edi, 0x8(%rbx)
00000000000167f2	callq	_mig_get_reply_port
00000000000167f7	movl	%eax, 0xc(%rbx)
00000000000167fa	movabsq	$0xe800000000, %rcx
0000000000016804	movq	%rcx, 0x10(%rbx)
0000000000016808	movl	$0x0, (%rsp)
000000000001680f	movq	%rbx, %rdi
0000000000016812	movl	$0x3, %esi
0000000000016817	movl	$0x18, %edx
000000000001681c	movl	$0xbc, %ecx
0000000000016821	movl	%eax, %r8d
0000000000016824	xorl	%r9d, %r9d
0000000000016827	callq	_mach_msg
000000000001682c	movl	%eax, %ebx
000000000001682e	leal	-0x10000002(%rbx), %eax
0000000000016834	cmpl	$0xe, %eax
0000000000016837	ja	0x16853
0000000000016839	movl	$0x4003, %ecx
000000000001683e	btl	%eax, %ecx
0000000000016841	jae	0x16853
0000000000016843	movl	-0xcc(%rbp), %edi
0000000000016849	callq	_mig_put_reply_port
000000000001684e	jmp	0x16946
0000000000016853	testl	%ebx, %ebx
0000000000016855	jne	0x16921
000000000001685b	movl	-0xc4(%rbp), %eax
0000000000016861	cmpl	$0x47, %eax
0000000000016864	je	0x1692e
000000000001686a	cmpl	$0x14c, %eax
000000000001686f	jne	0x16935
0000000000016875	movl	$0xfffffed4, %ebx
000000000001687a	cmpl	$0x0, -0xd8(%rbp)
0000000000016881	js	0x1693a
0000000000016887	movl	-0xd4(%rbp), %eax
000000000001688d	cmpl	$0xb4, %eax
0000000000016892	je	0x168aa
0000000000016894	cmpl	$0x24, %eax
0000000000016897	jne	0x1693a
000000000001689d	cmpl	$0x0, -0xb8(%rbp)
00000000000168a4	je	0x1693a
00000000000168aa	cmpl	$0x0, -0xd0(%rbp)
00000000000168b1	jne	0x1693a
00000000000168b7	movl	-0xb8(%rbp), %ebx
00000000000168bd	testl	%ebx, %ebx
00000000000168bf	jne	0x1693a
00000000000168c1	leaq	-0xb4(%rbp), %rbx
00000000000168c8	movl	$0x50, %edx
00000000000168cd	movq	%r15, %rdi
00000000000168d0	movq	%rbx, %rsi
00000000000168d3	callq	_memcpy
00000000000168d8	movq	0x50(%rbx), %rax
00000000000168dc	movq	0x58(%rbx), %rcx
00000000000168e0	movq	%rax, (%r14)
00000000000168e3	movq	%rcx, 0x8(%r14)
00000000000168e7	movq	0x60(%rbx), %rax
00000000000168eb	movq	%rax, 0x10(%r14)
00000000000168ef	movq	0x68(%rbx), %rax
00000000000168f3	movq	%rax, 0x18(%r14)
00000000000168f7	movq	0x70(%rbx), %rax
00000000000168fb	movq	%rax, 0x20(%r14)
00000000000168ff	movq	0x78(%rbx), %rax
0000000000016903	movq	%rax, 0x28(%r14)
0000000000016907	movq	0x80(%rbx), %rax
000000000001690e	movq	%rax, 0x30(%r14)
0000000000016912	movq	0x88(%rbx), %rax
0000000000016919	movq	%rax, 0x38(%r14)
000000000001691d	xorl	%ebx, %ebx
000000000001691f	jmp	0x16946
0000000000016921	movl	-0xcc(%rbp), %edi
0000000000016927	callq	_mig_dealloc_reply_port
000000000001692c	jmp	0x16946
000000000001692e	movl	$0xfffffecc, %ebx
0000000000016933	jmp	0x1693a
0000000000016935	movl	$0xfffffed3, %ebx
000000000001693a	leaq	-0xd8(%rbp), %rdi
0000000000016941	callq	_mach_msg_destroy
0000000000016946	movl	%ebx, %eax
0000000000016948	addq	$0xc8, %rsp
000000000001694f	popq	%rbx
0000000000016950	popq	%r14
0000000000016952	popq	%r15
0000000000016954	popq	%rbp
0000000000016955	retq
_mach_zone_get_zlog_zones:
0000000000016956	pushq	%rbp
0000000000016957	movq	%rsp, %rbp
000000000001695a	pushq	%r15
000000000001695c	pushq	%r14
000000000001695e	pushq	%rbx
000000000001695f	subq	$0x48, %rsp
0000000000016963	movq	%rdx, %r14
0000000000016966	movq	%rsi, %r15
0000000000016969	leaq	-0x58(%rbp), %rbx
000000000001696d	movl	$0x1513, (%rbx)
0000000000016973	movl	%edi, 0x8(%rbx)
0000000000016976	callq	_mig_get_reply_port
000000000001697b	movl	%eax, 0xc(%rbx)
000000000001697e	movabsq	$0xe900000000, %rcx
0000000000016988	movq	%rcx, 0x10(%rbx)
000000000001698c	movl	$0x0, (%rsp)
0000000000016993	movq	%rbx, %rdi
0000000000016996	movl	$0x3, %esi
000000000001699b	movl	$0x18, %edx
00000000000169a0	movl	$0x40, %ecx
00000000000169a5	movl	%eax, %r8d
00000000000169a8	xorl	%r9d, %r9d
00000000000169ab	callq	_mach_msg
00000000000169b0	movl	%eax, %ebx
00000000000169b2	leal	-0x10000002(%rbx), %eax
00000000000169b8	cmpl	$0xe, %eax
00000000000169bb	ja	0x169d1
00000000000169bd	movl	$0x4003, %ecx
00000000000169c2	btl	%eax, %ecx
00000000000169c5	jae	0x169d1
00000000000169c7	movl	-0x4c(%rbp), %edi
00000000000169ca	callq	_mig_put_reply_port
00000000000169cf	jmp	0x16a1f
00000000000169d1	testl	%ebx, %ebx
00000000000169d3	jne	0x16a00
00000000000169d5	movl	-0x44(%rbp), %eax
00000000000169d8	cmpl	$0x47, %eax
00000000000169db	je	0x16a0a
00000000000169dd	cmpl	$0x14d, %eax
00000000000169e2	jne	0x16a11
00000000000169e4	movl	-0x58(%rbp), %eax
00000000000169e7	movl	-0x54(%rbp), %ecx
00000000000169ea	movl	$0xfffffed4, %ebx
00000000000169ef	testl	%eax, %eax
00000000000169f1	js	0x16a2c
00000000000169f3	cmpl	$0x24, %ecx
00000000000169f6	jne	0x16a16
00000000000169f8	cmpl	$0x0, -0x38(%rbp)
00000000000169fc	jne	0x16a37
00000000000169fe	jmp	0x16a16
0000000000016a00	movl	-0x4c(%rbp), %edi
0000000000016a03	callq	_mig_dealloc_reply_port
0000000000016a08	jmp	0x16a1f
0000000000016a0a	movl	$0xfffffecc, %ebx
0000000000016a0f	jmp	0x16a16
0000000000016a11	movl	$0xfffffed3, %ebx
0000000000016a16	leaq	-0x58(%rbp), %rdi
0000000000016a1a	callq	_mach_msg_destroy
0000000000016a1f	movl	%ebx, %eax
0000000000016a21	addq	$0x48, %rsp
0000000000016a25	popq	%rbx
0000000000016a26	popq	%r14
0000000000016a28	popq	%r15
0000000000016a2a	popq	%rbp
0000000000016a2b	retq
0000000000016a2c	cmpl	$0x38, %ecx
0000000000016a2f	jne	0x16a16
0000000000016a31	cmpl	$0x1, -0x40(%rbp)
0000000000016a35	jne	0x16a16
0000000000016a37	movl	$0xfffffed4, %ebx
0000000000016a3c	cmpl	$0x0, -0x50(%rbp)
0000000000016a40	jne	0x16a16
0000000000016a42	testl	%eax, %eax
0000000000016a44	js	0x16a52
0000000000016a46	movl	-0x38(%rbp), %ebx
0000000000016a49	testl	%ebx, %ebx
0000000000016a4b	jne	0x16a16
0000000000016a4d	movl	-0x24(%rbp), %eax
0000000000016a50	jmp	0x16a75
0000000000016a52	movzbl	-0x31(%rbp), %eax
0000000000016a56	shll	$0x18, %eax
0000000000016a59	cmpl	$0x1000000, %eax
0000000000016a5e	jne	0x16a16
0000000000016a60	movl	-0x30(%rbp), %ecx
0000000000016a63	movl	$0xcccccccd, %eax
0000000000016a68	imulq	%rcx, %rax
0000000000016a6c	shrq	$0x26, %rax
0000000000016a70	cmpl	-0x24(%rbp), %eax
0000000000016a73	jne	0x16a16
0000000000016a75	movq	-0x3c(%rbp), %rcx
0000000000016a79	movq	%rcx, (%r15)
0000000000016a7c	movl	%eax, (%r14)
0000000000016a7f	xorl	%ebx, %ebx
0000000000016a81	jmp	0x16a1f
_mach_zone_get_btlog_records:
0000000000016a83	pushq	%rbp
0000000000016a84	movq	%rsp, %rbp
0000000000016a87	pushq	%r15
0000000000016a89	pushq	%r14
0000000000016a8b	pushq	%rbx
0000000000016a8c	subq	$0x78, %rsp
0000000000016a90	movq	%rdx, %r14
0000000000016a93	movq	%rsi, %r15
0000000000016a96	movl	%edi, %eax
0000000000016a98	leaq	_NDR_record(%rip), %rcx
0000000000016a9f	movq	(%rcx), %rcx
0000000000016aa2	leaq	-0x68(%rbp), %rbx
0000000000016aa6	movq	%rcx, -0x8(%rbx)
0000000000016aaa	leaq	0x10(%rbp), %rsi
0000000000016aae	movl	$0x14, %ecx
0000000000016ab3	movq	%rbx, %rdi
0000000000016ab6	rep		movsl	(%rsi), %es:(%rdi)
0000000000016ab8	movl	$0x1513, -0x20(%rbx)
0000000000016abf	movl	%eax, -0x18(%rbx)
0000000000016ac2	callq	_mig_get_reply_port
0000000000016ac7	movl	%eax, -0x14(%rbx)
0000000000016aca	movabsq	$0xea00000000, %rcx
0000000000016ad4	movq	%rcx, -0x10(%rbx)
0000000000016ad8	movl	$0x0, (%rsp)
0000000000016adf	leaq	-0x88(%rbp), %rdi
0000000000016ae6	movl	$0x3, %esi
0000000000016aeb	movl	$0x70, %edx
0000000000016af0	movl	$0x40, %ecx
0000000000016af5	movl	%eax, %r8d
0000000000016af8	xorl	%r9d, %r9d
0000000000016afb	callq	_mach_msg
0000000000016b00	movl	%eax, %ebx
0000000000016b02	leal	-0x10000002(%rbx), %eax
0000000000016b08	cmpl	$0xe, %eax
0000000000016b0b	ja	0x16b21
0000000000016b0d	movl	$0x4003, %ecx
0000000000016b12	btl	%eax, %ecx
0000000000016b15	jae	0x16b21
0000000000016b17	movl	-0x7c(%rbp), %edi
0000000000016b1a	callq	_mig_put_reply_port
0000000000016b1f	jmp	0x16b78
0000000000016b21	testl	%ebx, %ebx
0000000000016b23	jne	0x16b56
0000000000016b25	movl	-0x74(%rbp), %eax
0000000000016b28	cmpl	$0x47, %eax
0000000000016b2b	je	0x16b60
0000000000016b2d	cmpl	$0x14e, %eax
0000000000016b32	jne	0x16b67
0000000000016b34	movl	-0x88(%rbp), %eax
0000000000016b3a	movl	-0x84(%rbp), %ecx
0000000000016b40	movl	$0xfffffed4, %ebx
0000000000016b45	testl	%eax, %eax
0000000000016b47	js	0x16b85
0000000000016b49	cmpl	$0x24, %ecx
0000000000016b4c	jne	0x16b6c
0000000000016b4e	cmpl	$0x0, -0x68(%rbp)
0000000000016b52	jne	0x16b90
0000000000016b54	jmp	0x16b6c
0000000000016b56	movl	-0x7c(%rbp), %edi
0000000000016b59	callq	_mig_dealloc_reply_port
0000000000016b5e	jmp	0x16b78
0000000000016b60	movl	$0xfffffecc, %ebx
0000000000016b65	jmp	0x16b6c
0000000000016b67	movl	$0xfffffed3, %ebx
0000000000016b6c	leaq	-0x88(%rbp), %rdi
0000000000016b73	callq	_mach_msg_destroy
0000000000016b78	movl	%ebx, %eax
0000000000016b7a	addq	$0x78, %rsp
0000000000016b7e	popq	%rbx
0000000000016b7f	popq	%r14
0000000000016b81	popq	%r15
0000000000016b83	popq	%rbp
0000000000016b84	retq
0000000000016b85	cmpl	$0x38, %ecx
0000000000016b88	jne	0x16b6c
0000000000016b8a	cmpl	$0x1, -0x70(%rbp)
0000000000016b8e	jne	0x16b6c
0000000000016b90	movl	$0xfffffed4, %ebx
0000000000016b95	cmpl	$0x0, -0x80(%rbp)
0000000000016b99	jne	0x16b6c
0000000000016b9b	testl	%eax, %eax
0000000000016b9d	js	0x16bab
0000000000016b9f	movl	-0x68(%rbp), %ebx
0000000000016ba2	testl	%ebx, %ebx
0000000000016ba4	jne	0x16b6c
0000000000016ba6	movl	-0x54(%rbp), %eax
0000000000016ba9	jmp	0x16bc4
0000000000016bab	movzbl	-0x61(%rbp), %eax
0000000000016baf	shll	$0x18, %eax
0000000000016bb2	cmpl	$0x1000000, %eax
0000000000016bb7	jne	0x16b6c
0000000000016bb9	movl	-0x60(%rbp), %eax
0000000000016bbc	shrl	$0x7, %eax
0000000000016bbf	cmpl	-0x54(%rbp), %eax
0000000000016bc2	jne	0x16b6c
0000000000016bc4	movq	-0x6c(%rbp), %rcx
0000000000016bc8	movq	%rcx, (%r15)
0000000000016bcb	movl	%eax, (%r14)
0000000000016bce	xorl	%ebx, %ebx
0000000000016bd0	jmp	0x16b78
__kernelrpc_mach_port_names:
0000000000016bd2	pushq	%rbp
0000000000016bd3	movq	%rsp, %rbp
0000000000016bd6	pushq	%r15
0000000000016bd8	pushq	%r14
0000000000016bda	pushq	%r13
0000000000016bdc	pushq	%r12
0000000000016bde	pushq	%rbx
0000000000016bdf	subq	$0x68, %rsp
0000000000016be3	movq	%r8, %r14
0000000000016be6	movq	%rcx, %r15
0000000000016be9	movq	%rdx, %r12
0000000000016bec	movq	%rsi, %r13
0000000000016bef	leaq	-0x80(%rbp), %rbx
0000000000016bf3	movl	$0x1513, (%rbx)
0000000000016bf9	movl	%edi, 0x8(%rbx)
0000000000016bfc	callq	_mig_get_reply_port
0000000000016c01	movl	%eax, 0xc(%rbx)
0000000000016c04	movabsq	$0xc8000000000, %rcx
0000000000016c0e	movq	%rcx, 0x10(%rbx)
0000000000016c12	movl	$0x0, (%rsp)
0000000000016c19	movq	%rbx, %rdi
0000000000016c1c	movl	$0x3, %esi
0000000000016c21	movl	$0x18, %edx
0000000000016c26	movl	$0x54, %ecx
0000000000016c2b	movl	%eax, %r8d
0000000000016c2e	xorl	%r9d, %r9d
0000000000016c31	callq	_mach_msg
0000000000016c36	movl	%eax, %ebx
0000000000016c38	leal	-0x10000002(%rbx), %eax
0000000000016c3e	cmpl	$0xe, %eax
0000000000016c41	ja	0x16c57
0000000000016c43	movl	$0x4003, %ecx
0000000000016c48	btl	%eax, %ecx
0000000000016c4b	jae	0x16c57
0000000000016c4d	movl	-0x74(%rbp), %edi
0000000000016c50	callq	_mig_put_reply_port
0000000000016c55	jmp	0x16ca5
0000000000016c57	testl	%ebx, %ebx
0000000000016c59	jne	0x16c86
0000000000016c5b	movl	-0x6c(%rbp), %eax
0000000000016c5e	cmpl	$0x47, %eax
0000000000016c61	je	0x16c90
0000000000016c63	cmpl	$0xce4, %eax
0000000000016c68	jne	0x16c97
0000000000016c6a	movl	-0x80(%rbp), %eax
0000000000016c6d	movl	-0x7c(%rbp), %ecx
0000000000016c70	movl	$0xfffffed4, %ebx
0000000000016c75	testl	%eax, %eax
0000000000016c77	js	0x16cb6
0000000000016c79	cmpl	$0x24, %ecx
0000000000016c7c	jne	0x16c9c
0000000000016c7e	cmpl	$0x0, -0x60(%rbp)
0000000000016c82	jne	0x16cc1
0000000000016c84	jmp	0x16c9c
0000000000016c86	movl	-0x74(%rbp), %edi
0000000000016c89	callq	_mig_dealloc_reply_port
0000000000016c8e	jmp	0x16ca5
0000000000016c90	movl	$0xfffffecc, %ebx
0000000000016c95	jmp	0x16c9c
0000000000016c97	movl	$0xfffffed3, %ebx
0000000000016c9c	leaq	-0x80(%rbp), %rdi
0000000000016ca0	callq	_mach_msg_destroy
0000000000016ca5	movl	%ebx, %eax
0000000000016ca7	addq	$0x68, %rsp
0000000000016cab	popq	%rbx
0000000000016cac	popq	%r12
0000000000016cae	popq	%r13
0000000000016cb0	popq	%r14
0000000000016cb2	popq	%r15
0000000000016cb4	popq	%rbp
0000000000016cb5	retq
0000000000016cb6	cmpl	$0x4c, %ecx
0000000000016cb9	jne	0x16c9c
0000000000016cbb	cmpl	$0x2, -0x68(%rbp)
0000000000016cbf	jne	0x16c9c
0000000000016cc1	movl	$0xfffffed4, %ebx
0000000000016cc6	cmpl	$0x0, -0x78(%rbp)
0000000000016cca	jne	0x16c9c
0000000000016ccc	testl	%eax, %eax
0000000000016cce	js	0x16cf7
0000000000016cd0	movl	-0x60(%rbp), %ebx
0000000000016cd3	testl	%ebx, %ebx
0000000000016cd5	jne	0x16c9c
0000000000016cd7	movl	-0x3c(%rbp), %eax
0000000000016cda	movl	-0x38(%rbp), %ecx
0000000000016cdd	movq	-0x64(%rbp), %rdx
0000000000016ce1	movq	%rdx, (%r13)
0000000000016ce5	movl	%eax, (%r12)
0000000000016ce9	movq	-0x54(%rbp), %rax
0000000000016ced	movq	%rax, (%r15)
0000000000016cf0	movl	%ecx, (%r14)
0000000000016cf3	xorl	%ebx, %ebx
0000000000016cf5	jmp	0x16ca5
0000000000016cf7	movzbl	-0x59(%rbp), %eax
0000000000016cfb	shll	$0x18, %eax
0000000000016cfe	cmpl	$0x1000000, %eax
0000000000016d03	jne	0x16c9c
0000000000016d05	movzbl	-0x49(%rbp), %eax
0000000000016d09	shll	$0x18, %eax
0000000000016d0c	cmpl	$0x1000000, %eax
0000000000016d11	jne	0x16c9c
0000000000016d13	movl	-0x58(%rbp), %eax
0000000000016d16	shrl	$0x2, %eax
0000000000016d19	cmpl	-0x3c(%rbp), %eax
0000000000016d1c	jne	0x16c9c
0000000000016d22	movl	-0x48(%rbp), %ecx
0000000000016d25	shrl	$0x2, %ecx
0000000000016d28	cmpl	-0x38(%rbp), %ecx
0000000000016d2b	jne	0x16c9c
0000000000016d31	jmp	0x16cdd
__kernelrpc_mach_port_rename:
0000000000016d33	pushq	%rbp
0000000000016d34	movq	%rsp, %rbp
0000000000016d37	pushq	%rbx
0000000000016d38	subq	$0x38, %rsp
0000000000016d3c	leaq	_NDR_record(%rip), %rax
0000000000016d43	movq	(%rax), %rax
0000000000016d46	leaq	-0x38(%rbp), %rbx
0000000000016d4a	movq	%rax, 0x18(%rbx)
0000000000016d4e	movl	%esi, 0x20(%rbx)
0000000000016d51	movl	%edx, 0x24(%rbx)
0000000000016d54	movl	$0x1513, (%rbx)
0000000000016d5a	movl	%edi, 0x8(%rbx)
0000000000016d5d	callq	_mig_get_reply_port
0000000000016d62	movl	%eax, 0xc(%rbx)
0000000000016d65	movabsq	$0xc8200000000, %rcx
0000000000016d6f	movq	%rcx, 0x10(%rbx)
0000000000016d73	movl	$0x0, (%rsp)
0000000000016d7a	movq	%rbx, %rdi
0000000000016d7d	movl	$0x3, %esi
0000000000016d82	movl	$0x28, %edx
0000000000016d87	movl	$0x2c, %ecx
0000000000016d8c	movl	%eax, %r8d
0000000000016d8f	xorl	%r9d, %r9d
0000000000016d92	callq	_mach_msg
0000000000016d97	movl	%eax, %ebx
0000000000016d99	leal	-0x10000002(%rbx), %eax
0000000000016d9f	cmpl	$0xe, %eax
0000000000016da2	ja	0x16db8
0000000000016da4	movl	$0x4003, %ecx
0000000000016da9	btl	%eax, %ecx
0000000000016dac	jae	0x16db8
0000000000016dae	movl	-0x2c(%rbp), %edi
0000000000016db1	callq	_mig_put_reply_port
0000000000016db6	jmp	0x16e0d
0000000000016db8	testl	%ebx, %ebx
0000000000016dba	jne	0x16dee
0000000000016dbc	movl	-0x24(%rbp), %eax
0000000000016dbf	cmpl	$0x47, %eax
0000000000016dc2	je	0x16df8
0000000000016dc4	cmpl	$0xce6, %eax
0000000000016dc9	jne	0x16dff
0000000000016dcb	movl	$0xfffffed4, %ebx
0000000000016dd0	cmpl	$0x0, -0x38(%rbp)
0000000000016dd4	js	0x16e04
0000000000016dd6	cmpl	$0x24, -0x34(%rbp)
0000000000016dda	jne	0x16e04
0000000000016ddc	movl	-0x30(%rbp), %eax
0000000000016ddf	testl	%eax, %eax
0000000000016de1	jne	0x16e04
0000000000016de3	movl	-0x18(%rbp), %ebx
0000000000016de6	testl	%ebx, %ebx
0000000000016de8	jne	0x16e04
0000000000016dea	xorl	%ebx, %ebx
0000000000016dec	jmp	0x16e0d
0000000000016dee	movl	-0x2c(%rbp), %edi
0000000000016df1	callq	_mig_dealloc_reply_port
0000000000016df6	jmp	0x16e0d
0000000000016df8	movl	$0xfffffecc, %ebx
0000000000016dfd	jmp	0x16e04
0000000000016dff	movl	$0xfffffed3, %ebx
0000000000016e04	leaq	-0x38(%rbp), %rdi
0000000000016e08	callq	_mach_msg_destroy
0000000000016e0d	movl	%ebx, %eax
0000000000016e0f	addq	$0x38, %rsp
0000000000016e13	popq	%rbx
0000000000016e14	popq	%rbp
0000000000016e15	retq
__kernelrpc_mach_port_allocate_name:
0000000000016e16	pushq	%rbp
0000000000016e17	movq	%rsp, %rbp
0000000000016e1a	pushq	%rbx
0000000000016e1b	subq	$0x38, %rsp
0000000000016e1f	leaq	_NDR_record(%rip), %rax
0000000000016e26	movq	(%rax), %rax
0000000000016e29	leaq	-0x38(%rbp), %rbx
0000000000016e2d	movq	%rax, 0x18(%rbx)
0000000000016e31	movl	%esi, 0x20(%rbx)
0000000000016e34	movl	%edx, 0x24(%rbx)
0000000000016e37	movl	$0x1513, (%rbx)
0000000000016e3d	movl	%edi, 0x8(%rbx)
0000000000016e40	callq	_mig_get_reply_port
0000000000016e45	movl	%eax, 0xc(%rbx)
0000000000016e48	movabsq	$0xc8300000000, %rcx
0000000000016e52	movq	%rcx, 0x10(%rbx)
0000000000016e56	movl	$0x0, (%rsp)
0000000000016e5d	movq	%rbx, %rdi
0000000000016e60	movl	$0x3, %esi
0000000000016e65	movl	$0x28, %edx
0000000000016e6a	movl	$0x2c, %ecx
0000000000016e6f	movl	%eax, %r8d
0000000000016e72	xorl	%r9d, %r9d
0000000000016e75	callq	_mach_msg
0000000000016e7a	movl	%eax, %ebx
0000000000016e7c	leal	-0x10000002(%rbx), %eax
0000000000016e82	cmpl	$0xe, %eax
0000000000016e85	ja	0x16e9b
0000000000016e87	movl	$0x4003, %ecx
0000000000016e8c	btl	%eax, %ecx
0000000000016e8f	jae	0x16e9b
0000000000016e91	movl	-0x2c(%rbp), %edi
0000000000016e94	callq	_mig_put_reply_port
0000000000016e99	jmp	0x16ef0
0000000000016e9b	testl	%ebx, %ebx
0000000000016e9d	jne	0x16ed1
0000000000016e9f	movl	-0x24(%rbp), %eax
0000000000016ea2	cmpl	$0x47, %eax
0000000000016ea5	je	0x16edb
0000000000016ea7	cmpl	$0xce7, %eax
0000000000016eac	jne	0x16ee2
0000000000016eae	movl	$0xfffffed4, %ebx
0000000000016eb3	cmpl	$0x0, -0x38(%rbp)
0000000000016eb7	js	0x16ee7
0000000000016eb9	cmpl	$0x24, -0x34(%rbp)
0000000000016ebd	jne	0x16ee7
0000000000016ebf	movl	-0x30(%rbp), %eax
0000000000016ec2	testl	%eax, %eax
0000000000016ec4	jne	0x16ee7
0000000000016ec6	movl	-0x18(%rbp), %ebx
0000000000016ec9	testl	%ebx, %ebx
0000000000016ecb	jne	0x16ee7
0000000000016ecd	xorl	%ebx, %ebx
0000000000016ecf	jmp	0x16ef0
0000000000016ed1	movl	-0x2c(%rbp), %edi
0000000000016ed4	callq	_mig_dealloc_reply_port
0000000000016ed9	jmp	0x16ef0
0000000000016edb	movl	$0xfffffecc, %ebx
0000000000016ee0	jmp	0x16ee7
0000000000016ee2	movl	$0xfffffed3, %ebx
0000000000016ee7	leaq	-0x38(%rbp), %rdi
0000000000016eeb	callq	_mach_msg_destroy
0000000000016ef0	movl	%ebx, %eax
0000000000016ef2	addq	$0x38, %rsp
0000000000016ef6	popq	%rbx
0000000000016ef7	popq	%rbp
0000000000016ef8	retq
__kernelrpc_mach_port_allocate:
0000000000016ef9	pushq	%rbp
0000000000016efa	movq	%rsp, %rbp
0000000000016efd	pushq	%r14
0000000000016eff	pushq	%rbx
0000000000016f00	subq	$0x40, %rsp
0000000000016f04	movq	%rdx, %r14
0000000000016f07	leaq	_NDR_record(%rip), %rax
0000000000016f0e	movq	(%rax), %rax
0000000000016f11	leaq	-0x40(%rbp), %rbx
0000000000016f15	movq	%rax, 0x18(%rbx)
0000000000016f19	movl	%esi, 0x20(%rbx)
0000000000016f1c	movl	$0x1513, (%rbx)
0000000000016f22	movl	%edi, 0x8(%rbx)
0000000000016f25	callq	_mig_get_reply_port
0000000000016f2a	movl	%eax, 0xc(%rbx)
0000000000016f2d	movabsq	$0xc8400000000, %rcx
0000000000016f37	movq	%rcx, 0x10(%rbx)
0000000000016f3b	movl	$0x0, (%rsp)
0000000000016f42	movq	%rbx, %rdi
0000000000016f45	movl	$0x3, %esi
0000000000016f4a	movl	$0x24, %edx
0000000000016f4f	movl	$0x30, %ecx
0000000000016f54	movl	%eax, %r8d
0000000000016f57	xorl	%r9d, %r9d
0000000000016f5a	callq	_mach_msg
0000000000016f5f	movl	%eax, %ebx
0000000000016f61	leal	-0x10000002(%rbx), %eax
0000000000016f67	cmpl	$0xe, %eax
0000000000016f6a	ja	0x16f80
0000000000016f6c	movl	$0x4003, %ecx
0000000000016f71	btl	%eax, %ecx
0000000000016f74	jae	0x16f80
0000000000016f76	movl	-0x34(%rbp), %edi
0000000000016f79	callq	_mig_put_reply_port
0000000000016f7e	jmp	0x16fe7
0000000000016f80	testl	%ebx, %ebx
0000000000016f82	jne	0x16fc8
0000000000016f84	movl	-0x2c(%rbp), %eax
0000000000016f87	cmpl	$0x47, %eax
0000000000016f8a	je	0x16fd2
0000000000016f8c	cmpl	$0xce8, %eax
0000000000016f91	jne	0x16fd9
0000000000016f93	movl	$0xfffffed4, %ebx
0000000000016f98	cmpl	$0x0, -0x40(%rbp)
0000000000016f9c	js	0x16fde
0000000000016f9e	movl	-0x3c(%rbp), %eax
0000000000016fa1	cmpl	$0x28, %eax
0000000000016fa4	je	0x16fb1
0000000000016fa6	cmpl	$0x24, %eax
0000000000016fa9	jne	0x16fde
0000000000016fab	cmpl	$0x0, -0x20(%rbp)
0000000000016faf	je	0x16fde
0000000000016fb1	cmpl	$0x0, -0x38(%rbp)
0000000000016fb5	jne	0x16fde
0000000000016fb7	movl	-0x20(%rbp), %ebx
0000000000016fba	testl	%ebx, %ebx
0000000000016fbc	jne	0x16fde
0000000000016fbe	movl	-0x1c(%rbp), %eax
0000000000016fc1	movl	%eax, (%r14)
0000000000016fc4	xorl	%ebx, %ebx
0000000000016fc6	jmp	0x16fe7
0000000000016fc8	movl	-0x34(%rbp), %edi
0000000000016fcb	callq	_mig_dealloc_reply_port
0000000000016fd0	jmp	0x16fe7
0000000000016fd2	movl	$0xfffffecc, %ebx
0000000000016fd7	jmp	0x16fde
0000000000016fd9	movl	$0xfffffed3, %ebx
0000000000016fde	leaq	-0x40(%rbp), %rdi
0000000000016fe2	callq	_mach_msg_destroy
0000000000016fe7	movl	%ebx, %eax
0000000000016fe9	addq	$0x40, %rsp
0000000000016fed	popq	%rbx
0000000000016fee	popq	%r14
0000000000016ff0	popq	%rbp
0000000000016ff1	retq
__kernelrpc_mach_port_destroy:
0000000000016ff2	pushq	%rbp
0000000000016ff3	movq	%rsp, %rbp
0000000000016ff6	pushq	%rbx
0000000000016ff7	subq	$0x38, %rsp
0000000000016ffb	leaq	_NDR_record(%rip), %rax
0000000000017002	movq	(%rax), %rax
0000000000017005	leaq	-0x38(%rbp), %rbx
0000000000017009	movq	%rax, 0x18(%rbx)
000000000001700d	movl	%esi, 0x20(%rbx)
0000000000017010	movl	$0x1513, (%rbx)
0000000000017016	movl	%edi, 0x8(%rbx)
0000000000017019	callq	_mig_get_reply_port
000000000001701e	movl	%eax, 0xc(%rbx)
0000000000017021	movabsq	$0xc8500000000, %rcx
000000000001702b	movq	%rcx, 0x10(%rbx)
000000000001702f	movl	$0x0, (%rsp)
0000000000017036	movq	%rbx, %rdi
0000000000017039	movl	$0x3, %esi
000000000001703e	movl	$0x24, %edx
0000000000017043	movl	$0x2c, %ecx
0000000000017048	movl	%eax, %r8d
000000000001704b	xorl	%r9d, %r9d
000000000001704e	callq	_mach_msg
0000000000017053	movl	%eax, %ebx
0000000000017055	leal	-0x10000002(%rbx), %eax
000000000001705b	cmpl	$0xe, %eax
000000000001705e	ja	0x17074
0000000000017060	movl	$0x4003, %ecx
0000000000017065	btl	%eax, %ecx
0000000000017068	jae	0x17074
000000000001706a	movl	-0x2c(%rbp), %edi
000000000001706d	callq	_mig_put_reply_port
0000000000017072	jmp	0x170c9
0000000000017074	testl	%ebx, %ebx
0000000000017076	jne	0x170aa
0000000000017078	movl	-0x24(%rbp), %eax
000000000001707b	cmpl	$0x47, %eax
000000000001707e	je	0x170b4
0000000000017080	cmpl	$0xce9, %eax
0000000000017085	jne	0x170bb
0000000000017087	movl	$0xfffffed4, %ebx
000000000001708c	cmpl	$0x0, -0x38(%rbp)
0000000000017090	js	0x170c0
0000000000017092	cmpl	$0x24, -0x34(%rbp)
0000000000017096	jne	0x170c0
0000000000017098	movl	-0x30(%rbp), %eax
000000000001709b	testl	%eax, %eax
000000000001709d	jne	0x170c0
000000000001709f	movl	-0x18(%rbp), %ebx
00000000000170a2	testl	%ebx, %ebx
00000000000170a4	jne	0x170c0
00000000000170a6	xorl	%ebx, %ebx
00000000000170a8	jmp	0x170c9
00000000000170aa	movl	-0x2c(%rbp), %edi
00000000000170ad	callq	_mig_dealloc_reply_port
00000000000170b2	jmp	0x170c9
00000000000170b4	movl	$0xfffffecc, %ebx
00000000000170b9	jmp	0x170c0
00000000000170bb	movl	$0xfffffed3, %ebx
00000000000170c0	leaq	-0x38(%rbp), %rdi
00000000000170c4	callq	_mach_msg_destroy
00000000000170c9	movl	%ebx, %eax
00000000000170cb	addq	$0x38, %rsp
00000000000170cf	popq	%rbx
00000000000170d0	popq	%rbp
00000000000170d1	retq
__kernelrpc_mach_port_deallocate:
00000000000170d2	pushq	%rbp
00000000000170d3	movq	%rsp, %rbp
00000000000170d6	pushq	%rbx
00000000000170d7	subq	$0x38, %rsp
00000000000170db	leaq	_NDR_record(%rip), %rax
00000000000170e2	movq	(%rax), %rax
00000000000170e5	leaq	-0x38(%rbp), %rbx
00000000000170e9	movq	%rax, 0x18(%rbx)
00000000000170ed	movl	%esi, 0x20(%rbx)
00000000000170f0	movl	$0x1513, (%rbx)
00000000000170f6	movl	%edi, 0x8(%rbx)
00000000000170f9	callq	_mig_get_reply_port
00000000000170fe	movl	%eax, 0xc(%rbx)
0000000000017101	movabsq	$0xc8600000000, %rcx
000000000001710b	movq	%rcx, 0x10(%rbx)
000000000001710f	movl	$0x0, (%rsp)
0000000000017116	movq	%rbx, %rdi
0000000000017119	movl	$0x3, %esi
000000000001711e	movl	$0x24, %edx
0000000000017123	movl	$0x2c, %ecx
0000000000017128	movl	%eax, %r8d
000000000001712b	xorl	%r9d, %r9d
000000000001712e	callq	_mach_msg
0000000000017133	movl	%eax, %ebx
0000000000017135	leal	-0x10000002(%rbx), %eax
000000000001713b	cmpl	$0xe, %eax
000000000001713e	ja	0x17154
0000000000017140	movl	$0x4003, %ecx
0000000000017145	btl	%eax, %ecx
0000000000017148	jae	0x17154
000000000001714a	movl	-0x2c(%rbp), %edi
000000000001714d	callq	_mig_put_reply_port
0000000000017152	jmp	0x171a9
0000000000017154	testl	%ebx, %ebx
0000000000017156	jne	0x1718a
0000000000017158	movl	-0x24(%rbp), %eax
000000000001715b	cmpl	$0x47, %eax
000000000001715e	je	0x17194
0000000000017160	cmpl	$0xcea, %eax
0000000000017165	jne	0x1719b
0000000000017167	movl	$0xfffffed4, %ebx
000000000001716c	cmpl	$0x0, -0x38(%rbp)
0000000000017170	js	0x171a0
0000000000017172	cmpl	$0x24, -0x34(%rbp)
0000000000017176	jne	0x171a0
0000000000017178	movl	-0x30(%rbp), %eax
000000000001717b	testl	%eax, %eax
000000000001717d	jne	0x171a0
000000000001717f	movl	-0x18(%rbp), %ebx
0000000000017182	testl	%ebx, %ebx
0000000000017184	jne	0x171a0
0000000000017186	xorl	%ebx, %ebx
0000000000017188	jmp	0x171a9
000000000001718a	movl	-0x2c(%rbp), %edi
000000000001718d	callq	_mig_dealloc_reply_port
0000000000017192	jmp	0x171a9
0000000000017194	movl	$0xfffffecc, %ebx
0000000000017199	jmp	0x171a0
000000000001719b	movl	$0xfffffed3, %ebx
00000000000171a0	leaq	-0x38(%rbp), %rdi
00000000000171a4	callq	_mach_msg_destroy
00000000000171a9	movl	%ebx, %eax
00000000000171ab	addq	$0x38, %rsp
00000000000171af	popq	%rbx
00000000000171b0	popq	%rbp
00000000000171b1	retq
__kernelrpc_mach_port_mod_refs:
00000000000171b2	pushq	%rbp
00000000000171b3	movq	%rsp, %rbp
00000000000171b6	pushq	%rbx
00000000000171b7	subq	$0x38, %rsp
00000000000171bb	leaq	_NDR_record(%rip), %rax
00000000000171c2	movq	(%rax), %rax
00000000000171c5	leaq	-0x38(%rbp), %rbx
00000000000171c9	movq	%rax, 0x18(%rbx)
00000000000171cd	movl	%esi, 0x20(%rbx)
00000000000171d0	movl	%edx, 0x24(%rbx)
00000000000171d3	movl	%ecx, 0x28(%rbx)
00000000000171d6	movl	$0x1513, (%rbx)
00000000000171dc	movl	%edi, 0x8(%rbx)
00000000000171df	callq	_mig_get_reply_port
00000000000171e4	movl	%eax, 0xc(%rbx)
00000000000171e7	movabsq	$0xc8800000000, %rcx
00000000000171f1	movq	%rcx, 0x10(%rbx)
00000000000171f5	movl	$0x0, (%rsp)
00000000000171fc	movq	%rbx, %rdi
00000000000171ff	movl	$0x3, %esi
0000000000017204	movl	$0x2c, %edx
0000000000017209	movl	$0x2c, %ecx
000000000001720e	movl	%eax, %r8d
0000000000017211	xorl	%r9d, %r9d
0000000000017214	callq	_mach_msg
0000000000017219	movl	%eax, %ebx
000000000001721b	leal	-0x10000002(%rbx), %eax
0000000000017221	cmpl	$0xe, %eax
0000000000017224	ja	0x1723a
0000000000017226	movl	$0x4003, %ecx
000000000001722b	btl	%eax, %ecx
000000000001722e	jae	0x1723a
0000000000017230	movl	-0x2c(%rbp), %edi
0000000000017233	callq	_mig_put_reply_port
0000000000017238	jmp	0x1728f
000000000001723a	testl	%ebx, %ebx
000000000001723c	jne	0x17270
000000000001723e	movl	-0x24(%rbp), %eax
0000000000017241	cmpl	$0x47, %eax
0000000000017244	je	0x1727a
0000000000017246	cmpl	$0xcec, %eax
000000000001724b	jne	0x17281
000000000001724d	movl	$0xfffffed4, %ebx
0000000000017252	cmpl	$0x0, -0x38(%rbp)
0000000000017256	js	0x17286
0000000000017258	cmpl	$0x24, -0x34(%rbp)
000000000001725c	jne	0x17286
000000000001725e	movl	-0x30(%rbp), %eax
0000000000017261	testl	%eax, %eax
0000000000017263	jne	0x17286
0000000000017265	movl	-0x18(%rbp), %ebx
0000000000017268	testl	%ebx, %ebx
000000000001726a	jne	0x17286
000000000001726c	xorl	%ebx, %ebx
000000000001726e	jmp	0x1728f
0000000000017270	movl	-0x2c(%rbp), %edi
0000000000017273	callq	_mig_dealloc_reply_port
0000000000017278	jmp	0x1728f
000000000001727a	movl	$0xfffffecc, %ebx
000000000001727f	jmp	0x17286
0000000000017281	movl	$0xfffffed3, %ebx
0000000000017286	leaq	-0x38(%rbp), %rdi
000000000001728a	callq	_mach_msg_destroy
000000000001728f	movl	%ebx, %eax
0000000000017291	addq	$0x38, %rsp
0000000000017295	popq	%rbx
0000000000017296	popq	%rbp
0000000000017297	retq
__kernelrpc_mach_port_peek:
0000000000017298	pushq	%rbp
0000000000017299	movq	%rsp, %rbp
000000000001729c	pushq	%r15
000000000001729e	pushq	%r14
00000000000172a0	pushq	%r13
00000000000172a2	pushq	%r12
00000000000172a4	pushq	%rbx
00000000000172a5	subq	$0x88, %rsp
00000000000172ac	movq	%rcx, %r12
00000000000172af	movq	0x18(%rbp), %r13
00000000000172b3	leaq	_NDR_record(%rip), %rax
00000000000172ba	movq	(%rax), %rax
00000000000172bd	leaq	-0xa8(%rbp), %rbx
00000000000172c4	movq	%rax, 0x18(%rbx)
00000000000172c8	movl	%esi, 0x20(%rbx)
00000000000172cb	movl	%edx, 0x24(%rbx)
00000000000172ce	movl	(%rcx), %eax
00000000000172d0	movl	%eax, 0x28(%rbx)
00000000000172d3	movl	(%r13), %eax
00000000000172d7	movl	$0x44, %ecx
00000000000172dc	cmpl	%ecx, %eax
00000000000172de	cmovbl	%eax, %ecx
00000000000172e1	movq	%r9, %r14
00000000000172e4	movq	%r8, %r15
00000000000172e7	movl	%ecx, 0x2c(%rbx)
00000000000172ea	movl	$0x1513, (%rbx)
00000000000172f0	movl	%edi, 0x8(%rbx)
00000000000172f3	callq	_mig_get_reply_port
00000000000172f8	movl	%eax, 0xc(%rbx)
00000000000172fb	movabsq	$0xc8900000000, %rcx
0000000000017305	movq	%rcx, 0x10(%rbx)
0000000000017309	movl	$0x0, (%rsp)
0000000000017310	movq	%rbx, %rdi
0000000000017313	movl	$0x3, %esi
0000000000017318	movl	$0x30, %edx
000000000001731d	movl	$0x80, %ecx
0000000000017322	movl	%eax, %r8d
0000000000017325	xorl	%r9d, %r9d
0000000000017328	callq	_mach_msg
000000000001732d	movl	%eax, %ebx
000000000001732f	leal	-0x10000002(%rbx), %eax
0000000000017335	cmpl	$0xe, %eax
0000000000017338	ja	0x17351
000000000001733a	movl	$0x4003, %ecx
000000000001733f	btl	%eax, %ecx
0000000000017342	jae	0x17351
0000000000017344	movl	-0x9c(%rbp), %edi
000000000001734a	callq	_mig_put_reply_port
000000000001734f	jmp	0x173c2
0000000000017351	testl	%ebx, %ebx
0000000000017353	jne	0x1739d
0000000000017355	movl	-0x94(%rbp), %eax
000000000001735b	cmpl	$0x47, %eax
000000000001735e	je	0x173aa
0000000000017360	cmpl	$0xced, %eax
0000000000017365	jne	0x173b1
0000000000017367	cmpl	$0x0, -0xa8(%rbp)
000000000001736e	js	0x17396
0000000000017370	movl	-0xa4(%rbp), %eax
0000000000017376	leal	-0x34(%rax), %ecx
0000000000017379	cmpl	$0x45, %ecx
000000000001737c	jb	0x1738d
000000000001737e	cmpl	$0x24, %eax
0000000000017381	jne	0x17396
0000000000017383	movl	-0x88(%rbp), %edx
0000000000017389	testl	%edx, %edx
000000000001738b	je	0x17396
000000000001738d	cmpl	$0x0, -0xa0(%rbp)
0000000000017394	je	0x173d6
0000000000017396	movl	$0xfffffed4, %ebx
000000000001739b	jmp	0x173b6
000000000001739d	movl	-0x9c(%rbp), %edi
00000000000173a3	callq	_mig_dealloc_reply_port
00000000000173a8	jmp	0x173c2
00000000000173aa	movl	$0xfffffecc, %ebx
00000000000173af	jmp	0x173b6
00000000000173b1	movl	$0xfffffed3, %ebx
00000000000173b6	leaq	-0xa8(%rbp), %rdi
00000000000173bd	callq	_mach_msg_destroy
00000000000173c2	movl	%ebx, %eax
00000000000173c4	addq	$0x88, %rsp
00000000000173cb	popq	%rbx
00000000000173cc	popq	%r12
00000000000173ce	popq	%r13
00000000000173d0	popq	%r14
00000000000173d2	popq	%r15
00000000000173d4	popq	%rbp
00000000000173d5	retq
00000000000173d6	movl	-0x88(%rbp), %ebx
00000000000173dc	testl	%ebx, %ebx
00000000000173de	jne	0x173b6
00000000000173e0	movl	-0x78(%rbp), %r8d
00000000000173e4	cmpq	$0x44, %r8
00000000000173e8	ja	0x17396
00000000000173ea	cmpl	%r8d, %ecx
00000000000173ed	jb	0x17396
00000000000173ef	leal	0x37(%r8), %ecx
00000000000173f3	andl	$-0x4, %ecx
00000000000173f6	movl	$0xfffffed4, %ebx
00000000000173fb	cmpl	%ecx, %eax
00000000000173fd	jne	0x173b6
00000000000173ff	movq	0x10(%rbp), %rdi
0000000000017403	leaq	-0x74(%rbp), %rsi
0000000000017407	movl	-0x10(%rsi), %eax
000000000001740a	movl	%eax, (%r12)
000000000001740e	movl	-0xc(%rsi), %eax
0000000000017411	movl	%eax, (%r15)
0000000000017414	movl	-0x8(%rsi), %eax
0000000000017417	movl	%eax, (%r14)
000000000001741a	movl	(%r13), %edx
000000000001741e	cmpl	%edx, %r8d
0000000000017421	jbe	0x17436
0000000000017423	movq	%r8, %rbx
0000000000017426	callq	_memcpy
000000000001742b	movl	%ebx, (%r13)
000000000001742f	movl	$0xfffffecd, %ebx
0000000000017434	jmp	0x173c2
0000000000017436	movq	%r8, %rdx
0000000000017439	movq	%r8, %rbx
000000000001743c	callq	_memcpy
0000000000017441	movl	%ebx, (%r13)
0000000000017445	xorl	%ebx, %ebx
0000000000017447	jmp	0x173c2
__kernelrpc_mach_port_set_mscount:
000000000001744c	pushq	%rbp
000000000001744d	movq	%rsp, %rbp
0000000000017450	pushq	%rbx
0000000000017451	subq	$0x38, %rsp
0000000000017455	leaq	_NDR_record(%rip), %rax
000000000001745c	movq	(%rax), %rax
000000000001745f	leaq	-0x38(%rbp), %rbx
0000000000017463	movq	%rax, 0x18(%rbx)
0000000000017467	movl	%esi, 0x20(%rbx)
000000000001746a	movl	%edx, 0x24(%rbx)
000000000001746d	movl	$0x1513, (%rbx)
0000000000017473	movl	%edi, 0x8(%rbx)
0000000000017476	callq	_mig_get_reply_port
000000000001747b	movl	%eax, 0xc(%rbx)
000000000001747e	movabsq	$0xc8a00000000, %rcx
0000000000017488	movq	%rcx, 0x10(%rbx)
000000000001748c	movl	$0x0, (%rsp)
0000000000017493	movq	%rbx, %rdi
0000000000017496	movl	$0x3, %esi
000000000001749b	movl	$0x28, %edx
00000000000174a0	movl	$0x2c, %ecx
00000000000174a5	movl	%eax, %r8d
00000000000174a8	xorl	%r9d, %r9d
00000000000174ab	callq	_mach_msg
00000000000174b0	movl	%eax, %ebx
00000000000174b2	leal	-0x10000002(%rbx), %eax
00000000000174b8	cmpl	$0xe, %eax
00000000000174bb	ja	0x174d1
00000000000174bd	movl	$0x4003, %ecx
00000000000174c2	btl	%eax, %ecx
00000000000174c5	jae	0x174d1
00000000000174c7	movl	-0x2c(%rbp), %edi
00000000000174ca	callq	_mig_put_reply_port
00000000000174cf	jmp	0x17526
00000000000174d1	testl	%ebx, %ebx
00000000000174d3	jne	0x17507
00000000000174d5	movl	-0x24(%rbp), %eax
00000000000174d8	cmpl	$0x47, %eax
00000000000174db	je	0x17511
00000000000174dd	cmpl	$0xcee, %eax
00000000000174e2	jne	0x17518
00000000000174e4	movl	$0xfffffed4, %ebx
00000000000174e9	cmpl	$0x0, -0x38(%rbp)
00000000000174ed	js	0x1751d
00000000000174ef	cmpl	$0x24, -0x34(%rbp)
00000000000174f3	jne	0x1751d
00000000000174f5	movl	-0x30(%rbp), %eax
00000000000174f8	testl	%eax, %eax
00000000000174fa	jne	0x1751d
00000000000174fc	movl	-0x18(%rbp), %ebx
00000000000174ff	testl	%ebx, %ebx
0000000000017501	jne	0x1751d
0000000000017503	xorl	%ebx, %ebx
0000000000017505	jmp	0x17526
0000000000017507	movl	-0x2c(%rbp), %edi
000000000001750a	callq	_mig_dealloc_reply_port
000000000001750f	jmp	0x17526
0000000000017511	movl	$0xfffffecc, %ebx
0000000000017516	jmp	0x1751d
0000000000017518	movl	$0xfffffed3, %ebx
000000000001751d	leaq	-0x38(%rbp), %rdi
0000000000017521	callq	_mach_msg_destroy
0000000000017526	movl	%ebx, %eax
0000000000017528	addq	$0x38, %rsp
000000000001752c	popq	%rbx
000000000001752d	popq	%rbp
000000000001752e	retq
__kernelrpc_mach_port_move_member:
000000000001752f	pushq	%rbp
0000000000017530	movq	%rsp, %rbp
0000000000017533	pushq	%rbx
0000000000017534	subq	$0x38, %rsp
0000000000017538	leaq	_NDR_record(%rip), %rax
000000000001753f	movq	(%rax), %rax
0000000000017542	leaq	-0x38(%rbp), %rbx
0000000000017546	movq	%rax, 0x18(%rbx)
000000000001754a	movl	%esi, 0x20(%rbx)
000000000001754d	movl	%edx, 0x24(%rbx)
0000000000017550	movl	$0x1513, (%rbx)
0000000000017556	movl	%edi, 0x8(%rbx)
0000000000017559	callq	_mig_get_reply_port
000000000001755e	movl	%eax, 0xc(%rbx)
0000000000017561	movabsq	$0xc8c00000000, %rcx
000000000001756b	movq	%rcx, 0x10(%rbx)
000000000001756f	movl	$0x0, (%rsp)
0000000000017576	movq	%rbx, %rdi
0000000000017579	movl	$0x3, %esi
000000000001757e	movl	$0x28, %edx
0000000000017583	movl	$0x2c, %ecx
0000000000017588	movl	%eax, %r8d
000000000001758b	xorl	%r9d, %r9d
000000000001758e	callq	_mach_msg
0000000000017593	movl	%eax, %ebx
0000000000017595	leal	-0x10000002(%rbx), %eax
000000000001759b	cmpl	$0xe, %eax
000000000001759e	ja	0x175b4
00000000000175a0	movl	$0x4003, %ecx
00000000000175a5	btl	%eax, %ecx
00000000000175a8	jae	0x175b4
00000000000175aa	movl	-0x2c(%rbp), %edi
00000000000175ad	callq	_mig_put_reply_port
00000000000175b2	jmp	0x17609
00000000000175b4	testl	%ebx, %ebx
00000000000175b6	jne	0x175ea
00000000000175b8	movl	-0x24(%rbp), %eax
00000000000175bb	cmpl	$0x47, %eax
00000000000175be	je	0x175f4
00000000000175c0	cmpl	$0xcf0, %eax
00000000000175c5	jne	0x175fb
00000000000175c7	movl	$0xfffffed4, %ebx
00000000000175cc	cmpl	$0x0, -0x38(%rbp)
00000000000175d0	js	0x17600
00000000000175d2	cmpl	$0x24, -0x34(%rbp)
00000000000175d6	jne	0x17600
00000000000175d8	movl	-0x30(%rbp), %eax
00000000000175db	testl	%eax, %eax
00000000000175dd	jne	0x17600
00000000000175df	movl	-0x18(%rbp), %ebx
00000000000175e2	testl	%ebx, %ebx
00000000000175e4	jne	0x17600
00000000000175e6	xorl	%ebx, %ebx
00000000000175e8	jmp	0x17609
00000000000175ea	movl	-0x2c(%rbp), %edi
00000000000175ed	callq	_mig_dealloc_reply_port
00000000000175f2	jmp	0x17609
00000000000175f4	movl	$0xfffffecc, %ebx
00000000000175f9	jmp	0x17600
00000000000175fb	movl	$0xfffffed3, %ebx
0000000000017600	leaq	-0x38(%rbp), %rdi
0000000000017604	callq	_mach_msg_destroy
0000000000017609	movl	%ebx, %eax
000000000001760b	addq	$0x38, %rsp
000000000001760f	popq	%rbx
0000000000017610	popq	%rbp
0000000000017611	retq
__kernelrpc_mach_port_insert_right:
0000000000017612	pushq	%rbp
0000000000017613	movq	%rsp, %rbp
0000000000017616	pushq	%rbx
0000000000017617	subq	$0x48, %rsp
000000000001761b	leaq	-0x40(%rbp), %rbx
000000000001761f	movl	$0x1, 0x18(%rbx)
0000000000017626	movl	%edx, 0x1c(%rbx)
0000000000017629	shll	$0x10, %ecx
000000000001762c	andl	$0xff0000, %ecx
0000000000017632	movl	%ecx, 0x24(%rbx)
0000000000017635	leaq	_NDR_record(%rip), %rax
000000000001763c	movq	(%rax), %rax
000000000001763f	movq	%rax, 0x28(%rbx)
0000000000017643	movl	%esi, 0x30(%rbx)
0000000000017646	movl	$0x80001513, (%rbx)
000000000001764c	movl	%edi, 0x8(%rbx)
000000000001764f	callq	_mig_get_reply_port
0000000000017654	movl	%eax, 0xc(%rbx)
0000000000017657	movabsq	$0xc8e00000000, %rcx
0000000000017661	movq	%rcx, 0x10(%rbx)
0000000000017665	movl	$0x0, (%rsp)
000000000001766c	movq	%rbx, %rdi
000000000001766f	movl	$0x3, %esi
0000000000017674	movl	$0x34, %edx
0000000000017679	movl	$0x2c, %ecx
000000000001767e	movl	%eax, %r8d
0000000000017681	xorl	%r9d, %r9d
0000000000017684	callq	_mach_msg
0000000000017689	movl	%eax, %ebx
000000000001768b	leal	-0x10000002(%rbx), %eax
0000000000017691	cmpl	$0xe, %eax
0000000000017694	ja	0x176aa
0000000000017696	movl	$0x4003, %ecx
000000000001769b	btl	%eax, %ecx
000000000001769e	jae	0x176aa
00000000000176a0	movl	-0x34(%rbp), %edi
00000000000176a3	callq	_mig_put_reply_port
00000000000176a8	jmp	0x176ff
00000000000176aa	testl	%ebx, %ebx
00000000000176ac	jne	0x176e0
00000000000176ae	movl	-0x2c(%rbp), %eax
00000000000176b1	cmpl	$0x47, %eax
00000000000176b4	je	0x176ea
00000000000176b6	cmpl	$0xcf2, %eax
00000000000176bb	jne	0x176f1
00000000000176bd	movl	$0xfffffed4, %ebx
00000000000176c2	cmpl	$0x0, -0x40(%rbp)
00000000000176c6	js	0x176f6
00000000000176c8	cmpl	$0x24, -0x3c(%rbp)
00000000000176cc	jne	0x176f6
00000000000176ce	movl	-0x38(%rbp), %eax
00000000000176d1	testl	%eax, %eax
00000000000176d3	jne	0x176f6
00000000000176d5	movl	-0x20(%rbp), %ebx
00000000000176d8	testl	%ebx, %ebx
00000000000176da	jne	0x176f6
00000000000176dc	xorl	%ebx, %ebx
00000000000176de	jmp	0x176ff
00000000000176e0	movl	-0x34(%rbp), %edi
00000000000176e3	callq	_mig_dealloc_reply_port
00000000000176e8	jmp	0x176ff
00000000000176ea	movl	$0xfffffecc, %ebx
00000000000176ef	jmp	0x176f6
00000000000176f1	movl	$0xfffffed3, %ebx
00000000000176f6	leaq	-0x40(%rbp), %rdi
00000000000176fa	callq	_mach_msg_destroy
00000000000176ff	movl	%ebx, %eax
0000000000017701	addq	$0x48, %rsp
0000000000017705	popq	%rbx
0000000000017706	popq	%rbp
0000000000017707	retq
__kernelrpc_mach_port_set_seqno:
0000000000017708	pushq	%rbp
0000000000017709	movq	%rsp, %rbp
000000000001770c	pushq	%rbx
000000000001770d	subq	$0x38, %rsp
0000000000017711	leaq	_NDR_record(%rip), %rax
0000000000017718	movq	(%rax), %rax
000000000001771b	leaq	-0x38(%rbp), %rbx
000000000001771f	movq	%rax, 0x18(%rbx)
0000000000017723	movl	%esi, 0x20(%rbx)
0000000000017726	movl	%edx, 0x24(%rbx)
0000000000017729	movl	$0x1513, (%rbx)
000000000001772f	movl	%edi, 0x8(%rbx)
0000000000017732	callq	_mig_get_reply_port
0000000000017737	movl	%eax, 0xc(%rbx)
000000000001773a	movabsq	$0xc9000000000, %rcx
0000000000017744	movq	%rcx, 0x10(%rbx)
0000000000017748	movl	$0x0, (%rsp)
000000000001774f	movq	%rbx, %rdi
0000000000017752	movl	$0x3, %esi
0000000000017757	movl	$0x28, %edx
000000000001775c	movl	$0x2c, %ecx
0000000000017761	movl	%eax, %r8d
0000000000017764	xorl	%r9d, %r9d
0000000000017767	callq	_mach_msg
000000000001776c	movl	%eax, %ebx
000000000001776e	leal	-0x10000002(%rbx), %eax
0000000000017774	cmpl	$0xe, %eax
0000000000017777	ja	0x1778d
0000000000017779	movl	$0x4003, %ecx
000000000001777e	btl	%eax, %ecx
0000000000017781	jae	0x1778d
0000000000017783	movl	-0x2c(%rbp), %edi
0000000000017786	callq	_mig_put_reply_port
000000000001778b	jmp	0x177e2
000000000001778d	testl	%ebx, %ebx
000000000001778f	jne	0x177c3
0000000000017791	movl	-0x24(%rbp), %eax
0000000000017794	cmpl	$0x47, %eax
0000000000017797	je	0x177cd
0000000000017799	cmpl	$0xcf4, %eax
000000000001779e	jne	0x177d4
00000000000177a0	movl	$0xfffffed4, %ebx
00000000000177a5	cmpl	$0x0, -0x38(%rbp)
00000000000177a9	js	0x177d9
00000000000177ab	cmpl	$0x24, -0x34(%rbp)
00000000000177af	jne	0x177d9
00000000000177b1	movl	-0x30(%rbp), %eax
00000000000177b4	testl	%eax, %eax
00000000000177b6	jne	0x177d9
00000000000177b8	movl	-0x18(%rbp), %ebx
00000000000177bb	testl	%ebx, %ebx
00000000000177bd	jne	0x177d9
00000000000177bf	xorl	%ebx, %ebx
00000000000177c1	jmp	0x177e2
00000000000177c3	movl	-0x2c(%rbp), %edi
00000000000177c6	callq	_mig_dealloc_reply_port
00000000000177cb	jmp	0x177e2
00000000000177cd	movl	$0xfffffecc, %ebx
00000000000177d2	jmp	0x177d9
00000000000177d4	movl	$0xfffffed3, %ebx
00000000000177d9	leaq	-0x38(%rbp), %rdi
00000000000177dd	callq	_mach_msg_destroy
00000000000177e2	movl	%ebx, %eax
00000000000177e4	addq	$0x38, %rsp
00000000000177e8	popq	%rbx
00000000000177e9	popq	%rbp
00000000000177ea	retq
__kernelrpc_mach_port_allocate_qos:
00000000000177eb	pushq	%rbp
00000000000177ec	movq	%rsp, %rbp
00000000000177ef	pushq	%r15
00000000000177f1	pushq	%r14
00000000000177f3	pushq	%rbx
00000000000177f4	subq	$0x48, %rsp
00000000000177f8	movq	%rcx, %r14
00000000000177fb	movq	%rdx, %r15
00000000000177fe	leaq	_NDR_record(%rip), %rax
0000000000017805	movq	(%rax), %rax
0000000000017808	leaq	-0x50(%rbp), %rbx
000000000001780c	movq	%rax, 0x18(%rbx)
0000000000017810	movl	%esi, 0x20(%rbx)
0000000000017813	movq	(%rdx), %rax
0000000000017816	movq	%rax, 0x24(%rbx)
000000000001781a	movl	$0x1513, (%rbx)
0000000000017820	movl	%edi, 0x8(%rbx)
0000000000017823	callq	_mig_get_reply_port
0000000000017828	movl	%eax, 0xc(%rbx)
000000000001782b	movabsq	$0xc9300000000, %rcx
0000000000017835	movq	%rcx, 0x10(%rbx)
0000000000017839	movl	$0x0, (%rsp)
0000000000017840	movq	%rbx, %rdi
0000000000017843	movl	$0x3, %esi
0000000000017848	movl	$0x2c, %edx
000000000001784d	movl	$0x38, %ecx
0000000000017852	movl	%eax, %r8d
0000000000017855	xorl	%r9d, %r9d
0000000000017858	callq	_mach_msg
000000000001785d	movl	%eax, %ebx
000000000001785f	leal	-0x10000002(%rbx), %eax
0000000000017865	cmpl	$0xe, %eax
0000000000017868	ja	0x1787e
000000000001786a	movl	$0x4003, %ecx
000000000001786f	btl	%eax, %ecx
0000000000017872	jae	0x1787e
0000000000017874	movl	-0x44(%rbp), %edi
0000000000017877	callq	_mig_put_reply_port
000000000001787c	jmp	0x178ec
000000000001787e	testl	%ebx, %ebx
0000000000017880	jne	0x178cd
0000000000017882	movl	-0x3c(%rbp), %eax
0000000000017885	cmpl	$0x47, %eax
0000000000017888	je	0x178d7
000000000001788a	cmpl	$0xcf7, %eax
000000000001788f	jne	0x178de
0000000000017891	movl	$0xfffffed4, %ebx
0000000000017896	cmpl	$0x0, -0x50(%rbp)
000000000001789a	js	0x178e3
000000000001789c	movl	-0x4c(%rbp), %eax
000000000001789f	cmpl	$0x30, %eax
00000000000178a2	je	0x178af
00000000000178a4	cmpl	$0x24, %eax
00000000000178a7	jne	0x178e3
00000000000178a9	cmpl	$0x0, -0x30(%rbp)
00000000000178ad	je	0x178e3
00000000000178af	cmpl	$0x0, -0x48(%rbp)
00000000000178b3	jne	0x178e3
00000000000178b5	movl	-0x30(%rbp), %ebx
00000000000178b8	testl	%ebx, %ebx
00000000000178ba	jne	0x178e3
00000000000178bc	movq	-0x2c(%rbp), %rax
00000000000178c0	movq	%rax, (%r15)
00000000000178c3	movl	-0x24(%rbp), %eax
00000000000178c6	movl	%eax, (%r14)
00000000000178c9	xorl	%ebx, %ebx
00000000000178cb	jmp	0x178ec
00000000000178cd	movl	-0x44(%rbp), %edi
00000000000178d0	callq	_mig_dealloc_reply_port
00000000000178d5	jmp	0x178ec
00000000000178d7	movl	$0xfffffecc, %ebx
00000000000178dc	jmp	0x178e3
00000000000178de	movl	$0xfffffed3, %ebx
00000000000178e3	leaq	-0x50(%rbp), %rdi
00000000000178e7	callq	_mach_msg_destroy
00000000000178ec	movl	%ebx, %eax
00000000000178ee	addq	$0x48, %rsp
00000000000178f2	popq	%rbx
00000000000178f3	popq	%r14
00000000000178f5	popq	%r15
00000000000178f7	popq	%rbp
00000000000178f8	retq
__kernelrpc_mach_port_allocate_full:
00000000000178f9	pushq	%rbp
00000000000178fa	movq	%rsp, %rbp
00000000000178fd	pushq	%r15
00000000000178ff	pushq	%r14
0000000000017901	pushq	%rbx
0000000000017902	subq	$0x48, %rsp
0000000000017906	movq	%r8, %r14
0000000000017909	movq	%rcx, %r15
000000000001790c	leaq	-0x58(%rbp), %rbx
0000000000017910	movl	$0x1, 0x18(%rbx)
0000000000017917	movl	%edx, 0x1c(%rbx)
000000000001791a	movl	$0x130000, 0x24(%rbx)
0000000000017921	leaq	_NDR_record(%rip), %rax
0000000000017928	movq	(%rax), %rax
000000000001792b	movq	%rax, 0x28(%rbx)
000000000001792f	movl	%esi, 0x30(%rbx)
0000000000017932	movq	(%rcx), %rax
0000000000017935	movq	%rax, 0x34(%rbx)
0000000000017939	movl	(%r8), %eax
000000000001793c	movl	%eax, 0x3c(%rbx)
000000000001793f	movl	$0x80001513, (%rbx)
0000000000017945	movl	%edi, 0x8(%rbx)
0000000000017948	callq	_mig_get_reply_port
000000000001794d	movl	%eax, 0xc(%rbx)
0000000000017950	movabsq	$0xc9400000000, %rcx
000000000001795a	movq	%rcx, 0x10(%rbx)
000000000001795e	movl	$0x0, (%rsp)
0000000000017965	movq	%rbx, %rdi
0000000000017968	movl	$0x3, %esi
000000000001796d	movl	$0x40, %edx
0000000000017972	movl	$0x38, %ecx
0000000000017977	movl	%eax, %r8d
000000000001797a	xorl	%r9d, %r9d
000000000001797d	callq	_mach_msg
0000000000017982	movl	%eax, %ebx
0000000000017984	leal	-0x10000002(%rbx), %eax
000000000001798a	cmpl	$0xe, %eax
000000000001798d	ja	0x179a3
000000000001798f	movl	$0x4003, %ecx
0000000000017994	btl	%eax, %ecx
0000000000017997	jae	0x179a3
0000000000017999	movl	-0x4c(%rbp), %edi
000000000001799c	callq	_mig_put_reply_port
00000000000179a1	jmp	0x17a11
00000000000179a3	testl	%ebx, %ebx
00000000000179a5	jne	0x179f2
00000000000179a7	movl	-0x44(%rbp), %eax
00000000000179aa	cmpl	$0x47, %eax
00000000000179ad	je	0x179fc
00000000000179af	cmpl	$0xcf8, %eax
00000000000179b4	jne	0x17a03
00000000000179b6	movl	$0xfffffed4, %ebx
00000000000179bb	cmpl	$0x0, -0x58(%rbp)
00000000000179bf	js	0x17a08
00000000000179c1	movl	-0x54(%rbp), %eax
00000000000179c4	cmpl	$0x30, %eax
00000000000179c7	je	0x179d4
00000000000179c9	cmpl	$0x24, %eax
00000000000179cc	jne	0x17a08
00000000000179ce	cmpl	$0x0, -0x38(%rbp)
00000000000179d2	je	0x17a08
00000000000179d4	cmpl	$0x0, -0x50(%rbp)
00000000000179d8	jne	0x17a08
00000000000179da	movl	-0x38(%rbp), %ebx
00000000000179dd	testl	%ebx, %ebx
00000000000179df	jne	0x17a08
00000000000179e1	movq	-0x34(%rbp), %rax
00000000000179e5	movq	%rax, (%r15)
00000000000179e8	movl	-0x2c(%rbp), %eax
00000000000179eb	movl	%eax, (%r14)
00000000000179ee	xorl	%ebx, %ebx
00000000000179f0	jmp	0x17a11
00000000000179f2	movl	-0x4c(%rbp), %edi
00000000000179f5	callq	_mig_dealloc_reply_port
00000000000179fa	jmp	0x17a11
00000000000179fc	movl	$0xfffffecc, %ebx
0000000000017a01	jmp	0x17a08
0000000000017a03	movl	$0xfffffed3, %ebx
0000000000017a08	leaq	-0x58(%rbp), %rdi
0000000000017a0c	callq	_mach_msg_destroy
0000000000017a11	movl	%ebx, %eax
0000000000017a13	addq	$0x48, %rsp
0000000000017a17	popq	%rbx
0000000000017a18	popq	%r14
0000000000017a1a	popq	%r15
0000000000017a1c	popq	%rbp
0000000000017a1d	retq
__kernelrpc_task_set_port_space:
0000000000017a1e	pushq	%rbp
0000000000017a1f	movq	%rsp, %rbp
0000000000017a22	pushq	%rbx
0000000000017a23	subq	$0x38, %rsp
0000000000017a27	leaq	_NDR_record(%rip), %rax
0000000000017a2e	movq	(%rax), %rax
0000000000017a31	leaq	-0x38(%rbp), %rbx
0000000000017a35	movq	%rax, 0x18(%rbx)
0000000000017a39	movl	%esi, 0x20(%rbx)
0000000000017a3c	movl	$0x1513, (%rbx)
0000000000017a42	movl	%edi, 0x8(%rbx)
0000000000017a45	callq	_mig_get_reply_port
0000000000017a4a	movl	%eax, 0xc(%rbx)
0000000000017a4d	movabsq	$0xc9500000000, %rcx
0000000000017a57	movq	%rcx, 0x10(%rbx)
0000000000017a5b	movl	$0x0, (%rsp)
0000000000017a62	movq	%rbx, %rdi
0000000000017a65	movl	$0x3, %esi
0000000000017a6a	movl	$0x24, %edx
0000000000017a6f	movl	$0x2c, %ecx
0000000000017a74	movl	%eax, %r8d
0000000000017a77	xorl	%r9d, %r9d
0000000000017a7a	callq	_mach_msg
0000000000017a7f	movl	%eax, %ebx
0000000000017a81	leal	-0x10000002(%rbx), %eax
0000000000017a87	cmpl	$0xe, %eax
0000000000017a8a	ja	0x17aa0
0000000000017a8c	movl	$0x4003, %ecx
0000000000017a91	btl	%eax, %ecx
0000000000017a94	jae	0x17aa0
0000000000017a96	movl	-0x2c(%rbp), %edi
0000000000017a99	callq	_mig_put_reply_port
0000000000017a9e	jmp	0x17af5
0000000000017aa0	testl	%ebx, %ebx
0000000000017aa2	jne	0x17ad6
0000000000017aa4	movl	-0x24(%rbp), %eax
0000000000017aa7	cmpl	$0x47, %eax
0000000000017aaa	je	0x17ae0
0000000000017aac	cmpl	$0xcf9, %eax
0000000000017ab1	jne	0x17ae7
0000000000017ab3	movl	$0xfffffed4, %ebx
0000000000017ab8	cmpl	$0x0, -0x38(%rbp)
0000000000017abc	js	0x17aec
0000000000017abe	cmpl	$0x24, -0x34(%rbp)
0000000000017ac2	jne	0x17aec
0000000000017ac4	movl	-0x30(%rbp), %eax
0000000000017ac7	testl	%eax, %eax
0000000000017ac9	jne	0x17aec
0000000000017acb	movl	-0x18(%rbp), %ebx
0000000000017ace	testl	%ebx, %ebx
0000000000017ad0	jne	0x17aec
0000000000017ad2	xorl	%ebx, %ebx
0000000000017ad4	jmp	0x17af5
0000000000017ad6	movl	-0x2c(%rbp), %edi
0000000000017ad9	callq	_mig_dealloc_reply_port
0000000000017ade	jmp	0x17af5
0000000000017ae0	movl	$0xfffffecc, %ebx
0000000000017ae5	jmp	0x17aec
0000000000017ae7	movl	$0xfffffed3, %ebx
0000000000017aec	leaq	-0x38(%rbp), %rdi
0000000000017af0	callq	_mach_msg_destroy
0000000000017af5	movl	%ebx, %eax
0000000000017af7	addq	$0x38, %rsp
0000000000017afb	popq	%rbx
0000000000017afc	popq	%rbp
0000000000017afd	retq
__kernelrpc_mach_port_get_srights:
0000000000017afe	pushq	%rbp
0000000000017aff	movq	%rsp, %rbp
0000000000017b02	pushq	%r14
0000000000017b04	pushq	%rbx
0000000000017b05	subq	$0x40, %rsp
0000000000017b09	movq	%rdx, %r14
0000000000017b0c	leaq	_NDR_record(%rip), %rax
0000000000017b13	movq	(%rax), %rax
0000000000017b16	leaq	-0x40(%rbp), %rbx
0000000000017b1a	movq	%rax, 0x18(%rbx)
0000000000017b1e	movl	%esi, 0x20(%rbx)
0000000000017b21	movl	$0x1513, (%rbx)
0000000000017b27	movl	%edi, 0x8(%rbx)
0000000000017b2a	callq	_mig_get_reply_port
0000000000017b2f	movl	%eax, 0xc(%rbx)
0000000000017b32	movabsq	$0xc9600000000, %rcx
0000000000017b3c	movq	%rcx, 0x10(%rbx)
0000000000017b40	movl	$0x0, (%rsp)
0000000000017b47	movq	%rbx, %rdi
0000000000017b4a	movl	$0x3, %esi
0000000000017b4f	movl	$0x24, %edx
0000000000017b54	movl	$0x30, %ecx
0000000000017b59	movl	%eax, %r8d
0000000000017b5c	xorl	%r9d, %r9d
0000000000017b5f	callq	_mach_msg
0000000000017b64	movl	%eax, %ebx
0000000000017b66	leal	-0x10000002(%rbx), %eax
0000000000017b6c	cmpl	$0xe, %eax
0000000000017b6f	ja	0x17b85
0000000000017b71	movl	$0x4003, %ecx
0000000000017b76	btl	%eax, %ecx
0000000000017b79	jae	0x17b85
0000000000017b7b	movl	-0x34(%rbp), %edi
0000000000017b7e	callq	_mig_put_reply_port
0000000000017b83	jmp	0x17bec
0000000000017b85	testl	%ebx, %ebx
0000000000017b87	jne	0x17bcd
0000000000017b89	movl	-0x2c(%rbp), %eax
0000000000017b8c	cmpl	$0x47, %eax
0000000000017b8f	je	0x17bd7
0000000000017b91	cmpl	$0xcfa, %eax
0000000000017b96	jne	0x17bde
0000000000017b98	movl	$0xfffffed4, %ebx
0000000000017b9d	cmpl	$0x0, -0x40(%rbp)
0000000000017ba1	js	0x17be3
0000000000017ba3	movl	-0x3c(%rbp), %eax
0000000000017ba6	cmpl	$0x28, %eax
0000000000017ba9	je	0x17bb6
0000000000017bab	cmpl	$0x24, %eax
0000000000017bae	jne	0x17be3
0000000000017bb0	cmpl	$0x0, -0x20(%rbp)
0000000000017bb4	je	0x17be3
0000000000017bb6	cmpl	$0x0, -0x38(%rbp)
0000000000017bba	jne	0x17be3
0000000000017bbc	movl	-0x20(%rbp), %ebx
0000000000017bbf	testl	%ebx, %ebx
0000000000017bc1	jne	0x17be3
0000000000017bc3	movl	-0x1c(%rbp), %eax
0000000000017bc6	movl	%eax, (%r14)
0000000000017bc9	xorl	%ebx, %ebx
0000000000017bcb	jmp	0x17bec
0000000000017bcd	movl	-0x34(%rbp), %edi
0000000000017bd0	callq	_mig_dealloc_reply_port
0000000000017bd5	jmp	0x17bec
0000000000017bd7	movl	$0xfffffecc, %ebx
0000000000017bdc	jmp	0x17be3
0000000000017bde	movl	$0xfffffed3, %ebx
0000000000017be3	leaq	-0x40(%rbp), %rdi
0000000000017be7	callq	_mach_msg_destroy
0000000000017bec	movl	%ebx, %eax
0000000000017bee	addq	$0x40, %rsp
0000000000017bf2	popq	%rbx
0000000000017bf3	popq	%r14
0000000000017bf5	popq	%rbp
0000000000017bf6	retq
__kernelrpc_mach_port_space_info:
0000000000017bf7	pushq	%rbp
0000000000017bf8	movq	%rsp, %rbp
0000000000017bfb	pushq	%r15
0000000000017bfd	pushq	%r14
0000000000017bff	pushq	%r13
0000000000017c01	pushq	%r12
0000000000017c03	pushq	%rbx
0000000000017c04	subq	$0x88, %rsp
0000000000017c0b	movq	%r9, -0x38(%rbp)
0000000000017c0f	movq	%r8, -0x30(%rbp)
0000000000017c13	movq	%rcx, %r12
0000000000017c16	movq	%rdx, %r13
0000000000017c19	movq	%rsi, %r15
0000000000017c1c	leaq	-0xa8(%rbp), %rbx
0000000000017c23	movl	$0x1513, (%rbx)
0000000000017c29	movl	%edi, 0x8(%rbx)
0000000000017c2c	callq	_mig_get_reply_port
0000000000017c31	movl	%eax, 0xc(%rbx)
0000000000017c34	movabsq	$0xc9700000000, %rcx
0000000000017c3e	movq	%rcx, 0x10(%rbx)
0000000000017c42	movl	$0x0, (%rsp)
0000000000017c49	movq	%rbx, %rdi
0000000000017c4c	movl	$0x3, %esi
0000000000017c51	movl	$0x18, %edx
0000000000017c56	movl	$0x6c, %ecx
0000000000017c5b	movl	%eax, %r8d
0000000000017c5e	xorl	%r9d, %r9d
0000000000017c61	callq	_mach_msg
0000000000017c66	movl	%eax, %r14d
0000000000017c69	leal	-0x10000002(%r14), %eax
0000000000017c70	cmpl	$0xe, %eax
0000000000017c73	ja	0x17c8c
0000000000017c75	movl	$0x4003, %ecx
0000000000017c7a	btl	%eax, %ecx
0000000000017c7d	jae	0x17c8c
0000000000017c7f	movl	-0x9c(%rbp), %edi
0000000000017c85	callq	_mig_put_reply_port
0000000000017c8a	jmp	0x17cf0
0000000000017c8c	testl	%r14d, %r14d
0000000000017c8f	jne	0x17cc9
0000000000017c91	movl	-0x94(%rbp), %eax
0000000000017c97	cmpl	$0x47, %eax
0000000000017c9a	je	0x17cd6
0000000000017c9c	cmpl	$0xcfb, %eax
0000000000017ca1	jne	0x17cde
0000000000017ca3	movl	-0xa8(%rbp), %eax
0000000000017ca9	movl	-0xa4(%rbp), %ecx
0000000000017caf	movl	$0xfffffed4, %r14d
0000000000017cb5	testl	%eax, %eax
0000000000017cb7	js	0x17d05
0000000000017cb9	cmpl	$0x24, %ecx
0000000000017cbc	jne	0x17ce4
0000000000017cbe	cmpl	$0x0, -0x88(%rbp)
0000000000017cc5	jne	0x17d13
0000000000017cc7	jmp	0x17ce4
0000000000017cc9	movl	-0x9c(%rbp), %edi
0000000000017ccf	callq	_mig_dealloc_reply_port
0000000000017cd4	jmp	0x17cf0
0000000000017cd6	movl	$0xfffffecc, %r14d
0000000000017cdc	jmp	0x17ce4
0000000000017cde	movl	$0xfffffed3, %r14d
0000000000017ce4	leaq	-0xa8(%rbp), %rdi
0000000000017ceb	callq	_mach_msg_destroy
0000000000017cf0	movl	%r14d, %eax
0000000000017cf3	addq	$0x88, %rsp
0000000000017cfa	popq	%rbx
0000000000017cfb	popq	%r12
0000000000017cfd	popq	%r13
0000000000017cff	popq	%r14
0000000000017d01	popq	%r15
0000000000017d03	popq	%rbp
0000000000017d04	retq
0000000000017d05	cmpl	$0x64, %ecx
0000000000017d08	jne	0x17ce4
0000000000017d0a	cmpl	$0x2, -0x90(%rbp)
0000000000017d11	jne	0x17ce4
0000000000017d13	movl	$0xfffffed4, %r14d
0000000000017d19	cmpl	$0x0, -0xa0(%rbp)
0000000000017d20	jne	0x17ce4
0000000000017d22	testl	%eax, %eax
0000000000017d24	js	0x17d77
0000000000017d26	movl	-0x88(%rbp), %r14d
0000000000017d2d	testl	%r14d, %r14d
0000000000017d30	jne	0x17ce4
0000000000017d32	movl	-0x4c(%rbp), %eax
0000000000017d35	movl	-0x48(%rbp), %ecx
0000000000017d38	movq	-0x54(%rbp), %rdx
0000000000017d3c	movq	%rdx, 0x10(%r15)
0000000000017d40	movq	-0x64(%rbp), %rdx
0000000000017d44	movq	-0x5c(%rbp), %rsi
0000000000017d48	movq	%rsi, 0x8(%r15)
0000000000017d4c	movq	%rdx, (%r15)
0000000000017d4f	movq	-0x8c(%rbp), %rdx
0000000000017d56	movq	%rdx, (%r13)
0000000000017d5a	movl	%eax, (%r12)
0000000000017d5e	movq	-0x7c(%rbp), %rax
0000000000017d62	movq	-0x30(%rbp), %rdx
0000000000017d66	movq	%rax, (%rdx)
0000000000017d69	movq	-0x38(%rbp), %rax
0000000000017d6d	movl	%ecx, (%rax)
0000000000017d6f	xorl	%r14d, %r14d
0000000000017d72	jmp	0x17cf0
0000000000017d77	movzbl	-0x81(%rbp), %eax
0000000000017d7e	shll	$0x18, %eax
0000000000017d81	cmpl	$0x1000000, %eax
0000000000017d86	jne	0x17ce4
0000000000017d8c	movzbl	-0x71(%rbp), %eax
0000000000017d90	shll	$0x18, %eax
0000000000017d93	cmpl	$0x1000000, %eax
0000000000017d98	jne	0x17ce4
0000000000017d9e	movl	-0x80(%rbp), %eax
0000000000017da1	shrl	$0x2, %eax
0000000000017da4	imulq	$0x24924925, %rax, %rax
0000000000017dab	shrq	$0x20, %rax
0000000000017daf	cmpl	-0x4c(%rbp), %eax
0000000000017db2	jne	0x17ce4
0000000000017db8	movl	-0x70(%rbp), %ecx
0000000000017dbb	imulq	$0x38e38e39, %rcx, %rcx
0000000000017dc2	shrq	$0x23, %rcx
0000000000017dc6	cmpl	-0x48(%rbp), %ecx
0000000000017dc9	jne	0x17ce4
0000000000017dcf	jmp	0x17d38
__kernelrpc_mach_port_dnrequest_info:
0000000000017dd4	pushq	%rbp
0000000000017dd5	movq	%rsp, %rbp
0000000000017dd8	pushq	%r15
0000000000017dda	pushq	%r14
0000000000017ddc	pushq	%rbx
0000000000017ddd	subq	$0x48, %rsp
0000000000017de1	movq	%rcx, %r14
0000000000017de4	movq	%rdx, %r15
0000000000017de7	leaq	_NDR_record(%rip), %rax
0000000000017dee	movq	(%rax), %rax
0000000000017df1	leaq	-0x50(%rbp), %rbx
0000000000017df5	movq	%rax, 0x18(%rbx)
0000000000017df9	movl	%esi, 0x20(%rbx)
0000000000017dfc	movl	$0x1513, (%rbx)
0000000000017e02	movl	%edi, 0x8(%rbx)
0000000000017e05	callq	_mig_get_reply_port
0000000000017e0a	movl	%eax, 0xc(%rbx)
0000000000017e0d	movabsq	$0xc9800000000, %rcx
0000000000017e17	movq	%rcx, 0x10(%rbx)
0000000000017e1b	movl	$0x0, (%rsp)
0000000000017e22	movq	%rbx, %rdi
0000000000017e25	movl	$0x3, %esi
0000000000017e2a	movl	$0x24, %edx
0000000000017e2f	movl	$0x34, %ecx
0000000000017e34	movl	%eax, %r8d
0000000000017e37	xorl	%r9d, %r9d
0000000000017e3a	callq	_mach_msg
0000000000017e3f	movl	%eax, %ebx
0000000000017e41	leal	-0x10000002(%rbx), %eax
0000000000017e47	cmpl	$0xe, %eax
0000000000017e4a	ja	0x17e60
0000000000017e4c	movl	$0x4003, %ecx
0000000000017e51	btl	%eax, %ecx
0000000000017e54	jae	0x17e60
0000000000017e56	movl	-0x44(%rbp), %edi
0000000000017e59	callq	_mig_put_reply_port
0000000000017e5e	jmp	0x17ecd
0000000000017e60	testl	%ebx, %ebx
0000000000017e62	jne	0x17eae
0000000000017e64	movl	-0x3c(%rbp), %eax
0000000000017e67	cmpl	$0x47, %eax
0000000000017e6a	je	0x17eb8
0000000000017e6c	cmpl	$0xcfc, %eax
0000000000017e71	jne	0x17ebf
0000000000017e73	movl	$0xfffffed4, %ebx
0000000000017e78	cmpl	$0x0, -0x50(%rbp)
0000000000017e7c	js	0x17ec4
0000000000017e7e	movl	-0x4c(%rbp), %eax
0000000000017e81	cmpl	$0x2c, %eax
0000000000017e84	je	0x17e91
0000000000017e86	cmpl	$0x24, %eax
0000000000017e89	jne	0x17ec4
0000000000017e8b	cmpl	$0x0, -0x30(%rbp)
0000000000017e8f	je	0x17ec4
0000000000017e91	cmpl	$0x0, -0x48(%rbp)
0000000000017e95	jne	0x17ec4
0000000000017e97	movl	-0x30(%rbp), %ebx
0000000000017e9a	testl	%ebx, %ebx
0000000000017e9c	jne	0x17ec4
0000000000017e9e	movl	-0x2c(%rbp), %eax
0000000000017ea1	movl	%eax, (%r15)
0000000000017ea4	movl	-0x28(%rbp), %eax
0000000000017ea7	movl	%eax, (%r14)
0000000000017eaa	xorl	%ebx, %ebx
0000000000017eac	jmp	0x17ecd
0000000000017eae	movl	-0x44(%rbp), %edi
0000000000017eb1	callq	_mig_dealloc_reply_port
0000000000017eb6	jmp	0x17ecd
0000000000017eb8	movl	$0xfffffecc, %ebx
0000000000017ebd	jmp	0x17ec4
0000000000017ebf	movl	$0xfffffed3, %ebx
0000000000017ec4	leaq	-0x50(%rbp), %rdi
0000000000017ec8	callq	_mach_msg_destroy
0000000000017ecd	movl	%ebx, %eax
0000000000017ecf	addq	$0x48, %rsp
0000000000017ed3	popq	%rbx
0000000000017ed4	popq	%r14
0000000000017ed6	popq	%r15
0000000000017ed8	popq	%rbp
0000000000017ed9	retq
__kernelrpc_mach_port_kernel_object:
0000000000017eda	pushq	%rbp
0000000000017edb	movq	%rsp, %rbp
0000000000017ede	pushq	%r15
0000000000017ee0	pushq	%r14
0000000000017ee2	pushq	%rbx
0000000000017ee3	subq	$0x48, %rsp
0000000000017ee7	movq	%rcx, %r14
0000000000017eea	movq	%rdx, %r15
0000000000017eed	leaq	_NDR_record(%rip), %rax
0000000000017ef4	movq	(%rax), %rax
0000000000017ef7	leaq	-0x50(%rbp), %rbx
0000000000017efb	movq	%rax, 0x18(%rbx)
0000000000017eff	movl	%esi, 0x20(%rbx)
0000000000017f02	movl	$0x1513, (%rbx)
0000000000017f08	movl	%edi, 0x8(%rbx)
0000000000017f0b	callq	_mig_get_reply_port
0000000000017f10	movl	%eax, 0xc(%rbx)
0000000000017f13	movabsq	$0xc9900000000, %rcx
0000000000017f1d	movq	%rcx, 0x10(%rbx)
0000000000017f21	movl	$0x0, (%rsp)
0000000000017f28	movq	%rbx, %rdi
0000000000017f2b	movl	$0x3, %esi
0000000000017f30	movl	$0x24, %edx
0000000000017f35	movl	$0x34, %ecx
0000000000017f3a	movl	%eax, %r8d
0000000000017f3d	xorl	%r9d, %r9d
0000000000017f40	callq	_mach_msg
0000000000017f45	movl	%eax, %ebx
0000000000017f47	leal	-0x10000002(%rbx), %eax
0000000000017f4d	cmpl	$0xe, %eax
0000000000017f50	ja	0x17f66
0000000000017f52	movl	$0x4003, %ecx
0000000000017f57	btl	%eax, %ecx
0000000000017f5a	jae	0x17f66
0000000000017f5c	movl	-0x44(%rbp), %edi
0000000000017f5f	callq	_mig_put_reply_port
0000000000017f64	jmp	0x17fd3
0000000000017f66	testl	%ebx, %ebx
0000000000017f68	jne	0x17fb4
0000000000017f6a	movl	-0x3c(%rbp), %eax
0000000000017f6d	cmpl	$0x47, %eax
0000000000017f70	je	0x17fbe
0000000000017f72	cmpl	$0xcfd, %eax
0000000000017f77	jne	0x17fc5
0000000000017f79	movl	$0xfffffed4, %ebx
0000000000017f7e	cmpl	$0x0, -0x50(%rbp)
0000000000017f82	js	0x17fca
0000000000017f84	movl	-0x4c(%rbp), %eax
0000000000017f87	cmpl	$0x2c, %eax
0000000000017f8a	je	0x17f97
0000000000017f8c	cmpl	$0x24, %eax
0000000000017f8f	jne	0x17fca
0000000000017f91	cmpl	$0x0, -0x30(%rbp)
0000000000017f95	je	0x17fca
0000000000017f97	cmpl	$0x0, -0x48(%rbp)
0000000000017f9b	jne	0x17fca
0000000000017f9d	movl	-0x30(%rbp), %ebx
0000000000017fa0	testl	%ebx, %ebx
0000000000017fa2	jne	0x17fca
0000000000017fa4	movl	-0x2c(%rbp), %eax
0000000000017fa7	movl	%eax, (%r15)
0000000000017faa	movl	-0x28(%rbp), %eax
0000000000017fad	movl	%eax, (%r14)
0000000000017fb0	xorl	%ebx, %ebx
0000000000017fb2	jmp	0x17fd3
0000000000017fb4	movl	-0x44(%rbp), %edi
0000000000017fb7	callq	_mig_dealloc_reply_port
0000000000017fbc	jmp	0x17fd3
0000000000017fbe	movl	$0xfffffecc, %ebx
0000000000017fc3	jmp	0x17fca
0000000000017fc5	movl	$0xfffffed3, %ebx
0000000000017fca	leaq	-0x50(%rbp), %rdi
0000000000017fce	callq	_mach_msg_destroy
0000000000017fd3	movl	%ebx, %eax
0000000000017fd5	addq	$0x48, %rsp
0000000000017fd9	popq	%rbx
0000000000017fda	popq	%r14
0000000000017fdc	popq	%r15
0000000000017fde	popq	%rbp
0000000000017fdf	retq
__kernelrpc_mach_port_insert_member:
0000000000017fe0	pushq	%rbp
0000000000017fe1	movq	%rsp, %rbp
0000000000017fe4	pushq	%rbx
0000000000017fe5	subq	$0x38, %rsp
0000000000017fe9	leaq	_NDR_record(%rip), %rax
0000000000017ff0	movq	(%rax), %rax
0000000000017ff3	leaq	-0x38(%rbp), %rbx
0000000000017ff7	movq	%rax, 0x18(%rbx)
0000000000017ffb	movl	%esi, 0x20(%rbx)
0000000000017ffe	movl	%edx, 0x24(%rbx)
0000000000018001	movl	$0x1513, (%rbx)
0000000000018007	movl	%edi, 0x8(%rbx)
000000000001800a	callq	_mig_get_reply_port
000000000001800f	movl	%eax, 0xc(%rbx)
0000000000018012	movabsq	$0xc9a00000000, %rcx
000000000001801c	movq	%rcx, 0x10(%rbx)
0000000000018020	movl	$0x0, (%rsp)
0000000000018027	movq	%rbx, %rdi
000000000001802a	movl	$0x3, %esi
000000000001802f	movl	$0x28, %edx
0000000000018034	movl	$0x2c, %ecx
0000000000018039	movl	%eax, %r8d
000000000001803c	xorl	%r9d, %r9d
000000000001803f	callq	_mach_msg
0000000000018044	movl	%eax, %ebx
0000000000018046	leal	-0x10000002(%rbx), %eax
000000000001804c	cmpl	$0xe, %eax
000000000001804f	ja	0x18065
0000000000018051	movl	$0x4003, %ecx
0000000000018056	btl	%eax, %ecx
0000000000018059	jae	0x18065
000000000001805b	movl	-0x2c(%rbp), %edi
000000000001805e	callq	_mig_put_reply_port
0000000000018063	jmp	0x180ba
0000000000018065	testl	%ebx, %ebx
0000000000018067	jne	0x1809b
0000000000018069	movl	-0x24(%rbp), %eax
000000000001806c	cmpl	$0x47, %eax
000000000001806f	je	0x180a5
0000000000018071	cmpl	$0xcfe, %eax
0000000000018076	jne	0x180ac
0000000000018078	movl	$0xfffffed4, %ebx
000000000001807d	cmpl	$0x0, -0x38(%rbp)
0000000000018081	js	0x180b1
0000000000018083	cmpl	$0x24, -0x34(%rbp)
0000000000018087	jne	0x180b1
0000000000018089	movl	-0x30(%rbp), %eax
000000000001808c	testl	%eax, %eax
000000000001808e	jne	0x180b1
0000000000018090	movl	-0x18(%rbp), %ebx
0000000000018093	testl	%ebx, %ebx
0000000000018095	jne	0x180b1
0000000000018097	xorl	%ebx, %ebx
0000000000018099	jmp	0x180ba
000000000001809b	movl	-0x2c(%rbp), %edi
000000000001809e	callq	_mig_dealloc_reply_port
00000000000180a3	jmp	0x180ba
00000000000180a5	movl	$0xfffffecc, %ebx
00000000000180aa	jmp	0x180b1
00000000000180ac	movl	$0xfffffed3, %ebx
00000000000180b1	leaq	-0x38(%rbp), %rdi
00000000000180b5	callq	_mach_msg_destroy
00000000000180ba	movl	%ebx, %eax
00000000000180bc	addq	$0x38, %rsp
00000000000180c0	popq	%rbx
00000000000180c1	popq	%rbp
00000000000180c2	retq
__kernelrpc_mach_port_extract_member:
00000000000180c3	pushq	%rbp
00000000000180c4	movq	%rsp, %rbp
00000000000180c7	pushq	%rbx
00000000000180c8	subq	$0x38, %rsp
00000000000180cc	leaq	_NDR_record(%rip), %rax
00000000000180d3	movq	(%rax), %rax
00000000000180d6	leaq	-0x38(%rbp), %rbx
00000000000180da	movq	%rax, 0x18(%rbx)
00000000000180de	movl	%esi, 0x20(%rbx)
00000000000180e1	movl	%edx, 0x24(%rbx)
00000000000180e4	movl	$0x1513, (%rbx)
00000000000180ea	movl	%edi, 0x8(%rbx)
00000000000180ed	callq	_mig_get_reply_port
00000000000180f2	movl	%eax, 0xc(%rbx)
00000000000180f5	movabsq	$0xc9b00000000, %rcx
00000000000180ff	movq	%rcx, 0x10(%rbx)
0000000000018103	movl	$0x0, (%rsp)
000000000001810a	movq	%rbx, %rdi
000000000001810d	movl	$0x3, %esi
0000000000018112	movl	$0x28, %edx
0000000000018117	movl	$0x2c, %ecx
000000000001811c	movl	%eax, %r8d
000000000001811f	xorl	%r9d, %r9d
0000000000018122	callq	_mach_msg
0000000000018127	movl	%eax, %ebx
0000000000018129	leal	-0x10000002(%rbx), %eax
000000000001812f	cmpl	$0xe, %eax
0000000000018132	ja	0x18148
0000000000018134	movl	$0x4003, %ecx
0000000000018139	btl	%eax, %ecx
000000000001813c	jae	0x18148
000000000001813e	movl	-0x2c(%rbp), %edi
0000000000018141	callq	_mig_put_reply_port
0000000000018146	jmp	0x1819d
0000000000018148	testl	%ebx, %ebx
000000000001814a	jne	0x1817e
000000000001814c	movl	-0x24(%rbp), %eax
000000000001814f	cmpl	$0x47, %eax
0000000000018152	je	0x18188
0000000000018154	cmpl	$0xcff, %eax
0000000000018159	jne	0x1818f
000000000001815b	movl	$0xfffffed4, %ebx
0000000000018160	cmpl	$0x0, -0x38(%rbp)
0000000000018164	js	0x18194
0000000000018166	cmpl	$0x24, -0x34(%rbp)
000000000001816a	jne	0x18194
000000000001816c	movl	-0x30(%rbp), %eax
000000000001816f	testl	%eax, %eax
0000000000018171	jne	0x18194
0000000000018173	movl	-0x18(%rbp), %ebx
0000000000018176	testl	%ebx, %ebx
0000000000018178	jne	0x18194
000000000001817a	xorl	%ebx, %ebx
000000000001817c	jmp	0x1819d
000000000001817e	movl	-0x2c(%rbp), %edi
0000000000018181	callq	_mig_dealloc_reply_port
0000000000018186	jmp	0x1819d
0000000000018188	movl	$0xfffffecc, %ebx
000000000001818d	jmp	0x18194
000000000001818f	movl	$0xfffffed3, %ebx
0000000000018194	leaq	-0x38(%rbp), %rdi
0000000000018198	callq	_mach_msg_destroy
000000000001819d	movl	%ebx, %eax
000000000001819f	addq	$0x38, %rsp
00000000000181a3	popq	%rbx
00000000000181a4	popq	%rbp
00000000000181a5	retq
__kernelrpc_mach_port_kobject:
00000000000181a6	pushq	%rbp
00000000000181a7	movq	%rsp, %rbp
00000000000181aa	pushq	%r15
00000000000181ac	pushq	%r14
00000000000181ae	pushq	%rbx
00000000000181af	subq	$0x48, %rsp
00000000000181b3	movq	%rcx, %r14
00000000000181b6	movq	%rdx, %r15
00000000000181b9	leaq	_NDR_record(%rip), %rax
00000000000181c0	movq	(%rax), %rax
00000000000181c3	leaq	-0x50(%rbp), %rbx
00000000000181c7	movq	%rax, 0x18(%rbx)
00000000000181cb	movl	%esi, 0x20(%rbx)
00000000000181ce	movl	$0x1513, (%rbx)
00000000000181d4	movl	%edi, 0x8(%rbx)
00000000000181d7	callq	_mig_get_reply_port
00000000000181dc	movl	%eax, 0xc(%rbx)
00000000000181df	movabsq	$0xc9e00000000, %rcx
00000000000181e9	movq	%rcx, 0x10(%rbx)
00000000000181ed	movl	$0x0, (%rsp)
00000000000181f4	movq	%rbx, %rdi
00000000000181f7	movl	$0x3, %esi
00000000000181fc	movl	$0x24, %edx
0000000000018201	movl	$0x38, %ecx
0000000000018206	movl	%eax, %r8d
0000000000018209	xorl	%r9d, %r9d
000000000001820c	callq	_mach_msg
0000000000018211	movl	%eax, %ebx
0000000000018213	leal	-0x10000002(%rbx), %eax
0000000000018219	cmpl	$0xe, %eax
000000000001821c	ja	0x18232
000000000001821e	movl	$0x4003, %ecx
0000000000018223	btl	%eax, %ecx
0000000000018226	jae	0x18232
0000000000018228	movl	-0x44(%rbp), %edi
000000000001822b	callq	_mig_put_reply_port
0000000000018230	jmp	0x182a0
0000000000018232	testl	%ebx, %ebx
0000000000018234	jne	0x18281
0000000000018236	movl	-0x3c(%rbp), %eax
0000000000018239	cmpl	$0x47, %eax
000000000001823c	je	0x1828b
000000000001823e	cmpl	$0xd02, %eax
0000000000018243	jne	0x18292
0000000000018245	movl	$0xfffffed4, %ebx
000000000001824a	cmpl	$0x0, -0x50(%rbp)
000000000001824e	js	0x18297
0000000000018250	movl	-0x4c(%rbp), %eax
0000000000018253	cmpl	$0x30, %eax
0000000000018256	je	0x18263
0000000000018258	cmpl	$0x24, %eax
000000000001825b	jne	0x18297
000000000001825d	cmpl	$0x0, -0x30(%rbp)
0000000000018261	je	0x18297
0000000000018263	cmpl	$0x0, -0x48(%rbp)
0000000000018267	jne	0x18297
0000000000018269	movl	-0x30(%rbp), %ebx
000000000001826c	testl	%ebx, %ebx
000000000001826e	jne	0x18297
0000000000018270	movl	-0x2c(%rbp), %eax
0000000000018273	movl	%eax, (%r15)
0000000000018276	movq	-0x28(%rbp), %rax
000000000001827a	movq	%rax, (%r14)
000000000001827d	xorl	%ebx, %ebx
000000000001827f	jmp	0x182a0
0000000000018281	movl	-0x44(%rbp), %edi
0000000000018284	callq	_mig_dealloc_reply_port
0000000000018289	jmp	0x182a0
000000000001828b	movl	$0xfffffecc, %ebx
0000000000018290	jmp	0x18297
0000000000018292	movl	$0xfffffed3, %ebx
0000000000018297	leaq	-0x50(%rbp), %rdi
000000000001829b	callq	_mach_msg_destroy
00000000000182a0	movl	%ebx, %eax
00000000000182a2	addq	$0x48, %rsp
00000000000182a6	popq	%rbx
00000000000182a7	popq	%r14
00000000000182a9	popq	%r15
00000000000182ab	popq	%rbp
00000000000182ac	retq
__kernelrpc_mach_port_construct:
00000000000182ad	pushq	%rbp
00000000000182ae	movq	%rsp, %rbp
00000000000182b1	pushq	%r14
00000000000182b3	pushq	%rbx
00000000000182b4	subq	$0x50, %rsp
00000000000182b8	movq	%rcx, %r14
00000000000182bb	leaq	-0x50(%rbp), %rbx
00000000000182bf	movl	$0x1, 0x18(%rbx)
00000000000182c6	movq	%rsi, 0x1c(%rbx)
00000000000182ca	movabsq	$0x1801000100, %rax
00000000000182d4	movq	%rax, 0x24(%rbx)
00000000000182d8	leaq	_NDR_record(%rip), %rax
00000000000182df	movq	(%rax), %rax
00000000000182e2	movq	%rax, 0x2c(%rbx)
00000000000182e6	movq	%rdx, 0x34(%rbx)
00000000000182ea	movl	$0x80001513, (%rbx)
00000000000182f0	movl	%edi, 0x8(%rbx)
00000000000182f3	callq	_mig_get_reply_port
00000000000182f8	movl	%eax, 0xc(%rbx)
00000000000182fb	movabsq	$0xc9f00000000, %rcx
0000000000018305	movq	%rcx, 0x10(%rbx)
0000000000018309	movl	$0x0, (%rsp)
0000000000018310	movq	%rbx, %rdi
0000000000018313	movl	$0x3, %esi
0000000000018318	movl	$0x3c, %edx
000000000001831d	movl	$0x30, %ecx
0000000000018322	movl	%eax, %r8d
0000000000018325	xorl	%r9d, %r9d
0000000000018328	callq	_mach_msg
000000000001832d	movl	%eax, %ebx
000000000001832f	leal	-0x10000002(%rbx), %eax
0000000000018335	cmpl	$0xe, %eax
0000000000018338	ja	0x1834e
000000000001833a	movl	$0x4003, %ecx
000000000001833f	btl	%eax, %ecx
0000000000018342	jae	0x1834e
0000000000018344	movl	-0x44(%rbp), %edi
0000000000018347	callq	_mig_put_reply_port
000000000001834c	jmp	0x183b5
000000000001834e	testl	%ebx, %ebx
0000000000018350	jne	0x18396
0000000000018352	movl	-0x3c(%rbp), %eax
0000000000018355	cmpl	$0x47, %eax
0000000000018358	je	0x183a0
000000000001835a	cmpl	$0xd03, %eax
000000000001835f	jne	0x183a7
0000000000018361	movl	$0xfffffed4, %ebx
0000000000018366	cmpl	$0x0, -0x50(%rbp)
000000000001836a	js	0x183ac
000000000001836c	movl	-0x4c(%rbp), %eax
000000000001836f	cmpl	$0x28, %eax
0000000000018372	je	0x1837f
0000000000018374	cmpl	$0x24, %eax
0000000000018377	jne	0x183ac
0000000000018379	cmpl	$0x0, -0x30(%rbp)
000000000001837d	je	0x183ac
000000000001837f	cmpl	$0x0, -0x48(%rbp)
0000000000018383	jne	0x183ac
0000000000018385	movl	-0x30(%rbp), %ebx
0000000000018388	testl	%ebx, %ebx
000000000001838a	jne	0x183ac
000000000001838c	movl	-0x2c(%rbp), %eax
000000000001838f	movl	%eax, (%r14)
0000000000018392	xorl	%ebx, %ebx
0000000000018394	jmp	0x183b5
0000000000018396	movl	-0x44(%rbp), %edi
0000000000018399	callq	_mig_dealloc_reply_port
000000000001839e	jmp	0x183b5
00000000000183a0	movl	$0xfffffecc, %ebx
00000000000183a5	jmp	0x183ac
00000000000183a7	movl	$0xfffffed3, %ebx
00000000000183ac	leaq	-0x50(%rbp), %rdi
00000000000183b0	callq	_mach_msg_destroy
00000000000183b5	movl	%ebx, %eax
00000000000183b7	addq	$0x50, %rsp
00000000000183bb	popq	%rbx
00000000000183bc	popq	%r14
00000000000183be	popq	%rbp
00000000000183bf	retq
__kernelrpc_mach_port_destruct:
00000000000183c0	pushq	%rbp
00000000000183c1	movq	%rsp, %rbp
00000000000183c4	pushq	%rbx
00000000000183c5	subq	$0x38, %rsp
00000000000183c9	leaq	_NDR_record(%rip), %rax
00000000000183d0	movq	(%rax), %rax
00000000000183d3	leaq	-0x38(%rbp), %rbx
00000000000183d7	movq	%rax, 0x18(%rbx)
00000000000183db	movl	%esi, 0x20(%rbx)
00000000000183de	movl	%edx, 0x24(%rbx)
00000000000183e1	movq	%rcx, 0x28(%rbx)
00000000000183e5	movl	$0x1513, (%rbx)
00000000000183eb	movl	%edi, 0x8(%rbx)
00000000000183ee	callq	_mig_get_reply_port
00000000000183f3	movl	%eax, 0xc(%rbx)
00000000000183f6	movabsq	$0xca000000000, %rcx
0000000000018400	movq	%rcx, 0x10(%rbx)
0000000000018404	movl	$0x0, (%rsp)
000000000001840b	movq	%rbx, %rdi
000000000001840e	movl	$0x3, %esi
0000000000018413	movl	$0x30, %edx
0000000000018418	movl	$0x2c, %ecx
000000000001841d	movl	%eax, %r8d
0000000000018420	xorl	%r9d, %r9d
0000000000018423	callq	_mach_msg
0000000000018428	movl	%eax, %ebx
000000000001842a	leal	-0x10000002(%rbx), %eax
0000000000018430	cmpl	$0xe, %eax
0000000000018433	ja	0x18449
0000000000018435	movl	$0x4003, %ecx
000000000001843a	btl	%eax, %ecx
000000000001843d	jae	0x18449
000000000001843f	movl	-0x2c(%rbp), %edi
0000000000018442	callq	_mig_put_reply_port
0000000000018447	jmp	0x1849e
0000000000018449	testl	%ebx, %ebx
000000000001844b	jne	0x1847f
000000000001844d	movl	-0x24(%rbp), %eax
0000000000018450	cmpl	$0x47, %eax
0000000000018453	je	0x18489
0000000000018455	cmpl	$0xd04, %eax
000000000001845a	jne	0x18490
000000000001845c	movl	$0xfffffed4, %ebx
0000000000018461	cmpl	$0x0, -0x38(%rbp)
0000000000018465	js	0x18495
0000000000018467	cmpl	$0x24, -0x34(%rbp)
000000000001846b	jne	0x18495
000000000001846d	movl	-0x30(%rbp), %eax
0000000000018470	testl	%eax, %eax
0000000000018472	jne	0x18495
0000000000018474	movl	-0x18(%rbp), %ebx
0000000000018477	testl	%ebx, %ebx
0000000000018479	jne	0x18495
000000000001847b	xorl	%ebx, %ebx
000000000001847d	jmp	0x1849e
000000000001847f	movl	-0x2c(%rbp), %edi
0000000000018482	callq	_mig_dealloc_reply_port
0000000000018487	jmp	0x1849e
0000000000018489	movl	$0xfffffecc, %ebx
000000000001848e	jmp	0x18495
0000000000018490	movl	$0xfffffed3, %ebx
0000000000018495	leaq	-0x38(%rbp), %rdi
0000000000018499	callq	_mach_msg_destroy
000000000001849e	movl	%ebx, %eax
00000000000184a0	addq	$0x38, %rsp
00000000000184a4	popq	%rbx
00000000000184a5	popq	%rbp
00000000000184a6	retq
__kernelrpc_mach_port_guard:
00000000000184a7	pushq	%rbp
00000000000184a8	movq	%rsp, %rbp
00000000000184ab	pushq	%rbx
00000000000184ac	subq	$0x38, %rsp
00000000000184b0	leaq	_NDR_record(%rip), %rax
00000000000184b7	movq	(%rax), %rax
00000000000184ba	leaq	-0x38(%rbp), %rbx
00000000000184be	movq	%rax, 0x18(%rbx)
00000000000184c2	movl	%esi, 0x20(%rbx)
00000000000184c5	movq	%rdx, 0x24(%rbx)
00000000000184c9	movl	%ecx, 0x2c(%rbx)
00000000000184cc	movl	$0x1513, (%rbx)
00000000000184d2	movl	%edi, 0x8(%rbx)
00000000000184d5	callq	_mig_get_reply_port
00000000000184da	movl	%eax, 0xc(%rbx)
00000000000184dd	movabsq	$0xca100000000, %rcx
00000000000184e7	movq	%rcx, 0x10(%rbx)
00000000000184eb	movl	$0x0, (%rsp)
00000000000184f2	movq	%rbx, %rdi
00000000000184f5	movl	$0x3, %esi
00000000000184fa	movl	$0x30, %edx
00000000000184ff	movl	$0x2c, %ecx
0000000000018504	movl	%eax, %r8d
0000000000018507	xorl	%r9d, %r9d
000000000001850a	callq	_mach_msg
000000000001850f	movl	%eax, %ebx
0000000000018511	leal	-0x10000002(%rbx), %eax
0000000000018517	cmpl	$0xe, %eax
000000000001851a	ja	0x18530
000000000001851c	movl	$0x4003, %ecx
0000000000018521	btl	%eax, %ecx
0000000000018524	jae	0x18530
0000000000018526	movl	-0x2c(%rbp), %edi
0000000000018529	callq	_mig_put_reply_port
000000000001852e	jmp	0x18585
0000000000018530	testl	%ebx, %ebx
0000000000018532	jne	0x18566
0000000000018534	movl	-0x24(%rbp), %eax
0000000000018537	cmpl	$0x47, %eax
000000000001853a	je	0x18570
000000000001853c	cmpl	$0xd05, %eax
0000000000018541	jne	0x18577
0000000000018543	movl	$0xfffffed4, %ebx
0000000000018548	cmpl	$0x0, -0x38(%rbp)
000000000001854c	js	0x1857c
000000000001854e	cmpl	$0x24, -0x34(%rbp)
0000000000018552	jne	0x1857c
0000000000018554	movl	-0x30(%rbp), %eax
0000000000018557	testl	%eax, %eax
0000000000018559	jne	0x1857c
000000000001855b	movl	-0x18(%rbp), %ebx
000000000001855e	testl	%ebx, %ebx
0000000000018560	jne	0x1857c
0000000000018562	xorl	%ebx, %ebx
0000000000018564	jmp	0x18585
0000000000018566	movl	-0x2c(%rbp), %edi
0000000000018569	callq	_mig_dealloc_reply_port
000000000001856e	jmp	0x18585
0000000000018570	movl	$0xfffffecc, %ebx
0000000000018575	jmp	0x1857c
0000000000018577	movl	$0xfffffed3, %ebx
000000000001857c	leaq	-0x38(%rbp), %rdi
0000000000018580	callq	_mach_msg_destroy
0000000000018585	movl	%ebx, %eax
0000000000018587	addq	$0x38, %rsp
000000000001858b	popq	%rbx
000000000001858c	popq	%rbp
000000000001858d	retq
__kernelrpc_mach_port_unguard:
000000000001858e	pushq	%rbp
000000000001858f	movq	%rsp, %rbp
0000000000018592	pushq	%rbx
0000000000018593	subq	$0x38, %rsp
0000000000018597	leaq	_NDR_record(%rip), %rax
000000000001859e	movq	(%rax), %rax
00000000000185a1	leaq	-0x38(%rbp), %rbx
00000000000185a5	movq	%rax, 0x18(%rbx)
00000000000185a9	movl	%esi, 0x20(%rbx)
00000000000185ac	movq	%rdx, 0x24(%rbx)
00000000000185b0	movl	$0x1513, (%rbx)
00000000000185b6	movl	%edi, 0x8(%rbx)
00000000000185b9	callq	_mig_get_reply_port
00000000000185be	movl	%eax, 0xc(%rbx)
00000000000185c1	movabsq	$0xca200000000, %rcx
00000000000185cb	movq	%rcx, 0x10(%rbx)
00000000000185cf	movl	$0x0, (%rsp)
00000000000185d6	movq	%rbx, %rdi
00000000000185d9	movl	$0x3, %esi
00000000000185de	movl	$0x2c, %edx
00000000000185e3	movl	$0x2c, %ecx
00000000000185e8	movl	%eax, %r8d
00000000000185eb	xorl	%r9d, %r9d
00000000000185ee	callq	_mach_msg
00000000000185f3	movl	%eax, %ebx
00000000000185f5	leal	-0x10000002(%rbx), %eax
00000000000185fb	cmpl	$0xe, %eax
00000000000185fe	ja	0x18614
0000000000018600	movl	$0x4003, %ecx
0000000000018605	btl	%eax, %ecx
0000000000018608	jae	0x18614
000000000001860a	movl	-0x2c(%rbp), %edi
000000000001860d	callq	_mig_put_reply_port
0000000000018612	jmp	0x18669
0000000000018614	testl	%ebx, %ebx
0000000000018616	jne	0x1864a
0000000000018618	movl	-0x24(%rbp), %eax
000000000001861b	cmpl	$0x47, %eax
000000000001861e	je	0x18654
0000000000018620	cmpl	$0xd06, %eax
0000000000018625	jne	0x1865b
0000000000018627	movl	$0xfffffed4, %ebx
000000000001862c	cmpl	$0x0, -0x38(%rbp)
0000000000018630	js	0x18660
0000000000018632	cmpl	$0x24, -0x34(%rbp)
0000000000018636	jne	0x18660
0000000000018638	movl	-0x30(%rbp), %eax
000000000001863b	testl	%eax, %eax
000000000001863d	jne	0x18660
000000000001863f	movl	-0x18(%rbp), %ebx
0000000000018642	testl	%ebx, %ebx
0000000000018644	jne	0x18660
0000000000018646	xorl	%ebx, %ebx
0000000000018648	jmp	0x18669
000000000001864a	movl	-0x2c(%rbp), %edi
000000000001864d	callq	_mig_dealloc_reply_port
0000000000018652	jmp	0x18669
0000000000018654	movl	$0xfffffecc, %ebx
0000000000018659	jmp	0x18660
000000000001865b	movl	$0xfffffed3, %ebx
0000000000018660	leaq	-0x38(%rbp), %rdi
0000000000018664	callq	_mach_msg_destroy
0000000000018669	movl	%ebx, %eax
000000000001866b	addq	$0x38, %rsp
000000000001866f	popq	%rbx
0000000000018670	popq	%rbp
0000000000018671	retq
__kernelrpc_mach_port_space_basic_info:
0000000000018672	pushq	%rbp
0000000000018673	movq	%rsp, %rbp
0000000000018676	pushq	%r14
0000000000018678	pushq	%rbx
0000000000018679	subq	$0x50, %rsp
000000000001867d	movq	%rsi, %r14
0000000000018680	leaq	-0x58(%rbp), %rbx
0000000000018684	movl	$0x1513, (%rbx)
000000000001868a	movl	%edi, 0x8(%rbx)
000000000001868d	callq	_mig_get_reply_port
0000000000018692	movl	%eax, 0xc(%rbx)
0000000000018695	movabsq	$0xca300000000, %rcx
000000000001869f	movq	%rcx, 0x10(%rbx)
00000000000186a3	movl	$0x0, (%rsp)
00000000000186aa	movq	%rbx, %rdi
00000000000186ad	movl	$0x3, %esi
00000000000186b2	movl	$0x18, %edx
00000000000186b7	movl	$0x44, %ecx
00000000000186bc	movl	%eax, %r8d
00000000000186bf	xorl	%r9d, %r9d
00000000000186c2	callq	_mach_msg
00000000000186c7	movl	%eax, %ebx
00000000000186c9	leal	-0x10000002(%rbx), %eax
00000000000186cf	cmpl	$0xe, %eax
00000000000186d2	ja	0x186e8
00000000000186d4	movl	$0x4003, %ecx
00000000000186d9	btl	%eax, %ecx
00000000000186dc	jae	0x186e8
00000000000186de	movl	-0x4c(%rbp), %edi
00000000000186e1	callq	_mig_put_reply_port
00000000000186e6	jmp	0x18760
00000000000186e8	testl	%ebx, %ebx
00000000000186ea	jne	0x18741
00000000000186ec	movl	-0x44(%rbp), %eax
00000000000186ef	cmpl	$0x47, %eax
00000000000186f2	je	0x1874b
00000000000186f4	cmpl	$0xd07, %eax
00000000000186f9	jne	0x18752
00000000000186fb	movl	$0xfffffed4, %ebx
0000000000018700	cmpl	$0x0, -0x58(%rbp)
0000000000018704	js	0x18757
0000000000018706	movl	-0x54(%rbp), %eax
0000000000018709	cmpl	$0x3c, %eax
000000000001870c	je	0x18719
000000000001870e	cmpl	$0x24, %eax
0000000000018711	jne	0x18757
0000000000018713	cmpl	$0x0, -0x38(%rbp)
0000000000018717	je	0x18757
0000000000018719	cmpl	$0x0, -0x50(%rbp)
000000000001871d	jne	0x18757
000000000001871f	movl	-0x38(%rbp), %ebx
0000000000018722	testl	%ebx, %ebx
0000000000018724	jne	0x18757
0000000000018726	movq	-0x24(%rbp), %rax
000000000001872a	movq	%rax, 0x10(%r14)
000000000001872e	movq	-0x34(%rbp), %rax
0000000000018732	movq	-0x2c(%rbp), %rcx
0000000000018736	movq	%rcx, 0x8(%r14)
000000000001873a	movq	%rax, (%r14)
000000000001873d	xorl	%ebx, %ebx
000000000001873f	jmp	0x18760
0000000000018741	movl	-0x4c(%rbp), %edi
0000000000018744	callq	_mig_dealloc_reply_port
0000000000018749	jmp	0x18760
000000000001874b	movl	$0xfffffecc, %ebx
0000000000018750	jmp	0x18757
0000000000018752	movl	$0xfffffed3, %ebx
0000000000018757	leaq	-0x58(%rbp), %rdi
000000000001875b	callq	_mach_msg_destroy
0000000000018760	movl	%ebx, %eax
0000000000018762	addq	$0x50, %rsp
0000000000018766	popq	%rbx
0000000000018767	popq	%r14
0000000000018769	popq	%rbp
000000000001876a	retq
__kernelrpc_mach_port_special_reply_port_reset_link:
000000000001876b	pushq	%rbp
000000000001876c	movq	%rsp, %rbp
000000000001876f	pushq	%r14
0000000000018771	pushq	%rbx
0000000000018772	subq	$0x40, %rsp
0000000000018776	movq	%rdx, %r14
0000000000018779	leaq	_NDR_record(%rip), %rax
0000000000018780	movq	(%rax), %rax
0000000000018783	leaq	-0x40(%rbp), %rbx
0000000000018787	movq	%rax, 0x18(%rbx)
000000000001878b	movl	%esi, 0x20(%rbx)
000000000001878e	movl	$0x1513, (%rbx)
0000000000018794	movl	%edi, 0x8(%rbx)
0000000000018797	callq	_mig_get_reply_port
000000000001879c	movl	%eax, 0xc(%rbx)
000000000001879f	movabsq	$0xca400000000, %rcx
00000000000187a9	movq	%rcx, 0x10(%rbx)
00000000000187ad	movl	$0x0, (%rsp)
00000000000187b4	movq	%rbx, %rdi
00000000000187b7	movl	$0x3, %esi
00000000000187bc	movl	$0x24, %edx
00000000000187c1	movl	$0x30, %ecx
00000000000187c6	movl	%eax, %r8d
00000000000187c9	xorl	%r9d, %r9d
00000000000187cc	callq	_mach_msg
00000000000187d1	movl	%eax, %ebx
00000000000187d3	leal	-0x10000002(%rbx), %eax
00000000000187d9	cmpl	$0xe, %eax
00000000000187dc	ja	0x187f2
00000000000187de	movl	$0x4003, %ecx
00000000000187e3	btl	%eax, %ecx
00000000000187e6	jae	0x187f2
00000000000187e8	movl	-0x34(%rbp), %edi
00000000000187eb	callq	_mig_put_reply_port
00000000000187f0	jmp	0x18859
00000000000187f2	testl	%ebx, %ebx
00000000000187f4	jne	0x1883a
00000000000187f6	movl	-0x2c(%rbp), %eax
00000000000187f9	cmpl	$0x47, %eax
00000000000187fc	je	0x18844
00000000000187fe	cmpl	$0xd08, %eax
0000000000018803	jne	0x1884b
0000000000018805	movl	$0xfffffed4, %ebx
000000000001880a	cmpl	$0x0, -0x40(%rbp)
000000000001880e	js	0x18850
0000000000018810	movl	-0x3c(%rbp), %eax
0000000000018813	cmpl	$0x28, %eax
0000000000018816	je	0x18823
0000000000018818	cmpl	$0x24, %eax
000000000001881b	jne	0x18850
000000000001881d	cmpl	$0x0, -0x20(%rbp)
0000000000018821	je	0x18850
0000000000018823	cmpl	$0x0, -0x38(%rbp)
0000000000018827	jne	0x18850
0000000000018829	movl	-0x20(%rbp), %ebx
000000000001882c	testl	%ebx, %ebx
000000000001882e	jne	0x18850
0000000000018830	movl	-0x1c(%rbp), %eax
0000000000018833	movl	%eax, (%r14)
0000000000018836	xorl	%ebx, %ebx
0000000000018838	jmp	0x18859
000000000001883a	movl	-0x34(%rbp), %edi
000000000001883d	callq	_mig_dealloc_reply_port
0000000000018842	jmp	0x18859
0000000000018844	movl	$0xfffffecc, %ebx
0000000000018849	jmp	0x18850
000000000001884b	movl	$0xfffffed3, %ebx
0000000000018850	leaq	-0x40(%rbp), %rdi
0000000000018854	callq	_mach_msg_destroy
0000000000018859	movl	%ebx, %eax
000000000001885b	addq	$0x40, %rsp
000000000001885f	popq	%rbx
0000000000018860	popq	%r14
0000000000018862	popq	%rbp
0000000000018863	retq
__kernelrpc_mach_port_guard_with_flags:
0000000000018864	pushq	%rbp
0000000000018865	movq	%rsp, %rbp
0000000000018868	pushq	%rbx
0000000000018869	subq	$0x48, %rsp
000000000001886d	leaq	_NDR_record(%rip), %rax
0000000000018874	movq	(%rax), %rax
0000000000018877	leaq	-0x40(%rbp), %rbx
000000000001887b	movq	%rax, 0x18(%rbx)
000000000001887f	movl	%esi, 0x20(%rbx)
0000000000018882	movq	%rdx, 0x24(%rbx)
0000000000018886	movq	%rcx, 0x2c(%rbx)
000000000001888a	movl	$0x1513, (%rbx)
0000000000018890	movl	%edi, 0x8(%rbx)
0000000000018893	callq	_mig_get_reply_port
0000000000018898	movl	%eax, 0xc(%rbx)
000000000001889b	movabsq	$0xca500000000, %rcx
00000000000188a5	movq	%rcx, 0x10(%rbx)
00000000000188a9	movl	$0x0, (%rsp)
00000000000188b0	movq	%rbx, %rdi
00000000000188b3	movl	$0x3, %esi
00000000000188b8	movl	$0x34, %edx
00000000000188bd	movl	$0x2c, %ecx
00000000000188c2	movl	%eax, %r8d
00000000000188c5	xorl	%r9d, %r9d
00000000000188c8	callq	_mach_msg
00000000000188cd	movl	%eax, %ebx
00000000000188cf	leal	-0x10000002(%rbx), %eax
00000000000188d5	cmpl	$0xe, %eax
00000000000188d8	ja	0x188ee
00000000000188da	movl	$0x4003, %ecx
00000000000188df	btl	%eax, %ecx
00000000000188e2	jae	0x188ee
00000000000188e4	movl	-0x34(%rbp), %edi
00000000000188e7	callq	_mig_put_reply_port
00000000000188ec	jmp	0x18943
00000000000188ee	testl	%ebx, %ebx
00000000000188f0	jne	0x18924
00000000000188f2	movl	-0x2c(%rbp), %eax
00000000000188f5	cmpl	$0x47, %eax
00000000000188f8	je	0x1892e
00000000000188fa	cmpl	$0xd09, %eax
00000000000188ff	jne	0x18935
0000000000018901	movl	$0xfffffed4, %ebx
0000000000018906	cmpl	$0x0, -0x40(%rbp)
000000000001890a	js	0x1893a
000000000001890c	cmpl	$0x24, -0x3c(%rbp)
0000000000018910	jne	0x1893a
0000000000018912	movl	-0x38(%rbp), %eax
0000000000018915	testl	%eax, %eax
0000000000018917	jne	0x1893a
0000000000018919	movl	-0x20(%rbp), %ebx
000000000001891c	testl	%ebx, %ebx
000000000001891e	jne	0x1893a
0000000000018920	xorl	%ebx, %ebx
0000000000018922	jmp	0x18943
0000000000018924	movl	-0x34(%rbp), %edi
0000000000018927	callq	_mig_dealloc_reply_port
000000000001892c	jmp	0x18943
000000000001892e	movl	$0xfffffecc, %ebx
0000000000018933	jmp	0x1893a
0000000000018935	movl	$0xfffffed3, %ebx
000000000001893a	leaq	-0x40(%rbp), %rdi
000000000001893e	callq	_mach_msg_destroy
0000000000018943	movl	%ebx, %eax
0000000000018945	addq	$0x48, %rsp
0000000000018949	popq	%rbx
000000000001894a	popq	%rbp
000000000001894b	retq
__kernelrpc_mach_port_swap_guard:
000000000001894c	pushq	%rbp
000000000001894d	movq	%rsp, %rbp
0000000000018950	pushq	%rbx
0000000000018951	subq	$0x48, %rsp
0000000000018955	leaq	_NDR_record(%rip), %rax
000000000001895c	movq	(%rax), %rax
000000000001895f	leaq	-0x40(%rbp), %rbx
0000000000018963	movq	%rax, 0x18(%rbx)
0000000000018967	movl	%esi, 0x20(%rbx)
000000000001896a	movq	%rdx, 0x24(%rbx)
000000000001896e	movq	%rcx, 0x2c(%rbx)
0000000000018972	movl	$0x1513, (%rbx)
0000000000018978	movl	%edi, 0x8(%rbx)
000000000001897b	callq	_mig_get_reply_port
0000000000018980	movl	%eax, 0xc(%rbx)
0000000000018983	movabsq	$0xca600000000, %rcx
000000000001898d	movq	%rcx, 0x10(%rbx)
0000000000018991	movl	$0x0, (%rsp)
0000000000018998	movq	%rbx, %rdi
000000000001899b	movl	$0x3, %esi
00000000000189a0	movl	$0x34, %edx
00000000000189a5	movl	$0x2c, %ecx
00000000000189aa	movl	%eax, %r8d
00000000000189ad	xorl	%r9d, %r9d
00000000000189b0	callq	_mach_msg
00000000000189b5	movl	%eax, %ebx
00000000000189b7	leal	-0x10000002(%rbx), %eax
00000000000189bd	cmpl	$0xe, %eax
00000000000189c0	ja	0x189d6
00000000000189c2	movl	$0x4003, %ecx
00000000000189c7	btl	%eax, %ecx
00000000000189ca	jae	0x189d6
00000000000189cc	movl	-0x34(%rbp), %edi
00000000000189cf	callq	_mig_put_reply_port
00000000000189d4	jmp	0x18a2b
00000000000189d6	testl	%ebx, %ebx
00000000000189d8	jne	0x18a0c
00000000000189da	movl	-0x2c(%rbp), %eax
00000000000189dd	cmpl	$0x47, %eax
00000000000189e0	je	0x18a16
00000000000189e2	cmpl	$0xd0a, %eax
00000000000189e7	jne	0x18a1d
00000000000189e9	movl	$0xfffffed4, %ebx
00000000000189ee	cmpl	$0x0, -0x40(%rbp)
00000000000189f2	js	0x18a22
00000000000189f4	cmpl	$0x24, -0x3c(%rbp)
00000000000189f8	jne	0x18a22
00000000000189fa	movl	-0x38(%rbp), %eax
00000000000189fd	testl	%eax, %eax
00000000000189ff	jne	0x18a22
0000000000018a01	movl	-0x20(%rbp), %ebx
0000000000018a04	testl	%ebx, %ebx
0000000000018a06	jne	0x18a22
0000000000018a08	xorl	%ebx, %ebx
0000000000018a0a	jmp	0x18a2b
0000000000018a0c	movl	-0x34(%rbp), %edi
0000000000018a0f	callq	_mig_dealloc_reply_port
0000000000018a14	jmp	0x18a2b
0000000000018a16	movl	$0xfffffecc, %ebx
0000000000018a1b	jmp	0x18a22
0000000000018a1d	movl	$0xfffffed3, %ebx
0000000000018a22	leaq	-0x40(%rbp), %rdi
0000000000018a26	callq	_mach_msg_destroy
0000000000018a2b	movl	%ebx, %eax
0000000000018a2d	addq	$0x48, %rsp
0000000000018a31	popq	%rbx
0000000000018a32	popq	%rbp
0000000000018a33	retq
__kernelrpc_mach_vm_allocate:
0000000000018a34	pushq	%rbp
0000000000018a35	movq	%rsp, %rbp
0000000000018a38	pushq	%r14
0000000000018a3a	pushq	%rbx
0000000000018a3b	subq	$0x40, %rsp
0000000000018a3f	movq	%rsi, %r14
0000000000018a42	leaq	_NDR_record(%rip), %rax
0000000000018a49	movq	(%rax), %rax
0000000000018a4c	leaq	-0x48(%rbp), %rbx
0000000000018a50	movq	%rax, 0x18(%rbx)
0000000000018a54	movq	(%rsi), %rax
0000000000018a57	movq	%rax, 0x20(%rbx)
0000000000018a5b	movq	%rdx, 0x28(%rbx)
0000000000018a5f	movl	%ecx, 0x30(%rbx)
0000000000018a62	movl	$0x1513, (%rbx)
0000000000018a68	movl	%edi, 0x8(%rbx)
0000000000018a6b	callq	_mig_get_reply_port
0000000000018a70	movl	%eax, 0xc(%rbx)
0000000000018a73	movabsq	$0x12c000000000, %rcx
0000000000018a7d	movq	%rcx, 0x10(%rbx)
0000000000018a81	movl	$0x0, (%rsp)
0000000000018a88	movq	%rbx, %rdi
0000000000018a8b	movl	$0x3, %esi
0000000000018a90	movl	$0x34, %edx
0000000000018a95	movl	$0x34, %ecx
0000000000018a9a	movl	%eax, %r8d
0000000000018a9d	xorl	%r9d, %r9d
0000000000018aa0	callq	_mach_msg
0000000000018aa5	movl	%eax, %ebx
0000000000018aa7	leal	-0x10000002(%rbx), %eax
0000000000018aad	cmpl	$0xe, %eax
0000000000018ab0	ja	0x18ac6
0000000000018ab2	movl	$0x4003, %ecx
0000000000018ab7	btl	%eax, %ecx
0000000000018aba	jae	0x18ac6
0000000000018abc	movl	-0x3c(%rbp), %edi
0000000000018abf	callq	_mig_put_reply_port
0000000000018ac4	jmp	0x18b2e
0000000000018ac6	testl	%ebx, %ebx
0000000000018ac8	jne	0x18b0f
0000000000018aca	movl	-0x34(%rbp), %eax
0000000000018acd	cmpl	$0x47, %eax
0000000000018ad0	je	0x18b19
0000000000018ad2	cmpl	$0x1324, %eax
0000000000018ad7	jne	0x18b20
0000000000018ad9	movl	$0xfffffed4, %ebx
0000000000018ade	cmpl	$0x0, -0x48(%rbp)
0000000000018ae2	js	0x18b25
0000000000018ae4	movl	-0x44(%rbp), %eax
0000000000018ae7	cmpl	$0x2c, %eax
0000000000018aea	je	0x18af7
0000000000018aec	cmpl	$0x24, %eax
0000000000018aef	jne	0x18b25
0000000000018af1	cmpl	$0x0, -0x28(%rbp)
0000000000018af5	je	0x18b25
0000000000018af7	cmpl	$0x0, -0x40(%rbp)
0000000000018afb	jne	0x18b25
0000000000018afd	movl	-0x28(%rbp), %ebx
0000000000018b00	testl	%ebx, %ebx
0000000000018b02	jne	0x18b25
0000000000018b04	movq	-0x24(%rbp), %rax
0000000000018b08	movq	%rax, (%r14)
0000000000018b0b	xorl	%ebx, %ebx
0000000000018b0d	jmp	0x18b2e
0000000000018b0f	movl	-0x3c(%rbp), %edi
0000000000018b12	callq	_mig_dealloc_reply_port
0000000000018b17	jmp	0x18b2e
0000000000018b19	movl	$0xfffffecc, %ebx
0000000000018b1e	jmp	0x18b25
0000000000018b20	movl	$0xfffffed3, %ebx
0000000000018b25	leaq	-0x48(%rbp), %rdi
0000000000018b29	callq	_mach_msg_destroy
0000000000018b2e	movl	%ebx, %eax
0000000000018b30	addq	$0x40, %rsp
0000000000018b34	popq	%rbx
0000000000018b35	popq	%r14
0000000000018b37	popq	%rbp
0000000000018b38	retq
__kernelrpc_mach_vm_deallocate:
0000000000018b39	pushq	%rbp
0000000000018b3a	movq	%rsp, %rbp
0000000000018b3d	pushq	%rbx
0000000000018b3e	subq	$0x38, %rsp
0000000000018b42	leaq	_NDR_record(%rip), %rax
0000000000018b49	movq	(%rax), %rax
0000000000018b4c	leaq	-0x38(%rbp), %rbx
0000000000018b50	movq	%rax, 0x18(%rbx)
0000000000018b54	movq	%rsi, 0x20(%rbx)
0000000000018b58	movq	%rdx, 0x28(%rbx)
0000000000018b5c	movl	$0x1513, (%rbx)
0000000000018b62	movl	%edi, 0x8(%rbx)
0000000000018b65	callq	_mig_get_reply_port
0000000000018b6a	movl	%eax, 0xc(%rbx)
0000000000018b6d	movabsq	$0x12c100000000, %rcx
0000000000018b77	movq	%rcx, 0x10(%rbx)
0000000000018b7b	movl	$0x0, (%rsp)
0000000000018b82	movq	%rbx, %rdi
0000000000018b85	movl	$0x3, %esi
0000000000018b8a	movl	$0x30, %edx
0000000000018b8f	movl	$0x2c, %ecx
0000000000018b94	movl	%eax, %r8d
0000000000018b97	xorl	%r9d, %r9d
0000000000018b9a	callq	_mach_msg
0000000000018b9f	movl	%eax, %ebx
0000000000018ba1	leal	-0x10000002(%rbx), %eax
0000000000018ba7	cmpl	$0xe, %eax
0000000000018baa	ja	0x18bc0
0000000000018bac	movl	$0x4003, %ecx
0000000000018bb1	btl	%eax, %ecx
0000000000018bb4	jae	0x18bc0
0000000000018bb6	movl	-0x2c(%rbp), %edi
0000000000018bb9	callq	_mig_put_reply_port
0000000000018bbe	jmp	0x18c15
0000000000018bc0	testl	%ebx, %ebx
0000000000018bc2	jne	0x18bf6
0000000000018bc4	movl	-0x24(%rbp), %eax
0000000000018bc7	cmpl	$0x47, %eax
0000000000018bca	je	0x18c00
0000000000018bcc	cmpl	$0x1325, %eax
0000000000018bd1	jne	0x18c07
0000000000018bd3	movl	$0xfffffed4, %ebx
0000000000018bd8	cmpl	$0x0, -0x38(%rbp)
0000000000018bdc	js	0x18c0c
0000000000018bde	cmpl	$0x24, -0x34(%rbp)
0000000000018be2	jne	0x18c0c
0000000000018be4	movl	-0x30(%rbp), %eax
0000000000018be7	testl	%eax, %eax
0000000000018be9	jne	0x18c0c
0000000000018beb	movl	-0x18(%rbp), %ebx
0000000000018bee	testl	%ebx, %ebx
0000000000018bf0	jne	0x18c0c
0000000000018bf2	xorl	%ebx, %ebx
0000000000018bf4	jmp	0x18c15
0000000000018bf6	movl	-0x2c(%rbp), %edi
0000000000018bf9	callq	_mig_dealloc_reply_port
0000000000018bfe	jmp	0x18c15
0000000000018c00	movl	$0xfffffecc, %ebx
0000000000018c05	jmp	0x18c0c
0000000000018c07	movl	$0xfffffed3, %ebx
0000000000018c0c	leaq	-0x38(%rbp), %rdi
0000000000018c10	callq	_mach_msg_destroy
0000000000018c15	movl	%ebx, %eax
0000000000018c17	addq	$0x38, %rsp
0000000000018c1b	popq	%rbx
0000000000018c1c	popq	%rbp
0000000000018c1d	retq
__kernelrpc_mach_vm_protect:
0000000000018c1e	pushq	%rbp
0000000000018c1f	movq	%rsp, %rbp
0000000000018c22	pushq	%rbx
0000000000018c23	subq	$0x48, %rsp
0000000000018c27	leaq	_NDR_record(%rip), %rax
0000000000018c2e	movq	(%rax), %rax
0000000000018c31	leaq	-0x40(%rbp), %rbx
0000000000018c35	movq	%rax, 0x18(%rbx)
0000000000018c39	movq	%rsi, 0x20(%rbx)
0000000000018c3d	movq	%rdx, 0x28(%rbx)
0000000000018c41	movl	%ecx, 0x30(%rbx)
0000000000018c44	movl	%r8d, 0x34(%rbx)
0000000000018c48	movl	$0x1513, (%rbx)
0000000000018c4e	movl	%edi, 0x8(%rbx)
0000000000018c51	callq	_mig_get_reply_port
0000000000018c56	movl	%eax, 0xc(%rbx)
0000000000018c59	movabsq	$0x12c200000000, %rcx
0000000000018c63	movq	%rcx, 0x10(%rbx)
0000000000018c67	movl	$0x0, (%rsp)
0000000000018c6e	movq	%rbx, %rdi
0000000000018c71	movl	$0x3, %esi
0000000000018c76	movl	$0x38, %edx
0000000000018c7b	movl	$0x2c, %ecx
0000000000018c80	movl	%eax, %r8d
0000000000018c83	xorl	%r9d, %r9d
0000000000018c86	callq	_mach_msg
0000000000018c8b	movl	%eax, %ebx
0000000000018c8d	leal	-0x10000002(%rbx), %eax
0000000000018c93	cmpl	$0xe, %eax
0000000000018c96	ja	0x18cac
0000000000018c98	movl	$0x4003, %ecx
0000000000018c9d	btl	%eax, %ecx
0000000000018ca0	jae	0x18cac
0000000000018ca2	movl	-0x34(%rbp), %edi
0000000000018ca5	callq	_mig_put_reply_port
0000000000018caa	jmp	0x18d01
0000000000018cac	testl	%ebx, %ebx
0000000000018cae	jne	0x18ce2
0000000000018cb0	movl	-0x2c(%rbp), %eax
0000000000018cb3	cmpl	$0x47, %eax
0000000000018cb6	je	0x18cec
0000000000018cb8	cmpl	$0x1326, %eax
0000000000018cbd	jne	0x18cf3
0000000000018cbf	movl	$0xfffffed4, %ebx
0000000000018cc4	cmpl	$0x0, -0x40(%rbp)
0000000000018cc8	js	0x18cf8
0000000000018cca	cmpl	$0x24, -0x3c(%rbp)
0000000000018cce	jne	0x18cf8
0000000000018cd0	movl	-0x38(%rbp), %eax
0000000000018cd3	testl	%eax, %eax
0000000000018cd5	jne	0x18cf8
0000000000018cd7	movl	-0x20(%rbp), %ebx
0000000000018cda	testl	%ebx, %ebx
0000000000018cdc	jne	0x18cf8
0000000000018cde	xorl	%ebx, %ebx
0000000000018ce0	jmp	0x18d01
0000000000018ce2	movl	-0x34(%rbp), %edi
0000000000018ce5	callq	_mig_dealloc_reply_port
0000000000018cea	jmp	0x18d01
0000000000018cec	movl	$0xfffffecc, %ebx
0000000000018cf1	jmp	0x18cf8
0000000000018cf3	movl	$0xfffffed3, %ebx
0000000000018cf8	leaq	-0x40(%rbp), %rdi
0000000000018cfc	callq	_mach_msg_destroy
0000000000018d01	movl	%ebx, %eax
0000000000018d03	addq	$0x48, %rsp
0000000000018d07	popq	%rbx
0000000000018d08	popq	%rbp
0000000000018d09	retq
_mach_vm_inherit:
0000000000018d0a	pushq	%rbp
0000000000018d0b	movq	%rsp, %rbp
0000000000018d0e	pushq	%rbx
0000000000018d0f	subq	$0x48, %rsp
0000000000018d13	leaq	_NDR_record(%rip), %rax
0000000000018d1a	movq	(%rax), %rax
0000000000018d1d	leaq	-0x40(%rbp), %rbx
0000000000018d21	movq	%rax, 0x18(%rbx)
0000000000018d25	movq	%rsi, 0x20(%rbx)
0000000000018d29	movq	%rdx, 0x28(%rbx)
0000000000018d2d	movl	%ecx, 0x30(%rbx)
0000000000018d30	movl	$0x1513, (%rbx)
0000000000018d36	movl	%edi, 0x8(%rbx)
0000000000018d39	callq	_mig_get_reply_port
0000000000018d3e	movl	%eax, 0xc(%rbx)
0000000000018d41	movabsq	$0x12c300000000, %rcx
0000000000018d4b	movq	%rcx, 0x10(%rbx)
0000000000018d4f	movl	$0x0, (%rsp)
0000000000018d56	movq	%rbx, %rdi
0000000000018d59	movl	$0x3, %esi
0000000000018d5e	movl	$0x34, %edx
0000000000018d63	movl	$0x2c, %ecx
0000000000018d68	movl	%eax, %r8d
0000000000018d6b	xorl	%r9d, %r9d
0000000000018d6e	callq	_mach_msg
0000000000018d73	movl	%eax, %ebx
0000000000018d75	leal	-0x10000002(%rbx), %eax
0000000000018d7b	cmpl	$0xe, %eax
0000000000018d7e	ja	0x18d94
0000000000018d80	movl	$0x4003, %ecx
0000000000018d85	btl	%eax, %ecx
0000000000018d88	jae	0x18d94
0000000000018d8a	movl	-0x34(%rbp), %edi
0000000000018d8d	callq	_mig_put_reply_port
0000000000018d92	jmp	0x18de9
0000000000018d94	testl	%ebx, %ebx
0000000000018d96	jne	0x18dca
0000000000018d98	movl	-0x2c(%rbp), %eax
0000000000018d9b	cmpl	$0x47, %eax
0000000000018d9e	je	0x18dd4
0000000000018da0	cmpl	$0x1327, %eax
0000000000018da5	jne	0x18ddb
0000000000018da7	movl	$0xfffffed4, %ebx
0000000000018dac	cmpl	$0x0, -0x40(%rbp)
0000000000018db0	js	0x18de0
0000000000018db2	cmpl	$0x24, -0x3c(%rbp)
0000000000018db6	jne	0x18de0
0000000000018db8	movl	-0x38(%rbp), %eax
0000000000018dbb	testl	%eax, %eax
0000000000018dbd	jne	0x18de0
0000000000018dbf	movl	-0x20(%rbp), %ebx
0000000000018dc2	testl	%ebx, %ebx
0000000000018dc4	jne	0x18de0
0000000000018dc6	xorl	%ebx, %ebx
0000000000018dc8	jmp	0x18de9
0000000000018dca	movl	-0x34(%rbp), %edi
0000000000018dcd	callq	_mig_dealloc_reply_port
0000000000018dd2	jmp	0x18de9
0000000000018dd4	movl	$0xfffffecc, %ebx
0000000000018dd9	jmp	0x18de0
0000000000018ddb	movl	$0xfffffed3, %ebx
0000000000018de0	leaq	-0x40(%rbp), %rdi
0000000000018de4	callq	_mach_msg_destroy
0000000000018de9	movl	%ebx, %eax
0000000000018deb	addq	$0x48, %rsp
0000000000018def	popq	%rbx
0000000000018df0	popq	%rbp
0000000000018df1	retq
__kernelrpc_mach_vm_read:
0000000000018df2	pushq	%rbp
0000000000018df3	movq	%rsp, %rbp
0000000000018df6	pushq	%r15
0000000000018df8	pushq	%r14
0000000000018dfa	pushq	%rbx
0000000000018dfb	subq	$0x48, %rsp
0000000000018dff	movq	%r8, %r14
0000000000018e02	movq	%rcx, %r15
0000000000018e05	leaq	_NDR_record(%rip), %rax
0000000000018e0c	movq	(%rax), %rax
0000000000018e0f	leaq	-0x58(%rbp), %rbx
0000000000018e13	movq	%rax, 0x18(%rbx)
0000000000018e17	movq	%rsi, 0x20(%rbx)
0000000000018e1b	movq	%rdx, 0x28(%rbx)
0000000000018e1f	movl	$0x1513, (%rbx)
0000000000018e25	movl	%edi, 0x8(%rbx)
0000000000018e28	callq	_mig_get_reply_port
0000000000018e2d	movl	%eax, 0xc(%rbx)
0000000000018e30	movabsq	$0x12c400000000, %rcx
0000000000018e3a	movq	%rcx, 0x10(%rbx)
0000000000018e3e	movl	$0x0, (%rsp)
0000000000018e45	movq	%rbx, %rdi
0000000000018e48	movl	$0x3, %esi
0000000000018e4d	movl	$0x30, %edx
0000000000018e52	movl	$0x40, %ecx
0000000000018e57	movl	%eax, %r8d
0000000000018e5a	xorl	%r9d, %r9d
0000000000018e5d	callq	_mach_msg
0000000000018e62	movl	%eax, %ebx
0000000000018e64	leal	-0x10000002(%rbx), %eax
0000000000018e6a	cmpl	$0xe, %eax
0000000000018e6d	ja	0x18e83
0000000000018e6f	movl	$0x4003, %ecx
0000000000018e74	btl	%eax, %ecx
0000000000018e77	jae	0x18e83
0000000000018e79	movl	-0x4c(%rbp), %edi
0000000000018e7c	callq	_mig_put_reply_port
0000000000018e81	jmp	0x18ed1
0000000000018e83	testl	%ebx, %ebx
0000000000018e85	jne	0x18eb2
0000000000018e87	movl	-0x44(%rbp), %eax
0000000000018e8a	cmpl	$0x47, %eax
0000000000018e8d	je	0x18ebc
0000000000018e8f	cmpl	$_thread_get_special_reply_port, %eax
0000000000018e94	jne	0x18ec3
0000000000018e96	movl	-0x58(%rbp), %eax
0000000000018e99	movl	-0x54(%rbp), %ecx
0000000000018e9c	movl	$0xfffffed4, %ebx
0000000000018ea1	testl	%eax, %eax
0000000000018ea3	js	0x18ede
0000000000018ea5	cmpl	$0x24, %ecx
0000000000018ea8	jne	0x18ec8
0000000000018eaa	cmpl	$0x0, -0x38(%rbp)
0000000000018eae	jne	0x18ee9
0000000000018eb0	jmp	0x18ec8
0000000000018eb2	movl	-0x4c(%rbp), %edi
0000000000018eb5	callq	_mig_dealloc_reply_port
0000000000018eba	jmp	0x18ed1
0000000000018ebc	movl	$0xfffffecc, %ebx
0000000000018ec1	jmp	0x18ec8
0000000000018ec3	movl	$0xfffffed3, %ebx
0000000000018ec8	leaq	-0x58(%rbp), %rdi
0000000000018ecc	callq	_mach_msg_destroy
0000000000018ed1	movl	%ebx, %eax
0000000000018ed3	addq	$0x48, %rsp
0000000000018ed7	popq	%rbx
0000000000018ed8	popq	%r14
0000000000018eda	popq	%r15
0000000000018edc	popq	%rbp
0000000000018edd	retq
0000000000018ede	cmpl	$0x38, %ecx
0000000000018ee1	jne	0x18ec8
0000000000018ee3	cmpl	$0x1, -0x40(%rbp)
0000000000018ee7	jne	0x18ec8
0000000000018ee9	movl	$0xfffffed4, %ebx
0000000000018eee	cmpl	$0x0, -0x50(%rbp)
0000000000018ef2	jne	0x18ec8
0000000000018ef4	testl	%eax, %eax
0000000000018ef6	js	0x18f04
0000000000018ef8	movl	-0x38(%rbp), %ebx
0000000000018efb	testl	%ebx, %ebx
0000000000018efd	jne	0x18ec8
0000000000018eff	movl	-0x24(%rbp), %eax
0000000000018f02	jmp	0x18f1a
0000000000018f04	movzbl	-0x31(%rbp), %eax
0000000000018f08	shll	$0x18, %eax
0000000000018f0b	cmpl	$0x1000000, %eax
0000000000018f10	jne	0x18ec8
0000000000018f12	movl	-0x30(%rbp), %eax
0000000000018f15	cmpl	-0x24(%rbp), %eax
0000000000018f18	jne	0x18ec8
0000000000018f1a	movq	-0x3c(%rbp), %rcx
0000000000018f1e	movq	%rcx, (%r15)
0000000000018f21	movl	%eax, (%r14)
0000000000018f24	xorl	%ebx, %ebx
0000000000018f26	jmp	0x18ed1
_mach_vm_read_list:
0000000000018f28	pushq	%rbp
0000000000018f29	movq	%rsp, %rbp
0000000000018f2c	pushq	%r15
0000000000018f2e	pushq	%r14
0000000000018f30	pushq	%r12
0000000000018f32	pushq	%rbx
0000000000018f33	subq	$0x1040, %rsp
0000000000018f3a	movl	%edx, %r12d
0000000000018f3d	movq	%rsi, %r14
0000000000018f40	movl	%edi, %r15d
0000000000018f43	leaq	_NDR_record(%rip), %rax
0000000000018f4a	movq	(%rax), %rax
0000000000018f4d	leaq	-0x1030(%rbp), %rbx
0000000000018f54	movq	%rax, -0x8(%rbx)
0000000000018f58	movl	$0x1000, %edx
0000000000018f5d	movq	%rbx, %rdi
0000000000018f60	callq	_memcpy
0000000000018f65	movl	%r12d, 0x1000(%rbx)
0000000000018f6c	movl	$0x1513, -0x20(%rbx)
0000000000018f73	movl	%r15d, -0x18(%rbx)
0000000000018f77	callq	_mig_get_reply_port
0000000000018f7c	movl	%eax, -0x14(%rbx)
0000000000018f7f	movabsq	$0x12c500000000, %rcx
0000000000018f89	movq	%rcx, -0x10(%rbx)
0000000000018f8d	movl	$0x0, (%rsp)
0000000000018f94	leaq	-0x1050(%rbp), %rdi
0000000000018f9b	movl	$0x3, %esi
0000000000018fa0	movl	$0x1024, %edx
0000000000018fa5	movl	$0x102c, %ecx
0000000000018faa	movl	%eax, %r8d
0000000000018fad	xorl	%r9d, %r9d
0000000000018fb0	callq	_mach_msg
0000000000018fb5	movl	%eax, %ebx
0000000000018fb7	leal	-0x10000002(%rbx), %eax
0000000000018fbd	cmpl	$0xe, %eax
0000000000018fc0	ja	0x18fdc
0000000000018fc2	movl	$0x4003, %ecx
0000000000018fc7	btl	%eax, %ecx
0000000000018fca	jae	0x18fdc
0000000000018fcc	movl	-0x1044(%rbp), %edi
0000000000018fd2	callq	_mig_put_reply_port
0000000000018fd7	jmp	0x1906b
0000000000018fdc	testl	%ebx, %ebx
0000000000018fde	jne	0x19046
0000000000018fe0	movl	-0x103c(%rbp), %eax
0000000000018fe6	cmpl	$0x47, %eax
0000000000018fe9	je	0x19053
0000000000018feb	cmpl	$0x1329, %eax
0000000000018ff0	jne	0x1905a
0000000000018ff2	movl	$0xfffffed4, %ebx
0000000000018ff7	cmpl	$0x0, -0x1050(%rbp)
0000000000018ffe	js	0x1905f
0000000000019000	movl	-0x104c(%rbp), %eax
0000000000019006	cmpl	$0x1024, %eax
000000000001900b	je	0x1901b
000000000001900d	cmpl	$0x24, %eax
0000000000019010	jne	0x1905f
0000000000019012	cmpl	$0x0, -0x1030(%rbp)
0000000000019019	je	0x1905f
000000000001901b	cmpl	$0x0, -0x1048(%rbp)
0000000000019022	jne	0x1905f
0000000000019024	movl	-0x1030(%rbp), %ebx
000000000001902a	testl	%ebx, %ebx
000000000001902c	jne	0x1905f
000000000001902e	leaq	-0x102c(%rbp), %rsi
0000000000019035	movl	$0x1000, %edx
000000000001903a	movq	%r14, %rdi
000000000001903d	callq	_memcpy
0000000000019042	xorl	%ebx, %ebx
0000000000019044	jmp	0x1906b
0000000000019046	movl	-0x1044(%rbp), %edi
000000000001904c	callq	_mig_dealloc_reply_port
0000000000019051	jmp	0x1906b
0000000000019053	movl	$0xfffffecc, %ebx
0000000000019058	jmp	0x1905f
000000000001905a	movl	$0xfffffed3, %ebx
000000000001905f	leaq	-0x1050(%rbp), %rdi
0000000000019066	callq	_mach_msg_destroy
000000000001906b	movl	%ebx, %eax
000000000001906d	addq	$0x1040, %rsp
0000000000019074	popq	%rbx
0000000000019075	popq	%r12
0000000000019077	popq	%r14
0000000000019079	popq	%r15
000000000001907b	popq	%rbp
000000000001907c	retq
_mach_vm_write:
000000000001907d	pushq	%rbp
000000000001907e	movq	%rsp, %rbp
0000000000019081	pushq	%rbx
0000000000019082	subq	$0x48, %rsp
0000000000019086	leaq	-0x48(%rbp), %rbx
000000000001908a	movl	$0x1, 0x18(%rbx)
0000000000019091	movq	%rdx, 0x1c(%rbx)
0000000000019095	movl	%ecx, 0x28(%rbx)
0000000000019098	movl	$0x1000100, 0x24(%rbx)
000000000001909f	leaq	_NDR_record(%rip), %rax
00000000000190a6	movq	(%rax), %rax
00000000000190a9	movq	%rax, 0x2c(%rbx)
00000000000190ad	movq	%rsi, 0x34(%rbx)
00000000000190b1	movl	%ecx, 0x3c(%rbx)
00000000000190b4	movl	$0x80001513, (%rbx)
00000000000190ba	movl	%edi, 0x8(%rbx)
00000000000190bd	callq	_mig_get_reply_port
00000000000190c2	movl	%eax, 0xc(%rbx)
00000000000190c5	movabsq	$0x12c600000000, %rcx
00000000000190cf	movq	%rcx, 0x10(%rbx)
00000000000190d3	movl	$0x0, (%rsp)
00000000000190da	movq	%rbx, %rdi
00000000000190dd	movl	$0x3, %esi
00000000000190e2	movl	$0x40, %edx
00000000000190e7	movl	$0x2c, %ecx
00000000000190ec	movl	%eax, %r8d
00000000000190ef	xorl	%r9d, %r9d
00000000000190f2	callq	_mach_msg
00000000000190f7	movl	%eax, %ebx
00000000000190f9	leal	-0x10000002(%rbx), %eax
00000000000190ff	cmpl	$0xe, %eax
0000000000019102	ja	0x19118
0000000000019104	movl	$0x4003, %ecx
0000000000019109	btl	%eax, %ecx
000000000001910c	jae	0x19118
000000000001910e	movl	-0x3c(%rbp), %edi
0000000000019111	callq	_mig_put_reply_port
0000000000019116	jmp	0x1916d
0000000000019118	testl	%ebx, %ebx
000000000001911a	jne	0x1914e
000000000001911c	movl	-0x34(%rbp), %eax
000000000001911f	cmpl	$0x47, %eax
0000000000019122	je	0x19158
0000000000019124	cmpl	$0x132a, %eax
0000000000019129	jne	0x1915f
000000000001912b	movl	$0xfffffed4, %ebx
0000000000019130	cmpl	$0x0, -0x48(%rbp)
0000000000019134	js	0x19164
0000000000019136	cmpl	$0x24, -0x44(%rbp)
000000000001913a	jne	0x19164
000000000001913c	movl	-0x40(%rbp), %eax
000000000001913f	testl	%eax, %eax
0000000000019141	jne	0x19164
0000000000019143	movl	-0x28(%rbp), %ebx
0000000000019146	testl	%ebx, %ebx
0000000000019148	jne	0x19164
000000000001914a	xorl	%ebx, %ebx
000000000001914c	jmp	0x1916d
000000000001914e	movl	-0x3c(%rbp), %edi
0000000000019151	callq	_mig_dealloc_reply_port
0000000000019156	jmp	0x1916d
0000000000019158	movl	$0xfffffecc, %ebx
000000000001915d	jmp	0x19164
000000000001915f	movl	$0xfffffed3, %ebx
0000000000019164	leaq	-0x48(%rbp), %rdi
0000000000019168	callq	_mach_msg_destroy
000000000001916d	movl	%ebx, %eax
000000000001916f	addq	$0x48, %rsp
0000000000019173	popq	%rbx
0000000000019174	popq	%rbp
0000000000019175	retq
_mach_vm_msync:
0000000000019176	pushq	%rbp
0000000000019177	movq	%rsp, %rbp
000000000001917a	pushq	%rbx
000000000001917b	subq	$0x48, %rsp
000000000001917f	leaq	_NDR_record(%rip), %rax
0000000000019186	movq	(%rax), %rax
0000000000019189	leaq	-0x40(%rbp), %rbx
000000000001918d	movq	%rax, 0x18(%rbx)
0000000000019191	movq	%rsi, 0x20(%rbx)
0000000000019195	movq	%rdx, 0x28(%rbx)
0000000000019199	movl	%ecx, 0x30(%rbx)
000000000001919c	movl	$0x1513, (%rbx)
00000000000191a2	movl	%edi, 0x8(%rbx)
00000000000191a5	callq	_mig_get_reply_port
00000000000191aa	movl	%eax, 0xc(%rbx)
00000000000191ad	movabsq	$0x12c900000000, %rcx
00000000000191b7	movq	%rcx, 0x10(%rbx)
00000000000191bb	movl	$0x0, (%rsp)
00000000000191c2	movq	%rbx, %rdi
00000000000191c5	movl	$0x3, %esi
00000000000191ca	movl	$0x34, %edx
00000000000191cf	movl	$0x2c, %ecx
00000000000191d4	movl	%eax, %r8d
00000000000191d7	xorl	%r9d, %r9d
00000000000191da	callq	_mach_msg
00000000000191df	movl	%eax, %ebx
00000000000191e1	leal	-0x10000002(%rbx), %eax
00000000000191e7	cmpl	$0xe, %eax
00000000000191ea	ja	0x19200
00000000000191ec	movl	$0x4003, %ecx
00000000000191f1	btl	%eax, %ecx
00000000000191f4	jae	0x19200
00000000000191f6	movl	-0x34(%rbp), %edi
00000000000191f9	callq	_mig_put_reply_port
00000000000191fe	jmp	0x19255
0000000000019200	testl	%ebx, %ebx
0000000000019202	jne	0x19236
0000000000019204	movl	-0x2c(%rbp), %eax
0000000000019207	cmpl	$0x47, %eax
000000000001920a	je	0x19240
000000000001920c	cmpl	$0x132d, %eax
0000000000019211	jne	0x19247
0000000000019213	movl	$0xfffffed4, %ebx
0000000000019218	cmpl	$0x0, -0x40(%rbp)
000000000001921c	js	0x1924c
000000000001921e	cmpl	$0x24, -0x3c(%rbp)
0000000000019222	jne	0x1924c
0000000000019224	movl	-0x38(%rbp), %eax
0000000000019227	testl	%eax, %eax
0000000000019229	jne	0x1924c
000000000001922b	movl	-0x20(%rbp), %ebx
000000000001922e	testl	%ebx, %ebx
0000000000019230	jne	0x1924c
0000000000019232	xorl	%ebx, %ebx
0000000000019234	jmp	0x19255
0000000000019236	movl	-0x34(%rbp), %edi
0000000000019239	callq	_mig_dealloc_reply_port
000000000001923e	jmp	0x19255
0000000000019240	movl	$0xfffffecc, %ebx
0000000000019245	jmp	0x1924c
0000000000019247	movl	$0xfffffed3, %ebx
000000000001924c	leaq	-0x40(%rbp), %rdi
0000000000019250	callq	_mach_msg_destroy
0000000000019255	movl	%ebx, %eax
0000000000019257	addq	$0x48, %rsp
000000000001925b	popq	%rbx
000000000001925c	popq	%rbp
000000000001925d	retq
_mach_vm_behavior_set:
000000000001925e	pushq	%rbp
000000000001925f	movq	%rsp, %rbp
0000000000019262	pushq	%rbx
0000000000019263	subq	$0x48, %rsp
0000000000019267	leaq	_NDR_record(%rip), %rax
000000000001926e	movq	(%rax), %rax
0000000000019271	leaq	-0x40(%rbp), %rbx
0000000000019275	movq	%rax, 0x18(%rbx)
0000000000019279	movq	%rsi, 0x20(%rbx)
000000000001927d	movq	%rdx, 0x28(%rbx)
0000000000019281	movl	%ecx, 0x30(%rbx)
0000000000019284	movl	$0x1513, (%rbx)
000000000001928a	movl	%edi, 0x8(%rbx)
000000000001928d	callq	_mig_get_reply_port
0000000000019292	movl	%eax, 0xc(%rbx)
0000000000019295	movabsq	$0x12ca00000000, %rcx
000000000001929f	movq	%rcx, 0x10(%rbx)
00000000000192a3	movl	$0x0, (%rsp)
00000000000192aa	movq	%rbx, %rdi
00000000000192ad	movl	$0x3, %esi
00000000000192b2	movl	$0x34, %edx
00000000000192b7	movl	$0x2c, %ecx
00000000000192bc	movl	%eax, %r8d
00000000000192bf	xorl	%r9d, %r9d
00000000000192c2	callq	_mach_msg
00000000000192c7	movl	%eax, %ebx
00000000000192c9	leal	-0x10000002(%rbx), %eax
00000000000192cf	cmpl	$0xe, %eax
00000000000192d2	ja	0x192e8
00000000000192d4	movl	$0x4003, %ecx
00000000000192d9	btl	%eax, %ecx
00000000000192dc	jae	0x192e8
00000000000192de	movl	-0x34(%rbp), %edi
00000000000192e1	callq	_mig_put_reply_port
00000000000192e6	jmp	0x1933d
00000000000192e8	testl	%ebx, %ebx
00000000000192ea	jne	0x1931e
00000000000192ec	movl	-0x2c(%rbp), %eax
00000000000192ef	cmpl	$0x47, %eax
00000000000192f2	je	0x19328
00000000000192f4	cmpl	$0x132e, %eax
00000000000192f9	jne	0x1932f
00000000000192fb	movl	$0xfffffed4, %ebx
0000000000019300	cmpl	$0x0, -0x40(%rbp)
0000000000019304	js	0x19334
0000000000019306	cmpl	$0x24, -0x3c(%rbp)
000000000001930a	jne	0x19334
000000000001930c	movl	-0x38(%rbp), %eax
000000000001930f	testl	%eax, %eax
0000000000019311	jne	0x19334
0000000000019313	movl	-0x20(%rbp), %ebx
0000000000019316	testl	%ebx, %ebx
0000000000019318	jne	0x19334
000000000001931a	xorl	%ebx, %ebx
000000000001931c	jmp	0x1933d
000000000001931e	movl	-0x34(%rbp), %edi
0000000000019321	callq	_mig_dealloc_reply_port
0000000000019326	jmp	0x1933d
0000000000019328	movl	$0xfffffecc, %ebx
000000000001932d	jmp	0x19334
000000000001932f	movl	$0xfffffed3, %ebx
0000000000019334	leaq	-0x40(%rbp), %rdi
0000000000019338	callq	_mach_msg_destroy
000000000001933d	movl	%ebx, %eax
000000000001933f	addq	$0x48, %rsp
0000000000019343	popq	%rbx
0000000000019344	popq	%rbp
0000000000019345	retq
_mach_vm_machine_attribute:
0000000000019346	pushq	%rbp
0000000000019347	movq	%rsp, %rbp
000000000001934a	pushq	%r14
000000000001934c	pushq	%rbx
000000000001934d	subq	$0x40, %rsp
0000000000019351	movq	%r8, %r14
0000000000019354	leaq	_NDR_record(%rip), %rax
000000000001935b	movq	(%rax), %rax
000000000001935e	leaq	-0x48(%rbp), %rbx
0000000000019362	movq	%rax, 0x18(%rbx)
0000000000019366	movq	%rsi, 0x20(%rbx)
000000000001936a	movq	%rdx, 0x28(%rbx)
000000000001936e	movl	%ecx, 0x30(%rbx)
0000000000019371	movl	(%r8), %eax
0000000000019374	movl	%eax, 0x34(%rbx)
0000000000019377	movl	$0x1513, (%rbx)
000000000001937d	movl	%edi, 0x8(%rbx)
0000000000019380	callq	_mig_get_reply_port
0000000000019385	movl	%eax, 0xc(%rbx)
0000000000019388	movabsq	$0x12cc00000000, %rcx
0000000000019392	movq	%rcx, 0x10(%rbx)
0000000000019396	movl	$0x0, (%rsp)
000000000001939d	movq	%rbx, %rdi
00000000000193a0	movl	$0x3, %esi
00000000000193a5	movl	$0x38, %edx
00000000000193aa	movl	$0x30, %ecx
00000000000193af	movl	%eax, %r8d
00000000000193b2	xorl	%r9d, %r9d
00000000000193b5	callq	_mach_msg
00000000000193ba	movl	%eax, %ebx
00000000000193bc	leal	-0x10000002(%rbx), %eax
00000000000193c2	cmpl	$0xe, %eax
00000000000193c5	ja	0x193db
00000000000193c7	movl	$0x4003, %ecx
00000000000193cc	btl	%eax, %ecx
00000000000193cf	jae	0x193db
00000000000193d1	movl	-0x3c(%rbp), %edi
00000000000193d4	callq	_mig_put_reply_port
00000000000193d9	jmp	0x19442
00000000000193db	testl	%ebx, %ebx
00000000000193dd	jne	0x19423
00000000000193df	movl	-0x34(%rbp), %eax
00000000000193e2	cmpl	$0x47, %eax
00000000000193e5	je	0x1942d
00000000000193e7	cmpl	$0x1330, %eax
00000000000193ec	jne	0x19434
00000000000193ee	movl	$0xfffffed4, %ebx
00000000000193f3	cmpl	$0x0, -0x48(%rbp)
00000000000193f7	js	0x19439
00000000000193f9	movl	-0x44(%rbp), %eax
00000000000193fc	cmpl	$0x28, %eax
00000000000193ff	je	0x1940c
0000000000019401	cmpl	$0x24, %eax
0000000000019404	jne	0x19439
0000000000019406	cmpl	$0x0, -0x28(%rbp)
000000000001940a	je	0x19439
000000000001940c	cmpl	$0x0, -0x40(%rbp)
0000000000019410	jne	0x19439
0000000000019412	movl	-0x28(%rbp), %ebx
0000000000019415	testl	%ebx, %ebx
0000000000019417	jne	0x19439
0000000000019419	movl	-0x24(%rbp), %eax
000000000001941c	movl	%eax, (%r14)
000000000001941f	xorl	%ebx, %ebx
0000000000019421	jmp	0x19442
0000000000019423	movl	-0x3c(%rbp), %edi
0000000000019426	callq	_mig_dealloc_reply_port
000000000001942b	jmp	0x19442
000000000001942d	movl	$0xfffffecc, %ebx
0000000000019432	jmp	0x19439
0000000000019434	movl	$0xfffffed3, %ebx
0000000000019439	leaq	-0x48(%rbp), %rdi
000000000001943d	callq	_mach_msg_destroy
0000000000019442	movl	%ebx, %eax
0000000000019444	addq	$0x40, %rsp
0000000000019448	popq	%rbx
0000000000019449	popq	%r14
000000000001944b	popq	%rbp
000000000001944c	retq
__kernelrpc_mach_vm_remap:
000000000001944d	pushq	%rbp
000000000001944e	movq	%rsp, %rbp
0000000000019451	pushq	%r14
0000000000019453	pushq	%rbx
0000000000019454	subq	$0x70, %rsp
0000000000019458	movq	%rsi, %r14
000000000001945b	movl	0x30(%rbp), %r10d
000000000001945f	movl	0x18(%rbp), %r11d
0000000000019463	movq	0x10(%rbp), %rax
0000000000019467	leaq	-0x70(%rbp), %rbx
000000000001946b	movl	$0x1, 0x18(%rbx)
0000000000019472	movl	%r9d, 0x1c(%rbx)
0000000000019476	movl	$0x130000, 0x24(%rbx)
000000000001947d	leaq	_NDR_record(%rip), %rsi
0000000000019484	movq	(%rsi), %rsi
0000000000019487	movq	%rsi, 0x28(%rbx)
000000000001948b	movq	(%r14), %rsi
000000000001948e	movq	%rsi, 0x30(%rbx)
0000000000019492	movq	%rdx, 0x38(%rbx)
0000000000019496	movq	%rcx, 0x40(%rbx)
000000000001949a	movl	%r8d, 0x48(%rbx)
000000000001949e	movq	%rax, 0x4c(%rbx)
00000000000194a2	movl	%r11d, 0x54(%rbx)
00000000000194a6	movl	%r10d, 0x58(%rbx)
00000000000194aa	movl	$0x80001513, (%rbx)
00000000000194b0	movl	%edi, 0x8(%rbx)
00000000000194b3	callq	_mig_get_reply_port
00000000000194b8	movl	%eax, 0xc(%rbx)
00000000000194bb	movabsq	$0x12cd00000000, %rcx
00000000000194c5	movq	%rcx, 0x10(%rbx)
00000000000194c9	movl	$0x0, (%rsp)
00000000000194d0	movq	%rbx, %rdi
00000000000194d3	movl	$0x3, %esi
00000000000194d8	movl	$0x5c, %edx
00000000000194dd	movl	$0x3c, %ecx
00000000000194e2	movl	%eax, %r8d
00000000000194e5	xorl	%r9d, %r9d
00000000000194e8	callq	_mach_msg
00000000000194ed	movl	%eax, %ebx
00000000000194ef	leal	-0x10000002(%rbx), %eax
00000000000194f5	cmpl	$0xe, %eax
00000000000194f8	ja	0x1950e
00000000000194fa	movl	$0x4003, %ecx
00000000000194ff	btl	%eax, %ecx
0000000000019502	jae	0x1950e
0000000000019504	movl	-0x64(%rbp), %edi
0000000000019507	callq	_mig_put_reply_port
000000000001950c	jmp	0x19588
000000000001950e	testl	%ebx, %ebx
0000000000019510	jne	0x19569
0000000000019512	movl	-0x5c(%rbp), %eax
0000000000019515	cmpl	$0x47, %eax
0000000000019518	je	0x19573
000000000001951a	cmpl	$0x1331, %eax
000000000001951f	jne	0x1957a
0000000000019521	movl	$0xfffffed4, %ebx
0000000000019526	cmpl	$0x0, -0x70(%rbp)
000000000001952a	js	0x1957f
000000000001952c	movl	-0x6c(%rbp), %eax
000000000001952f	cmpl	$0x34, %eax
0000000000019532	je	0x1953f
0000000000019534	cmpl	$0x24, %eax
0000000000019537	jne	0x1957f
0000000000019539	cmpl	$0x0, -0x50(%rbp)
000000000001953d	je	0x1957f
000000000001953f	cmpl	$0x0, -0x68(%rbp)
0000000000019543	jne	0x1957f
0000000000019545	movl	-0x50(%rbp), %ebx
0000000000019548	testl	%ebx, %ebx
000000000001954a	jne	0x1957f
000000000001954c	movq	0x28(%rbp), %rax
0000000000019550	movq	0x20(%rbp), %rcx
0000000000019554	movq	-0x4c(%rbp), %rdx
0000000000019558	movq	%rdx, (%r14)
000000000001955b	movl	-0x44(%rbp), %edx
000000000001955e	movl	%edx, (%rcx)
0000000000019560	movl	-0x40(%rbp), %ecx
0000000000019563	movl	%ecx, (%rax)
0000000000019565	xorl	%ebx, %ebx
0000000000019567	jmp	0x19588
0000000000019569	movl	-0x64(%rbp), %edi
000000000001956c	callq	_mig_dealloc_reply_port
0000000000019571	jmp	0x19588
0000000000019573	movl	$0xfffffecc, %ebx
0000000000019578	jmp	0x1957f
000000000001957a	movl	$0xfffffed3, %ebx
000000000001957f	leaq	-0x70(%rbp), %rdi
0000000000019583	callq	_mach_msg_destroy
0000000000019588	movl	%ebx, %eax
000000000001958a	addq	$0x70, %rsp
000000000001958e	popq	%rbx
000000000001958f	popq	%r14
0000000000019591	popq	%rbp
0000000000019592	retq
_mach_vm_page_query:
0000000000019593	pushq	%rbp
0000000000019594	movq	%rsp, %rbp
0000000000019597	pushq	%r15
0000000000019599	pushq	%r14
000000000001959b	pushq	%rbx
000000000001959c	subq	$0x48, %rsp
00000000000195a0	movq	%rcx, %r14
00000000000195a3	movq	%rdx, %r15
00000000000195a6	leaq	_NDR_record(%rip), %rax
00000000000195ad	movq	(%rax), %rax
00000000000195b0	leaq	-0x50(%rbp), %rbx
00000000000195b4	movq	%rax, 0x18(%rbx)
00000000000195b8	movq	%rsi, 0x20(%rbx)
00000000000195bc	movl	$0x1513, (%rbx)
00000000000195c2	movl	%edi, 0x8(%rbx)
00000000000195c5	callq	_mig_get_reply_port
00000000000195ca	movl	%eax, 0xc(%rbx)
00000000000195cd	movabsq	$0x12ce00000000, %rcx
00000000000195d7	movq	%rcx, 0x10(%rbx)
00000000000195db	movl	$0x0, (%rsp)
00000000000195e2	movq	%rbx, %rdi
00000000000195e5	movl	$0x3, %esi
00000000000195ea	movl	$0x28, %edx
00000000000195ef	movl	$0x34, %ecx
00000000000195f4	movl	%eax, %r8d
00000000000195f7	xorl	%r9d, %r9d
00000000000195fa	callq	_mach_msg
00000000000195ff	movl	%eax, %ebx
0000000000019601	leal	-0x10000002(%rbx), %eax
0000000000019607	cmpl	$0xe, %eax
000000000001960a	ja	0x19620
000000000001960c	movl	$0x4003, %ecx
0000000000019611	btl	%eax, %ecx
0000000000019614	jae	0x19620
0000000000019616	movl	-0x44(%rbp), %edi
0000000000019619	callq	_mig_put_reply_port
000000000001961e	jmp	0x1968d
0000000000019620	testl	%ebx, %ebx
0000000000019622	jne	0x1966e
0000000000019624	movl	-0x3c(%rbp), %eax
0000000000019627	cmpl	$0x47, %eax
000000000001962a	je	0x19678
000000000001962c	cmpl	$0x1332, %eax
0000000000019631	jne	0x1967f
0000000000019633	movl	$0xfffffed4, %ebx
0000000000019638	cmpl	$0x0, -0x50(%rbp)
000000000001963c	js	0x19684
000000000001963e	movl	-0x4c(%rbp), %eax
0000000000019641	cmpl	$0x2c, %eax
0000000000019644	je	0x19651
0000000000019646	cmpl	$0x24, %eax
0000000000019649	jne	0x19684
000000000001964b	cmpl	$0x0, -0x30(%rbp)
000000000001964f	je	0x19684
0000000000019651	cmpl	$0x0, -0x48(%rbp)
0000000000019655	jne	0x19684
0000000000019657	movl	-0x30(%rbp), %ebx
000000000001965a	testl	%ebx, %ebx
000000000001965c	jne	0x19684
000000000001965e	movl	-0x2c(%rbp), %eax
0000000000019661	movl	%eax, (%r15)
0000000000019664	movl	-0x28(%rbp), %eax
0000000000019667	movl	%eax, (%r14)
000000000001966a	xorl	%ebx, %ebx
000000000001966c	jmp	0x1968d
000000000001966e	movl	-0x44(%rbp), %edi
0000000000019671	callq	_mig_dealloc_reply_port
0000000000019676	jmp	0x1968d
0000000000019678	movl	$0xfffffecc, %ebx
000000000001967d	jmp	0x19684
000000000001967f	movl	$0xfffffed3, %ebx
0000000000019684	leaq	-0x50(%rbp), %rdi
0000000000019688	callq	_mach_msg_destroy
000000000001968d	movl	%ebx, %eax
000000000001968f	addq	$0x48, %rsp
0000000000019693	popq	%rbx
0000000000019694	popq	%r14
0000000000019696	popq	%r15
0000000000019698	popq	%rbp
0000000000019699	retq
_mach_make_memory_entry:
000000000001969a	pushq	%rbp
000000000001969b	movq	%rsp, %rbp
000000000001969e	pushq	%r15
00000000000196a0	pushq	%r14
00000000000196a2	pushq	%rbx
00000000000196a3	subq	$0x58, %rsp
00000000000196a7	movq	%r8, %r14
00000000000196aa	movq	%rsi, %r15
00000000000196ad	leaq	-0x60(%rbp), %rbx
00000000000196b1	movl	$0x1, 0x18(%rbx)
00000000000196b8	movl	%r9d, 0x1c(%rbx)
00000000000196bc	movl	$0x130000, 0x24(%rbx)
00000000000196c3	leaq	_NDR_record(%rip), %rax
00000000000196ca	movq	(%rax), %rax
00000000000196cd	movq	%rax, 0x28(%rbx)
00000000000196d1	movq	(%rsi), %rax
00000000000196d4	movq	%rax, 0x30(%rbx)
00000000000196d8	movq	%rdx, 0x38(%rbx)
00000000000196dc	movl	%ecx, 0x40(%rbx)
00000000000196df	movl	$0x80001513, (%rbx)
00000000000196e5	movl	%edi, 0x8(%rbx)
00000000000196e8	callq	_mig_get_reply_port
00000000000196ed	movl	%eax, 0xc(%rbx)
00000000000196f0	movabsq	$0x12d100000000, %rcx
00000000000196fa	movq	%rcx, 0x10(%rbx)
00000000000196fe	movl	$0x0, (%rsp)
0000000000019705	movq	%rbx, %rdi
0000000000019708	movl	$0x3, %esi
000000000001970d	movl	$0x44, %edx
0000000000019712	movl	$0x40, %ecx
0000000000019717	movl	%eax, %r8d
000000000001971a	xorl	%r9d, %r9d
000000000001971d	callq	_mach_msg
0000000000019722	movl	%eax, %ebx
0000000000019724	leal	-0x10000002(%rbx), %eax
000000000001972a	cmpl	$0xe, %eax
000000000001972d	ja	0x19743
000000000001972f	movl	$0x4003, %ecx
0000000000019734	btl	%eax, %ecx
0000000000019737	jae	0x19743
0000000000019739	movl	-0x54(%rbp), %edi
000000000001973c	callq	_mig_put_reply_port
0000000000019741	jmp	0x19791
0000000000019743	testl	%ebx, %ebx
0000000000019745	jne	0x19772
0000000000019747	movl	-0x4c(%rbp), %eax
000000000001974a	cmpl	$0x47, %eax
000000000001974d	je	0x1977c
000000000001974f	cmpl	$0x1335, %eax
0000000000019754	jne	0x19783
0000000000019756	movl	-0x60(%rbp), %eax
0000000000019759	movl	-0x5c(%rbp), %ecx
000000000001975c	movl	$0xfffffed4, %ebx
0000000000019761	testl	%eax, %eax
0000000000019763	js	0x1979e
0000000000019765	cmpl	$0x24, %ecx
0000000000019768	jne	0x19788
000000000001976a	cmpl	$0x0, -0x40(%rbp)
000000000001976e	jne	0x197a9
0000000000019770	jmp	0x19788
0000000000019772	movl	-0x54(%rbp), %edi
0000000000019775	callq	_mig_dealloc_reply_port
000000000001977a	jmp	0x19791
000000000001977c	movl	$0xfffffecc, %ebx
0000000000019781	jmp	0x19788
0000000000019783	movl	$0xfffffed3, %ebx
0000000000019788	leaq	-0x60(%rbp), %rdi
000000000001978c	callq	_mach_msg_destroy
0000000000019791	movl	%ebx, %eax
0000000000019793	addq	$0x58, %rsp
0000000000019797	popq	%rbx
0000000000019798	popq	%r14
000000000001979a	popq	%r15
000000000001979c	popq	%rbp
000000000001979d	retq
000000000001979e	cmpl	$0x38, %ecx
00000000000197a1	jne	0x19788
00000000000197a3	cmpl	$0x1, -0x48(%rbp)
00000000000197a7	jne	0x19788
00000000000197a9	movl	$0xfffffed4, %ebx
00000000000197ae	cmpl	$0x0, -0x58(%rbp)
00000000000197b2	jne	0x19788
00000000000197b4	testl	%eax, %eax
00000000000197b6	js	0x197c1
00000000000197b8	movl	-0x40(%rbp), %ebx
00000000000197bb	testl	%ebx, %ebx
00000000000197bd	jne	0x19788
00000000000197bf	jmp	0x197cf
00000000000197c1	movzwl	-0x3a(%rbp), %eax
00000000000197c5	shll	$0x10, %eax
00000000000197c8	cmpl	$0x110000, %eax
00000000000197cd	jne	0x19788
00000000000197cf	movq	-0x30(%rbp), %rax
00000000000197d3	movq	%rax, (%r15)
00000000000197d6	movl	-0x44(%rbp), %eax
00000000000197d9	movl	%eax, (%r14)
00000000000197dc	xorl	%ebx, %ebx
00000000000197de	jmp	0x19791
__kernelrpc_mach_vm_purgable_control:
00000000000197e0	pushq	%rbp
00000000000197e1	movq	%rsp, %rbp
00000000000197e4	pushq	%r14
00000000000197e6	pushq	%rbx
00000000000197e7	subq	$0x40, %rsp
00000000000197eb	movq	%rcx, %r14
00000000000197ee	leaq	_NDR_record(%rip), %rax
00000000000197f5	movq	(%rax), %rax
00000000000197f8	leaq	-0x40(%rbp), %rbx
00000000000197fc	movq	%rax, 0x18(%rbx)
0000000000019800	movq	%rsi, 0x20(%rbx)
0000000000019804	movl	%edx, 0x28(%rbx)
0000000000019807	movl	(%rcx), %eax
0000000000019809	movl	%eax, 0x2c(%rbx)
000000000001980c	movl	$0x1513, (%rbx)
0000000000019812	movl	%edi, 0x8(%rbx)
0000000000019815	callq	_mig_get_reply_port
000000000001981a	movl	%eax, 0xc(%rbx)
000000000001981d	movabsq	$0x12d200000000, %rcx
0000000000019827	movq	%rcx, 0x10(%rbx)
000000000001982b	movl	$0x0, (%rsp)
0000000000019832	movq	%rbx, %rdi
0000000000019835	movl	$0x3, %esi
000000000001983a	movl	$0x30, %edx
000000000001983f	movl	$0x30, %ecx
0000000000019844	movl	%eax, %r8d
0000000000019847	xorl	%r9d, %r9d
000000000001984a	callq	_mach_msg
000000000001984f	movl	%eax, %ebx
0000000000019851	leal	-0x10000002(%rbx), %eax
0000000000019857	cmpl	$0xe, %eax
000000000001985a	ja	0x19870
000000000001985c	movl	$0x4003, %ecx
0000000000019861	btl	%eax, %ecx
0000000000019864	jae	0x19870
0000000000019866	movl	-0x34(%rbp), %edi
0000000000019869	callq	_mig_put_reply_port
000000000001986e	jmp	0x198d7
0000000000019870	testl	%ebx, %ebx
0000000000019872	jne	0x198b8
0000000000019874	movl	-0x2c(%rbp), %eax
0000000000019877	cmpl	$0x47, %eax
000000000001987a	je	0x198c2
000000000001987c	cmpl	$0x1336, %eax
0000000000019881	jne	0x198c9
0000000000019883	movl	$0xfffffed4, %ebx
0000000000019888	cmpl	$0x0, -0x40(%rbp)
000000000001988c	js	0x198ce
000000000001988e	movl	-0x3c(%rbp), %eax
0000000000019891	cmpl	$0x28, %eax
0000000000019894	je	0x198a1
0000000000019896	cmpl	$0x24, %eax
0000000000019899	jne	0x198ce
000000000001989b	cmpl	$0x0, -0x20(%rbp)
000000000001989f	je	0x198ce
00000000000198a1	cmpl	$0x0, -0x38(%rbp)
00000000000198a5	jne	0x198ce
00000000000198a7	movl	-0x20(%rbp), %ebx
00000000000198aa	testl	%ebx, %ebx
00000000000198ac	jne	0x198ce
00000000000198ae	movl	-0x1c(%rbp), %eax
00000000000198b1	movl	%eax, (%r14)
00000000000198b4	xorl	%ebx, %ebx
00000000000198b6	jmp	0x198d7
00000000000198b8	movl	-0x34(%rbp), %edi
00000000000198bb	callq	_mig_dealloc_reply_port
00000000000198c0	jmp	0x198d7
00000000000198c2	movl	$0xfffffecc, %ebx
00000000000198c7	jmp	0x198ce
00000000000198c9	movl	$0xfffffed3, %ebx
00000000000198ce	leaq	-0x40(%rbp), %rdi
00000000000198d2	callq	_mach_msg_destroy
00000000000198d7	movl	%ebx, %eax
00000000000198d9	addq	$0x40, %rsp
00000000000198dd	popq	%rbx
00000000000198de	popq	%r14
00000000000198e0	popq	%rbp
00000000000198e1	retq
_mach_vm_page_info:
00000000000198e2	pushq	%rbp
00000000000198e3	movq	%rsp, %rbp
00000000000198e6	pushq	%r15
00000000000198e8	pushq	%r14
00000000000198ea	pushq	%r12
00000000000198ec	pushq	%rbx
00000000000198ed	subq	$0xc0, %rsp
00000000000198f4	movq	%r8, %r15
00000000000198f7	leaq	_NDR_record(%rip), %rax
00000000000198fe	movq	(%rax), %rax
0000000000019901	leaq	-0xd0(%rbp), %rbx
0000000000019908	movq	%rax, 0x18(%rbx)
000000000001990c	movq	%rsi, 0x20(%rbx)
0000000000019910	movl	%edx, 0x28(%rbx)
0000000000019913	movl	(%r8), %eax
0000000000019916	movl	$0x20, %edx
000000000001991b	cmpl	%edx, %eax
000000000001991d	cmovbl	%eax, %edx
0000000000019920	movq	%rcx, %r14
0000000000019923	movl	%edx, 0x2c(%rbx)
0000000000019926	movl	$0x1513, (%rbx)
000000000001992c	movl	%edi, 0x8(%rbx)
000000000001992f	callq	_mig_get_reply_port
0000000000019934	movl	%eax, 0xc(%rbx)
0000000000019937	movabsq	$0x12d300000000, %rcx
0000000000019941	movq	%rcx, 0x10(%rbx)
0000000000019945	movl	$0x0, (%rsp)
000000000001994c	movq	%rbx, %rdi
000000000001994f	movl	$0x3, %esi
0000000000019954	movl	$0x30, %edx
0000000000019959	movl	$0xb0, %ecx
000000000001995e	movl	%eax, %r8d
0000000000019961	xorl	%r9d, %r9d
0000000000019964	callq	_mach_msg
0000000000019969	movl	%eax, %ebx
000000000001996b	leal	-0x10000002(%rbx), %eax
0000000000019971	cmpl	$0xe, %eax
0000000000019974	ja	0x1998d
0000000000019976	movl	$0x4003, %ecx
000000000001997b	btl	%eax, %ecx
000000000001997e	jae	0x1998d
0000000000019980	movl	-0xc4(%rbp), %edi
0000000000019986	callq	_mig_put_reply_port
000000000001998b	jmp	0x19a00
000000000001998d	testl	%ebx, %ebx
000000000001998f	jne	0x199db
0000000000019991	movl	-0xbc(%rbp), %eax
0000000000019997	cmpl	$0x47, %eax
000000000001999a	je	0x199e8
000000000001999c	cmpl	$0x1337, %eax
00000000000199a1	jne	0x199ef
00000000000199a3	cmpl	$0x0, -0xd0(%rbp)
00000000000199aa	js	0x199d4
00000000000199ac	movl	-0xcc(%rbp), %eax
00000000000199b2	leal	-0x28(%rax), %ecx
00000000000199b5	cmpl	$0x81, %ecx
00000000000199bb	jb	0x199cb
00000000000199bd	cmpl	$0x24, %eax
00000000000199c0	jne	0x199d4
00000000000199c2	cmpl	$0x0, -0xb0(%rbp)
00000000000199c9	je	0x199d4
00000000000199cb	cmpl	$0x0, -0xc8(%rbp)
00000000000199d2	je	0x19a12
00000000000199d4	movl	$0xfffffed4, %ebx
00000000000199d9	jmp	0x199f4
00000000000199db	movl	-0xc4(%rbp), %edi
00000000000199e1	callq	_mig_dealloc_reply_port
00000000000199e6	jmp	0x19a00
00000000000199e8	movl	$0xfffffecc, %ebx
00000000000199ed	jmp	0x199f4
00000000000199ef	movl	$0xfffffed3, %ebx
00000000000199f4	leaq	-0xd0(%rbp), %rdi
00000000000199fb	callq	_mach_msg_destroy
0000000000019a00	movl	%ebx, %eax
0000000000019a02	addq	$0xc0, %rsp
0000000000019a09	popq	%rbx
0000000000019a0a	popq	%r12
0000000000019a0c	popq	%r14
0000000000019a0e	popq	%r15
0000000000019a10	popq	%rbp
0000000000019a11	retq
0000000000019a12	movl	-0xb0(%rbp), %ebx
0000000000019a18	testl	%ebx, %ebx
0000000000019a1a	jne	0x199f4
0000000000019a1c	movl	-0xac(%rbp), %r12d
0000000000019a23	cmpl	$0x20, %r12d
0000000000019a27	ja	0x199d4
0000000000019a29	shrl	$0x2, %ecx
0000000000019a2c	cmpl	%r12d, %ecx
0000000000019a2f	jb	0x199d4
0000000000019a31	leal	0x28(,%r12,4), %ecx
0000000000019a39	movl	$0xfffffed4, %ebx
0000000000019a3e	cmpl	%ecx, %eax
0000000000019a40	jne	0x199f4
0000000000019a42	leaq	-0xa8(%rbp), %rsi
0000000000019a49	movl	(%r15), %edx
0000000000019a4c	cmpl	%edx, %r12d
0000000000019a4f	jbe	0x19a66
0000000000019a51	shll	$0x2, %edx
0000000000019a54	movq	%r14, %rdi
0000000000019a57	callq	_memcpy
0000000000019a5c	movl	%r12d, (%r15)
0000000000019a5f	movl	$0xfffffecd, %ebx
0000000000019a64	jmp	0x19a00
0000000000019a66	leal	(,%r12,4), %eax
0000000000019a6e	movl	%eax, %edx
0000000000019a70	movq	%r14, %rdi
0000000000019a73	callq	_memcpy
0000000000019a78	movl	%r12d, (%r15)
0000000000019a7b	xorl	%ebx, %ebx
0000000000019a7d	jmp	0x19a00
_mach_vm_page_range_query:
0000000000019a7f	pushq	%rbp
0000000000019a80	movq	%rsp, %rbp
0000000000019a83	pushq	%r14
0000000000019a85	pushq	%rbx
0000000000019a86	subq	$0x50, %rsp
0000000000019a8a	movq	%r8, %r14
0000000000019a8d	leaq	_NDR_record(%rip), %rax
0000000000019a94	movq	(%rax), %rax
0000000000019a97	leaq	-0x50(%rbp), %rbx
0000000000019a9b	movq	%rax, 0x18(%rbx)
0000000000019a9f	movq	%rsi, 0x20(%rbx)
0000000000019aa3	movq	%rdx, 0x28(%rbx)
0000000000019aa7	movq	%rcx, 0x30(%rbx)
0000000000019aab	movq	(%r8), %rax
0000000000019aae	movq	%rax, 0x38(%rbx)
0000000000019ab2	movl	$0x1513, (%rbx)
0000000000019ab8	movl	%edi, 0x8(%rbx)
0000000000019abb	callq	_mig_get_reply_port
0000000000019ac0	movl	%eax, 0xc(%rbx)
0000000000019ac3	movabsq	$0x12d400000000, %rcx
0000000000019acd	movq	%rcx, 0x10(%rbx)
0000000000019ad1	movl	$0x0, (%rsp)
0000000000019ad8	movq	%rbx, %rdi
0000000000019adb	movl	$0x3, %esi
0000000000019ae0	movl	$0x40, %edx
0000000000019ae5	movl	$0x34, %ecx
0000000000019aea	movl	%eax, %r8d
0000000000019aed	xorl	%r9d, %r9d
0000000000019af0	callq	_mach_msg
0000000000019af5	movl	%eax, %ebx
0000000000019af7	leal	-0x10000002(%rbx), %eax
0000000000019afd	cmpl	$0xe, %eax
0000000000019b00	ja	0x19b16
0000000000019b02	movl	$0x4003, %ecx
0000000000019b07	btl	%eax, %ecx
0000000000019b0a	jae	0x19b16
0000000000019b0c	movl	-0x44(%rbp), %edi
0000000000019b0f	callq	_mig_put_reply_port
0000000000019b14	jmp	0x19b7e
0000000000019b16	testl	%ebx, %ebx
0000000000019b18	jne	0x19b5f
0000000000019b1a	movl	-0x3c(%rbp), %eax
0000000000019b1d	cmpl	$0x47, %eax
0000000000019b20	je	0x19b69
0000000000019b22	cmpl	$0x1338, %eax
0000000000019b27	jne	0x19b70
0000000000019b29	movl	$0xfffffed4, %ebx
0000000000019b2e	cmpl	$0x0, -0x50(%rbp)
0000000000019b32	js	0x19b75
0000000000019b34	movl	-0x4c(%rbp), %eax
0000000000019b37	cmpl	$0x2c, %eax
0000000000019b3a	je	0x19b47
0000000000019b3c	cmpl	$0x24, %eax
0000000000019b3f	jne	0x19b75
0000000000019b41	cmpl	$0x0, -0x30(%rbp)
0000000000019b45	je	0x19b75
0000000000019b47	cmpl	$0x0, -0x48(%rbp)
0000000000019b4b	jne	0x19b75
0000000000019b4d	movl	-0x30(%rbp), %ebx
0000000000019b50	testl	%ebx, %ebx
0000000000019b52	jne	0x19b75
0000000000019b54	movq	-0x2c(%rbp), %rax
0000000000019b58	movq	%rax, (%r14)
0000000000019b5b	xorl	%ebx, %ebx
0000000000019b5d	jmp	0x19b7e
0000000000019b5f	movl	-0x44(%rbp), %edi
0000000000019b62	callq	_mig_dealloc_reply_port
0000000000019b67	jmp	0x19b7e
0000000000019b69	movl	$0xfffffecc, %ebx
0000000000019b6e	jmp	0x19b75
0000000000019b70	movl	$0xfffffed3, %ebx
0000000000019b75	leaq	-0x50(%rbp), %rdi
0000000000019b79	callq	_mach_msg_destroy
0000000000019b7e	movl	%ebx, %eax
0000000000019b80	addq	$0x50, %rsp
0000000000019b84	popq	%rbx
0000000000019b85	popq	%r14
0000000000019b87	popq	%rbp
0000000000019b88	retq
_mach_notify_port_deleted:
0000000000019b89	pushq	%rbp
0000000000019b8a	movq	%rsp, %rbp
0000000000019b8d	subq	$0x30, %rsp
0000000000019b91	leaq	_NDR_record(%rip), %rax
0000000000019b98	movq	(%rax), %rcx
0000000000019b9b	leaq	-0x28(%rbp), %rax
0000000000019b9f	movq	%rcx, 0x18(%rax)
0000000000019ba3	movl	%esi, 0x20(%rax)
0000000000019ba6	movl	$0x12, (%rax)
0000000000019bac	movl	%edi, 0x8(%rax)
0000000000019baf	movq	$0x0, 0xc(%rax)
0000000000019bb7	movl	$0x41, 0x14(%rax)
0000000000019bbe	movl	$0x0, (%rsp)
0000000000019bc5	movq	%rax, %rdi
0000000000019bc8	movl	$0x1, %esi
0000000000019bcd	movl	$0x24, %edx
0000000000019bd2	xorl	%ecx, %ecx
0000000000019bd4	xorl	%r8d, %r8d
0000000000019bd7	xorl	%r9d, %r9d
0000000000019bda	callq	_mach_msg
0000000000019bdf	addq	$0x30, %rsp
0000000000019be3	popq	%rbp
0000000000019be4	retq
_mach_notify_port_destroyed:
0000000000019be5	pushq	%rbp
0000000000019be6	movq	%rsp, %rbp
0000000000019be9	subq	$0x30, %rsp
0000000000019bed	leaq	-0x28(%rbp), %rax
0000000000019bf1	movl	%esi, 0x1c(%rax)
0000000000019bf4	movl	$0x100000, 0x24(%rax)
0000000000019bfb	movl	$0x80000012, (%rax)
0000000000019c01	movl	%edi, 0x8(%rax)
0000000000019c04	movaps	0x90a5(%rip), %xmm0
0000000000019c0b	movups	%xmm0, 0xc(%rax)
0000000000019c0f	movl	$0x0, (%rsp)
0000000000019c16	movq	%rax, %rdi
0000000000019c19	movl	$0x1, %esi
0000000000019c1e	movl	$0x28, %edx
0000000000019c23	xorl	%ecx, %ecx
0000000000019c25	xorl	%r8d, %r8d
0000000000019c28	xorl	%r9d, %r9d
0000000000019c2b	callq	_mach_msg
0000000000019c30	addq	$0x30, %rsp
0000000000019c34	popq	%rbp
0000000000019c35	retq
_mach_notify_no_senders:
0000000000019c36	pushq	%rbp
0000000000019c37	movq	%rsp, %rbp
0000000000019c3a	subq	$0x30, %rsp
0000000000019c3e	leaq	_NDR_record(%rip), %rax
0000000000019c45	movq	(%rax), %rcx
0000000000019c48	leaq	-0x28(%rbp), %rax
0000000000019c4c	movq	%rcx, 0x18(%rax)
0000000000019c50	movl	%esi, 0x20(%rax)
0000000000019c53	movl	$0x12, (%rax)
0000000000019c59	movl	%edi, 0x8(%rax)
0000000000019c5c	movq	$0x0, 0xc(%rax)
0000000000019c64	movl	$0x46, 0x14(%rax)
0000000000019c6b	movl	$0x0, (%rsp)
0000000000019c72	movq	%rax, %rdi
0000000000019c75	movl	$0x1, %esi
0000000000019c7a	movl	$0x24, %edx
0000000000019c7f	xorl	%ecx, %ecx
0000000000019c81	xorl	%r8d, %r8d
0000000000019c84	xorl	%r9d, %r9d
0000000000019c87	callq	_mach_msg
0000000000019c8c	addq	$0x30, %rsp
0000000000019c90	popq	%rbp
0000000000019c91	retq
_mach_notify_send_once:
0000000000019c92	pushq	%rbp
0000000000019c93	movq	%rsp, %rbp
0000000000019c96	subq	$0x20, %rsp
0000000000019c9a	leaq	-0x18(%rbp), %rax
0000000000019c9e	movl	$0x12, (%rax)
0000000000019ca4	movl	%edi, 0x8(%rax)
0000000000019ca7	movq	$0x0, 0xc(%rax)
0000000000019caf	movl	$0x47, 0x14(%rax)
0000000000019cb6	movl	$0x0, (%rsp)
0000000000019cbd	movq	%rax, %rdi
0000000000019cc0	movl	$0x1, %esi
0000000000019cc5	movl	$0x18, %edx
0000000000019cca	xorl	%ecx, %ecx
0000000000019ccc	xorl	%r8d, %r8d
0000000000019ccf	xorl	%r9d, %r9d
0000000000019cd2	callq	_mach_msg
0000000000019cd7	addq	$0x20, %rsp
0000000000019cdb	popq	%rbp
0000000000019cdc	retq
_mach_notify_dead_name:
0000000000019cdd	pushq	%rbp
0000000000019cde	movq	%rsp, %rbp
0000000000019ce1	subq	$0x30, %rsp
0000000000019ce5	leaq	_NDR_record(%rip), %rax
0000000000019cec	movq	(%rax), %rcx
0000000000019cef	leaq	-0x28(%rbp), %rax
0000000000019cf3	movq	%rcx, 0x18(%rax)
0000000000019cf7	movl	%esi, 0x20(%rax)
0000000000019cfa	movl	$0x12, (%rax)
0000000000019d00	movl	%edi, 0x8(%rax)
0000000000019d03	movq	$0x0, 0xc(%rax)
0000000000019d0b	movl	$0x48, 0x14(%rax)
0000000000019d12	movl	$0x0, (%rsp)
0000000000019d19	movq	%rax, %rdi
0000000000019d1c	movl	$0x1, %esi
0000000000019d21	movl	$0x24, %edx
0000000000019d26	xorl	%ecx, %ecx
0000000000019d28	xorl	%r8d, %r8d
0000000000019d2b	xorl	%r9d, %r9d
0000000000019d2e	callq	_mach_msg
0000000000019d33	addq	$0x30, %rsp
0000000000019d37	popq	%rbp
0000000000019d38	retq
_processor_set_statistics:
0000000000019d39	pushq	%rbp
0000000000019d3a	movq	%rsp, %rbp
0000000000019d3d	pushq	%r15
0000000000019d3f	pushq	%r14
0000000000019d41	pushq	%r12
0000000000019d43	pushq	%rbx
0000000000019d44	subq	$0x50, %rsp
0000000000019d48	movq	%rcx, %r15
0000000000019d4b	leaq	_NDR_record(%rip), %rax
0000000000019d52	movq	(%rax), %rax
0000000000019d55	leaq	-0x68(%rbp), %rbx
0000000000019d59	movq	%rax, 0x18(%rbx)
0000000000019d5d	movl	%esi, 0x20(%rbx)
0000000000019d60	movl	(%rcx), %eax
0000000000019d62	movl	$0x5, %ecx
0000000000019d67	cmpl	%ecx, %eax
0000000000019d69	cmovbl	%eax, %ecx
0000000000019d6c	movq	%rdx, %r14
0000000000019d6f	movl	%ecx, 0x24(%rbx)
0000000000019d72	movl	$0x1513, (%rbx)
0000000000019d78	movl	%edi, 0x8(%rbx)
0000000000019d7b	callq	_mig_get_reply_port
0000000000019d80	movl	%eax, 0xc(%rbx)
0000000000019d83	movabsq	$0xfa000000000, %rcx
0000000000019d8d	movq	%rcx, 0x10(%rbx)
0000000000019d91	movl	$0x0, (%rsp)
0000000000019d98	movq	%rbx, %rdi
0000000000019d9b	movl	$0x3, %esi
0000000000019da0	movl	$0x28, %edx
0000000000019da5	movl	$0x44, %ecx
0000000000019daa	movl	%eax, %r8d
0000000000019dad	xorl	%r9d, %r9d
0000000000019db0	callq	_mach_msg
0000000000019db5	movl	%eax, %ebx
0000000000019db7	leal	-0x10000002(%rbx), %eax
0000000000019dbd	cmpl	$0xe, %eax
0000000000019dc0	ja	0x19dd6
0000000000019dc2	movl	$0x4003, %ecx
0000000000019dc7	btl	%eax, %ecx
0000000000019dca	jae	0x19dd6
0000000000019dcc	movl	-0x5c(%rbp), %edi
0000000000019dcf	callq	_mig_put_reply_port
0000000000019dd4	jmp	0x19e32
0000000000019dd6	testl	%ebx, %ebx
0000000000019dd8	jne	0x19e13
0000000000019dda	movl	-0x54(%rbp), %eax
0000000000019ddd	cmpl	$0x47, %eax
0000000000019de0	je	0x19e1d
0000000000019de2	cmpl	$0x1004, %eax
0000000000019de7	jne	0x19e24
0000000000019de9	cmpl	$0x0, -0x68(%rbp)
0000000000019ded	js	0x19e0c
0000000000019def	movl	-0x64(%rbp), %eax
0000000000019df2	leal	-0x28(%rax), %ecx
0000000000019df5	cmpl	$0x15, %ecx
0000000000019df8	jb	0x19e06
0000000000019dfa	cmpl	$0x24, %eax
0000000000019dfd	jne	0x19e0c
0000000000019dff	movl	-0x48(%rbp), %edx
0000000000019e02	testl	%edx, %edx
0000000000019e04	je	0x19e0c
0000000000019e06	cmpl	$0x0, -0x60(%rbp)
0000000000019e0a	je	0x19e41
0000000000019e0c	movl	$0xfffffed4, %ebx
0000000000019e11	jmp	0x19e29
0000000000019e13	movl	-0x5c(%rbp), %edi
0000000000019e16	callq	_mig_dealloc_reply_port
0000000000019e1b	jmp	0x19e32
0000000000019e1d	movl	$0xfffffecc, %ebx
0000000000019e22	jmp	0x19e29
0000000000019e24	movl	$0xfffffed3, %ebx
0000000000019e29	leaq	-0x68(%rbp), %rdi
0000000000019e2d	callq	_mach_msg_destroy
0000000000019e32	movl	%ebx, %eax
0000000000019e34	addq	$0x50, %rsp
0000000000019e38	popq	%rbx
0000000000019e39	popq	%r12
0000000000019e3b	popq	%r14
0000000000019e3d	popq	%r15
0000000000019e3f	popq	%rbp
0000000000019e40	retq
0000000000019e41	movl	-0x48(%rbp), %ebx
0000000000019e44	testl	%ebx, %ebx
0000000000019e46	jne	0x19e29
0000000000019e48	movl	-0x44(%rbp), %r12d
0000000000019e4c	cmpl	$0x5, %r12d
0000000000019e50	ja	0x19e0c
0000000000019e52	shrl	$0x2, %ecx
0000000000019e55	cmpl	%r12d, %ecx
0000000000019e58	jb	0x19e0c
0000000000019e5a	leal	0x28(,%r12,4), %ecx
0000000000019e62	movl	$0xfffffed4, %ebx
0000000000019e67	cmpl	%ecx, %eax
0000000000019e69	jne	0x19e29
0000000000019e6b	movl	(%r15), %edx
0000000000019e6e	leaq	-0x40(%rbp), %rsi
0000000000019e72	cmpl	%edx, %r12d
0000000000019e75	jbe	0x19e8c
0000000000019e77	shll	$0x2, %edx
0000000000019e7a	movq	%r14, %rdi
0000000000019e7d	callq	_memcpy
0000000000019e82	movl	%r12d, (%r15)
0000000000019e85	movl	$0xfffffecd, %ebx
0000000000019e8a	jmp	0x19e32
0000000000019e8c	leal	(,%r12,4), %eax
0000000000019e94	movl	%eax, %edx
0000000000019e96	movq	%r14, %rdi
0000000000019e99	callq	_memcpy
0000000000019e9e	movl	%r12d, (%r15)
0000000000019ea1	xorl	%ebx, %ebx
0000000000019ea3	jmp	0x19e32
_processor_set_destroy:
0000000000019ea5	pushq	%rbp
0000000000019ea6	movq	%rsp, %rbp
0000000000019ea9	pushq	%rbx
0000000000019eaa	subq	$0x38, %rsp
0000000000019eae	leaq	-0x38(%rbp), %rbx
0000000000019eb2	movl	$0x1513, (%rbx)
0000000000019eb8	movl	%edi, 0x8(%rbx)
0000000000019ebb	callq	_mig_get_reply_port
0000000000019ec0	movl	%eax, 0xc(%rbx)
0000000000019ec3	movabsq	$0xfa100000000, %rcx
0000000000019ecd	movq	%rcx, 0x10(%rbx)
0000000000019ed1	movl	$0x0, (%rsp)
0000000000019ed8	movq	%rbx, %rdi
0000000000019edb	movl	$0x3, %esi
0000000000019ee0	movl	$0x18, %edx
0000000000019ee5	movl	$0x2c, %ecx
0000000000019eea	movl	%eax, %r8d
0000000000019eed	xorl	%r9d, %r9d
0000000000019ef0	callq	_mach_msg
0000000000019ef5	movl	%eax, %ebx
0000000000019ef7	leal	-0x10000002(%rbx), %eax
0000000000019efd	cmpl	$0xe, %eax
0000000000019f00	ja	0x19f16
0000000000019f02	movl	$0x4003, %ecx
0000000000019f07	btl	%eax, %ecx
0000000000019f0a	jae	0x19f16
0000000000019f0c	movl	-0x2c(%rbp), %edi
0000000000019f0f	callq	_mig_put_reply_port
0000000000019f14	jmp	0x19f6b
0000000000019f16	testl	%ebx, %ebx
0000000000019f18	jne	0x19f4c
0000000000019f1a	movl	-0x24(%rbp), %eax
0000000000019f1d	cmpl	$0x47, %eax
0000000000019f20	je	0x19f56
0000000000019f22	cmpl	$0x1005, %eax
0000000000019f27	jne	0x19f5d
0000000000019f29	movl	$0xfffffed4, %ebx
0000000000019f2e	cmpl	$0x0, -0x38(%rbp)
0000000000019f32	js	0x19f62
0000000000019f34	cmpl	$0x24, -0x34(%rbp)
0000000000019f38	jne	0x19f62
0000000000019f3a	movl	-0x30(%rbp), %eax
0000000000019f3d	testl	%eax, %eax
0000000000019f3f	jne	0x19f62
0000000000019f41	movl	-0x18(%rbp), %ebx
0000000000019f44	testl	%ebx, %ebx
0000000000019f46	jne	0x19f62
0000000000019f48	xorl	%ebx, %ebx
0000000000019f4a	jmp	0x19f6b
0000000000019f4c	movl	-0x2c(%rbp), %edi
0000000000019f4f	callq	_mig_dealloc_reply_port
0000000000019f54	jmp	0x19f6b
0000000000019f56	movl	$0xfffffecc, %ebx
0000000000019f5b	jmp	0x19f62
0000000000019f5d	movl	$0xfffffed3, %ebx
0000000000019f62	leaq	-0x38(%rbp), %rdi
0000000000019f66	callq	_mach_msg_destroy
0000000000019f6b	movl	%ebx, %eax
0000000000019f6d	addq	$0x38, %rsp
0000000000019f71	popq	%rbx
0000000000019f72	popq	%rbp
0000000000019f73	retq
_processor_set_max_priority:
0000000000019f74	pushq	%rbp
0000000000019f75	movq	%rsp, %rbp
0000000000019f78	pushq	%rbx
0000000000019f79	subq	$0x38, %rsp
0000000000019f7d	leaq	_NDR_record(%rip), %rax
0000000000019f84	movq	(%rax), %rax
0000000000019f87	leaq	-0x38(%rbp), %rbx
0000000000019f8b	movq	%rax, 0x18(%rbx)
0000000000019f8f	movl	%esi, 0x20(%rbx)
0000000000019f92	movl	%edx, 0x24(%rbx)
0000000000019f95	movl	$0x1513, (%rbx)
0000000000019f9b	movl	%edi, 0x8(%rbx)
0000000000019f9e	callq	_mig_get_reply_port
0000000000019fa3	movl	%eax, 0xc(%rbx)
0000000000019fa6	movabsq	$0xfa200000000, %rcx
0000000000019fb0	movq	%rcx, 0x10(%rbx)
0000000000019fb4	movl	$0x0, (%rsp)
0000000000019fbb	movq	%rbx, %rdi
0000000000019fbe	movl	$0x3, %esi
0000000000019fc3	movl	$0x28, %edx
0000000000019fc8	movl	$0x2c, %ecx
0000000000019fcd	movl	%eax, %r8d
0000000000019fd0	xorl	%r9d, %r9d
0000000000019fd3	callq	_mach_msg
0000000000019fd8	movl	%eax, %ebx
0000000000019fda	leal	-0x10000002(%rbx), %eax
0000000000019fe0	cmpl	$0xe, %eax
0000000000019fe3	ja	0x19ff9
0000000000019fe5	movl	$0x4003, %ecx
0000000000019fea	btl	%eax, %ecx
0000000000019fed	jae	0x19ff9
0000000000019fef	movl	-0x2c(%rbp), %edi
0000000000019ff2	callq	_mig_put_reply_port
0000000000019ff7	jmp	0x1a04e
0000000000019ff9	testl	%ebx, %ebx
0000000000019ffb	jne	0x1a02f
0000000000019ffd	movl	-0x24(%rbp), %eax
000000000001a000	cmpl	$0x47, %eax
000000000001a003	je	0x1a039
000000000001a005	cmpl	$0x1006, %eax
000000000001a00a	jne	0x1a040
000000000001a00c	movl	$0xfffffed4, %ebx
000000000001a011	cmpl	$0x0, -0x38(%rbp)
000000000001a015	js	0x1a045
000000000001a017	cmpl	$0x24, -0x34(%rbp)
000000000001a01b	jne	0x1a045
000000000001a01d	movl	-0x30(%rbp), %eax
000000000001a020	testl	%eax, %eax
000000000001a022	jne	0x1a045
000000000001a024	movl	-0x18(%rbp), %ebx
000000000001a027	testl	%ebx, %ebx
000000000001a029	jne	0x1a045
000000000001a02b	xorl	%ebx, %ebx
000000000001a02d	jmp	0x1a04e
000000000001a02f	movl	-0x2c(%rbp), %edi
000000000001a032	callq	_mig_dealloc_reply_port
000000000001a037	jmp	0x1a04e
000000000001a039	movl	$0xfffffecc, %ebx
000000000001a03e	jmp	0x1a045
000000000001a040	movl	$0xfffffed3, %ebx
000000000001a045	leaq	-0x38(%rbp), %rdi
000000000001a049	callq	_mach_msg_destroy
000000000001a04e	movl	%ebx, %eax
000000000001a050	addq	$0x38, %rsp
000000000001a054	popq	%rbx
000000000001a055	popq	%rbp
000000000001a056	retq
_processor_set_policy_enable:
000000000001a057	pushq	%rbp
000000000001a058	movq	%rsp, %rbp
000000000001a05b	pushq	%rbx
000000000001a05c	subq	$0x38, %rsp
000000000001a060	leaq	_NDR_record(%rip), %rax
000000000001a067	movq	(%rax), %rax
000000000001a06a	leaq	-0x38(%rbp), %rbx
000000000001a06e	movq	%rax, 0x18(%rbx)
000000000001a072	movl	%esi, 0x20(%rbx)
000000000001a075	movl	$0x1513, (%rbx)
000000000001a07b	movl	%edi, 0x8(%rbx)
000000000001a07e	callq	_mig_get_reply_port
000000000001a083	movl	%eax, 0xc(%rbx)
000000000001a086	movabsq	$0xfa300000000, %rcx
000000000001a090	movq	%rcx, 0x10(%rbx)
000000000001a094	movl	$0x0, (%rsp)
000000000001a09b	movq	%rbx, %rdi
000000000001a09e	movl	$0x3, %esi
000000000001a0a3	movl	$0x24, %edx
000000000001a0a8	movl	$0x2c, %ecx
000000000001a0ad	movl	%eax, %r8d
000000000001a0b0	xorl	%r9d, %r9d
000000000001a0b3	callq	_mach_msg
000000000001a0b8	movl	%eax, %ebx
000000000001a0ba	leal	-0x10000002(%rbx), %eax
000000000001a0c0	cmpl	$0xe, %eax
000000000001a0c3	ja	0x1a0d9
000000000001a0c5	movl	$0x4003, %ecx
000000000001a0ca	btl	%eax, %ecx
000000000001a0cd	jae	0x1a0d9
000000000001a0cf	movl	-0x2c(%rbp), %edi
000000000001a0d2	callq	_mig_put_reply_port
000000000001a0d7	jmp	0x1a12e
000000000001a0d9	testl	%ebx, %ebx
000000000001a0db	jne	0x1a10f
000000000001a0dd	movl	-0x24(%rbp), %eax
000000000001a0e0	cmpl	$0x47, %eax
000000000001a0e3	je	0x1a119
000000000001a0e5	cmpl	$0x1007, %eax
000000000001a0ea	jne	0x1a120
000000000001a0ec	movl	$0xfffffed4, %ebx
000000000001a0f1	cmpl	$0x0, -0x38(%rbp)
000000000001a0f5	js	0x1a125
000000000001a0f7	cmpl	$0x24, -0x34(%rbp)
000000000001a0fb	jne	0x1a125
000000000001a0fd	movl	-0x30(%rbp), %eax
000000000001a100	testl	%eax, %eax
000000000001a102	jne	0x1a125
000000000001a104	movl	-0x18(%rbp), %ebx
000000000001a107	testl	%ebx, %ebx
000000000001a109	jne	0x1a125
000000000001a10b	xorl	%ebx, %ebx
000000000001a10d	jmp	0x1a12e
000000000001a10f	movl	-0x2c(%rbp), %edi
000000000001a112	callq	_mig_dealloc_reply_port
000000000001a117	jmp	0x1a12e
000000000001a119	movl	$0xfffffecc, %ebx
000000000001a11e	jmp	0x1a125
000000000001a120	movl	$0xfffffed3, %ebx
000000000001a125	leaq	-0x38(%rbp), %rdi
000000000001a129	callq	_mach_msg_destroy
000000000001a12e	movl	%ebx, %eax
000000000001a130	addq	$0x38, %rsp
000000000001a134	popq	%rbx
000000000001a135	popq	%rbp
000000000001a136	retq
_processor_set_policy_disable:
000000000001a137	pushq	%rbp
000000000001a138	movq	%rsp, %rbp
000000000001a13b	pushq	%rbx
000000000001a13c	subq	$0x38, %rsp
000000000001a140	leaq	_NDR_record(%rip), %rax
000000000001a147	movq	(%rax), %rax
000000000001a14a	leaq	-0x38(%rbp), %rbx
000000000001a14e	movq	%rax, 0x18(%rbx)
000000000001a152	movl	%esi, 0x20(%rbx)
000000000001a155	movl	%edx, 0x24(%rbx)
000000000001a158	movl	$0x1513, (%rbx)
000000000001a15e	movl	%edi, 0x8(%rbx)
000000000001a161	callq	_mig_get_reply_port
000000000001a166	movl	%eax, 0xc(%rbx)
000000000001a169	movabsq	$0xfa400000000, %rcx
000000000001a173	movq	%rcx, 0x10(%rbx)
000000000001a177	movl	$0x0, (%rsp)
000000000001a17e	movq	%rbx, %rdi
000000000001a181	movl	$0x3, %esi
000000000001a186	movl	$0x28, %edx
000000000001a18b	movl	$0x2c, %ecx
000000000001a190	movl	%eax, %r8d
000000000001a193	xorl	%r9d, %r9d
000000000001a196	callq	_mach_msg
000000000001a19b	movl	%eax, %ebx
000000000001a19d	leal	-0x10000002(%rbx), %eax
000000000001a1a3	cmpl	$0xe, %eax
000000000001a1a6	ja	0x1a1bc
000000000001a1a8	movl	$0x4003, %ecx
000000000001a1ad	btl	%eax, %ecx
000000000001a1b0	jae	0x1a1bc
000000000001a1b2	movl	-0x2c(%rbp), %edi
000000000001a1b5	callq	_mig_put_reply_port
000000000001a1ba	jmp	0x1a211
000000000001a1bc	testl	%ebx, %ebx
000000000001a1be	jne	0x1a1f2
000000000001a1c0	movl	-0x24(%rbp), %eax
000000000001a1c3	cmpl	$0x47, %eax
000000000001a1c6	je	0x1a1fc
000000000001a1c8	cmpl	$0x1008, %eax
000000000001a1cd	jne	0x1a203
000000000001a1cf	movl	$0xfffffed4, %ebx
000000000001a1d4	cmpl	$0x0, -0x38(%rbp)
000000000001a1d8	js	0x1a208
000000000001a1da	cmpl	$0x24, -0x34(%rbp)
000000000001a1de	jne	0x1a208
000000000001a1e0	movl	-0x30(%rbp), %eax
000000000001a1e3	testl	%eax, %eax
000000000001a1e5	jne	0x1a208
000000000001a1e7	movl	-0x18(%rbp), %ebx
000000000001a1ea	testl	%ebx, %ebx
000000000001a1ec	jne	0x1a208
000000000001a1ee	xorl	%ebx, %ebx
000000000001a1f0	jmp	0x1a211
000000000001a1f2	movl	-0x2c(%rbp), %edi
000000000001a1f5	callq	_mig_dealloc_reply_port
000000000001a1fa	jmp	0x1a211
000000000001a1fc	movl	$0xfffffecc, %ebx
000000000001a201	jmp	0x1a208
000000000001a203	movl	$0xfffffed3, %ebx
000000000001a208	leaq	-0x38(%rbp), %rdi
000000000001a20c	callq	_mach_msg_destroy
000000000001a211	movl	%ebx, %eax
000000000001a213	addq	$0x38, %rsp
000000000001a217	popq	%rbx
000000000001a218	popq	%rbp
000000000001a219	retq
_processor_set_tasks:
000000000001a21a	pushq	%rbp
000000000001a21b	movq	%rsp, %rbp
000000000001a21e	pushq	%r15
000000000001a220	pushq	%r14
000000000001a222	pushq	%rbx
000000000001a223	subq	$0x48, %rsp
000000000001a227	movq	%rdx, %r14
000000000001a22a	movq	%rsi, %r15
000000000001a22d	leaq	-0x58(%rbp), %rbx
000000000001a231	movl	$0x1513, (%rbx)
000000000001a237	movl	%edi, 0x8(%rbx)
000000000001a23a	callq	_mig_get_reply_port
000000000001a23f	movl	%eax, 0xc(%rbx)
000000000001a242	movabsq	$0xfa500000000, %rcx
000000000001a24c	movq	%rcx, 0x10(%rbx)
000000000001a250	movl	$0x0, (%rsp)
000000000001a257	movq	%rbx, %rdi
000000000001a25a	movl	$0x3, %esi
000000000001a25f	movl	$0x18, %edx
000000000001a264	movl	$0x40, %ecx
000000000001a269	movl	%eax, %r8d
000000000001a26c	xorl	%r9d, %r9d
000000000001a26f	callq	_mach_msg
000000000001a274	movl	%eax, %ebx
000000000001a276	leal	-0x10000002(%rbx), %eax
000000000001a27c	cmpl	$0xe, %eax
000000000001a27f	ja	0x1a295
000000000001a281	movl	$0x4003, %ecx
000000000001a286	btl	%eax, %ecx
000000000001a289	jae	0x1a295
000000000001a28b	movl	-0x4c(%rbp), %edi
000000000001a28e	callq	_mig_put_reply_port
000000000001a293	jmp	0x1a2e3
000000000001a295	testl	%ebx, %ebx
000000000001a297	jne	0x1a2c4
000000000001a299	movl	-0x44(%rbp), %eax
000000000001a29c	cmpl	$0x47, %eax
000000000001a29f	je	0x1a2ce
000000000001a2a1	cmpl	$0x1009, %eax
000000000001a2a6	jne	0x1a2d5
000000000001a2a8	movl	-0x58(%rbp), %eax
000000000001a2ab	movl	-0x54(%rbp), %ecx
000000000001a2ae	movl	$0xfffffed4, %ebx
000000000001a2b3	testl	%eax, %eax
000000000001a2b5	js	0x1a2f0
000000000001a2b7	cmpl	$0x24, %ecx
000000000001a2ba	jne	0x1a2da
000000000001a2bc	cmpl	$0x0, -0x38(%rbp)
000000000001a2c0	jne	0x1a2fb
000000000001a2c2	jmp	0x1a2da
000000000001a2c4	movl	-0x4c(%rbp), %edi
000000000001a2c7	callq	_mig_dealloc_reply_port
000000000001a2cc	jmp	0x1a2e3
000000000001a2ce	movl	$0xfffffecc, %ebx
000000000001a2d3	jmp	0x1a2da
000000000001a2d5	movl	$0xfffffed3, %ebx
000000000001a2da	leaq	-0x58(%rbp), %rdi
000000000001a2de	callq	_mach_msg_destroy
000000000001a2e3	movl	%ebx, %eax
000000000001a2e5	addq	$0x48, %rsp
000000000001a2e9	popq	%rbx
000000000001a2ea	popq	%r14
000000000001a2ec	popq	%r15
000000000001a2ee	popq	%rbp
000000000001a2ef	retq
000000000001a2f0	cmpl	$0x38, %ecx
000000000001a2f3	jne	0x1a2da
000000000001a2f5	cmpl	$0x1, -0x40(%rbp)
000000000001a2f9	jne	0x1a2da
000000000001a2fb	movl	$0xfffffed4, %ebx
000000000001a300	cmpl	$0x0, -0x50(%rbp)
000000000001a304	jne	0x1a2da
000000000001a306	testl	%eax, %eax
000000000001a308	js	0x1a316
000000000001a30a	movl	-0x38(%rbp), %ebx
000000000001a30d	testl	%ebx, %ebx
000000000001a30f	jne	0x1a2da
000000000001a311	movl	-0x24(%rbp), %eax
000000000001a314	jmp	0x1a32c
000000000001a316	movzwl	-0x32(%rbp), %eax
000000000001a31a	shll	$0x10, %eax
000000000001a31d	cmpl	$0x2110000, %eax
000000000001a322	jne	0x1a2da
000000000001a324	movl	-0x30(%rbp), %eax
000000000001a327	cmpl	-0x24(%rbp), %eax
000000000001a32a	jne	0x1a2da
000000000001a32c	movq	-0x3c(%rbp), %rcx
000000000001a330	movq	%rcx, (%r15)
000000000001a333	movl	%eax, (%r14)
000000000001a336	xorl	%ebx, %ebx
000000000001a338	jmp	0x1a2e3
_processor_set_threads:
000000000001a33a	pushq	%rbp
000000000001a33b	movq	%rsp, %rbp
000000000001a33e	pushq	%r15
000000000001a340	pushq	%r14
000000000001a342	pushq	%rbx
000000000001a343	subq	$0x48, %rsp
000000000001a347	movq	%rdx, %r14
000000000001a34a	movq	%rsi, %r15
000000000001a34d	leaq	-0x58(%rbp), %rbx
000000000001a351	movl	$0x1513, (%rbx)
000000000001a357	movl	%edi, 0x8(%rbx)
000000000001a35a	callq	_mig_get_reply_port
000000000001a35f	movl	%eax, 0xc(%rbx)
000000000001a362	movabsq	$0xfa600000000, %rcx
000000000001a36c	movq	%rcx, 0x10(%rbx)
000000000001a370	movl	$0x0, (%rsp)
000000000001a377	movq	%rbx, %rdi
000000000001a37a	movl	$0x3, %esi
000000000001a37f	movl	$0x18, %edx
000000000001a384	movl	$0x40, %ecx
000000000001a389	movl	%eax, %r8d
000000000001a38c	xorl	%r9d, %r9d
000000000001a38f	callq	_mach_msg
000000000001a394	movl	%eax, %ebx
000000000001a396	leal	-0x10000002(%rbx), %eax
000000000001a39c	cmpl	$0xe, %eax
000000000001a39f	ja	0x1a3b5
000000000001a3a1	movl	$0x4003, %ecx
000000000001a3a6	btl	%eax, %ecx
000000000001a3a9	jae	0x1a3b5
000000000001a3ab	movl	-0x4c(%rbp), %edi
000000000001a3ae	callq	_mig_put_reply_port
000000000001a3b3	jmp	0x1a403
000000000001a3b5	testl	%ebx, %ebx
000000000001a3b7	jne	0x1a3e4
000000000001a3b9	movl	-0x44(%rbp), %eax
000000000001a3bc	cmpl	$0x47, %eax
000000000001a3bf	je	0x1a3ee
000000000001a3c1	cmpl	$0x100a, %eax
000000000001a3c6	jne	0x1a3f5
000000000001a3c8	movl	-0x58(%rbp), %eax
000000000001a3cb	movl	-0x54(%rbp), %ecx
000000000001a3ce	movl	$0xfffffed4, %ebx
000000000001a3d3	testl	%eax, %eax
000000000001a3d5	js	0x1a410
000000000001a3d7	cmpl	$0x24, %ecx
000000000001a3da	jne	0x1a3fa
000000000001a3dc	cmpl	$0x0, -0x38(%rbp)
000000000001a3e0	jne	0x1a41b
000000000001a3e2	jmp	0x1a3fa
000000000001a3e4	movl	-0x4c(%rbp), %edi
000000000001a3e7	callq	_mig_dealloc_reply_port
000000000001a3ec	jmp	0x1a403
000000000001a3ee	movl	$0xfffffecc, %ebx
000000000001a3f3	jmp	0x1a3fa
000000000001a3f5	movl	$0xfffffed3, %ebx
000000000001a3fa	leaq	-0x58(%rbp), %rdi
000000000001a3fe	callq	_mach_msg_destroy
000000000001a403	movl	%ebx, %eax
000000000001a405	addq	$0x48, %rsp
000000000001a409	popq	%rbx
000000000001a40a	popq	%r14
000000000001a40c	popq	%r15
000000000001a40e	popq	%rbp
000000000001a40f	retq
000000000001a410	cmpl	$0x38, %ecx
000000000001a413	jne	0x1a3fa
000000000001a415	cmpl	$0x1, -0x40(%rbp)
000000000001a419	jne	0x1a3fa
000000000001a41b	movl	$0xfffffed4, %ebx
000000000001a420	cmpl	$0x0, -0x50(%rbp)
000000000001a424	jne	0x1a3fa
000000000001a426	testl	%eax, %eax
000000000001a428	js	0x1a436
000000000001a42a	movl	-0x38(%rbp), %ebx
000000000001a42d	testl	%ebx, %ebx
000000000001a42f	jne	0x1a3fa
000000000001a431	movl	-0x24(%rbp), %eax
000000000001a434	jmp	0x1a44c
000000000001a436	movzwl	-0x32(%rbp), %eax
000000000001a43a	shll	$0x10, %eax
000000000001a43d	cmpl	$0x2110000, %eax
000000000001a442	jne	0x1a3fa
000000000001a444	movl	-0x30(%rbp), %eax
000000000001a447	cmpl	-0x24(%rbp), %eax
000000000001a44a	jne	0x1a3fa
000000000001a44c	movq	-0x3c(%rbp), %rcx
000000000001a450	movq	%rcx, (%r15)
000000000001a453	movl	%eax, (%r14)
000000000001a456	xorl	%ebx, %ebx
000000000001a458	jmp	0x1a403
_processor_set_policy_control:
000000000001a45a	pushq	%rbp
000000000001a45b	movq	%rsp, %rbp
000000000001a45e	pushq	%r15
000000000001a460	pushq	%r14
000000000001a462	pushq	%r13
000000000001a464	pushq	%r12
000000000001a466	pushq	%rbx
000000000001a467	subq	$0x48, %rsp
000000000001a46b	leaq	_NDR_record(%rip), %rax
000000000001a472	movq	(%rax), %rax
000000000001a475	movq	%rax, -0x50(%rbp)
000000000001a479	movl	%esi, -0x48(%rbp)
000000000001a47c	movl	$0xfffffecd, %r12d
000000000001a482	cmpl	$0x5, %ecx
000000000001a485	ja	0x1a58d
000000000001a48b	movl	%r8d, %r14d
000000000001a48e	movl	%ecx, %ebx
000000000001a490	movl	%edi, %r15d
000000000001a493	leaq	-0x40(%rbp), %r12
000000000001a497	leal	(,%rbx,4), %r13d
000000000001a49f	movq	%r12, %rdi
000000000001a4a2	movq	%rdx, %rsi
000000000001a4a5	movq	%r13, %rdx
000000000001a4a8	callq	_memcpy
000000000001a4ad	movl	%ebx, -0x4(%r12)
000000000001a4b2	leal	0x2c(,%rbx,4), %ebx
000000000001a4b9	leaq	-0x68(%rbp), %rax
000000000001a4bd	movl	%r14d, 0x28(%r13,%rax)
000000000001a4c2	movq	%rax, %r14
000000000001a4c5	movl	$0x1513, -0x28(%r12)
000000000001a4ce	movl	%r15d, -0x20(%r12)
000000000001a4d3	callq	_mig_get_reply_port
000000000001a4d8	movl	%eax, -0x1c(%r12)
000000000001a4dd	movabsq	$0xfa700000000, %rcx
000000000001a4e7	movq	%rcx, -0x18(%r12)
000000000001a4ec	movl	$0x0, (%rsp)
000000000001a4f3	movq	%r14, %rdi
000000000001a4f6	movl	$0x3, %esi
000000000001a4fb	movl	%ebx, %edx
000000000001a4fd	movl	$0x2c, %ecx
000000000001a502	movl	%eax, %r8d
000000000001a505	xorl	%r9d, %r9d
000000000001a508	callq	_mach_msg
000000000001a50d	movl	%eax, %r12d
000000000001a510	leal	-0x10000002(%r12), %eax
000000000001a518	cmpl	$0xe, %eax
000000000001a51b	ja	0x1a531
000000000001a51d	movl	$0x4003, %ecx
000000000001a522	btl	%eax, %ecx
000000000001a525	jae	0x1a531
000000000001a527	movl	-0x5c(%rbp), %edi
000000000001a52a	callq	_mig_put_reply_port
000000000001a52f	jmp	0x1a58d
000000000001a531	testl	%r12d, %r12d
000000000001a534	jne	0x1a56c
000000000001a536	movl	-0x54(%rbp), %eax
000000000001a539	cmpl	$0x47, %eax
000000000001a53c	je	0x1a576
000000000001a53e	cmpl	$0x100b, %eax
000000000001a543	jne	0x1a57e
000000000001a545	movl	$0xfffffed4, %r12d
000000000001a54b	cmpl	$0x0, -0x68(%rbp)
000000000001a54f	js	0x1a584
000000000001a551	cmpl	$0x24, -0x64(%rbp)
000000000001a555	jne	0x1a584
000000000001a557	movl	-0x60(%rbp), %eax
000000000001a55a	testl	%eax, %eax
000000000001a55c	jne	0x1a584
000000000001a55e	movl	-0x48(%rbp), %r12d
000000000001a562	testl	%r12d, %r12d
000000000001a565	jne	0x1a584
000000000001a567	xorl	%r12d, %r12d
000000000001a56a	jmp	0x1a58d
000000000001a56c	movl	-0x5c(%rbp), %edi
000000000001a56f	callq	_mig_dealloc_reply_port
000000000001a574	jmp	0x1a58d
000000000001a576	movl	$0xfffffecc, %r12d
000000000001a57c	jmp	0x1a584
000000000001a57e	movl	$0xfffffed3, %r12d
000000000001a584	leaq	-0x68(%rbp), %rdi
000000000001a588	callq	_mach_msg_destroy
000000000001a58d	movl	%r12d, %eax
000000000001a590	addq	$0x48, %rsp
000000000001a594	popq	%rbx
000000000001a595	popq	%r12
000000000001a597	popq	%r13
000000000001a599	popq	%r14
000000000001a59b	popq	%r15
000000000001a59d	popq	%rbp
000000000001a59e	retq
_processor_set_stack_usage:
000000000001a59f	pushq	%rbp
000000000001a5a0	movq	%rsp, %rbp
000000000001a5a3	pushq	%r15
000000000001a5a5	pushq	%r14
000000000001a5a7	pushq	%r13
000000000001a5a9	pushq	%r12
000000000001a5ab	pushq	%rbx
000000000001a5ac	subq	$0x68, %rsp
000000000001a5b0	movq	%r9, -0x30(%rbp)
000000000001a5b4	movq	%r8, %r15
000000000001a5b7	movq	%rcx, %r12
000000000001a5ba	movq	%rdx, %r13
000000000001a5bd	movq	%rsi, %r14
000000000001a5c0	leaq	-0x80(%rbp), %rbx
000000000001a5c4	movl	$0x1513, (%rbx)
000000000001a5ca	movl	%edi, 0x8(%rbx)
000000000001a5cd	callq	_mig_get_reply_port
000000000001a5d2	movl	%eax, 0xc(%rbx)
000000000001a5d5	movabsq	$0xfa800000000, %rcx
000000000001a5df	movq	%rcx, 0x10(%rbx)
000000000001a5e3	movl	$0x0, (%rsp)
000000000001a5ea	movq	%rbx, %rdi
000000000001a5ed	movl	$0x3, %esi
000000000001a5f2	movl	$0x18, %edx
000000000001a5f7	movl	$0x50, %ecx
000000000001a5fc	movl	%eax, %r8d
000000000001a5ff	xorl	%r9d, %r9d
000000000001a602	callq	_mach_msg
000000000001a607	movl	%eax, %ebx
000000000001a609	leal	-0x10000002(%rbx), %eax
000000000001a60f	cmpl	$0xe, %eax
000000000001a612	ja	0x1a62b
000000000001a614	movl	$0x4003, %ecx
000000000001a619	btl	%eax, %ecx
000000000001a61c	jae	0x1a62b
000000000001a61e	movl	-0x74(%rbp), %edi
000000000001a621	callq	_mig_put_reply_port
000000000001a626	jmp	0x1a6b4
000000000001a62b	testl	%ebx, %ebx
000000000001a62d	jne	0x1a695
000000000001a62f	movl	-0x6c(%rbp), %eax
000000000001a632	cmpl	$0x47, %eax
000000000001a635	je	0x1a69f
000000000001a637	cmpl	$0x100c, %eax
000000000001a63c	jne	0x1a6a6
000000000001a63e	movl	$0xfffffed4, %ebx
000000000001a643	cmpl	$0x0, -0x80(%rbp)
000000000001a647	js	0x1a6ab
000000000001a649	movl	-0x7c(%rbp), %eax
000000000001a64c	cmpl	$0x48, %eax
000000000001a64f	je	0x1a65c
000000000001a651	cmpl	$0x24, %eax
000000000001a654	jne	0x1a6ab
000000000001a656	cmpl	$0x0, -0x60(%rbp)
000000000001a65a	je	0x1a6ab
000000000001a65c	cmpl	$0x0, -0x78(%rbp)
000000000001a660	jne	0x1a6ab
000000000001a662	movl	-0x60(%rbp), %ebx
000000000001a665	testl	%ebx, %ebx
000000000001a667	jne	0x1a6ab
000000000001a669	movl	-0x5c(%rbp), %eax
000000000001a66c	movl	%eax, (%r14)
000000000001a66f	movq	-0x58(%rbp), %rax
000000000001a673	movq	%rax, (%r13)
000000000001a677	movq	-0x50(%rbp), %rax
000000000001a67b	movq	%rax, (%r12)
000000000001a67f	movq	-0x48(%rbp), %rax
000000000001a683	movq	%rax, (%r15)
000000000001a686	movq	-0x40(%rbp), %rax
000000000001a68a	movq	-0x30(%rbp), %rcx
000000000001a68e	movq	%rax, (%rcx)
000000000001a691	xorl	%ebx, %ebx
000000000001a693	jmp	0x1a6b4
000000000001a695	movl	-0x74(%rbp), %edi
000000000001a698	callq	_mig_dealloc_reply_port
000000000001a69d	jmp	0x1a6b4
000000000001a69f	movl	$0xfffffecc, %ebx
000000000001a6a4	jmp	0x1a6ab
000000000001a6a6	movl	$0xfffffed3, %ebx
000000000001a6ab	leaq	-0x80(%rbp), %rdi
000000000001a6af	callq	_mach_msg_destroy
000000000001a6b4	movl	%ebx, %eax
000000000001a6b6	addq	$0x68, %rsp
000000000001a6ba	popq	%rbx
000000000001a6bb	popq	%r12
000000000001a6bd	popq	%r13
000000000001a6bf	popq	%r14
000000000001a6c1	popq	%r15
000000000001a6c3	popq	%rbp
000000000001a6c4	retq
_processor_set_info:
000000000001a6c5	pushq	%rbp
000000000001a6c6	movq	%rsp, %rbp
000000000001a6c9	pushq	%r15
000000000001a6cb	pushq	%r14
000000000001a6cd	pushq	%r13
000000000001a6cf	pushq	%r12
000000000001a6d1	pushq	%rbx
000000000001a6d2	subq	$0x58, %rsp
000000000001a6d6	movq	%r8, %r12
000000000001a6d9	leaq	_NDR_record(%rip), %rax
000000000001a6e0	movq	(%rax), %rax
000000000001a6e3	leaq	-0x78(%rbp), %rbx
000000000001a6e7	movq	%rax, 0x18(%rbx)
000000000001a6eb	movl	%esi, 0x20(%rbx)
000000000001a6ee	movl	(%r8), %eax
000000000001a6f1	movl	$0x5, %esi
000000000001a6f6	cmpl	%esi, %eax
000000000001a6f8	cmovbl	%eax, %esi
000000000001a6fb	movq	%rcx, %r14
000000000001a6fe	movq	%rdx, %r15
000000000001a701	movl	%esi, 0x24(%rbx)
000000000001a704	movl	$0x1513, (%rbx)
000000000001a70a	movl	%edi, 0x8(%rbx)
000000000001a70d	callq	_mig_get_reply_port
000000000001a712	movl	%eax, 0xc(%rbx)
000000000001a715	movabsq	$0xfa900000000, %rcx
000000000001a71f	movq	%rcx, 0x10(%rbx)
000000000001a723	movl	$0x0, (%rsp)
000000000001a72a	movq	%rbx, %rdi
000000000001a72d	movl	$0x3, %esi
000000000001a732	movl	$0x28, %edx
000000000001a737	movl	$0x50, %ecx
000000000001a73c	movl	%eax, %r8d
000000000001a73f	xorl	%r9d, %r9d
000000000001a742	callq	_mach_msg
000000000001a747	movl	%eax, %ebx
000000000001a749	leal	-0x10000002(%rbx), %eax
000000000001a74f	cmpl	$0xe, %eax
000000000001a752	ja	0x1a768
000000000001a754	movl	$0x4003, %ecx
000000000001a759	btl	%eax, %ecx
000000000001a75c	jae	0x1a768
000000000001a75e	movl	-0x6c(%rbp), %edi
000000000001a761	callq	_mig_put_reply_port
000000000001a766	jmp	0x1a7d7
000000000001a768	testl	%ebx, %ebx
000000000001a76a	jne	0x1a798
000000000001a76c	movl	-0x64(%rbp), %eax
000000000001a76f	cmpl	$0x47, %eax
000000000001a772	je	0x1a7a2
000000000001a774	cmpl	$0x100d, %eax
000000000001a779	jne	0x1a7a9
000000000001a77b	movl	-0x78(%rbp), %ecx
000000000001a77e	movl	-0x74(%rbp), %eax
000000000001a781	testl	%ecx, %ecx
000000000001a783	js	0x1a7b0
000000000001a785	movl	$0xfffffed4, %ebx
000000000001a78a	cmpl	$0x24, %eax
000000000001a78d	jne	0x1a7ce
000000000001a78f	movl	-0x58(%rbp), %edx
000000000001a792	testl	%edx, %edx
000000000001a794	jne	0x1a7c3
000000000001a796	jmp	0x1a7ce
000000000001a798	movl	-0x6c(%rbp), %edi
000000000001a79b	callq	_mig_dealloc_reply_port
000000000001a7a0	jmp	0x1a7d7
000000000001a7a2	movl	$0xfffffecc, %ebx
000000000001a7a7	jmp	0x1a7ce
000000000001a7a9	movl	$0xfffffed3, %ebx
000000000001a7ae	jmp	0x1a7ce
000000000001a7b0	leal	-0x34(%rax), %edx
000000000001a7b3	movl	$0xfffffed4, %ebx
000000000001a7b8	cmpl	$0x14, %edx
000000000001a7bb	ja	0x1a7ce
000000000001a7bd	cmpl	$0x1, -0x60(%rbp)
000000000001a7c1	jne	0x1a7ce
000000000001a7c3	movl	$0xfffffed4, %ebx
000000000001a7c8	cmpl	$0x0, -0x70(%rbp)
000000000001a7cc	je	0x1a7e8
000000000001a7ce	leaq	-0x78(%rbp), %rdi
000000000001a7d2	callq	_mach_msg_destroy
000000000001a7d7	movl	%ebx, %eax
000000000001a7d9	addq	$0x58, %rsp
000000000001a7dd	popq	%rbx
000000000001a7de	popq	%r12
000000000001a7e0	popq	%r13
000000000001a7e2	popq	%r14
000000000001a7e4	popq	%r15
000000000001a7e6	popq	%rbp
000000000001a7e7	retq
000000000001a7e8	testl	%ecx, %ecx
000000000001a7ea	js	0x1a820
000000000001a7ec	movl	-0x58(%rbp), %ebx
000000000001a7ef	testl	%ebx, %ebx
000000000001a7f1	jne	0x1a7ce
000000000001a7f3	movl	-0x48(%rbp), %r13d
000000000001a7f7	leaq	-0x44(%rbp), %rsi
000000000001a7fb	movl	-0x18(%rsi), %eax
000000000001a7fe	movl	%eax, (%r15)
000000000001a801	movl	(%r12), %edx
000000000001a805	cmpl	%edx, %r13d
000000000001a808	jbe	0x1a856
000000000001a80a	shll	$0x2, %edx
000000000001a80d	movq	%r14, %rdi
000000000001a810	callq	_memcpy
000000000001a815	movl	%r13d, (%r12)
000000000001a819	movl	$0xfffffecd, %ebx
000000000001a81e	jmp	0x1a7d7
000000000001a820	movzwl	-0x52(%rbp), %ecx
000000000001a824	shll	$0x10, %ecx
000000000001a827	cmpl	$0x110000, %ecx
000000000001a82d	jne	0x1a7ce
000000000001a82f	movl	-0x48(%rbp), %r13d
000000000001a833	cmpl	$0x5, %r13d
000000000001a837	ja	0x1a7ce
000000000001a839	leal	-0x34(%rax), %ecx
000000000001a83c	shrl	$0x2, %ecx
000000000001a83f	cmpl	%r13d, %ecx
000000000001a842	jb	0x1a7ce
000000000001a844	leal	0x34(,%r13,4), %ecx
000000000001a84c	cmpl	%ecx, %eax
000000000001a84e	jne	0x1a7ce
000000000001a854	jmp	0x1a7f7
000000000001a856	leal	(,%r13,4), %edx
000000000001a85e	movq	%r14, %rdi
000000000001a861	callq	_memcpy
000000000001a866	movl	%r13d, (%r12)
000000000001a86a	xorl	%ebx, %ebx
000000000001a86c	jmp	0x1a7d7
_processor_start:
000000000001a871	pushq	%rbp
000000000001a872	movq	%rsp, %rbp
000000000001a875	pushq	%rbx
000000000001a876	subq	$0x38, %rsp
000000000001a87a	leaq	-0x38(%rbp), %rbx
000000000001a87e	movl	$0x1513, (%rbx)
000000000001a884	movl	%edi, 0x8(%rbx)
000000000001a887	callq	_mig_get_reply_port
000000000001a88c	movl	%eax, 0xc(%rbx)
000000000001a88f	movabsq	$0xbb800000000, %rcx
000000000001a899	movq	%rcx, 0x10(%rbx)
000000000001a89d	movl	$0x0, (%rsp)
000000000001a8a4	movq	%rbx, %rdi
000000000001a8a7	movl	$0x3, %esi
000000000001a8ac	movl	$0x18, %edx
000000000001a8b1	movl	$0x2c, %ecx
000000000001a8b6	movl	%eax, %r8d
000000000001a8b9	xorl	%r9d, %r9d
000000000001a8bc	callq	_mach_msg
000000000001a8c1	movl	%eax, %ebx
000000000001a8c3	leal	-0x10000002(%rbx), %eax
000000000001a8c9	cmpl	$0xe, %eax
000000000001a8cc	ja	0x1a8e2
000000000001a8ce	movl	$0x4003, %ecx
000000000001a8d3	btl	%eax, %ecx
000000000001a8d6	jae	0x1a8e2
000000000001a8d8	movl	-0x2c(%rbp), %edi
000000000001a8db	callq	_mig_put_reply_port
000000000001a8e0	jmp	0x1a937
000000000001a8e2	testl	%ebx, %ebx
000000000001a8e4	jne	0x1a918
000000000001a8e6	movl	-0x24(%rbp), %eax
000000000001a8e9	cmpl	$0x47, %eax
000000000001a8ec	je	0x1a922
000000000001a8ee	cmpl	$0xc1c, %eax
000000000001a8f3	jne	0x1a929
000000000001a8f5	movl	$0xfffffed4, %ebx
000000000001a8fa	cmpl	$0x0, -0x38(%rbp)
000000000001a8fe	js	0x1a92e
000000000001a900	cmpl	$0x24, -0x34(%rbp)
000000000001a904	jne	0x1a92e
000000000001a906	movl	-0x30(%rbp), %eax
000000000001a909	testl	%eax, %eax
000000000001a90b	jne	0x1a92e
000000000001a90d	movl	-0x18(%rbp), %ebx
000000000001a910	testl	%ebx, %ebx
000000000001a912	jne	0x1a92e
000000000001a914	xorl	%ebx, %ebx
000000000001a916	jmp	0x1a937
000000000001a918	movl	-0x2c(%rbp), %edi
000000000001a91b	callq	_mig_dealloc_reply_port
000000000001a920	jmp	0x1a937
000000000001a922	movl	$0xfffffecc, %ebx
000000000001a927	jmp	0x1a92e
000000000001a929	movl	$0xfffffed3, %ebx
000000000001a92e	leaq	-0x38(%rbp), %rdi
000000000001a932	callq	_mach_msg_destroy
000000000001a937	movl	%ebx, %eax
000000000001a939	addq	$0x38, %rsp
000000000001a93d	popq	%rbx
000000000001a93e	popq	%rbp
000000000001a93f	retq
_processor_exit:
000000000001a940	pushq	%rbp
000000000001a941	movq	%rsp, %rbp
000000000001a944	pushq	%rbx
000000000001a945	subq	$0x38, %rsp
000000000001a949	leaq	-0x38(%rbp), %rbx
000000000001a94d	movl	$0x1513, (%rbx)
000000000001a953	movl	%edi, 0x8(%rbx)
000000000001a956	callq	_mig_get_reply_port
000000000001a95b	movl	%eax, 0xc(%rbx)
000000000001a95e	movabsq	$0xbb900000000, %rcx
000000000001a968	movq	%rcx, 0x10(%rbx)
000000000001a96c	movl	$0x0, (%rsp)
000000000001a973	movq	%rbx, %rdi
000000000001a976	movl	$0x3, %esi
000000000001a97b	movl	$0x18, %edx
000000000001a980	movl	$0x2c, %ecx
000000000001a985	movl	%eax, %r8d
000000000001a988	xorl	%r9d, %r9d
000000000001a98b	callq	_mach_msg
000000000001a990	movl	%eax, %ebx
000000000001a992	leal	-0x10000002(%rbx), %eax
000000000001a998	cmpl	$0xe, %eax
000000000001a99b	ja	0x1a9b1
000000000001a99d	movl	$0x4003, %ecx
000000000001a9a2	btl	%eax, %ecx
000000000001a9a5	jae	0x1a9b1
000000000001a9a7	movl	-0x2c(%rbp), %edi
000000000001a9aa	callq	_mig_put_reply_port
000000000001a9af	jmp	0x1aa06
000000000001a9b1	testl	%ebx, %ebx
000000000001a9b3	jne	0x1a9e7
000000000001a9b5	movl	-0x24(%rbp), %eax
000000000001a9b8	cmpl	$0x47, %eax
000000000001a9bb	je	0x1a9f1
000000000001a9bd	cmpl	$0xc1d, %eax
000000000001a9c2	jne	0x1a9f8
000000000001a9c4	movl	$0xfffffed4, %ebx
000000000001a9c9	cmpl	$0x0, -0x38(%rbp)
000000000001a9cd	js	0x1a9fd
000000000001a9cf	cmpl	$0x24, -0x34(%rbp)
000000000001a9d3	jne	0x1a9fd
000000000001a9d5	movl	-0x30(%rbp), %eax
000000000001a9d8	testl	%eax, %eax
000000000001a9da	jne	0x1a9fd
000000000001a9dc	movl	-0x18(%rbp), %ebx
000000000001a9df	testl	%ebx, %ebx
000000000001a9e1	jne	0x1a9fd
000000000001a9e3	xorl	%ebx, %ebx
000000000001a9e5	jmp	0x1aa06
000000000001a9e7	movl	-0x2c(%rbp), %edi
000000000001a9ea	callq	_mig_dealloc_reply_port
000000000001a9ef	jmp	0x1aa06
000000000001a9f1	movl	$0xfffffecc, %ebx
000000000001a9f6	jmp	0x1a9fd
000000000001a9f8	movl	$0xfffffed3, %ebx
000000000001a9fd	leaq	-0x38(%rbp), %rdi
000000000001aa01	callq	_mach_msg_destroy
000000000001aa06	movl	%ebx, %eax
000000000001aa08	addq	$0x38, %rsp
000000000001aa0c	popq	%rbx
000000000001aa0d	popq	%rbp
000000000001aa0e	retq
_processor_info:
000000000001aa0f	pushq	%rbp
000000000001aa10	movq	%rsp, %rbp
000000000001aa13	pushq	%r15
000000000001aa15	pushq	%r14
000000000001aa17	pushq	%r13
000000000001aa19	pushq	%r12
000000000001aa1b	pushq	%rbx
000000000001aa1c	subq	$0x98, %rsp
000000000001aa23	movq	%r8, %r12
000000000001aa26	leaq	_NDR_record(%rip), %rax
000000000001aa2d	movq	(%rax), %rax
000000000001aa30	leaq	-0xb8(%rbp), %rbx
000000000001aa37	movq	%rax, 0x18(%rbx)
000000000001aa3b	movl	%esi, 0x20(%rbx)
000000000001aa3e	movl	(%r8), %eax
000000000001aa41	movl	$0x14, %esi
000000000001aa46	cmpl	%esi, %eax
000000000001aa48	cmovbl	%eax, %esi
000000000001aa4b	movq	%rcx, %r14
000000000001aa4e	movq	%rdx, %r15
000000000001aa51	movl	%esi, 0x24(%rbx)
000000000001aa54	movl	$0x1513, (%rbx)
000000000001aa5a	movl	%edi, 0x8(%rbx)
000000000001aa5d	callq	_mig_get_reply_port
000000000001aa62	movl	%eax, 0xc(%rbx)
000000000001aa65	movabsq	$0xbba00000000, %rcx
000000000001aa6f	movq	%rcx, 0x10(%rbx)
000000000001aa73	movl	$0x0, (%rsp)
000000000001aa7a	movq	%rbx, %rdi
000000000001aa7d	movl	$0x3, %esi
000000000001aa82	movl	$0x28, %edx
000000000001aa87	movl	$0x8c, %ecx
000000000001aa8c	movl	%eax, %r8d
000000000001aa8f	xorl	%r9d, %r9d
000000000001aa92	callq	_mach_msg
000000000001aa97	movl	%eax, %ebx
000000000001aa99	leal	-0x10000002(%rbx), %eax
000000000001aa9f	cmpl	$0xe, %eax
000000000001aaa2	ja	0x1aabe
000000000001aaa4	movl	$0x4003, %ecx
000000000001aaa9	btl	%eax, %ecx
000000000001aaac	jae	0x1aabe
000000000001aaae	movl	-0xac(%rbp), %edi
000000000001aab4	callq	_mig_put_reply_port
000000000001aab9	jmp	0x1ab45
000000000001aabe	testl	%ebx, %ebx
000000000001aac0	jne	0x1aafa
000000000001aac2	movl	-0xa4(%rbp), %eax
000000000001aac8	cmpl	$0x47, %eax
000000000001aacb	je	0x1ab07
000000000001aacd	cmpl	$0xc1e, %eax
000000000001aad2	jne	0x1ab0e
000000000001aad4	movl	-0xb8(%rbp), %ecx
000000000001aada	movl	-0xb4(%rbp), %eax
000000000001aae0	testl	%ecx, %ecx
000000000001aae2	js	0x1ab15
000000000001aae4	movl	$0xfffffed4, %ebx
000000000001aae9	cmpl	$0x24, %eax
000000000001aaec	jne	0x1ab39
000000000001aaee	movl	-0x98(%rbp), %edx
000000000001aaf4	testl	%edx, %edx
000000000001aaf6	jne	0x1ab2b
000000000001aaf8	jmp	0x1ab39
000000000001aafa	movl	-0xac(%rbp), %edi
000000000001ab00	callq	_mig_dealloc_reply_port
000000000001ab05	jmp	0x1ab45
000000000001ab07	movl	$0xfffffecc, %ebx
000000000001ab0c	jmp	0x1ab39
000000000001ab0e	movl	$0xfffffed3, %ebx
000000000001ab13	jmp	0x1ab39
000000000001ab15	leal	-0x34(%rax), %edx
000000000001ab18	movl	$0xfffffed4, %ebx
000000000001ab1d	cmpl	$0x50, %edx
000000000001ab20	ja	0x1ab39
000000000001ab22	cmpl	$0x1, -0xa0(%rbp)
000000000001ab29	jne	0x1ab39
000000000001ab2b	movl	$0xfffffed4, %ebx
000000000001ab30	cmpl	$0x0, -0xb0(%rbp)
000000000001ab37	je	0x1ab59
000000000001ab39	leaq	-0xb8(%rbp), %rdi
000000000001ab40	callq	_mach_msg_destroy
000000000001ab45	movl	%ebx, %eax
000000000001ab47	addq	$0x98, %rsp
000000000001ab4e	popq	%rbx
000000000001ab4f	popq	%r12
000000000001ab51	popq	%r13
000000000001ab53	popq	%r14
000000000001ab55	popq	%r15
000000000001ab57	popq	%rbp
000000000001ab58	retq
000000000001ab59	testl	%ecx, %ecx
000000000001ab5b	js	0x1ab9a
000000000001ab5d	movl	-0x98(%rbp), %ebx
000000000001ab63	testl	%ebx, %ebx
000000000001ab65	jne	0x1ab39
000000000001ab67	movl	-0x88(%rbp), %r13d
000000000001ab6e	leaq	-0x84(%rbp), %rsi
000000000001ab75	movl	-0x18(%rsi), %eax
000000000001ab78	movl	%eax, (%r15)
000000000001ab7b	movl	(%r12), %edx
000000000001ab7f	cmpl	%edx, %r13d
000000000001ab82	jbe	0x1abda
000000000001ab84	shll	$0x2, %edx
000000000001ab87	movq	%r14, %rdi
000000000001ab8a	callq	_memcpy
000000000001ab8f	movl	%r13d, (%r12)
000000000001ab93	movl	$0xfffffecd, %ebx
000000000001ab98	jmp	0x1ab45
000000000001ab9a	movzwl	-0x92(%rbp), %ecx
000000000001aba1	shll	$0x10, %ecx
000000000001aba4	cmpl	$0x110000, %ecx
000000000001abaa	jne	0x1ab39
000000000001abac	movl	-0x88(%rbp), %r13d
000000000001abb3	cmpl	$0x14, %r13d
000000000001abb7	ja	0x1ab39
000000000001abb9	leal	-0x34(%rax), %ecx
000000000001abbc	shrl	$0x2, %ecx
000000000001abbf	cmpl	%r13d, %ecx
000000000001abc2	jb	0x1ab39
000000000001abc8	leal	0x34(,%r13,4), %ecx
000000000001abd0	cmpl	%ecx, %eax
000000000001abd2	jne	0x1ab39
000000000001abd8	jmp	0x1ab6e
000000000001abda	leal	(,%r13,4), %edx
000000000001abe2	movq	%r14, %rdi
000000000001abe5	callq	_memcpy
000000000001abea	movl	%r13d, (%r12)
000000000001abee	xorl	%ebx, %ebx
000000000001abf0	jmp	0x1ab45
_processor_control:
000000000001abf5	pushq	%rbp
000000000001abf6	movq	%rsp, %rbp
000000000001abf9	pushq	%r15
000000000001abfb	pushq	%r14
000000000001abfd	pushq	%rbx
000000000001abfe	subq	$0x88, %rsp
000000000001ac05	leaq	_NDR_record(%rip), %rax
000000000001ac0c	movq	(%rax), %rax
000000000001ac0f	movq	%rax, -0x78(%rbp)
000000000001ac13	movl	$0xfffffecd, %r15d
000000000001ac19	cmpl	$0x14, %edx
000000000001ac1c	ja	0x1ad1e
000000000001ac22	movl	%edx, %ebx
000000000001ac24	movl	%edi, %r14d
000000000001ac27	leaq	-0x6c(%rbp), %r15
000000000001ac2b	leal	(,%rbx,4), %edx
000000000001ac32	movq	%r15, %rdi
000000000001ac35	callq	_memcpy
000000000001ac3a	movl	%ebx, -0x4(%r15)
000000000001ac3e	leal	0x24(,%rbx,4), %ebx
000000000001ac45	movl	$0x1513, -0x24(%r15)
000000000001ac4d	movl	%r14d, -0x1c(%r15)
000000000001ac51	callq	_mig_get_reply_port
000000000001ac56	movl	%eax, -0x18(%r15)
000000000001ac5a	movabsq	$0xbbb00000000, %rcx
000000000001ac64	movq	%rcx, -0x14(%r15)
000000000001ac68	movl	$0x0, (%rsp)
000000000001ac6f	leaq	-0x90(%rbp), %rdi
000000000001ac76	movl	$0x3, %esi
000000000001ac7b	movl	%ebx, %edx
000000000001ac7d	movl	$0x2c, %ecx
000000000001ac82	movl	%eax, %r8d
000000000001ac85	xorl	%r9d, %r9d
000000000001ac88	callq	_mach_msg
000000000001ac8d	movl	%eax, %r15d
000000000001ac90	leal	-0x10000002(%r15), %eax
000000000001ac97	cmpl	$0xe, %eax
000000000001ac9a	ja	0x1acb3
000000000001ac9c	movl	$0x4003, %ecx
000000000001aca1	btl	%eax, %ecx
000000000001aca4	jae	0x1acb3
000000000001aca6	movl	-0x84(%rbp), %edi
000000000001acac	callq	_mig_put_reply_port
000000000001acb1	jmp	0x1ad1e
000000000001acb3	testl	%r15d, %r15d
000000000001acb6	jne	0x1acf7
000000000001acb8	movl	-0x7c(%rbp), %eax
000000000001acbb	cmpl	$0x47, %eax
000000000001acbe	je	0x1ad04
000000000001acc0	cmpl	$0xc1f, %eax
000000000001acc5	jne	0x1ad0c
000000000001acc7	movl	$0xfffffed4, %r15d
000000000001accd	cmpl	$0x0, -0x90(%rbp)
000000000001acd4	js	0x1ad12
000000000001acd6	cmpl	$0x24, -0x8c(%rbp)
000000000001acdd	jne	0x1ad12
000000000001acdf	movl	-0x88(%rbp), %eax
000000000001ace5	testl	%eax, %eax
000000000001ace7	jne	0x1ad12
000000000001ace9	movl	-0x70(%rbp), %r15d
000000000001aced	testl	%r15d, %r15d
000000000001acf0	jne	0x1ad12
000000000001acf2	xorl	%r15d, %r15d
000000000001acf5	jmp	0x1ad1e
000000000001acf7	movl	-0x84(%rbp), %edi
000000000001acfd	callq	_mig_dealloc_reply_port
000000000001ad02	jmp	0x1ad1e
000000000001ad04	movl	$0xfffffecc, %r15d
000000000001ad0a	jmp	0x1ad12
000000000001ad0c	movl	$0xfffffed3, %r15d
000000000001ad12	leaq	-0x90(%rbp), %rdi
000000000001ad19	callq	_mach_msg_destroy
000000000001ad1e	movl	%r15d, %eax
000000000001ad21	addq	$0x88, %rsp
000000000001ad28	popq	%rbx
000000000001ad29	popq	%r14
000000000001ad2b	popq	%r15
000000000001ad2d	popq	%rbp
000000000001ad2e	retq
_processor_assign:
000000000001ad2f	pushq	%rbp
000000000001ad30	movq	%rsp, %rbp
000000000001ad33	pushq	%rbx
000000000001ad34	subq	$0x48, %rsp
000000000001ad38	leaq	-0x40(%rbp), %rbx
000000000001ad3c	movl	$0x1, 0x18(%rbx)
000000000001ad43	movl	%esi, 0x1c(%rbx)
000000000001ad46	movl	$0x130000, 0x24(%rbx)
000000000001ad4d	leaq	_NDR_record(%rip), %rax
000000000001ad54	movq	(%rax), %rax
000000000001ad57	movq	%rax, 0x28(%rbx)
000000000001ad5b	movl	%edx, 0x30(%rbx)
000000000001ad5e	movl	$0x80001513, (%rbx)
000000000001ad64	movl	%edi, 0x8(%rbx)
000000000001ad67	callq	_mig_get_reply_port
000000000001ad6c	movl	%eax, 0xc(%rbx)
000000000001ad6f	movabsq	$0xbbc00000000, %rcx
000000000001ad79	movq	%rcx, 0x10(%rbx)
000000000001ad7d	movl	$0x0, (%rsp)
000000000001ad84	movq	%rbx, %rdi
000000000001ad87	movl	$0x3, %esi
000000000001ad8c	movl	$0x34, %edx
000000000001ad91	movl	$0x2c, %ecx
000000000001ad96	movl	%eax, %r8d
000000000001ad99	xorl	%r9d, %r9d
000000000001ad9c	callq	_mach_msg
000000000001ada1	movl	%eax, %ebx
000000000001ada3	leal	-0x10000002(%rbx), %eax
000000000001ada9	cmpl	$0xe, %eax
000000000001adac	ja	0x1adc2
000000000001adae	movl	$0x4003, %ecx
000000000001adb3	btl	%eax, %ecx
000000000001adb6	jae	0x1adc2
000000000001adb8	movl	-0x34(%rbp), %edi
000000000001adbb	callq	_mig_put_reply_port
000000000001adc0	jmp	0x1ae17
000000000001adc2	testl	%ebx, %ebx
000000000001adc4	jne	0x1adf8
000000000001adc6	movl	-0x2c(%rbp), %eax
000000000001adc9	cmpl	$0x47, %eax
000000000001adcc	je	0x1ae02
000000000001adce	cmpl	$0xc20, %eax
000000000001add3	jne	0x1ae09
000000000001add5	movl	$0xfffffed4, %ebx
000000000001adda	cmpl	$0x0, -0x40(%rbp)
000000000001adde	js	0x1ae0e
000000000001ade0	cmpl	$0x24, -0x3c(%rbp)
000000000001ade4	jne	0x1ae0e
000000000001ade6	movl	-0x38(%rbp), %eax
000000000001ade9	testl	%eax, %eax
000000000001adeb	jne	0x1ae0e
000000000001aded	movl	-0x20(%rbp), %ebx
000000000001adf0	testl	%ebx, %ebx
000000000001adf2	jne	0x1ae0e
000000000001adf4	xorl	%ebx, %ebx
000000000001adf6	jmp	0x1ae17
000000000001adf8	movl	-0x34(%rbp), %edi
000000000001adfb	callq	_mig_dealloc_reply_port
000000000001ae00	jmp	0x1ae17
000000000001ae02	movl	$0xfffffecc, %ebx
000000000001ae07	jmp	0x1ae0e
000000000001ae09	movl	$0xfffffed3, %ebx
000000000001ae0e	leaq	-0x40(%rbp), %rdi
000000000001ae12	callq	_mach_msg_destroy
000000000001ae17	movl	%ebx, %eax
000000000001ae19	addq	$0x48, %rsp
000000000001ae1d	popq	%rbx
000000000001ae1e	popq	%rbp
000000000001ae1f	retq
_processor_get_assignment:
000000000001ae20	pushq	%rbp
000000000001ae21	movq	%rsp, %rbp
000000000001ae24	pushq	%r14
000000000001ae26	pushq	%rbx
000000000001ae27	subq	$0x40, %rsp
000000000001ae2b	movq	%rsi, %r14
000000000001ae2e	leaq	-0x40(%rbp), %rbx
000000000001ae32	movl	$0x1513, (%rbx)
000000000001ae38	movl	%edi, 0x8(%rbx)
000000000001ae3b	callq	_mig_get_reply_port
000000000001ae40	movl	%eax, 0xc(%rbx)
000000000001ae43	movabsq	$0xbbd00000000, %rcx
000000000001ae4d	movq	%rcx, 0x10(%rbx)
000000000001ae51	movl	$0x0, (%rsp)
000000000001ae58	movq	%rbx, %rdi
000000000001ae5b	movl	$0x3, %esi
000000000001ae60	movl	$0x18, %edx
000000000001ae65	movl	$0x30, %ecx
000000000001ae6a	movl	%eax, %r8d
000000000001ae6d	xorl	%r9d, %r9d
000000000001ae70	callq	_mach_msg
000000000001ae75	movl	%eax, %ebx
000000000001ae77	leal	-0x10000002(%rbx), %eax
000000000001ae7d	cmpl	$0xe, %eax
000000000001ae80	ja	0x1ae96
000000000001ae82	movl	$0x4003, %ecx
000000000001ae87	btl	%eax, %ecx
000000000001ae8a	jae	0x1ae96
000000000001ae8c	movl	-0x34(%rbp), %edi
000000000001ae8f	callq	_mig_put_reply_port
000000000001ae94	jmp	0x1aee4
000000000001ae96	testl	%ebx, %ebx
000000000001ae98	jne	0x1aec5
000000000001ae9a	movl	-0x2c(%rbp), %eax
000000000001ae9d	cmpl	$0x47, %eax
000000000001aea0	je	0x1aecf
000000000001aea2	cmpl	$0xc21, %eax
000000000001aea7	jne	0x1aed6
000000000001aea9	movl	-0x40(%rbp), %eax
000000000001aeac	movl	-0x3c(%rbp), %ecx
000000000001aeaf	movl	$0xfffffed4, %ebx
000000000001aeb4	testl	%eax, %eax
000000000001aeb6	js	0x1aeef
000000000001aeb8	cmpl	$0x24, %ecx
000000000001aebb	jne	0x1aedb
000000000001aebd	cmpl	$0x0, -0x20(%rbp)
000000000001aec1	jne	0x1aefa
000000000001aec3	jmp	0x1aedb
000000000001aec5	movl	-0x34(%rbp), %edi
000000000001aec8	callq	_mig_dealloc_reply_port
000000000001aecd	jmp	0x1aee4
000000000001aecf	movl	$0xfffffecc, %ebx
000000000001aed4	jmp	0x1aedb
000000000001aed6	movl	$0xfffffed3, %ebx
000000000001aedb	leaq	-0x40(%rbp), %rdi
000000000001aedf	callq	_mach_msg_destroy
000000000001aee4	movl	%ebx, %eax
000000000001aee6	addq	$0x40, %rsp
000000000001aeea	popq	%rbx
000000000001aeeb	popq	%r14
000000000001aeed	popq	%rbp
000000000001aeee	retq
000000000001aeef	cmpl	$0x28, %ecx
000000000001aef2	jne	0x1aedb
000000000001aef4	cmpl	$0x1, -0x28(%rbp)
000000000001aef8	jne	0x1aedb
000000000001aefa	movl	$0xfffffed4, %ebx
000000000001aeff	cmpl	$0x0, -0x38(%rbp)
000000000001af03	jne	0x1aedb
000000000001af05	testl	%eax, %eax
000000000001af07	js	0x1af12
000000000001af09	movl	-0x20(%rbp), %ebx
000000000001af0c	testl	%ebx, %ebx
000000000001af0e	jne	0x1aedb
000000000001af10	jmp	0x1af20
000000000001af12	movzwl	-0x1a(%rbp), %eax
000000000001af16	shll	$0x10, %eax
000000000001af19	cmpl	$0x110000, %eax
000000000001af1e	jne	0x1aedb
000000000001af20	movl	-0x24(%rbp), %eax
000000000001af23	movl	%eax, (%r14)
000000000001af26	xorl	%ebx, %ebx
000000000001af28	jmp	0x1aee4
_netname_check_in:
000000000001af2a	pushq	%rbp
000000000001af2b	movq	%rsp, %rbp
000000000001af2e	pushq	%r15
000000000001af30	pushq	%r14
000000000001af32	pushq	%rbx
000000000001af33	subq	$0xa8, %rsp
000000000001af3a	movl	%edi, %r14d
000000000001af3d	leaq	-0x6c(%rbp), %rdi
000000000001af41	movl	$0x2, -0x2c(%rdi)
000000000001af48	movl	%edx, -0x28(%rdi)
000000000001af4b	movl	$0x130000, %eax
000000000001af50	movl	%eax, -0x20(%rdi)
000000000001af53	movl	%ecx, -0x1c(%rdi)
000000000001af56	movl	%eax, -0x14(%rdi)
000000000001af59	leaq	_NDR_record(%rip), %rax
000000000001af60	movq	(%rax), %rax
000000000001af63	movq	%rax, -0x10(%rdi)
000000000001af67	movl	$0x50, %edx
000000000001af6c	cmpq	$0x0, 0x1208c(%rip)
000000000001af74	je	0x1af7d
000000000001af76	callq	_mig_strncpy_zerofill
000000000001af7b	jmp	0x1af82
000000000001af7d	callq	_mig_strncpy
000000000001af82	movl	%eax, %ebx
000000000001af84	leaq	-0xb0(%rbp), %r15
000000000001af8b	movl	%eax, 0x40(%r15)
000000000001af8f	addl	$0x47, %ebx
000000000001af92	andl	$-0x4, %ebx
000000000001af95	movl	$0x80001513, (%r15)
000000000001af9c	movl	%r14d, 0x8(%r15)
000000000001afa0	callq	_mig_get_reply_port
000000000001afa5	movl	%eax, 0xc(%r15)
000000000001afa9	movabsq	$0x41000000000, %rcx
000000000001afb3	movq	%rcx, 0x10(%r15)
000000000001afb7	movl	$0x0, (%rsp)
000000000001afbe	movq	%r15, %rdi
000000000001afc1	movl	$0x3, %esi
000000000001afc6	movl	%ebx, %edx
000000000001afc8	movl	$0x2c, %ecx
000000000001afcd	movl	%eax, %r8d
000000000001afd0	xorl	%r9d, %r9d
000000000001afd3	callq	_mach_msg
000000000001afd8	movl	%eax, %ebx
000000000001afda	leal	-0x10000002(%rbx), %eax
000000000001afe0	cmpl	$0xe, %eax
000000000001afe3	ja	0x1affc
000000000001afe5	movl	$0x4003, %ecx
000000000001afea	btl	%eax, %ecx
000000000001afed	jae	0x1affc
000000000001afef	movl	-0xa4(%rbp), %edi
000000000001aff5	callq	_mig_put_reply_port
000000000001affa	jmp	0x1b066
000000000001affc	testl	%ebx, %ebx
000000000001affe	jne	0x1b041
000000000001b000	movl	-0x9c(%rbp), %eax
000000000001b006	cmpl	$0x47, %eax
000000000001b009	je	0x1b04e
000000000001b00b	cmpl	$0x474, %eax
000000000001b010	jne	0x1b055
000000000001b012	movl	$0xfffffed4, %ebx
000000000001b017	cmpl	$0x0, -0xb0(%rbp)
000000000001b01e	js	0x1b05a
000000000001b020	cmpl	$0x24, -0xac(%rbp)
000000000001b027	jne	0x1b05a
000000000001b029	movl	-0xa8(%rbp), %eax
000000000001b02f	testl	%eax, %eax
000000000001b031	jne	0x1b05a
000000000001b033	movl	-0x90(%rbp), %ebx
000000000001b039	testl	%ebx, %ebx
000000000001b03b	jne	0x1b05a
000000000001b03d	xorl	%ebx, %ebx
000000000001b03f	jmp	0x1b066
000000000001b041	movl	-0xa4(%rbp), %edi
000000000001b047	callq	_mig_dealloc_reply_port
000000000001b04c	jmp	0x1b066
000000000001b04e	movl	$0xfffffecc, %ebx
000000000001b053	jmp	0x1b05a
000000000001b055	movl	$0xfffffed3, %ebx
000000000001b05a	leaq	-0xb0(%rbp), %rdi
000000000001b061	callq	_mach_msg_destroy
000000000001b066	movl	%ebx, %eax
000000000001b068	addq	$0xa8, %rsp
000000000001b06f	popq	%rbx
000000000001b070	popq	%r14
000000000001b072	popq	%r15
000000000001b074	popq	%rbp
000000000001b075	retq
_netname_look_up:
000000000001b076	pushq	%rbp
000000000001b077	movq	%rsp, %rbp
000000000001b07a	pushq	%r15
000000000001b07c	pushq	%r14
000000000001b07e	pushq	%r13
000000000001b080	pushq	%r12
000000000001b082	pushq	%rbx
000000000001b083	subq	$0xd8, %rsp
000000000001b08a	movq	%rcx, %r14
000000000001b08d	movq	%rdx, %r12
000000000001b090	movl	%edi, %r15d
000000000001b093	leaq	_NDR_record(%rip), %rax
000000000001b09a	movq	(%rax), %rax
000000000001b09d	leaq	-0xd0(%rbp), %rdi
000000000001b0a4	movq	%rax, -0x10(%rdi)
000000000001b0a8	movl	$0x50, %edx
000000000001b0ad	cmpq	$0x0, 0x11f4b(%rip)
000000000001b0b5	je	0x1b0be
000000000001b0b7	callq	_mig_strncpy_zerofill
000000000001b0bc	jmp	0x1b0c3
000000000001b0be	callq	_mig_strncpy
000000000001b0c3	movl	%eax, -0xd4(%rbp)
000000000001b0c9	addl	$0x3, %eax
000000000001b0cc	andl	$-0x4, %eax
000000000001b0cf	leal	0x30(%rax), %r13d
000000000001b0d3	leaq	-0x148(%rbp,%rax), %rbx
000000000001b0db	leaq	-0xc8(%rbp,%rax), %rdi
000000000001b0e3	movq	%r12, %rsi
000000000001b0e6	movl	$0x50, %edx
000000000001b0eb	cmpq	$0x0, 0x11f0d(%rip)
000000000001b0f3	je	0x1b0fc
000000000001b0f5	callq	_mig_strncpy_zerofill
000000000001b0fa	jmp	0x1b101
000000000001b0fc	callq	_mig_strncpy
000000000001b101	movl	%eax, 0x7c(%rbx)
000000000001b104	addl	$0x3, %eax
000000000001b107	andl	$-0x4, %eax
000000000001b10a	addl	%eax, %r13d
000000000001b10d	leaq	-0xf8(%rbp), %rbx
000000000001b114	movl	$0x1513, (%rbx)
000000000001b11a	movl	%r15d, 0x8(%rbx)
000000000001b11e	callq	_mig_get_reply_port
000000000001b123	movl	%eax, 0xc(%rbx)
000000000001b126	movabsq	$0x41100000000, %rcx
000000000001b130	movq	%rcx, 0x10(%rbx)
000000000001b134	movl	$0x0, (%rsp)
000000000001b13b	movq	%rbx, %rdi
000000000001b13e	movl	$0x3, %esi
000000000001b143	movl	%r13d, %edx
000000000001b146	movl	$0x30, %ecx
000000000001b14b	movl	%eax, %r8d
000000000001b14e	xorl	%r9d, %r9d
000000000001b151	callq	_mach_msg
000000000001b156	movl	%eax, %ebx
000000000001b158	leal	-0x10000002(%rbx), %eax
000000000001b15e	cmpl	$0xe, %eax
000000000001b161	ja	0x1b17a
000000000001b163	movl	$0x4003, %ecx
000000000001b168	btl	%eax, %ecx
000000000001b16b	jae	0x1b17a
000000000001b16d	movl	-0xec(%rbp), %edi
000000000001b173	callq	_mig_put_reply_port
000000000001b178	jmp	0x1b1da
000000000001b17a	testl	%ebx, %ebx
000000000001b17c	jne	0x1b1b5
000000000001b17e	movl	-0xe4(%rbp), %eax
000000000001b184	cmpl	$0x47, %eax
000000000001b187	je	0x1b1c2
000000000001b189	cmpl	$0x475, %eax
000000000001b18e	jne	0x1b1c9
000000000001b190	movl	-0xf8(%rbp), %eax
000000000001b196	movl	-0xf4(%rbp), %ecx
000000000001b19c	movl	$0xfffffed4, %ebx
000000000001b1a1	testl	%eax, %eax
000000000001b1a3	js	0x1b1ee
000000000001b1a5	cmpl	$0x24, %ecx
000000000001b1a8	jne	0x1b1ce
000000000001b1aa	cmpl	$0x0, -0xd8(%rbp)
000000000001b1b1	jne	0x1b1fc
000000000001b1b3	jmp	0x1b1ce
000000000001b1b5	movl	-0xec(%rbp), %edi
000000000001b1bb	callq	_mig_dealloc_reply_port
000000000001b1c0	jmp	0x1b1da
000000000001b1c2	movl	$0xfffffecc, %ebx
000000000001b1c7	jmp	0x1b1ce
000000000001b1c9	movl	$0xfffffed3, %ebx
000000000001b1ce	leaq	-0xf8(%rbp), %rdi
000000000001b1d5	callq	_mach_msg_destroy
000000000001b1da	movl	%ebx, %eax
000000000001b1dc	addq	$0xd8, %rsp
000000000001b1e3	popq	%rbx
000000000001b1e4	popq	%r12
000000000001b1e6	popq	%r13
000000000001b1e8	popq	%r14
000000000001b1ea	popq	%r15
000000000001b1ec	popq	%rbp
000000000001b1ed	retq
000000000001b1ee	cmpl	$0x28, %ecx
000000000001b1f1	jne	0x1b1ce
000000000001b1f3	cmpl	$0x1, -0xe0(%rbp)
000000000001b1fa	jne	0x1b1ce
000000000001b1fc	movl	$0xfffffed4, %ebx
000000000001b201	cmpl	$0x0, -0xf0(%rbp)
000000000001b208	jne	0x1b1ce
000000000001b20a	testl	%eax, %eax
000000000001b20c	js	0x1b21a
000000000001b20e	movl	-0xd8(%rbp), %ebx
000000000001b214	testl	%ebx, %ebx
000000000001b216	jne	0x1b1ce
000000000001b218	jmp	0x1b22b
000000000001b21a	movzwl	-0xd2(%rbp), %eax
000000000001b221	shll	$0x10, %eax
000000000001b224	cmpl	$0x110000, %eax
000000000001b229	jne	0x1b1ce
000000000001b22b	movl	-0xdc(%rbp), %eax
000000000001b231	movl	%eax, (%r14)
000000000001b234	xorl	%ebx, %ebx
000000000001b236	jmp	0x1b1da
_netname_check_out:
000000000001b238	pushq	%rbp
000000000001b239	movq	%rsp, %rbp
000000000001b23c	pushq	%r15
000000000001b23e	pushq	%r14
000000000001b240	pushq	%rbx
000000000001b241	subq	$0x98, %rsp
000000000001b248	movl	%edi, %r14d
000000000001b24b	leaq	-0x68(%rbp), %rdi
000000000001b24f	movl	$0x1, -0x20(%rdi)
000000000001b256	movl	%edx, -0x1c(%rdi)
000000000001b259	movl	$0x130000, -0x14(%rdi)
000000000001b260	leaq	_NDR_record(%rip), %rax
000000000001b267	movq	(%rax), %rax
000000000001b26a	movq	%rax, -0x10(%rdi)
000000000001b26e	movl	$0x50, %edx
000000000001b273	cmpq	$0x0, 0x11d85(%rip)
000000000001b27b	je	0x1b284
000000000001b27d	callq	_mig_strncpy_zerofill
000000000001b282	jmp	0x1b289
000000000001b284	callq	_mig_strncpy
000000000001b289	movl	%eax, %ebx
000000000001b28b	leaq	-0xa0(%rbp), %r15
000000000001b292	movl	%eax, 0x34(%r15)
000000000001b296	addl	$0x3b, %ebx
000000000001b299	andl	$-0x4, %ebx
000000000001b29c	movl	$0x80001513, (%r15)
000000000001b2a3	movl	%r14d, 0x8(%r15)
000000000001b2a7	callq	_mig_get_reply_port
000000000001b2ac	movl	%eax, 0xc(%r15)
000000000001b2b0	movabsq	$0x41200000000, %rcx
000000000001b2ba	movq	%rcx, 0x10(%r15)
000000000001b2be	movl	$0x0, (%rsp)
000000000001b2c5	movq	%r15, %rdi
000000000001b2c8	movl	$0x3, %esi
000000000001b2cd	movl	%ebx, %edx
000000000001b2cf	movl	$0x2c, %ecx
000000000001b2d4	movl	%eax, %r8d
000000000001b2d7	xorl	%r9d, %r9d
000000000001b2da	callq	_mach_msg
000000000001b2df	movl	%eax, %ebx
000000000001b2e1	leal	-0x10000002(%rbx), %eax
000000000001b2e7	cmpl	$0xe, %eax
000000000001b2ea	ja	0x1b303
000000000001b2ec	movl	$0x4003, %ecx
000000000001b2f1	btl	%eax, %ecx
000000000001b2f4	jae	0x1b303
000000000001b2f6	movl	-0x94(%rbp), %edi
000000000001b2fc	callq	_mig_put_reply_port
000000000001b301	jmp	0x1b36a
000000000001b303	testl	%ebx, %ebx
000000000001b305	jne	0x1b345
000000000001b307	movl	-0x8c(%rbp), %eax
000000000001b30d	cmpl	$0x47, %eax
000000000001b310	je	0x1b352
000000000001b312	cmpl	$0x476, %eax
000000000001b317	jne	0x1b359
000000000001b319	movl	$0xfffffed4, %ebx
000000000001b31e	cmpl	$0x0, -0xa0(%rbp)
000000000001b325	js	0x1b35e
000000000001b327	cmpl	$0x24, -0x9c(%rbp)
000000000001b32e	jne	0x1b35e
000000000001b330	movl	-0x98(%rbp), %eax
000000000001b336	testl	%eax, %eax
000000000001b338	jne	0x1b35e
000000000001b33a	movl	-0x80(%rbp), %ebx
000000000001b33d	testl	%ebx, %ebx
000000000001b33f	jne	0x1b35e
000000000001b341	xorl	%ebx, %ebx
000000000001b343	jmp	0x1b36a
000000000001b345	movl	-0x94(%rbp), %edi
000000000001b34b	callq	_mig_dealloc_reply_port
000000000001b350	jmp	0x1b36a
000000000001b352	movl	$0xfffffecc, %ebx
000000000001b357	jmp	0x1b35e
000000000001b359	movl	$0xfffffed3, %ebx
000000000001b35e	leaq	-0xa0(%rbp), %rdi
000000000001b365	callq	_mach_msg_destroy
000000000001b36a	movl	%ebx, %eax
000000000001b36c	addq	$0x98, %rsp
000000000001b373	popq	%rbx
000000000001b374	popq	%r14
000000000001b376	popq	%r15
000000000001b378	popq	%rbp
000000000001b379	retq
_netname_version:
000000000001b37a	pushq	%rbp
000000000001b37b	movq	%rsp, %rbp
000000000001b37e	pushq	%r14
000000000001b380	pushq	%rbx
000000000001b381	subq	$0x90, %rsp
000000000001b388	movq	%rsi, %r14
000000000001b38b	leaq	-0x98(%rbp), %rbx
000000000001b392	movl	$0x1513, (%rbx)
000000000001b398	movl	%edi, 0x8(%rbx)
000000000001b39b	callq	_mig_get_reply_port
000000000001b3a0	movl	%eax, 0xc(%rbx)
000000000001b3a3	movabsq	$0x41300000000, %rcx
000000000001b3ad	movq	%rcx, 0x10(%rbx)
000000000001b3b1	movl	$0x0, (%rsp)
000000000001b3b8	movq	%rbx, %rdi
000000000001b3bb	movl	$0x3, %esi
000000000001b3c0	movl	$0x18, %edx
000000000001b3c5	movl	$0x84, %ecx
000000000001b3ca	movl	%eax, %r8d
000000000001b3cd	xorl	%r9d, %r9d
000000000001b3d0	callq	_mach_msg
000000000001b3d5	movl	%eax, %ebx
000000000001b3d7	leal	-0x10000002(%rbx), %eax
000000000001b3dd	cmpl	$0xe, %eax
000000000001b3e0	ja	0x1b3f9
000000000001b3e2	movl	$0x4003, %ecx
000000000001b3e7	btl	%eax, %ecx
000000000001b3ea	jae	0x1b3f9
000000000001b3ec	movl	-0x8c(%rbp), %edi
000000000001b3f2	callq	_mig_put_reply_port
000000000001b3f7	jmp	0x1b466
000000000001b3f9	testl	%ebx, %ebx
000000000001b3fb	jne	0x1b441
000000000001b3fd	movl	-0x84(%rbp), %eax
000000000001b403	cmpl	$0x47, %eax
000000000001b406	je	0x1b44e
000000000001b408	cmpl	$0x477, %eax
000000000001b40d	jne	0x1b455
000000000001b40f	cmpl	$0x0, -0x98(%rbp)
000000000001b416	js	0x1b43a
000000000001b418	movl	-0x94(%rbp), %eax
000000000001b41e	leal	-0x2c(%rax), %ecx
000000000001b421	cmpl	$0x51, %ecx
000000000001b424	jb	0x1b431
000000000001b426	cmpl	$0x24, %eax
000000000001b429	jne	0x1b43a
000000000001b42b	cmpl	$0x0, -0x78(%rbp)
000000000001b42f	je	0x1b43a
000000000001b431	cmpl	$0x0, -0x90(%rbp)
000000000001b438	je	0x1b474
000000000001b43a	movl	$0xfffffed4, %ebx
000000000001b43f	jmp	0x1b45a
000000000001b441	movl	-0x8c(%rbp), %edi
000000000001b447	callq	_mig_dealloc_reply_port
000000000001b44c	jmp	0x1b466
000000000001b44e	movl	$0xfffffecc, %ebx
000000000001b453	jmp	0x1b45a
000000000001b455	movl	$0xfffffed3, %ebx
000000000001b45a	leaq	-0x98(%rbp), %rdi
000000000001b461	callq	_mach_msg_destroy
000000000001b466	movl	%ebx, %eax
000000000001b468	addq	$0x90, %rsp
000000000001b46f	popq	%rbx
000000000001b470	popq	%r14
000000000001b472	popq	%rbp
000000000001b473	retq
000000000001b474	movl	-0x78(%rbp), %ebx
000000000001b477	testl	%ebx, %ebx
000000000001b479	jne	0x1b45a
000000000001b47b	movl	-0x70(%rbp), %edx
000000000001b47e	cmpl	$0x50, %edx
000000000001b481	ja	0x1b43a
000000000001b483	cmpl	%edx, %ecx
000000000001b485	jb	0x1b43a
000000000001b487	addl	$0x2f, %edx
000000000001b48a	andl	$-0x4, %edx
000000000001b48d	movl	$0xfffffed4, %ebx
000000000001b492	cmpl	%edx, %eax
000000000001b494	jne	0x1b45a
000000000001b496	leaq	-0x6c(%rbp), %rsi
000000000001b49a	movq	%r14, %rdi
000000000001b49d	movl	$0x50, %edx
000000000001b4a2	callq	_mig_strncpy
000000000001b4a7	xorl	%ebx, %ebx
000000000001b4a9	jmp	0x1b466
_task_create:
000000000001b4ab	pushq	%rbp
000000000001b4ac	movq	%rsp, %rbp
000000000001b4af	pushq	%r14
000000000001b4b1	pushq	%rbx
000000000001b4b2	subq	$0x50, %rsp
000000000001b4b6	movq	%r8, %r14
000000000001b4b9	leaq	-0x50(%rbp), %rbx
000000000001b4bd	movl	$0x1, 0x18(%rbx)
000000000001b4c4	movq	%rsi, 0x1c(%rbx)
000000000001b4c8	movl	%edx, 0x28(%rbx)
000000000001b4cb	movl	$0x2130000, 0x24(%rbx)
000000000001b4d2	leaq	_NDR_record(%rip), %rax
000000000001b4d9	movq	(%rax), %rax
000000000001b4dc	movq	%rax, 0x2c(%rbx)
000000000001b4e0	movl	%edx, 0x34(%rbx)
000000000001b4e3	movl	%ecx, 0x38(%rbx)
000000000001b4e6	movl	$0x80001513, (%rbx)
000000000001b4ec	movl	%edi, 0x8(%rbx)
000000000001b4ef	callq	_mig_get_reply_port
000000000001b4f4	movl	%eax, 0xc(%rbx)
000000000001b4f7	movabsq	$0xd4800000000, %rcx
000000000001b501	movq	%rcx, 0x10(%rbx)
000000000001b505	movl	$0x0, (%rsp)
000000000001b50c	movq	%rbx, %rdi
000000000001b50f	movl	$0x3, %esi
000000000001b514	movl	$0x3c, %edx
000000000001b519	movl	$0x30, %ecx
000000000001b51e	movl	%eax, %r8d
000000000001b521	xorl	%r9d, %r9d
000000000001b524	callq	_mach_msg
000000000001b529	movl	%eax, %ebx
000000000001b52b	leal	-0x10000002(%rbx), %eax
000000000001b531	cmpl	$0xe, %eax
000000000001b534	ja	0x1b54a
000000000001b536	movl	$0x4003, %ecx
000000000001b53b	btl	%eax, %ecx
000000000001b53e	jae	0x1b54a
000000000001b540	movl	-0x44(%rbp), %edi
000000000001b543	callq	_mig_put_reply_port
000000000001b548	jmp	0x1b598
000000000001b54a	testl	%ebx, %ebx
000000000001b54c	jne	0x1b579
000000000001b54e	movl	-0x3c(%rbp), %eax
000000000001b551	cmpl	$0x47, %eax
000000000001b554	je	0x1b583
000000000001b556	cmpl	$0xdac, %eax
000000000001b55b	jne	0x1b58a
000000000001b55d	movl	-0x50(%rbp), %eax
000000000001b560	movl	-0x4c(%rbp), %ecx
000000000001b563	movl	$0xfffffed4, %ebx
000000000001b568	testl	%eax, %eax
000000000001b56a	js	0x1b5a3
000000000001b56c	cmpl	$0x24, %ecx
000000000001b56f	jne	0x1b58f
000000000001b571	cmpl	$0x0, -0x30(%rbp)
000000000001b575	jne	0x1b5ae
000000000001b577	jmp	0x1b58f
000000000001b579	movl	-0x44(%rbp), %edi
000000000001b57c	callq	_mig_dealloc_reply_port
000000000001b581	jmp	0x1b598
000000000001b583	movl	$0xfffffecc, %ebx
000000000001b588	jmp	0x1b58f
000000000001b58a	movl	$0xfffffed3, %ebx
000000000001b58f	leaq	-0x50(%rbp), %rdi
000000000001b593	callq	_mach_msg_destroy
000000000001b598	movl	%ebx, %eax
000000000001b59a	addq	$0x50, %rsp
000000000001b59e	popq	%rbx
000000000001b59f	popq	%r14
000000000001b5a1	popq	%rbp
000000000001b5a2	retq
000000000001b5a3	cmpl	$0x28, %ecx
000000000001b5a6	jne	0x1b58f
000000000001b5a8	cmpl	$0x1, -0x38(%rbp)
000000000001b5ac	jne	0x1b58f
000000000001b5ae	movl	$0xfffffed4, %ebx
000000000001b5b3	cmpl	$0x0, -0x48(%rbp)
000000000001b5b7	jne	0x1b58f
000000000001b5b9	testl	%eax, %eax
000000000001b5bb	js	0x1b5c6
000000000001b5bd	movl	-0x30(%rbp), %ebx
000000000001b5c0	testl	%ebx, %ebx
000000000001b5c2	jne	0x1b58f
000000000001b5c4	jmp	0x1b5d4
000000000001b5c6	movzwl	-0x2a(%rbp), %eax
000000000001b5ca	shll	$0x10, %eax
000000000001b5cd	cmpl	$0x110000, %eax
000000000001b5d2	jne	0x1b58f
000000000001b5d4	movl	-0x34(%rbp), %eax
000000000001b5d7	movl	%eax, (%r14)
000000000001b5da	xorl	%ebx, %ebx
000000000001b5dc	jmp	0x1b598
_task_terminate:
000000000001b5de	pushq	%rbp
000000000001b5df	movq	%rsp, %rbp
000000000001b5e2	pushq	%rbx
000000000001b5e3	subq	$0x38, %rsp
000000000001b5e7	leaq	-0x38(%rbp), %rbx
000000000001b5eb	movl	$0x1513, (%rbx)
000000000001b5f1	movl	%edi, 0x8(%rbx)
000000000001b5f4	callq	_mig_get_reply_port
000000000001b5f9	movl	%eax, 0xc(%rbx)
000000000001b5fc	movabsq	$0xd4900000000, %rcx
000000000001b606	movq	%rcx, 0x10(%rbx)
000000000001b60a	movl	$0x0, (%rsp)
000000000001b611	movq	%rbx, %rdi
000000000001b614	movl	$0x3, %esi
000000000001b619	movl	$0x18, %edx
000000000001b61e	movl	$0x2c, %ecx
000000000001b623	movl	%eax, %r8d
000000000001b626	xorl	%r9d, %r9d
000000000001b629	callq	_mach_msg
000000000001b62e	movl	%eax, %ebx
000000000001b630	leal	-0x10000002(%rbx), %eax
000000000001b636	cmpl	$0xe, %eax
000000000001b639	ja	0x1b64f
000000000001b63b	movl	$0x4003, %ecx
000000000001b640	btl	%eax, %ecx
000000000001b643	jae	0x1b64f
000000000001b645	movl	-0x2c(%rbp), %edi
000000000001b648	callq	_mig_put_reply_port
000000000001b64d	jmp	0x1b6a4
000000000001b64f	testl	%ebx, %ebx
000000000001b651	jne	0x1b685
000000000001b653	movl	-0x24(%rbp), %eax
000000000001b656	cmpl	$0x47, %eax
000000000001b659	je	0x1b68f
000000000001b65b	cmpl	$0xdad, %eax
000000000001b660	jne	0x1b696
000000000001b662	movl	$0xfffffed4, %ebx
000000000001b667	cmpl	$0x0, -0x38(%rbp)
000000000001b66b	js	0x1b69b
000000000001b66d	cmpl	$0x24, -0x34(%rbp)
000000000001b671	jne	0x1b69b
000000000001b673	movl	-0x30(%rbp), %eax
000000000001b676	testl	%eax, %eax
000000000001b678	jne	0x1b69b
000000000001b67a	movl	-0x18(%rbp), %ebx
000000000001b67d	testl	%ebx, %ebx
000000000001b67f	jne	0x1b69b
000000000001b681	xorl	%ebx, %ebx
000000000001b683	jmp	0x1b6a4
000000000001b685	movl	-0x2c(%rbp), %edi
000000000001b688	callq	_mig_dealloc_reply_port
000000000001b68d	jmp	0x1b6a4
000000000001b68f	movl	$0xfffffecc, %ebx
000000000001b694	jmp	0x1b69b
000000000001b696	movl	$0xfffffed3, %ebx
000000000001b69b	leaq	-0x38(%rbp), %rdi
000000000001b69f	callq	_mach_msg_destroy
000000000001b6a4	movl	%ebx, %eax
000000000001b6a6	addq	$0x38, %rsp
000000000001b6aa	popq	%rbx
000000000001b6ab	popq	%rbp
000000000001b6ac	retq
_task_suspend:
000000000001b6ad	pushq	%rbp
000000000001b6ae	movq	%rsp, %rbp
000000000001b6b1	pushq	%rbx
000000000001b6b2	subq	$0x38, %rsp
000000000001b6b6	leaq	-0x38(%rbp), %rbx
000000000001b6ba	movl	$0x1513, (%rbx)
000000000001b6c0	movl	%edi, 0x8(%rbx)
000000000001b6c3	callq	_mig_get_reply_port
000000000001b6c8	movl	%eax, 0xc(%rbx)
000000000001b6cb	movabsq	$0xd4f00000000, %rcx
000000000001b6d5	movq	%rcx, 0x10(%rbx)
000000000001b6d9	movl	$0x0, (%rsp)
000000000001b6e0	movq	%rbx, %rdi
000000000001b6e3	movl	$0x3, %esi
000000000001b6e8	movl	$0x18, %edx
000000000001b6ed	movl	$0x2c, %ecx
000000000001b6f2	movl	%eax, %r8d
000000000001b6f5	xorl	%r9d, %r9d
000000000001b6f8	callq	_mach_msg
000000000001b6fd	movl	%eax, %ebx
000000000001b6ff	leal	-0x10000002(%rbx), %eax
000000000001b705	cmpl	$0xe, %eax
000000000001b708	ja	0x1b71e
000000000001b70a	movl	$0x4003, %ecx
000000000001b70f	btl	%eax, %ecx
000000000001b712	jae	0x1b71e
000000000001b714	movl	-0x2c(%rbp), %edi
000000000001b717	callq	_mig_put_reply_port
000000000001b71c	jmp	0x1b773
000000000001b71e	testl	%ebx, %ebx
000000000001b720	jne	0x1b754
000000000001b722	movl	-0x24(%rbp), %eax
000000000001b725	cmpl	$0x47, %eax
000000000001b728	je	0x1b75e
000000000001b72a	cmpl	$0xdb3, %eax
000000000001b72f	jne	0x1b765
000000000001b731	movl	$0xfffffed4, %ebx
000000000001b736	cmpl	$0x0, -0x38(%rbp)
000000000001b73a	js	0x1b76a
000000000001b73c	cmpl	$0x24, -0x34(%rbp)
000000000001b740	jne	0x1b76a
000000000001b742	movl	-0x30(%rbp), %eax
000000000001b745	testl	%eax, %eax
000000000001b747	jne	0x1b76a
000000000001b749	movl	-0x18(%rbp), %ebx
000000000001b74c	testl	%ebx, %ebx
000000000001b74e	jne	0x1b76a
000000000001b750	xorl	%ebx, %ebx
000000000001b752	jmp	0x1b773
000000000001b754	movl	-0x2c(%rbp), %edi
000000000001b757	callq	_mig_dealloc_reply_port
000000000001b75c	jmp	0x1b773
000000000001b75e	movl	$0xfffffecc, %ebx
000000000001b763	jmp	0x1b76a
000000000001b765	movl	$0xfffffed3, %ebx
000000000001b76a	leaq	-0x38(%rbp), %rdi
000000000001b76e	callq	_mach_msg_destroy
000000000001b773	movl	%ebx, %eax
000000000001b775	addq	$0x38, %rsp
000000000001b779	popq	%rbx
000000000001b77a	popq	%rbp
000000000001b77b	retq
_task_resume:
000000000001b77c	pushq	%rbp
000000000001b77d	movq	%rsp, %rbp
000000000001b780	pushq	%rbx
000000000001b781	subq	$0x38, %rsp
000000000001b785	leaq	-0x38(%rbp), %rbx
000000000001b789	movl	$0x1513, (%rbx)
000000000001b78f	movl	%edi, 0x8(%rbx)
000000000001b792	callq	_mig_get_reply_port
000000000001b797	movl	%eax, 0xc(%rbx)
000000000001b79a	movabsq	$0xd5000000000, %rcx
000000000001b7a4	movq	%rcx, 0x10(%rbx)
000000000001b7a8	movl	$0x0, (%rsp)
000000000001b7af	movq	%rbx, %rdi
000000000001b7b2	movl	$0x3, %esi
000000000001b7b7	movl	$0x18, %edx
000000000001b7bc	movl	$0x2c, %ecx
000000000001b7c1	movl	%eax, %r8d
000000000001b7c4	xorl	%r9d, %r9d
000000000001b7c7	callq	_mach_msg
000000000001b7cc	movl	%eax, %ebx
000000000001b7ce	leal	-0x10000002(%rbx), %eax
000000000001b7d4	cmpl	$0xe, %eax
000000000001b7d7	ja	0x1b7ed
000000000001b7d9	movl	$0x4003, %ecx
000000000001b7de	btl	%eax, %ecx
000000000001b7e1	jae	0x1b7ed
000000000001b7e3	movl	-0x2c(%rbp), %edi
000000000001b7e6	callq	_mig_put_reply_port
000000000001b7eb	jmp	0x1b842
000000000001b7ed	testl	%ebx, %ebx
000000000001b7ef	jne	0x1b823
000000000001b7f1	movl	-0x24(%rbp), %eax
000000000001b7f4	cmpl	$0x47, %eax
000000000001b7f7	je	0x1b82d
000000000001b7f9	cmpl	$0xdb4, %eax
000000000001b7fe	jne	0x1b834
000000000001b800	movl	$0xfffffed4, %ebx
000000000001b805	cmpl	$0x0, -0x38(%rbp)
000000000001b809	js	0x1b839
000000000001b80b	cmpl	$0x24, -0x34(%rbp)
000000000001b80f	jne	0x1b839
000000000001b811	movl	-0x30(%rbp), %eax
000000000001b814	testl	%eax, %eax
000000000001b816	jne	0x1b839
000000000001b818	movl	-0x18(%rbp), %ebx
000000000001b81b	testl	%ebx, %ebx
000000000001b81d	jne	0x1b839
000000000001b81f	xorl	%ebx, %ebx
000000000001b821	jmp	0x1b842
000000000001b823	movl	-0x2c(%rbp), %edi
000000000001b826	callq	_mig_dealloc_reply_port
000000000001b82b	jmp	0x1b842
000000000001b82d	movl	$0xfffffecc, %ebx
000000000001b832	jmp	0x1b839
000000000001b834	movl	$0xfffffed3, %ebx
000000000001b839	leaq	-0x38(%rbp), %rdi
000000000001b83d	callq	_mach_msg_destroy
000000000001b842	movl	%ebx, %eax
000000000001b844	addq	$0x38, %rsp
000000000001b848	popq	%rbx
000000000001b849	popq	%rbp
000000000001b84a	retq
_thread_create:
000000000001b84b	pushq	%rbp
000000000001b84c	movq	%rsp, %rbp
000000000001b84f	pushq	%r14
000000000001b851	pushq	%rbx
000000000001b852	subq	$0x40, %rsp
000000000001b856	movq	%rsi, %r14
000000000001b859	leaq	-0x40(%rbp), %rbx
000000000001b85d	movl	$0x1513, (%rbx)
000000000001b863	movl	%edi, 0x8(%rbx)
000000000001b866	callq	_mig_get_reply_port
000000000001b86b	movl	%eax, 0xc(%rbx)
000000000001b86e	movabsq	$0xd5300000000, %rcx
000000000001b878	movq	%rcx, 0x10(%rbx)
000000000001b87c	movl	$0x0, (%rsp)
000000000001b883	movq	%rbx, %rdi
000000000001b886	movl	$0x3, %esi
000000000001b88b	movl	$0x18, %edx
000000000001b890	movl	$0x30, %ecx
000000000001b895	movl	%eax, %r8d
000000000001b898	xorl	%r9d, %r9d
000000000001b89b	callq	_mach_msg
000000000001b8a0	movl	%eax, %ebx
000000000001b8a2	leal	-0x10000002(%rbx), %eax
000000000001b8a8	cmpl	$0xe, %eax
000000000001b8ab	ja	0x1b8c1
000000000001b8ad	movl	$0x4003, %ecx
000000000001b8b2	btl	%eax, %ecx
000000000001b8b5	jae	0x1b8c1
000000000001b8b7	movl	-0x34(%rbp), %edi
000000000001b8ba	callq	_mig_put_reply_port
000000000001b8bf	jmp	0x1b90f
000000000001b8c1	testl	%ebx, %ebx
000000000001b8c3	jne	0x1b8f0
000000000001b8c5	movl	-0x2c(%rbp), %eax
000000000001b8c8	cmpl	$0x47, %eax
000000000001b8cb	je	0x1b8fa
000000000001b8cd	cmpl	$0xdb7, %eax
000000000001b8d2	jne	0x1b901
000000000001b8d4	movl	-0x40(%rbp), %eax
000000000001b8d7	movl	-0x3c(%rbp), %ecx
000000000001b8da	movl	$0xfffffed4, %ebx
000000000001b8df	testl	%eax, %eax
000000000001b8e1	js	0x1b91a
000000000001b8e3	cmpl	$0x24, %ecx
000000000001b8e6	jne	0x1b906
000000000001b8e8	cmpl	$0x0, -0x20(%rbp)
000000000001b8ec	jne	0x1b925
000000000001b8ee	jmp	0x1b906
000000000001b8f0	movl	-0x34(%rbp), %edi
000000000001b8f3	callq	_mig_dealloc_reply_port
000000000001b8f8	jmp	0x1b90f
000000000001b8fa	movl	$0xfffffecc, %ebx
000000000001b8ff	jmp	0x1b906
000000000001b901	movl	$0xfffffed3, %ebx
000000000001b906	leaq	-0x40(%rbp), %rdi
000000000001b90a	callq	_mach_msg_destroy
000000000001b90f	movl	%ebx, %eax
000000000001b911	addq	$0x40, %rsp
000000000001b915	popq	%rbx
000000000001b916	popq	%r14
000000000001b918	popq	%rbp
000000000001b919	retq
000000000001b91a	cmpl	$0x28, %ecx
000000000001b91d	jne	0x1b906
000000000001b91f	cmpl	$0x1, -0x28(%rbp)
000000000001b923	jne	0x1b906
000000000001b925	movl	$0xfffffed4, %ebx
000000000001b92a	cmpl	$0x0, -0x38(%rbp)
000000000001b92e	jne	0x1b906
000000000001b930	testl	%eax, %eax
000000000001b932	js	0x1b93d
000000000001b934	movl	-0x20(%rbp), %ebx
000000000001b937	testl	%ebx, %ebx
000000000001b939	jne	0x1b906
000000000001b93b	jmp	0x1b94b
000000000001b93d	movzwl	-0x1a(%rbp), %eax
000000000001b941	shll	$0x10, %eax
000000000001b944	cmpl	$0x110000, %eax
000000000001b949	jne	0x1b906
000000000001b94b	movl	-0x24(%rbp), %eax
000000000001b94e	movl	%eax, (%r14)
000000000001b951	xorl	%ebx, %ebx
000000000001b953	jmp	0x1b90f
_thread_create_running:
000000000001b955	pushq	%rbp
000000000001b956	movq	%rsp, %rbp
000000000001b959	pushq	%r15
000000000001b95b	pushq	%r14
000000000001b95d	pushq	%r12
000000000001b95f	pushq	%rbx
000000000001b960	subq	$0x9d0, %rsp
000000000001b967	leaq	_NDR_record(%rip), %rax
000000000001b96e	movq	(%rax), %rax
000000000001b971	movq	%rax, -0x9c8(%rbp)
000000000001b978	movl	%esi, -0x9c0(%rbp)
000000000001b97e	movl	$0xfffffecd, %r15d
000000000001b984	cmpl	$0x266, %ecx
000000000001b98a	ja	0x1bab4
000000000001b990	movq	%r8, %r14
000000000001b993	movl	%ecx, %ebx
000000000001b995	movl	%edi, %r12d
000000000001b998	leaq	-0x9b8(%rbp), %r15
000000000001b99f	leal	(,%rbx,4), %eax
000000000001b9a6	movq	%r15, %rdi
000000000001b9a9	movq	%rdx, %rsi
000000000001b9ac	movq	%rax, %rdx
000000000001b9af	callq	_memcpy
000000000001b9b4	movl	%ebx, -0x4(%r15)
000000000001b9b8	leal	0x28(,%rbx,4), %ebx
000000000001b9bf	movl	$0x1513, -0x28(%r15)
000000000001b9c7	movl	%r12d, -0x20(%r15)
000000000001b9cb	callq	_mig_get_reply_port
000000000001b9d0	movl	%eax, -0x1c(%r15)
000000000001b9d4	movabsq	$0xd5400000000, %rcx
000000000001b9de	movq	%rcx, -0x18(%r15)
000000000001b9e2	movl	$0x0, (%rsp)
000000000001b9e9	leaq	-0x9e0(%rbp), %rdi
000000000001b9f0	movl	$0x3, %esi
000000000001b9f5	movl	%ebx, %edx
000000000001b9f7	movl	$0x30, %ecx
000000000001b9fc	movl	%eax, %r8d
000000000001b9ff	xorl	%r9d, %r9d
000000000001ba02	callq	_mach_msg
000000000001ba07	movl	%eax, %r15d
000000000001ba0a	leal	-0x10000002(%r15), %eax
000000000001ba11	cmpl	$0xe, %eax
000000000001ba14	ja	0x1ba30
000000000001ba16	movl	$0x4003, %ecx
000000000001ba1b	btl	%eax, %ecx
000000000001ba1e	jae	0x1ba30
000000000001ba20	movl	-0x9d4(%rbp), %edi
000000000001ba26	callq	_mig_put_reply_port
000000000001ba2b	jmp	0x1bab4
000000000001ba30	testl	%r15d, %r15d
000000000001ba33	jne	0x1ba6e
000000000001ba35	movl	-0x9cc(%rbp), %eax
000000000001ba3b	cmpl	$0x47, %eax
000000000001ba3e	je	0x1ba7b
000000000001ba40	cmpl	$0xdb8, %eax
000000000001ba45	jne	0x1ba83
000000000001ba47	movl	-0x9e0(%rbp), %eax
000000000001ba4d	movl	-0x9dc(%rbp), %ecx
000000000001ba53	movl	$0xfffffed4, %r15d
000000000001ba59	testl	%eax, %eax
000000000001ba5b	js	0x1ba8b
000000000001ba5d	cmpl	$0x24, %ecx
000000000001ba60	jne	0x1baa8
000000000001ba62	movl	-0x9c0(%rbp), %ecx
000000000001ba68	testl	%ecx, %ecx
000000000001ba6a	jne	0x1ba99
000000000001ba6c	jmp	0x1baa8
000000000001ba6e	movl	-0x9d4(%rbp), %edi
000000000001ba74	callq	_mig_dealloc_reply_port
000000000001ba79	jmp	0x1bab4
000000000001ba7b	movl	$0xfffffecc, %r15d
000000000001ba81	jmp	0x1baa8
000000000001ba83	movl	$0xfffffed3, %r15d
000000000001ba89	jmp	0x1baa8
000000000001ba8b	cmpl	$0x28, %ecx
000000000001ba8e	jne	0x1baa8
000000000001ba90	cmpl	$0x1, -0x9c8(%rbp)
000000000001ba97	jne	0x1baa8
000000000001ba99	movl	$0xfffffed4, %r15d
000000000001ba9f	cmpl	$0x0, -0x9d8(%rbp)
000000000001baa6	je	0x1bac7
000000000001baa8	leaq	-0x9e0(%rbp), %rdi
000000000001baaf	callq	_mach_msg_destroy
000000000001bab4	movl	%r15d, %eax
000000000001bab7	addq	$0x9d0, %rsp
000000000001babe	popq	%rbx
000000000001babf	popq	%r12
000000000001bac1	popq	%r14
000000000001bac3	popq	%r15
000000000001bac5	popq	%rbp
000000000001bac6	retq
000000000001bac7	testl	%eax, %eax
000000000001bac9	js	0x1bad9
000000000001bacb	movl	-0x9c0(%rbp), %r15d
000000000001bad2	testl	%r15d, %r15d
000000000001bad5	jne	0x1baa8
000000000001bad7	jmp	0x1baea
000000000001bad9	movzwl	-0x9ba(%rbp), %eax
000000000001bae0	shll	$0x10, %eax
000000000001bae3	cmpl	$0x110000, %eax
000000000001bae8	jne	0x1baa8
000000000001baea	movl	-0x9c4(%rbp), %eax
000000000001baf0	movl	%eax, (%r14)
000000000001baf3	xorl	%r15d, %r15d
000000000001baf6	jmp	0x1bab4
_task_swap_exception_ports:
000000000001baf8	pushq	%rbp
000000000001baf9	movq	%rsp, %rbp
000000000001bafc	pushq	%r15
000000000001bafe	pushq	%r14
000000000001bb00	pushq	%r13
000000000001bb02	pushq	%r12
000000000001bb04	pushq	%rbx
000000000001bb05	subq	$0x338, %rsp
000000000001bb0c	movq	%r9, %r14
000000000001bb0f	movl	$0x1, -0x340(%rbp)
000000000001bb19	movl	%edx, -0x33c(%rbp)
000000000001bb1f	movl	$0x130000, -0x334(%rbp)
000000000001bb29	leaq	_NDR_record(%rip), %rax
000000000001bb30	movq	(%rax), %rax
000000000001bb33	movq	%rax, -0x330(%rbp)
000000000001bb3a	movl	%esi, -0x328(%rbp)
000000000001bb40	movl	%ecx, -0x324(%rbp)
000000000001bb46	movl	%r8d, -0x320(%rbp)
000000000001bb4d	movl	$0x80001513, -0x358(%rbp)
000000000001bb57	movl	%edi, -0x350(%rbp)
000000000001bb5d	callq	_mig_get_reply_port
000000000001bb62	movl	%eax, -0x34c(%rbp)
000000000001bb68	movabsq	$0xd5700000000, %rcx
000000000001bb72	movq	%rcx, -0x348(%rbp)
000000000001bb79	movl	$0x0, (%rsp)
000000000001bb80	leaq	-0x358(%rbp), %r15
000000000001bb87	movq	%r15, %rdi
000000000001bb8a	movl	$0x3, %esi
000000000001bb8f	movl	$0x3c, %edx
000000000001bb94	movl	$0x330, %ecx
000000000001bb99	movl	%eax, %r8d
000000000001bb9c	xorl	%r9d, %r9d
000000000001bb9f	callq	_mach_msg
000000000001bba4	movl	%eax, %ebx
000000000001bba6	leal	-0x10000002(%rbx), %eax
000000000001bbac	cmpl	$0xe, %eax
000000000001bbaf	ja	0x1bbc8
000000000001bbb1	movl	$0x4003, %ecx
000000000001bbb6	btl	%eax, %ecx
000000000001bbb9	jae	0x1bbc8
000000000001bbbb	movl	-0x34c(%rbp), %edi
000000000001bbc1	callq	_mig_put_reply_port
000000000001bbc6	jmp	0x1bc28
000000000001bbc8	testl	%ebx, %ebx
000000000001bbca	jne	0x1bc03
000000000001bbcc	movl	-0x344(%rbp), %eax
000000000001bbd2	cmpl	$0x47, %eax
000000000001bbd5	je	0x1bc10
000000000001bbd7	cmpl	$0xdbb, %eax
000000000001bbdc	jne	0x1bc17
000000000001bbde	movl	-0x358(%rbp), %ecx
000000000001bbe4	movl	-0x354(%rbp), %eax
000000000001bbea	testl	%ecx, %ecx
000000000001bbec	js	0x1bc3c
000000000001bbee	movl	$0xfffffed4, %ebx
000000000001bbf3	cmpl	$0x24, %eax
000000000001bbf6	jne	0x1bc1c
000000000001bbf8	cmpl	$0x0, -0x338(%rbp)
000000000001bbff	jne	0x1bc58
000000000001bc01	jmp	0x1bc1c
000000000001bc03	movl	-0x34c(%rbp), %edi
000000000001bc09	callq	_mig_dealloc_reply_port
000000000001bc0e	jmp	0x1bc28
000000000001bc10	movl	$0xfffffecc, %ebx
000000000001bc15	jmp	0x1bc1c
000000000001bc17	movl	$0xfffffed3, %ebx
000000000001bc1c	leaq	-0x358(%rbp), %rdi
000000000001bc23	callq	_mach_msg_destroy
000000000001bc28	movl	%ebx, %eax
000000000001bc2a	addq	$0x338, %rsp
000000000001bc31	popq	%rbx
000000000001bc32	popq	%r12
000000000001bc34	popq	%r13
000000000001bc36	popq	%r14
000000000001bc38	popq	%r15
000000000001bc3a	popq	%rbp
000000000001bc3b	retq
000000000001bc3c	leal	-0x1a8(%rax), %edx
000000000001bc42	movl	$0xfffffed4, %ebx
000000000001bc47	cmpl	$0x180, %edx
000000000001bc4d	ja	0x1bc1c
000000000001bc4f	cmpl	$0x20, -0x340(%rbp)
000000000001bc56	jne	0x1bc1c
000000000001bc58	movl	$0xfffffed4, %ebx
000000000001bc5d	cmpl	$0x0, -0x350(%rbp)
000000000001bc64	jne	0x1bc1c
000000000001bc66	movq	0x10(%rbp), %r13
000000000001bc6a	testl	%ecx, %ecx
000000000001bc6c	js	0x1bca5
000000000001bc6e	movl	-0x338(%rbp), %ebx
000000000001bc74	testl	%ebx, %ebx
000000000001bc76	jne	0x1bc1c
000000000001bc78	leaq	-0x1b0(%rbp), %rsi
000000000001bc7f	movl	-0x4(%rsi), %r12d
000000000001bc83	cmpl	$0x21, %r12d
000000000001bc87	jb	0x1bd4d
000000000001bc8d	movl	$0x80, %edx
000000000001bc92	movq	%r14, %rdi
000000000001bc95	callq	_memcpy
000000000001bc9a	movl	%r12d, (%r13)
000000000001bc9e	movl	$0xfffffecd, %ebx
000000000001bca3	jmp	0x1bc28
000000000001bca5	leaq	-0x334(%rbp), %rcx
000000000001bcac	xorl	%edx, %edx
000000000001bcae	cmpl	$0xffffff, (%rcx)
000000000001bcb4	ja	0x1bc1c
000000000001bcba	incl	%edx
000000000001bcbc	addq	$0xc, %rcx
000000000001bcc0	cmpl	$0x20, %edx
000000000001bcc3	jb	0x1bcae
000000000001bcc5	movl	-0x1b4(%rbp), %r12d
000000000001bccc	cmpl	$0x20, %r12d
000000000001bcd0	ja	0x1bc1c
000000000001bcd6	leal	-0x1a8(%rax), %ecx
000000000001bcdc	shrl	$0x2, %ecx
000000000001bcdf	cmpl	%r12d, %ecx
000000000001bce2	jb	0x1bc1c
000000000001bce8	leal	(,%r12,4), %ecx
000000000001bcf0	leal	0x1a8(%rcx), %edx
000000000001bcf6	cmpl	%edx, %eax
000000000001bcf8	jb	0x1bc1c
000000000001bcfe	subl	%ecx, %eax
000000000001bd00	cmpl	%edx, %eax
000000000001bd02	jb	0x1bc1c
000000000001bd08	leal	-0x1a8(%rax), %esi
000000000001bd0e	shrl	$0x2, %esi
000000000001bd11	cmpl	%r12d, %esi
000000000001bd14	jb	0x1bc1c
000000000001bd1a	subl	%ecx, %eax
000000000001bd1c	cmpl	%edx, %eax
000000000001bd1e	jne	0x1bc1c
000000000001bd24	addl	$0xfffffe58, %eax
000000000001bd29	shrl	$0x2, %eax
000000000001bd2c	cmpl	%r12d, %eax
000000000001bd2f	jb	0x1bc1c
000000000001bd35	movl	%ecx, %r13d
000000000001bd38	leaq	-0x80(%r13,%r15), %r15
000000000001bd3d	addq	$-0x80, %r13
000000000001bd41	addq	%r15, %r13
000000000001bd44	leaq	-0x1b0(%rbp), %rsi
000000000001bd4b	jmp	0x1bd53
000000000001bd4d	xorl	%r15d, %r15d
000000000001bd50	xorl	%r13d, %r13d
000000000001bd53	leal	(,%r12,4), %ebx
000000000001bd5b	movq	%r14, %rdi
000000000001bd5e	movq	%rbx, %rdx
000000000001bd61	callq	_memcpy
000000000001bd66	movq	0x10(%rbp), %rax
000000000001bd6a	movl	%r12d, (%rax)
000000000001bd6d	testl	%r12d, %r12d
000000000001bd70	je	0x1bd93
000000000001bd72	movq	0x18(%rbp), %rax
000000000001bd76	leaq	-0x33c(%rbp), %rcx
000000000001bd7d	movslq	%r12d, %rdx
000000000001bd80	xorl	%esi, %esi
000000000001bd82	movl	(%rcx), %edi
000000000001bd84	movl	%edi, (%rax,%rsi,4)
000000000001bd87	addq	$0xc, %rcx
000000000001bd8b	incq	%rsi
000000000001bd8e	cmpq	%rdx, %rsi
000000000001bd91	jl	0x1bd82
000000000001bd93	addq	$0x228, %r15
000000000001bd9a	movq	0x20(%rbp), %rdi
000000000001bd9e	movq	%r15, %rsi
000000000001bda1	movq	%rbx, %rdx
000000000001bda4	callq	_memcpy
000000000001bda9	addq	$0x2a8, %r13
000000000001bdb0	movq	0x28(%rbp), %rdi
000000000001bdb4	movq	%r13, %rsi
000000000001bdb7	movq	%rbx, %rdx
000000000001bdba	callq	_memcpy
000000000001bdbf	xorl	%ebx, %ebx
000000000001bdc1	jmp	0x1bc28
_lock_set_create:
000000000001bdc6	pushq	%rbp
000000000001bdc7	movq	%rsp, %rbp
000000000001bdca	pushq	%r14
000000000001bdcc	pushq	%rbx
000000000001bdcd	subq	$0x40, %rsp
000000000001bdd1	movq	%rsi, %r14
000000000001bdd4	leaq	_NDR_record(%rip), %rax
000000000001bddb	movq	(%rax), %rax
000000000001bdde	leaq	-0x40(%rbp), %rbx
000000000001bde2	movq	%rax, 0x18(%rbx)
000000000001bde6	movl	%edx, 0x20(%rbx)
000000000001bde9	movl	%ecx, 0x24(%rbx)
000000000001bdec	movl	$0x1513, (%rbx)
000000000001bdf2	movl	%edi, 0x8(%rbx)
000000000001bdf5	callq	_mig_get_reply_port
000000000001bdfa	movl	%eax, 0xc(%rbx)
000000000001bdfd	movabsq	$0xd5800000000, %rcx
000000000001be07	movq	%rcx, 0x10(%rbx)
000000000001be0b	movl	$0x0, (%rsp)
000000000001be12	movq	%rbx, %rdi
000000000001be15	movl	$0x3, %esi
000000000001be1a	movl	$0x28, %edx
000000000001be1f	movl	$0x30, %ecx
000000000001be24	movl	%eax, %r8d
000000000001be27	xorl	%r9d, %r9d
000000000001be2a	callq	_mach_msg
000000000001be2f	movl	%eax, %ebx
000000000001be31	leal	-0x10000002(%rbx), %eax
000000000001be37	cmpl	$0xe, %eax
000000000001be3a	ja	0x1be50
000000000001be3c	movl	$0x4003, %ecx
000000000001be41	btl	%eax, %ecx
000000000001be44	jae	0x1be50
000000000001be46	movl	-0x34(%rbp), %edi
000000000001be49	callq	_mig_put_reply_port
000000000001be4e	jmp	0x1beb7
000000000001be50	testl	%ebx, %ebx
000000000001be52	jne	0x1be80
000000000001be54	movl	-0x2c(%rbp), %eax
000000000001be57	cmpl	$0x47, %eax
000000000001be5a	je	0x1be8a
000000000001be5c	cmpl	$0xdbc, %eax
000000000001be61	jne	0x1be91
000000000001be63	movl	-0x40(%rbp), %eax
000000000001be66	movl	-0x3c(%rbp), %ecx
000000000001be69	movl	$0xfffffed4, %ebx
000000000001be6e	testl	%eax, %eax
000000000001be70	js	0x1be98
000000000001be72	cmpl	$0x24, %ecx
000000000001be75	jne	0x1beae
000000000001be77	movl	-0x20(%rbp), %ecx
000000000001be7a	testl	%ecx, %ecx
000000000001be7c	jne	0x1bea3
000000000001be7e	jmp	0x1beae
000000000001be80	movl	-0x34(%rbp), %edi
000000000001be83	callq	_mig_dealloc_reply_port
000000000001be88	jmp	0x1beb7
000000000001be8a	movl	$0xfffffecc, %ebx
000000000001be8f	jmp	0x1beae
000000000001be91	movl	$0xfffffed3, %ebx
000000000001be96	jmp	0x1beae
000000000001be98	cmpl	$0x28, %ecx
000000000001be9b	jne	0x1beae
000000000001be9d	cmpl	$0x1, -0x28(%rbp)
000000000001bea1	jne	0x1beae
000000000001bea3	movl	$0xfffffed4, %ebx
000000000001bea8	cmpl	$0x0, -0x38(%rbp)
000000000001beac	je	0x1bec2
000000000001beae	leaq	-0x40(%rbp), %rdi
000000000001beb2	callq	_mach_msg_destroy
000000000001beb7	movl	%ebx, %eax
000000000001beb9	addq	$0x40, %rsp
000000000001bebd	popq	%rbx
000000000001bebe	popq	%r14
000000000001bec0	popq	%rbp
000000000001bec1	retq
000000000001bec2	testl	%eax, %eax
000000000001bec4	js	0x1becf
000000000001bec6	movl	-0x20(%rbp), %ebx
000000000001bec9	testl	%ebx, %ebx
000000000001becb	jne	0x1beae
000000000001becd	jmp	0x1bedd
000000000001becf	movzwl	-0x1a(%rbp), %eax
000000000001bed3	shll	$0x10, %eax
000000000001bed6	cmpl	$0x110000, %eax
000000000001bedb	jne	0x1beae
000000000001bedd	movl	-0x24(%rbp), %eax
000000000001bee0	movl	%eax, (%r14)
000000000001bee3	xorl	%ebx, %ebx
000000000001bee5	jmp	0x1beb7
_lock_set_destroy:
000000000001bee7	pushq	%rbp
000000000001bee8	movq	%rsp, %rbp
000000000001beeb	pushq	%rbx
000000000001beec	subq	$0x38, %rsp
000000000001bef0	leaq	-0x38(%rbp), %rbx
000000000001bef4	movl	$0x1, 0x18(%rbx)
000000000001befb	movl	%esi, 0x1c(%rbx)
000000000001befe	movl	$0x130000, 0x24(%rbx)
000000000001bf05	movl	$0x80001513, (%rbx)
000000000001bf0b	movl	%edi, 0x8(%rbx)
000000000001bf0e	callq	_mig_get_reply_port
000000000001bf13	movl	%eax, 0xc(%rbx)
000000000001bf16	movabsq	$0xd5900000000, %rcx
000000000001bf20	movq	%rcx, 0x10(%rbx)
000000000001bf24	movl	$0x0, (%rsp)
000000000001bf2b	movq	%rbx, %rdi
000000000001bf2e	movl	$0x3, %esi
000000000001bf33	movl	$0x28, %edx
000000000001bf38	movl	$0x2c, %ecx
000000000001bf3d	movl	%eax, %r8d
000000000001bf40	xorl	%r9d, %r9d
000000000001bf43	callq	_mach_msg
000000000001bf48	movl	%eax, %ebx
000000000001bf4a	leal	-0x10000002(%rbx), %eax
000000000001bf50	cmpl	$0xe, %eax
000000000001bf53	ja	0x1bf69
000000000001bf55	movl	$0x4003, %ecx
000000000001bf5a	btl	%eax, %ecx
000000000001bf5d	jae	0x1bf69
000000000001bf5f	movl	-0x2c(%rbp), %edi
000000000001bf62	callq	_mig_put_reply_port
000000000001bf67	jmp	0x1bfbe
000000000001bf69	testl	%ebx, %ebx
000000000001bf6b	jne	0x1bf9f
000000000001bf6d	movl	-0x24(%rbp), %eax
000000000001bf70	cmpl	$0x47, %eax
000000000001bf73	je	0x1bfa9
000000000001bf75	cmpl	$0xdbd, %eax
000000000001bf7a	jne	0x1bfb0
000000000001bf7c	movl	$0xfffffed4, %ebx
000000000001bf81	cmpl	$0x0, -0x38(%rbp)
000000000001bf85	js	0x1bfb5
000000000001bf87	cmpl	$0x24, -0x34(%rbp)
000000000001bf8b	jne	0x1bfb5
000000000001bf8d	movl	-0x30(%rbp), %eax
000000000001bf90	testl	%eax, %eax
000000000001bf92	jne	0x1bfb5
000000000001bf94	movl	-0x18(%rbp), %ebx
000000000001bf97	testl	%ebx, %ebx
000000000001bf99	jne	0x1bfb5
000000000001bf9b	xorl	%ebx, %ebx
000000000001bf9d	jmp	0x1bfbe
000000000001bf9f	movl	-0x2c(%rbp), %edi
000000000001bfa2	callq	_mig_dealloc_reply_port
000000000001bfa7	jmp	0x1bfbe
000000000001bfa9	movl	$0xfffffecc, %ebx
000000000001bfae	jmp	0x1bfb5
000000000001bfb0	movl	$0xfffffed3, %ebx
000000000001bfb5	leaq	-0x38(%rbp), %rdi
000000000001bfb9	callq	_mach_msg_destroy
000000000001bfbe	movl	%ebx, %eax
000000000001bfc0	addq	$0x38, %rsp
000000000001bfc4	popq	%rbx
000000000001bfc5	popq	%rbp
000000000001bfc6	retq
_task_policy_get:
000000000001bfc7	pushq	%rbp
000000000001bfc8	movq	%rsp, %rbp
000000000001bfcb	pushq	%r15
000000000001bfcd	pushq	%r14
000000000001bfcf	pushq	%r13
000000000001bfd1	pushq	%r12
000000000001bfd3	pushq	%rbx
000000000001bfd4	subq	$0x88, %rsp
000000000001bfdb	movq	%r8, %r12
000000000001bfde	movq	%rcx, %r14
000000000001bfe1	movq	%rdx, %r15
000000000001bfe4	leaq	_NDR_record(%rip), %rax
000000000001bfeb	movq	(%rax), %rax
000000000001bfee	leaq	-0xa0(%rbp), %rbx
000000000001bff5	movq	%rax, 0x18(%rbx)
000000000001bff9	movl	%esi, 0x20(%rbx)
000000000001bffc	movl	(%rcx), %eax
000000000001bffe	movl	$0x10, %ecx
000000000001c003	cmpl	%ecx, %eax
000000000001c005	cmovbl	%eax, %ecx
000000000001c008	movl	%ecx, 0x24(%rbx)
000000000001c00b	movl	(%r8), %eax
000000000001c00e	movl	%eax, 0x28(%rbx)
000000000001c011	movl	$0x1513, (%rbx)
000000000001c017	movl	%edi, 0x8(%rbx)
000000000001c01a	callq	_mig_get_reply_port
000000000001c01f	movl	%eax, 0xc(%rbx)
000000000001c022	movabsq	$0xd5d00000000, %rcx
000000000001c02c	movq	%rcx, 0x10(%rbx)
000000000001c030	movl	$0x0, (%rsp)
000000000001c037	movq	%rbx, %rdi
000000000001c03a	movl	$0x3, %esi
000000000001c03f	movl	$0x2c, %edx
000000000001c044	movl	$0x74, %ecx
000000000001c049	movl	%eax, %r8d
000000000001c04c	xorl	%r9d, %r9d
000000000001c04f	callq	_mach_msg
000000000001c054	movl	%eax, %ebx
000000000001c056	leal	-0x10000002(%rbx), %eax
000000000001c05c	cmpl	$0xe, %eax
000000000001c05f	ja	0x1c078
000000000001c061	movl	$0x4003, %ecx
000000000001c066	btl	%eax, %ecx
000000000001c069	jae	0x1c078
000000000001c06b	movl	-0x94(%rbp), %edi
000000000001c071	callq	_mig_put_reply_port
000000000001c076	jmp	0x1c0e6
000000000001c078	testl	%ebx, %ebx
000000000001c07a	jne	0x1c0c1
000000000001c07c	movl	-0x8c(%rbp), %eax
000000000001c082	cmpl	$0x47, %eax
000000000001c085	je	0x1c0ce
000000000001c087	cmpl	$0xdc1, %eax
000000000001c08c	jne	0x1c0d5
000000000001c08e	cmpl	$0x0, -0xa0(%rbp)
000000000001c095	js	0x1c0ba
000000000001c097	movl	-0x9c(%rbp), %eax
000000000001c09d	leal	-0x2c(%rax), %ecx
000000000001c0a0	cmpl	$0x41, %ecx
000000000001c0a3	jb	0x1c0b1
000000000001c0a5	cmpl	$0x24, %eax
000000000001c0a8	jne	0x1c0ba
000000000001c0aa	movl	-0x80(%rbp), %edx
000000000001c0ad	testl	%edx, %edx
000000000001c0af	je	0x1c0ba
000000000001c0b1	cmpl	$0x0, -0x98(%rbp)
000000000001c0b8	je	0x1c0fa
000000000001c0ba	movl	$0xfffffed4, %ebx
000000000001c0bf	jmp	0x1c0da
000000000001c0c1	movl	-0x94(%rbp), %edi
000000000001c0c7	callq	_mig_dealloc_reply_port
000000000001c0cc	jmp	0x1c0e6
000000000001c0ce	movl	$0xfffffecc, %ebx
000000000001c0d3	jmp	0x1c0da
000000000001c0d5	movl	$0xfffffed3, %ebx
000000000001c0da	leaq	-0xa0(%rbp), %rdi
000000000001c0e1	callq	_mach_msg_destroy
000000000001c0e6	movl	%ebx, %eax
000000000001c0e8	addq	$0x88, %rsp
000000000001c0ef	popq	%rbx
000000000001c0f0	popq	%r12
000000000001c0f2	popq	%r13
000000000001c0f4	popq	%r14
000000000001c0f6	popq	%r15
000000000001c0f8	popq	%rbp
000000000001c0f9	retq
000000000001c0fa	movl	-0x80(%rbp), %ebx
000000000001c0fd	testl	%ebx, %ebx
000000000001c0ff	jne	0x1c0da
000000000001c101	movl	-0x7c(%rbp), %r13d
000000000001c105	cmpl	$0x10, %r13d
000000000001c109	ja	0x1c0ba
000000000001c10b	shrl	$0x2, %ecx
000000000001c10e	cmpl	%r13d, %ecx
000000000001c111	jb	0x1c0ba
000000000001c113	leal	(,%r13,4), %ecx
000000000001c11b	leal	0x2c(%rcx), %edx
000000000001c11e	movl	$0xfffffed4, %ebx
000000000001c123	cmpl	%edx, %eax
000000000001c125	jne	0x1c0da
000000000001c127	leaq	-0x78(%rbp), %rsi
000000000001c12b	movl	(%r14), %edx
000000000001c12e	cmpl	%edx, %r13d
000000000001c131	jbe	0x1c148
000000000001c133	shll	$0x2, %edx
000000000001c136	movq	%r15, %rdi
000000000001c139	callq	_memcpy
000000000001c13e	movl	%r13d, (%r14)
000000000001c141	movl	$0xfffffecd, %ebx
000000000001c146	jmp	0x1c0e6
000000000001c148	movl	%ecx, %ebx
000000000001c14a	movq	%r15, %rdi
000000000001c14d	movq	%rbx, %rdx
000000000001c150	callq	_memcpy
000000000001c155	movl	%r13d, (%r14)
000000000001c158	movl	-0x78(%rbp,%rbx), %eax
000000000001c15c	movl	%eax, (%r12)
000000000001c160	xorl	%ebx, %ebx
000000000001c162	jmp	0x1c0e6
_task_sample:
000000000001c164	pushq	%rbp
000000000001c165	movq	%rsp, %rbp
000000000001c168	pushq	%rbx
000000000001c169	subq	$0x38, %rsp
000000000001c16d	leaq	-0x38(%rbp), %rbx
000000000001c171	movl	$0x1, 0x18(%rbx)
000000000001c178	movl	%esi, 0x1c(%rbx)
000000000001c17b	movl	$0x140000, 0x24(%rbx)
000000000001c182	movl	$0x80001513, (%rbx)
000000000001c188	movl	%edi, 0x8(%rbx)
000000000001c18b	callq	_mig_get_reply_port
000000000001c190	movl	%eax, 0xc(%rbx)
000000000001c193	movabsq	$0xd5e00000000, %rcx
000000000001c19d	movq	%rcx, 0x10(%rbx)
000000000001c1a1	movl	$0x0, (%rsp)
000000000001c1a8	movq	%rbx, %rdi
000000000001c1ab	movl	$0x3, %esi
000000000001c1b0	movl	$0x28, %edx
000000000001c1b5	movl	$0x2c, %ecx
000000000001c1ba	movl	%eax, %r8d
000000000001c1bd	xorl	%r9d, %r9d
000000000001c1c0	callq	_mach_msg
000000000001c1c5	movl	%eax, %ebx
000000000001c1c7	leal	-0x10000002(%rbx), %eax
000000000001c1cd	cmpl	$0xe, %eax
000000000001c1d0	ja	0x1c1e6
000000000001c1d2	movl	$0x4003, %ecx
000000000001c1d7	btl	%eax, %ecx
000000000001c1da	jae	0x1c1e6
000000000001c1dc	movl	-0x2c(%rbp), %edi
000000000001c1df	callq	_mig_put_reply_port
000000000001c1e4	jmp	0x1c23b
000000000001c1e6	testl	%ebx, %ebx
000000000001c1e8	jne	0x1c21c
000000000001c1ea	movl	-0x24(%rbp), %eax
000000000001c1ed	cmpl	$0x47, %eax
000000000001c1f0	je	0x1c226
000000000001c1f2	cmpl	$0xdc2, %eax
000000000001c1f7	jne	0x1c22d
000000000001c1f9	movl	$0xfffffed4, %ebx
000000000001c1fe	cmpl	$0x0, -0x38(%rbp)
000000000001c202	js	0x1c232
000000000001c204	cmpl	$0x24, -0x34(%rbp)
000000000001c208	jne	0x1c232
000000000001c20a	movl	-0x30(%rbp), %eax
000000000001c20d	testl	%eax, %eax
000000000001c20f	jne	0x1c232
000000000001c211	movl	-0x18(%rbp), %ebx
000000000001c214	testl	%ebx, %ebx
000000000001c216	jne	0x1c232
000000000001c218	xorl	%ebx, %ebx
000000000001c21a	jmp	0x1c23b
000000000001c21c	movl	-0x2c(%rbp), %edi
000000000001c21f	callq	_mig_dealloc_reply_port
000000000001c224	jmp	0x1c23b
000000000001c226	movl	$0xfffffecc, %ebx
000000000001c22b	jmp	0x1c232
000000000001c22d	movl	$0xfffffed3, %ebx
000000000001c232	leaq	-0x38(%rbp), %rdi
000000000001c236	callq	_mach_msg_destroy
000000000001c23b	movl	%ebx, %eax
000000000001c23d	addq	$0x38, %rsp
000000000001c241	popq	%rbx
000000000001c242	popq	%rbp
000000000001c243	retq
_task_policy:
000000000001c244	pushq	%rbp
000000000001c245	movq	%rsp, %rbp
000000000001c248	pushq	%r15
000000000001c24a	pushq	%r14
000000000001c24c	pushq	%r13
000000000001c24e	pushq	%r12
000000000001c250	pushq	%rbx
000000000001c251	subq	$0x58, %rsp
000000000001c255	leaq	_NDR_record(%rip), %rax
000000000001c25c	movq	(%rax), %rax
000000000001c25f	movq	%rax, -0x60(%rbp)
000000000001c263	movl	%esi, -0x58(%rbp)
000000000001c266	movl	$0xfffffecd, %r13d
000000000001c26c	cmpl	$0x5, %ecx
000000000001c26f	ja	0x1c37d
000000000001c275	movl	%ecx, %ebx
000000000001c277	leaq	-0x50(%rbp), %r13
000000000001c27b	leal	(,%rbx,4), %r14d
000000000001c283	movl	%edi, -0x2c(%rbp)
000000000001c286	movq	%r13, %rdi
000000000001c289	movq	%rdx, %rsi
000000000001c28c	movq	%r14, %rdx
000000000001c28f	movl	%r9d, %r15d
000000000001c292	movl	%r8d, %r12d
000000000001c295	callq	_memcpy
000000000001c29a	movl	%ebx, -0x4(%r13)
000000000001c29e	leal	0x30(,%rbx,4), %eax
000000000001c2a5	movl	%eax, -0x30(%rbp)
000000000001c2a8	leaq	-0x78(%rbp), %rbx
000000000001c2ac	movl	%r12d, 0x28(%r14,%rbx)
000000000001c2b1	movl	%r15d, 0x2c(%r14,%rbx)
000000000001c2b6	movl	$0x1513, -0x28(%r13)
000000000001c2be	movl	-0x2c(%rbp), %eax
000000000001c2c1	movl	%eax, -0x20(%r13)
000000000001c2c5	callq	_mig_get_reply_port
000000000001c2ca	movl	%eax, -0x1c(%r13)
000000000001c2ce	movabsq	$0xd5f00000000, %rcx
000000000001c2d8	movq	%rcx, -0x18(%r13)
000000000001c2dc	movl	$0x0, (%rsp)
000000000001c2e3	movq	%rbx, %rdi
000000000001c2e6	movl	$0x3, %esi
000000000001c2eb	movl	-0x30(%rbp), %edx
000000000001c2ee	movl	$0x2c, %ecx
000000000001c2f3	movl	%eax, %r8d
000000000001c2f6	xorl	%r9d, %r9d
000000000001c2f9	callq	_mach_msg
000000000001c2fe	movl	%eax, %r13d
000000000001c301	leal	-0x10000002(%r13), %eax
000000000001c308	cmpl	$0xe, %eax
000000000001c30b	ja	0x1c321
000000000001c30d	movl	$0x4003, %ecx
000000000001c312	btl	%eax, %ecx
000000000001c315	jae	0x1c321
000000000001c317	movl	-0x6c(%rbp), %edi
000000000001c31a	callq	_mig_put_reply_port
000000000001c31f	jmp	0x1c37d
000000000001c321	testl	%r13d, %r13d
000000000001c324	jne	0x1c35c
000000000001c326	movl	-0x64(%rbp), %eax
000000000001c329	cmpl	$0x47, %eax
000000000001c32c	je	0x1c366
000000000001c32e	cmpl	$0xdc3, %eax
000000000001c333	jne	0x1c36e
000000000001c335	movl	$0xfffffed4, %r13d
000000000001c33b	cmpl	$0x0, -0x78(%rbp)
000000000001c33f	js	0x1c374
000000000001c341	cmpl	$0x24, -0x74(%rbp)
000000000001c345	jne	0x1c374
000000000001c347	movl	-0x70(%rbp), %eax
000000000001c34a	testl	%eax, %eax
000000000001c34c	jne	0x1c374
000000000001c34e	movl	-0x58(%rbp), %r13d
000000000001c352	testl	%r13d, %r13d
000000000001c355	jne	0x1c374
000000000001c357	xorl	%r13d, %r13d
000000000001c35a	jmp	0x1c37d
000000000001c35c	movl	-0x6c(%rbp), %edi
000000000001c35f	callq	_mig_dealloc_reply_port
000000000001c364	jmp	0x1c37d
000000000001c366	movl	$0xfffffecc, %r13d
000000000001c36c	jmp	0x1c374
000000000001c36e	movl	$0xfffffed3, %r13d
000000000001c374	leaq	-0x78(%rbp), %rdi
000000000001c378	callq	_mach_msg_destroy
000000000001c37d	movl	%r13d, %eax
000000000001c380	addq	$0x58, %rsp
000000000001c384	popq	%rbx
000000000001c385	popq	%r12
000000000001c387	popq	%r13
000000000001c389	popq	%r14
000000000001c38b	popq	%r15
000000000001c38d	popq	%rbp
000000000001c38e	retq
_task_set_emulation:
000000000001c38f	pushq	%rbp
000000000001c390	movq	%rsp, %rbp
000000000001c393	pushq	%rbx
000000000001c394	subq	$0x38, %rsp
000000000001c398	leaq	_NDR_record(%rip), %rax
000000000001c39f	movq	(%rax), %rax
000000000001c3a2	leaq	-0x38(%rbp), %rbx
000000000001c3a6	movq	%rax, 0x18(%rbx)
000000000001c3aa	movq	%rsi, 0x20(%rbx)
000000000001c3ae	movl	%edx, 0x28(%rbx)
000000000001c3b1	movl	$0x1513, (%rbx)
000000000001c3b7	movl	%edi, 0x8(%rbx)
000000000001c3ba	callq	_mig_get_reply_port
000000000001c3bf	movl	%eax, 0xc(%rbx)
000000000001c3c2	movabsq	$0xd6000000000, %rcx
000000000001c3cc	movq	%rcx, 0x10(%rbx)
000000000001c3d0	movl	$0x0, (%rsp)
000000000001c3d7	movq	%rbx, %rdi
000000000001c3da	movl	$0x3, %esi
000000000001c3df	movl	$0x2c, %edx
000000000001c3e4	movl	$0x2c, %ecx
000000000001c3e9	movl	%eax, %r8d
000000000001c3ec	xorl	%r9d, %r9d
000000000001c3ef	callq	_mach_msg
000000000001c3f4	movl	%eax, %ebx
000000000001c3f6	leal	-0x10000002(%rbx), %eax
000000000001c3fc	cmpl	$0xe, %eax
000000000001c3ff	ja	0x1c415
000000000001c401	movl	$0x4003, %ecx
000000000001c406	btl	%eax, %ecx
000000000001c409	jae	0x1c415
000000000001c40b	movl	-0x2c(%rbp), %edi
000000000001c40e	callq	_mig_put_reply_port
000000000001c413	jmp	0x1c46a
000000000001c415	testl	%ebx, %ebx
000000000001c417	jne	0x1c44b
000000000001c419	movl	-0x24(%rbp), %eax
000000000001c41c	cmpl	$0x47, %eax
000000000001c41f	je	0x1c455
000000000001c421	cmpl	$0xdc4, %eax
000000000001c426	jne	0x1c45c
000000000001c428	movl	$0xfffffed4, %ebx
000000000001c42d	cmpl	$0x0, -0x38(%rbp)
000000000001c431	js	0x1c461
000000000001c433	cmpl	$0x24, -0x34(%rbp)
000000000001c437	jne	0x1c461
000000000001c439	movl	-0x30(%rbp), %eax
000000000001c43c	testl	%eax, %eax
000000000001c43e	jne	0x1c461
000000000001c440	movl	-0x18(%rbp), %ebx
000000000001c443	testl	%ebx, %ebx
000000000001c445	jne	0x1c461
000000000001c447	xorl	%ebx, %ebx
000000000001c449	jmp	0x1c46a
000000000001c44b	movl	-0x2c(%rbp), %edi
000000000001c44e	callq	_mig_dealloc_reply_port
000000000001c453	jmp	0x1c46a
000000000001c455	movl	$0xfffffecc, %ebx
000000000001c45a	jmp	0x1c461
000000000001c45c	movl	$0xfffffed3, %ebx
000000000001c461	leaq	-0x38(%rbp), %rdi
000000000001c465	callq	_mach_msg_destroy
000000000001c46a	movl	%ebx, %eax
000000000001c46c	addq	$0x38, %rsp
000000000001c470	popq	%rbx
000000000001c471	popq	%rbp
000000000001c472	retq
_task_get_emulation_vector:
000000000001c473	pushq	%rbp
000000000001c474	movq	%rsp, %rbp
000000000001c477	pushq	%r15
000000000001c479	pushq	%r14
000000000001c47b	pushq	%r12
000000000001c47d	pushq	%rbx
000000000001c47e	subq	$0x50, %rsp
000000000001c482	movq	%rcx, %r14
000000000001c485	movq	%rdx, %r15
000000000001c488	movq	%rsi, %r12
000000000001c48b	leaq	-0x68(%rbp), %rbx
000000000001c48f	movl	$0x1513, (%rbx)
000000000001c495	movl	%edi, 0x8(%rbx)
000000000001c498	callq	_mig_get_reply_port
000000000001c49d	movl	%eax, 0xc(%rbx)
000000000001c4a0	movabsq	$0xd6100000000, %rcx
000000000001c4aa	movq	%rcx, 0x10(%rbx)
000000000001c4ae	movl	$0x0, (%rsp)
000000000001c4b5	movq	%rbx, %rdi
000000000001c4b8	movl	$0x3, %esi
000000000001c4bd	movl	$0x18, %edx
000000000001c4c2	movl	$0x44, %ecx
000000000001c4c7	movl	%eax, %r8d
000000000001c4ca	xorl	%r9d, %r9d
000000000001c4cd	callq	_mach_msg
000000000001c4d2	movl	%eax, %ebx
000000000001c4d4	leal	-0x10000002(%rbx), %eax
000000000001c4da	cmpl	$0xe, %eax
000000000001c4dd	ja	0x1c4f3
000000000001c4df	movl	$0x4003, %ecx
000000000001c4e4	btl	%eax, %ecx
000000000001c4e7	jae	0x1c4f3
000000000001c4e9	movl	-0x5c(%rbp), %edi
000000000001c4ec	callq	_mig_put_reply_port
000000000001c4f1	jmp	0x1c541
000000000001c4f3	testl	%ebx, %ebx
000000000001c4f5	jne	0x1c522
000000000001c4f7	movl	-0x54(%rbp), %eax
000000000001c4fa	cmpl	$0x47, %eax
000000000001c4fd	je	0x1c52c
000000000001c4ff	cmpl	$0xdc5, %eax
000000000001c504	jne	0x1c533
000000000001c506	movl	-0x68(%rbp), %eax
000000000001c509	movl	-0x64(%rbp), %ecx
000000000001c50c	movl	$0xfffffed4, %ebx
000000000001c511	testl	%eax, %eax
000000000001c513	js	0x1c550
000000000001c515	cmpl	$0x24, %ecx
000000000001c518	jne	0x1c538
000000000001c51a	cmpl	$0x0, -0x48(%rbp)
000000000001c51e	jne	0x1c55b
000000000001c520	jmp	0x1c538
000000000001c522	movl	-0x5c(%rbp), %edi
000000000001c525	callq	_mig_dealloc_reply_port
000000000001c52a	jmp	0x1c541
000000000001c52c	movl	$0xfffffecc, %ebx
000000000001c531	jmp	0x1c538
000000000001c533	movl	$0xfffffed3, %ebx
000000000001c538	leaq	-0x68(%rbp), %rdi
000000000001c53c	callq	_mach_msg_destroy
000000000001c541	movl	%ebx, %eax
000000000001c543	addq	$0x50, %rsp
000000000001c547	popq	%rbx
000000000001c548	popq	%r12
000000000001c54a	popq	%r14
000000000001c54c	popq	%r15
000000000001c54e	popq	%rbp
000000000001c54f	retq
000000000001c550	cmpl	$0x3c, %ecx
000000000001c553	jne	0x1c538
000000000001c555	cmpl	$0x1, -0x50(%rbp)
000000000001c559	jne	0x1c538
000000000001c55b	movl	$0xfffffed4, %ebx
000000000001c560	cmpl	$0x0, -0x60(%rbp)
000000000001c564	jne	0x1c538
000000000001c566	testl	%eax, %eax
000000000001c568	js	0x1c576
000000000001c56a	movl	-0x48(%rbp), %ebx
000000000001c56d	testl	%ebx, %ebx
000000000001c56f	jne	0x1c538
000000000001c571	movl	-0x30(%rbp), %eax
000000000001c574	jmp	0x1c58f
000000000001c576	movzbl	-0x41(%rbp), %eax
000000000001c57a	shll	$0x18, %eax
000000000001c57d	cmpl	$0x1000000, %eax
000000000001c582	jne	0x1c538
000000000001c584	movl	-0x40(%rbp), %eax
000000000001c587	shrl	$0x3, %eax
000000000001c58a	cmpl	-0x30(%rbp), %eax
000000000001c58d	jne	0x1c538
000000000001c58f	movl	-0x34(%rbp), %ecx
000000000001c592	movl	%ecx, (%r12)
000000000001c596	movq	-0x4c(%rbp), %rcx
000000000001c59a	movq	%rcx, (%r15)
000000000001c59d	movl	%eax, (%r14)
000000000001c5a0	xorl	%ebx, %ebx
000000000001c5a2	jmp	0x1c541
_task_set_emulation_vector:
000000000001c5a4	pushq	%rbp
000000000001c5a5	movq	%rsp, %rbp
000000000001c5a8	pushq	%rbx
000000000001c5a9	subq	$0x48, %rsp
000000000001c5ad	leaq	-0x48(%rbp), %rbx
000000000001c5b1	movl	$0x1, 0x18(%rbx)
000000000001c5b8	movq	%rdx, 0x1c(%rbx)
000000000001c5bc	leal	(,%rcx,8), %eax
000000000001c5c3	movl	%eax, 0x28(%rbx)
000000000001c5c6	movl	$0x1000100, 0x24(%rbx)
000000000001c5cd	leaq	_NDR_record(%rip), %rax
000000000001c5d4	movq	(%rax), %rax
000000000001c5d7	movq	%rax, 0x2c(%rbx)
000000000001c5db	movl	%esi, 0x34(%rbx)
000000000001c5de	movl	%ecx, 0x38(%rbx)
000000000001c5e1	movl	$0x80001513, (%rbx)
000000000001c5e7	movl	%edi, 0x8(%rbx)
000000000001c5ea	callq	_mig_get_reply_port
000000000001c5ef	movl	%eax, 0xc(%rbx)
000000000001c5f2	movabsq	$0xd6200000000, %rcx
000000000001c5fc	movq	%rcx, 0x10(%rbx)
000000000001c600	movl	$0x0, (%rsp)
000000000001c607	movq	%rbx, %rdi
000000000001c60a	movl	$0x3, %esi
000000000001c60f	movl	$0x3c, %edx
000000000001c614	movl	$0x2c, %ecx
000000000001c619	movl	%eax, %r8d
000000000001c61c	xorl	%r9d, %r9d
000000000001c61f	callq	_mach_msg
000000000001c624	movl	%eax, %ebx
000000000001c626	leal	-0x10000002(%rbx), %eax
000000000001c62c	cmpl	$0xe, %eax
000000000001c62f	ja	0x1c645
000000000001c631	movl	$0x4003, %ecx
000000000001c636	btl	%eax, %ecx
000000000001c639	jae	0x1c645
000000000001c63b	movl	-0x3c(%rbp), %edi
000000000001c63e	callq	_mig_put_reply_port
000000000001c643	jmp	0x1c69a
000000000001c645	testl	%ebx, %ebx
000000000001c647	jne	0x1c67b
000000000001c649	movl	-0x34(%rbp), %eax
000000000001c64c	cmpl	$0x47, %eax
000000000001c64f	je	0x1c685
000000000001c651	cmpl	$0xdc6, %eax
000000000001c656	jne	0x1c68c
000000000001c658	movl	$0xfffffed4, %ebx
000000000001c65d	cmpl	$0x0, -0x48(%rbp)
000000000001c661	js	0x1c691
000000000001c663	cmpl	$0x24, -0x44(%rbp)
000000000001c667	jne	0x1c691
000000000001c669	movl	-0x40(%rbp), %eax
000000000001c66c	testl	%eax, %eax
000000000001c66e	jne	0x1c691
000000000001c670	movl	-0x28(%rbp), %ebx
000000000001c673	testl	%ebx, %ebx
000000000001c675	jne	0x1c691
000000000001c677	xorl	%ebx, %ebx
000000000001c679	jmp	0x1c69a
000000000001c67b	movl	-0x3c(%rbp), %edi
000000000001c67e	callq	_mig_dealloc_reply_port
000000000001c683	jmp	0x1c69a
000000000001c685	movl	$0xfffffecc, %ebx
000000000001c68a	jmp	0x1c691
000000000001c68c	movl	$0xfffffed3, %ebx
000000000001c691	leaq	-0x48(%rbp), %rdi
000000000001c695	callq	_mach_msg_destroy
000000000001c69a	movl	%ebx, %eax
000000000001c69c	addq	$0x48, %rsp
000000000001c6a0	popq	%rbx
000000000001c6a1	popq	%rbp
000000000001c6a2	retq
_task_set_ras_pc:
000000000001c6a3	pushq	%rbp
000000000001c6a4	movq	%rsp, %rbp
000000000001c6a7	pushq	%rbx
000000000001c6a8	subq	$0x38, %rsp
000000000001c6ac	leaq	_NDR_record(%rip), %rax
000000000001c6b3	movq	(%rax), %rax
000000000001c6b6	leaq	-0x38(%rbp), %rbx
000000000001c6ba	movq	%rax, 0x18(%rbx)
000000000001c6be	movq	%rsi, 0x20(%rbx)
000000000001c6c2	movq	%rdx, 0x28(%rbx)
000000000001c6c6	movl	$0x1513, (%rbx)
000000000001c6cc	movl	%edi, 0x8(%rbx)
000000000001c6cf	callq	_mig_get_reply_port
000000000001c6d4	movl	%eax, 0xc(%rbx)
000000000001c6d7	movabsq	$0xd6300000000, %rcx
000000000001c6e1	movq	%rcx, 0x10(%rbx)
000000000001c6e5	movl	$0x0, (%rsp)
000000000001c6ec	movq	%rbx, %rdi
000000000001c6ef	movl	$0x3, %esi
000000000001c6f4	movl	$0x30, %edx
000000000001c6f9	movl	$0x2c, %ecx
000000000001c6fe	movl	%eax, %r8d
000000000001c701	xorl	%r9d, %r9d
000000000001c704	callq	_mach_msg
000000000001c709	movl	%eax, %ebx
000000000001c70b	leal	-0x10000002(%rbx), %eax
000000000001c711	cmpl	$0xe, %eax
000000000001c714	ja	0x1c72a
000000000001c716	movl	$0x4003, %ecx
000000000001c71b	btl	%eax, %ecx
000000000001c71e	jae	0x1c72a
000000000001c720	movl	-0x2c(%rbp), %edi
000000000001c723	callq	_mig_put_reply_port
000000000001c728	jmp	0x1c77f
000000000001c72a	testl	%ebx, %ebx
000000000001c72c	jne	0x1c760
000000000001c72e	movl	-0x24(%rbp), %eax
000000000001c731	cmpl	$0x47, %eax
000000000001c734	je	0x1c76a
000000000001c736	cmpl	$0xdc7, %eax
000000000001c73b	jne	0x1c771
000000000001c73d	movl	$0xfffffed4, %ebx
000000000001c742	cmpl	$0x0, -0x38(%rbp)
000000000001c746	js	0x1c776
000000000001c748	cmpl	$0x24, -0x34(%rbp)
000000000001c74c	jne	0x1c776
000000000001c74e	movl	-0x30(%rbp), %eax
000000000001c751	testl	%eax, %eax
000000000001c753	jne	0x1c776
000000000001c755	movl	-0x18(%rbp), %ebx
000000000001c758	testl	%ebx, %ebx
000000000001c75a	jne	0x1c776
000000000001c75c	xorl	%ebx, %ebx
000000000001c75e	jmp	0x1c77f
000000000001c760	movl	-0x2c(%rbp), %edi
000000000001c763	callq	_mig_dealloc_reply_port
000000000001c768	jmp	0x1c77f
000000000001c76a	movl	$0xfffffecc, %ebx
000000000001c76f	jmp	0x1c776
000000000001c771	movl	$0xfffffed3, %ebx
000000000001c776	leaq	-0x38(%rbp), %rdi
000000000001c77a	callq	_mach_msg_destroy
000000000001c77f	movl	%ebx, %eax
000000000001c781	addq	$0x38, %rsp
000000000001c785	popq	%rbx
000000000001c786	popq	%rbp
000000000001c787	retq
_task_zone_info:
000000000001c788	pushq	%rbp
000000000001c789	movq	%rsp, %rbp
000000000001c78c	pushq	%r15
000000000001c78e	pushq	%r14
000000000001c790	pushq	%r13
000000000001c792	pushq	%r12
000000000001c794	pushq	%rbx
000000000001c795	subq	$0x68, %rsp
000000000001c799	movq	%r8, %r14
000000000001c79c	movq	%rcx, %r15
000000000001c79f	movq	%rdx, %r12
000000000001c7a2	movq	%rsi, %r13
000000000001c7a5	leaq	-0x80(%rbp), %rbx
000000000001c7a9	movl	$0x1513, (%rbx)
000000000001c7af	movl	%edi, 0x8(%rbx)
000000000001c7b2	callq	_mig_get_reply_port
000000000001c7b7	movl	%eax, 0xc(%rbx)
000000000001c7ba	movabsq	$0xd6400000000, %rcx
000000000001c7c4	movq	%rcx, 0x10(%rbx)
000000000001c7c8	movl	$0x0, (%rsp)
000000000001c7cf	movq	%rbx, %rdi
000000000001c7d2	movl	$0x3, %esi
000000000001c7d7	movl	$0x18, %edx
000000000001c7dc	movl	$0x54, %ecx
000000000001c7e1	movl	%eax, %r8d
000000000001c7e4	xorl	%r9d, %r9d
000000000001c7e7	callq	_mach_msg
000000000001c7ec	movl	%eax, %ebx
000000000001c7ee	leal	-0x10000002(%rbx), %eax
000000000001c7f4	cmpl	$0xe, %eax
000000000001c7f7	ja	0x1c80d
000000000001c7f9	movl	$0x4003, %ecx
000000000001c7fe	btl	%eax, %ecx
000000000001c801	jae	0x1c80d
000000000001c803	movl	-0x74(%rbp), %edi
000000000001c806	callq	_mig_put_reply_port
000000000001c80b	jmp	0x1c85b
000000000001c80d	testl	%ebx, %ebx
000000000001c80f	jne	0x1c83c
000000000001c811	movl	-0x6c(%rbp), %eax
000000000001c814	cmpl	$0x47, %eax
000000000001c817	je	0x1c846
000000000001c819	cmpl	$0xdc8, %eax
000000000001c81e	jne	0x1c84d
000000000001c820	movl	-0x80(%rbp), %eax
000000000001c823	movl	-0x7c(%rbp), %ecx
000000000001c826	movl	$0xfffffed4, %ebx
000000000001c82b	testl	%eax, %eax
000000000001c82d	js	0x1c86c
000000000001c82f	cmpl	$0x24, %ecx
000000000001c832	jne	0x1c852
000000000001c834	cmpl	$0x0, -0x60(%rbp)
000000000001c838	jne	0x1c877
000000000001c83a	jmp	0x1c852
000000000001c83c	movl	-0x74(%rbp), %edi
000000000001c83f	callq	_mig_dealloc_reply_port
000000000001c844	jmp	0x1c85b
000000000001c846	movl	$0xfffffecc, %ebx
000000000001c84b	jmp	0x1c852
000000000001c84d	movl	$0xfffffed3, %ebx
000000000001c852	leaq	-0x80(%rbp), %rdi
000000000001c856	callq	_mach_msg_destroy
000000000001c85b	movl	%ebx, %eax
000000000001c85d	addq	$0x68, %rsp
000000000001c861	popq	%rbx
000000000001c862	popq	%r12
000000000001c864	popq	%r13
000000000001c866	popq	%r14
000000000001c868	popq	%r15
000000000001c86a	popq	%rbp
000000000001c86b	retq
000000000001c86c	cmpl	$0x4c, %ecx
000000000001c86f	jne	0x1c852
000000000001c871	cmpl	$0x2, -0x68(%rbp)
000000000001c875	jne	0x1c852
000000000001c877	movl	$0xfffffed4, %ebx
000000000001c87c	cmpl	$0x0, -0x78(%rbp)
000000000001c880	jne	0x1c852
000000000001c882	testl	%eax, %eax
000000000001c884	js	0x1c8ad
000000000001c886	movl	-0x60(%rbp), %ebx
000000000001c889	testl	%ebx, %ebx
000000000001c88b	jne	0x1c852
000000000001c88d	movl	-0x3c(%rbp), %eax
000000000001c890	movl	-0x38(%rbp), %ecx
000000000001c893	movq	-0x64(%rbp), %rdx
000000000001c897	movq	%rdx, (%r13)
000000000001c89b	movl	%eax, (%r12)
000000000001c89f	movq	-0x54(%rbp), %rax
000000000001c8a3	movq	%rax, (%r15)
000000000001c8a6	movl	%ecx, (%r14)
000000000001c8a9	xorl	%ebx, %ebx
000000000001c8ab	jmp	0x1c85b
000000000001c8ad	movzbl	-0x59(%rbp), %eax
000000000001c8b1	shll	$0x18, %eax
000000000001c8b4	cmpl	$0x1000000, %eax
000000000001c8b9	jne	0x1c852
000000000001c8bb	movzbl	-0x49(%rbp), %eax
000000000001c8bf	shll	$0x18, %eax
000000000001c8c2	cmpl	$0x1000000, %eax
000000000001c8c7	jne	0x1c852
000000000001c8c9	movl	-0x58(%rbp), %ecx
000000000001c8cc	movl	$0xcccccccd, %eax
000000000001c8d1	imulq	%rcx, %rax
000000000001c8d5	shrq	$0x26, %rax
000000000001c8d9	cmpl	-0x3c(%rbp), %eax
000000000001c8dc	jne	0x1c852
000000000001c8e2	movl	-0x48(%rbp), %edx
000000000001c8e5	movl	$0xba2e8ba3, %ecx
000000000001c8ea	imulq	%rdx, %rcx
000000000001c8ee	shrq	$0x26, %rcx
000000000001c8f2	cmpl	-0x38(%rbp), %ecx
000000000001c8f5	jne	0x1c852
000000000001c8fb	jmp	0x1c893
_task_assign:
000000000001c8fd	pushq	%rbp
000000000001c8fe	movq	%rsp, %rbp
000000000001c901	pushq	%rbx
000000000001c902	subq	$0x48, %rsp
000000000001c906	leaq	-0x40(%rbp), %rbx
000000000001c90a	movl	$0x1, 0x18(%rbx)
000000000001c911	movl	%esi, 0x1c(%rbx)
000000000001c914	movl	$0x130000, 0x24(%rbx)
000000000001c91b	leaq	_NDR_record(%rip), %rax
000000000001c922	movq	(%rax), %rax
000000000001c925	movq	%rax, 0x28(%rbx)
000000000001c929	movl	%edx, 0x30(%rbx)
000000000001c92c	movl	$0x80001513, (%rbx)
000000000001c932	movl	%edi, 0x8(%rbx)
000000000001c935	callq	_mig_get_reply_port
000000000001c93a	movl	%eax, 0xc(%rbx)
000000000001c93d	movabsq	$0xd6500000000, %rcx
000000000001c947	movq	%rcx, 0x10(%rbx)
000000000001c94b	movl	$0x0, (%rsp)
000000000001c952	movq	%rbx, %rdi
000000000001c955	movl	$0x3, %esi
000000000001c95a	movl	$0x34, %edx
000000000001c95f	movl	$0x2c, %ecx
000000000001c964	movl	%eax, %r8d
000000000001c967	xorl	%r9d, %r9d
000000000001c96a	callq	_mach_msg
000000000001c96f	movl	%eax, %ebx
000000000001c971	leal	-0x10000002(%rbx), %eax
000000000001c977	cmpl	$0xe, %eax
000000000001c97a	ja	0x1c990
000000000001c97c	movl	$0x4003, %ecx
000000000001c981	btl	%eax, %ecx
000000000001c984	jae	0x1c990
000000000001c986	movl	-0x34(%rbp), %edi
000000000001c989	callq	_mig_put_reply_port
000000000001c98e	jmp	0x1c9e5
000000000001c990	testl	%ebx, %ebx
000000000001c992	jne	0x1c9c6
000000000001c994	movl	-0x2c(%rbp), %eax
000000000001c997	cmpl	$0x47, %eax
000000000001c99a	je	0x1c9d0
000000000001c99c	cmpl	$0xdc9, %eax
000000000001c9a1	jne	0x1c9d7
000000000001c9a3	movl	$0xfffffed4, %ebx
000000000001c9a8	cmpl	$0x0, -0x40(%rbp)
000000000001c9ac	js	0x1c9dc
000000000001c9ae	cmpl	$0x24, -0x3c(%rbp)
000000000001c9b2	jne	0x1c9dc
000000000001c9b4	movl	-0x38(%rbp), %eax
000000000001c9b7	testl	%eax, %eax
000000000001c9b9	jne	0x1c9dc
000000000001c9bb	movl	-0x20(%rbp), %ebx
000000000001c9be	testl	%ebx, %ebx
000000000001c9c0	jne	0x1c9dc
000000000001c9c2	xorl	%ebx, %ebx
000000000001c9c4	jmp	0x1c9e5
000000000001c9c6	movl	-0x34(%rbp), %edi
000000000001c9c9	callq	_mig_dealloc_reply_port
000000000001c9ce	jmp	0x1c9e5
000000000001c9d0	movl	$0xfffffecc, %ebx
000000000001c9d5	jmp	0x1c9dc
000000000001c9d7	movl	$0xfffffed3, %ebx
000000000001c9dc	leaq	-0x40(%rbp), %rdi
000000000001c9e0	callq	_mach_msg_destroy
000000000001c9e5	movl	%ebx, %eax
000000000001c9e7	addq	$0x48, %rsp
000000000001c9eb	popq	%rbx
000000000001c9ec	popq	%rbp
000000000001c9ed	retq
_task_assign_default:
000000000001c9ee	pushq	%rbp
000000000001c9ef	movq	%rsp, %rbp
000000000001c9f2	pushq	%rbx
000000000001c9f3	subq	$0x38, %rsp
000000000001c9f7	leaq	_NDR_record(%rip), %rax
000000000001c9fe	movq	(%rax), %rax
000000000001ca01	leaq	-0x38(%rbp), %rbx
000000000001ca05	movq	%rax, 0x18(%rbx)
000000000001ca09	movl	%esi, 0x20(%rbx)
000000000001ca0c	movl	$0x1513, (%rbx)
000000000001ca12	movl	%edi, 0x8(%rbx)
000000000001ca15	callq	_mig_get_reply_port
000000000001ca1a	movl	%eax, 0xc(%rbx)
000000000001ca1d	movabsq	$0xd6600000000, %rcx
000000000001ca27	movq	%rcx, 0x10(%rbx)
000000000001ca2b	movl	$0x0, (%rsp)
000000000001ca32	movq	%rbx, %rdi
000000000001ca35	movl	$0x3, %esi
000000000001ca3a	movl	$0x24, %edx
000000000001ca3f	movl	$0x2c, %ecx
000000000001ca44	movl	%eax, %r8d
000000000001ca47	xorl	%r9d, %r9d
000000000001ca4a	callq	_mach_msg
000000000001ca4f	movl	%eax, %ebx
000000000001ca51	leal	-0x10000002(%rbx), %eax
000000000001ca57	cmpl	$0xe, %eax
000000000001ca5a	ja	0x1ca70
000000000001ca5c	movl	$0x4003, %ecx
000000000001ca61	btl	%eax, %ecx
000000000001ca64	jae	0x1ca70
000000000001ca66	movl	-0x2c(%rbp), %edi
000000000001ca69	callq	_mig_put_reply_port
000000000001ca6e	jmp	0x1cac5
000000000001ca70	testl	%ebx, %ebx
000000000001ca72	jne	0x1caa6
000000000001ca74	movl	-0x24(%rbp), %eax
000000000001ca77	cmpl	$0x47, %eax
000000000001ca7a	je	0x1cab0
000000000001ca7c	cmpl	$0xdca, %eax
000000000001ca81	jne	0x1cab7
000000000001ca83	movl	$0xfffffed4, %ebx
000000000001ca88	cmpl	$0x0, -0x38(%rbp)
000000000001ca8c	js	0x1cabc
000000000001ca8e	cmpl	$0x24, -0x34(%rbp)
000000000001ca92	jne	0x1cabc
000000000001ca94	movl	-0x30(%rbp), %eax
000000000001ca97	testl	%eax, %eax
000000000001ca99	jne	0x1cabc
000000000001ca9b	movl	-0x18(%rbp), %ebx
000000000001ca9e	testl	%ebx, %ebx
000000000001caa0	jne	0x1cabc
000000000001caa2	xorl	%ebx, %ebx
000000000001caa4	jmp	0x1cac5
000000000001caa6	movl	-0x2c(%rbp), %edi
000000000001caa9	callq	_mig_dealloc_reply_port
000000000001caae	jmp	0x1cac5
000000000001cab0	movl	$0xfffffecc, %ebx
000000000001cab5	jmp	0x1cabc
000000000001cab7	movl	$0xfffffed3, %ebx
000000000001cabc	leaq	-0x38(%rbp), %rdi
000000000001cac0	callq	_mach_msg_destroy
000000000001cac5	movl	%ebx, %eax
000000000001cac7	addq	$0x38, %rsp
000000000001cacb	popq	%rbx
000000000001cacc	popq	%rbp
000000000001cacd	retq
_task_get_assignment:
000000000001cace	pushq	%rbp
000000000001cacf	movq	%rsp, %rbp
000000000001cad2	pushq	%r14
000000000001cad4	pushq	%rbx
000000000001cad5	subq	$0x40, %rsp
000000000001cad9	movq	%rsi, %r14
000000000001cadc	leaq	-0x40(%rbp), %rbx
000000000001cae0	movl	$0x1513, (%rbx)
000000000001cae6	movl	%edi, 0x8(%rbx)
000000000001cae9	callq	_mig_get_reply_port
000000000001caee	movl	%eax, 0xc(%rbx)
000000000001caf1	movabsq	$0xd6700000000, %rcx
000000000001cafb	movq	%rcx, 0x10(%rbx)
000000000001caff	movl	$0x0, (%rsp)
000000000001cb06	movq	%rbx, %rdi
000000000001cb09	movl	$0x3, %esi
000000000001cb0e	movl	$0x18, %edx
000000000001cb13	movl	$0x30, %ecx
000000000001cb18	movl	%eax, %r8d
000000000001cb1b	xorl	%r9d, %r9d
000000000001cb1e	callq	_mach_msg
000000000001cb23	movl	%eax, %ebx
000000000001cb25	leal	-0x10000002(%rbx), %eax
000000000001cb2b	cmpl	$0xe, %eax
000000000001cb2e	ja	0x1cb44
000000000001cb30	movl	$0x4003, %ecx
000000000001cb35	btl	%eax, %ecx
000000000001cb38	jae	0x1cb44
000000000001cb3a	movl	-0x34(%rbp), %edi
000000000001cb3d	callq	_mig_put_reply_port
000000000001cb42	jmp	0x1cb92
000000000001cb44	testl	%ebx, %ebx
000000000001cb46	jne	0x1cb73
000000000001cb48	movl	-0x2c(%rbp), %eax
000000000001cb4b	cmpl	$0x47, %eax
000000000001cb4e	je	0x1cb7d
000000000001cb50	cmpl	$0xdcb, %eax
000000000001cb55	jne	0x1cb84
000000000001cb57	movl	-0x40(%rbp), %eax
000000000001cb5a	movl	-0x3c(%rbp), %ecx
000000000001cb5d	movl	$0xfffffed4, %ebx
000000000001cb62	testl	%eax, %eax
000000000001cb64	js	0x1cb9d
000000000001cb66	cmpl	$0x24, %ecx
000000000001cb69	jne	0x1cb89
000000000001cb6b	cmpl	$0x0, -0x20(%rbp)
000000000001cb6f	jne	0x1cba8
000000000001cb71	jmp	0x1cb89
000000000001cb73	movl	-0x34(%rbp), %edi
000000000001cb76	callq	_mig_dealloc_reply_port
000000000001cb7b	jmp	0x1cb92
000000000001cb7d	movl	$0xfffffecc, %ebx
000000000001cb82	jmp	0x1cb89
000000000001cb84	movl	$0xfffffed3, %ebx
000000000001cb89	leaq	-0x40(%rbp), %rdi
000000000001cb8d	callq	_mach_msg_destroy
000000000001cb92	movl	%ebx, %eax
000000000001cb94	addq	$0x40, %rsp
000000000001cb98	popq	%rbx
000000000001cb99	popq	%r14
000000000001cb9b	popq	%rbp
000000000001cb9c	retq
000000000001cb9d	cmpl	$0x28, %ecx
000000000001cba0	jne	0x1cb89
000000000001cba2	cmpl	$0x1, -0x28(%rbp)
000000000001cba6	jne	0x1cb89
000000000001cba8	movl	$0xfffffed4, %ebx
000000000001cbad	cmpl	$0x0, -0x38(%rbp)
000000000001cbb1	jne	0x1cb89
000000000001cbb3	testl	%eax, %eax
000000000001cbb5	js	0x1cbc0
000000000001cbb7	movl	-0x20(%rbp), %ebx
000000000001cbba	testl	%ebx, %ebx
000000000001cbbc	jne	0x1cb89
000000000001cbbe	jmp	0x1cbce
000000000001cbc0	movzwl	-0x1a(%rbp), %eax
000000000001cbc4	shll	$0x10, %eax
000000000001cbc7	cmpl	$0x110000, %eax
000000000001cbcc	jne	0x1cb89
000000000001cbce	movl	-0x24(%rbp), %eax
000000000001cbd1	movl	%eax, (%r14)
000000000001cbd4	xorl	%ebx, %ebx
000000000001cbd6	jmp	0x1cb92
_task_set_policy:
000000000001cbd8	pushq	%rbp
000000000001cbd9	movq	%rsp, %rbp
000000000001cbdc	pushq	%r15
000000000001cbde	pushq	%r14
000000000001cbe0	pushq	%r13
000000000001cbe2	pushq	%r12
000000000001cbe4	pushq	%rbx
000000000001cbe5	subq	$0x68, %rsp
000000000001cbe9	movl	$0x1, -0x70(%rbp)
000000000001cbf0	movl	%esi, -0x6c(%rbp)
000000000001cbf3	movl	$0x130000, -0x64(%rbp)
000000000001cbfa	leaq	_NDR_record(%rip), %rax
000000000001cc01	movq	(%rax), %rax
000000000001cc04	movq	%rax, -0x60(%rbp)
000000000001cc08	movl	%edx, -0x58(%rbp)
000000000001cc0b	movl	$0xfffffecd, %r12d
000000000001cc11	cmpl	$0x5, %r8d
000000000001cc15	ja	0x1cd5a
000000000001cc1b	movq	%r9, %r15
000000000001cc1e	movl	%r8d, %ebx
000000000001cc21	movl	%edi, -0x2c(%rbp)
000000000001cc24	leaq	-0x50(%rbp), %r14
000000000001cc28	leal	(,%rbx,4), %r13d
000000000001cc30	movq	%r14, %rdi
000000000001cc33	movq	%rcx, %rsi
000000000001cc36	movq	%r13, %rdx
000000000001cc39	callq	_memcpy
000000000001cc3e	movl	%ebx, -0x4(%r14)
000000000001cc42	movl	0x10(%rbp), %r14d
000000000001cc46	cmpl	$0x1, %r14d
000000000001cc4a	ja	0x1cd5a
000000000001cc50	leaq	-0x88(%rbp), %rax
000000000001cc57	leaq	-0x14(%r13,%rax), %r12
000000000001cc5c	leaq	0x50(%r12), %rdi
000000000001cc61	leal	(,%r14,4), %ebx
000000000001cc69	movq	%r15, %rsi
000000000001cc6c	movq	%rbx, %rdx
000000000001cc6f	callq	_memcpy
000000000001cc74	movl	%r14d, 0x4c(%r12)
000000000001cc79	leal	0x40(%r13,%r14,4), %r14d
000000000001cc7e	movl	0x18(%rbp), %eax
000000000001cc81	movl	%eax, 0x50(%rbx,%r12)
000000000001cc86	leaq	-0x88(%rbp), %rbx
000000000001cc8d	movl	$0x80001513, (%rbx)
000000000001cc93	movl	-0x2c(%rbp), %eax
000000000001cc96	movl	%eax, 0x8(%rbx)
000000000001cc99	callq	_mig_get_reply_port
000000000001cc9e	movl	%eax, 0xc(%rbx)
000000000001cca1	movabsq	$0xd6800000000, %rcx
000000000001ccab	movq	%rcx, 0x10(%rbx)
000000000001ccaf	movl	$0x0, (%rsp)
000000000001ccb6	movq	%rbx, %rdi
000000000001ccb9	movl	$0x3, %esi
000000000001ccbe	movl	%r14d, %edx
000000000001ccc1	movl	$0x2c, %ecx
000000000001ccc6	movl	%eax, %r8d
000000000001ccc9	xorl	%r9d, %r9d
000000000001cccc	callq	_mach_msg
000000000001ccd1	movl	%eax, %r12d
000000000001ccd4	leal	-0x10000002(%r12), %eax
000000000001ccdc	cmpl	$0xe, %eax
000000000001ccdf	ja	0x1ccf5
000000000001cce1	movl	$0x4003, %ecx
000000000001cce6	btl	%eax, %ecx
000000000001cce9	jae	0x1ccf5
000000000001cceb	movl	-0x7c(%rbp), %edi
000000000001ccee	callq	_mig_put_reply_port
000000000001ccf3	jmp	0x1cd5a
000000000001ccf5	testl	%r12d, %r12d
000000000001ccf8	jne	0x1cd36
000000000001ccfa	movl	-0x74(%rbp), %eax
000000000001ccfd	cmpl	$0x47, %eax
000000000001cd00	je	0x1cd40
000000000001cd02	cmpl	$0xdcc, %eax
000000000001cd07	jne	0x1cd48
000000000001cd09	movl	$0xfffffed4, %r12d
000000000001cd0f	cmpl	$0x0, -0x88(%rbp)
000000000001cd16	js	0x1cd4e
000000000001cd18	cmpl	$0x24, -0x84(%rbp)
000000000001cd1f	jne	0x1cd4e
000000000001cd21	movl	-0x80(%rbp), %eax
000000000001cd24	testl	%eax, %eax
000000000001cd26	jne	0x1cd4e
000000000001cd28	movl	-0x68(%rbp), %r12d
000000000001cd2c	testl	%r12d, %r12d
000000000001cd2f	jne	0x1cd4e
000000000001cd31	xorl	%r12d, %r12d
000000000001cd34	jmp	0x1cd5a
000000000001cd36	movl	-0x7c(%rbp), %edi
000000000001cd39	callq	_mig_dealloc_reply_port
000000000001cd3e	jmp	0x1cd5a
000000000001cd40	movl	$0xfffffecc, %r12d
000000000001cd46	jmp	0x1cd4e
000000000001cd48	movl	$0xfffffed3, %r12d
000000000001cd4e	leaq	-0x88(%rbp), %rdi
000000000001cd55	callq	_mach_msg_destroy
000000000001cd5a	movl	%r12d, %eax
000000000001cd5d	addq	$0x68, %rsp
000000000001cd61	popq	%rbx
000000000001cd62	popq	%r12
000000000001cd64	popq	%r13
000000000001cd66	popq	%r14
000000000001cd68	popq	%r15
000000000001cd6a	popq	%rbp
000000000001cd6b	retq
_task_get_state:
000000000001cd6c	pushq	%rbp
000000000001cd6d	movq	%rsp, %rbp
000000000001cd70	pushq	%r15
000000000001cd72	pushq	%r14
000000000001cd74	pushq	%r12
000000000001cd76	pushq	%rbx
000000000001cd77	subq	$0x9d0, %rsp
000000000001cd7e	movq	%rcx, %r15
000000000001cd81	leaq	_NDR_record(%rip), %rax
000000000001cd88	movq	(%rax), %rax
000000000001cd8b	leaq	-0x9e8(%rbp), %rbx
000000000001cd92	movq	%rax, 0x18(%rbx)
000000000001cd96	movl	%esi, 0x20(%rbx)
000000000001cd99	movl	(%rcx), %eax
000000000001cd9b	movl	$0x266, %ecx
000000000001cda0	cmpl	%ecx, %eax
000000000001cda2	cmovbl	%eax, %ecx
000000000001cda5	movq	%rdx, %r14
000000000001cda8	movl	%ecx, 0x24(%rbx)
000000000001cdab	movl	$0x1513, (%rbx)
000000000001cdb1	movl	%edi, 0x8(%rbx)
000000000001cdb4	callq	_mig_get_reply_port
000000000001cdb9	movl	%eax, 0xc(%rbx)
000000000001cdbc	movabsq	$0xd6900000000, %rcx
000000000001cdc6	movq	%rcx, 0x10(%rbx)
000000000001cdca	movl	$0x0, (%rsp)
000000000001cdd1	movq	%rbx, %rdi
000000000001cdd4	movl	$0x3, %esi
000000000001cdd9	movl	$0x28, %edx
000000000001cdde	movl	$0x9c8, %ecx
000000000001cde3	movl	%eax, %r8d
000000000001cde6	xorl	%r9d, %r9d
000000000001cde9	callq	_mach_msg
000000000001cdee	movl	%eax, %ebx
000000000001cdf0	leal	-0x10000002(%rbx), %eax
000000000001cdf6	cmpl	$0xe, %eax
000000000001cdf9	ja	0x1ce12
000000000001cdfb	movl	$0x4003, %ecx
000000000001ce00	btl	%eax, %ecx
000000000001ce03	jae	0x1ce12
000000000001ce05	movl	-0x9dc(%rbp), %edi
000000000001ce0b	callq	_mig_put_reply_port
000000000001ce10	jmp	0x1ce86
000000000001ce12	testl	%ebx, %ebx
000000000001ce14	jne	0x1ce61
000000000001ce16	movl	-0x9d4(%rbp), %eax
000000000001ce1c	cmpl	$0x47, %eax
000000000001ce1f	je	0x1ce6e
000000000001ce21	cmpl	$0xdcd, %eax
000000000001ce26	jne	0x1ce75
000000000001ce28	cmpl	$0x0, -0x9e8(%rbp)
000000000001ce2f	js	0x1ce5a
000000000001ce31	movl	-0x9e4(%rbp), %eax
000000000001ce37	leal	-0x28(%rax), %ecx
000000000001ce3a	cmpl	$0x999, %ecx
000000000001ce40	jb	0x1ce51
000000000001ce42	cmpl	$0x24, %eax
000000000001ce45	jne	0x1ce5a
000000000001ce47	movl	-0x9c8(%rbp), %edx
000000000001ce4d	testl	%edx, %edx
000000000001ce4f	je	0x1ce5a
000000000001ce51	cmpl	$0x0, -0x9e0(%rbp)
000000000001ce58	je	0x1ce98
000000000001ce5a	movl	$0xfffffed4, %ebx
000000000001ce5f	jmp	0x1ce7a
000000000001ce61	movl	-0x9dc(%rbp), %edi
000000000001ce67	callq	_mig_dealloc_reply_port
000000000001ce6c	jmp	0x1ce86
000000000001ce6e	movl	$0xfffffecc, %ebx
000000000001ce73	jmp	0x1ce7a
000000000001ce75	movl	$0xfffffed3, %ebx
000000000001ce7a	leaq	-0x9e8(%rbp), %rdi
000000000001ce81	callq	_mach_msg_destroy
000000000001ce86	movl	%ebx, %eax
000000000001ce88	addq	$0x9d0, %rsp
000000000001ce8f	popq	%rbx
000000000001ce90	popq	%r12
000000000001ce92	popq	%r14
000000000001ce94	popq	%r15
000000000001ce96	popq	%rbp
000000000001ce97	retq
000000000001ce98	movl	-0x9c8(%rbp), %ebx
000000000001ce9e	testl	%ebx, %ebx
000000000001cea0	jne	0x1ce7a
000000000001cea2	movl	-0x9c4(%rbp), %r12d
000000000001cea9	cmpl	$0x266, %r12d
000000000001ceb0	ja	0x1ce5a
000000000001ceb2	shrl	$0x2, %ecx
000000000001ceb5	cmpl	%r12d, %ecx
000000000001ceb8	jb	0x1ce5a
000000000001ceba	leal	0x28(,%r12,4), %ecx
000000000001cec2	movl	$0xfffffed4, %ebx
000000000001cec7	cmpl	%ecx, %eax
000000000001cec9	jne	0x1ce7a
000000000001cecb	movl	(%r15), %edx
000000000001cece	leaq	-0x9c0(%rbp), %rsi
000000000001ced5	cmpl	%edx, %r12d
000000000001ced8	jbe	0x1ceef
000000000001ceda	shll	$0x2, %edx
000000000001cedd	movq	%r14, %rdi
000000000001cee0	callq	_memcpy
000000000001cee5	movl	%r12d, (%r15)
000000000001cee8	movl	$0xfffffecd, %ebx
000000000001ceed	jmp	0x1ce86
000000000001ceef	leal	(,%r12,4), %eax
000000000001cef7	movl	%eax, %edx
000000000001cef9	movq	%r14, %rdi
000000000001cefc	callq	_memcpy
000000000001cf01	movl	%r12d, (%r15)
000000000001cf04	xorl	%ebx, %ebx
000000000001cf06	jmp	0x1ce86
_task_set_state:
000000000001cf0b	pushq	%rbp
000000000001cf0c	movq	%rsp, %rbp
000000000001cf0f	pushq	%r15
000000000001cf11	pushq	%r14
000000000001cf13	pushq	%rbx
000000000001cf14	subq	$0x9c8, %rsp
000000000001cf1b	leaq	_NDR_record(%rip), %rax
000000000001cf22	movq	(%rax), %rax
000000000001cf25	movq	%rax, -0x9c0(%rbp)
000000000001cf2c	movl	%esi, -0x9b8(%rbp)
000000000001cf32	movl	$0xfffffecd, %r14d
000000000001cf38	cmpl	$0x266, %ecx
000000000001cf3e	ja	0x1d04f
000000000001cf44	movl	%ecx, %ebx
000000000001cf46	movl	%edi, %r15d
000000000001cf49	leaq	-0x9b0(%rbp), %r14
000000000001cf50	leal	(,%rbx,4), %eax
000000000001cf57	movq	%r14, %rdi
000000000001cf5a	movq	%rdx, %rsi
000000000001cf5d	movq	%rax, %rdx
000000000001cf60	callq	_memcpy
000000000001cf65	movl	%ebx, -0x4(%r14)
000000000001cf69	leal	0x28(,%rbx,4), %ebx
000000000001cf70	movl	$0x1513, -0x28(%r14)
000000000001cf78	movl	%r15d, -0x20(%r14)
000000000001cf7c	callq	_mig_get_reply_port
000000000001cf81	movl	%eax, -0x1c(%r14)
000000000001cf85	movabsq	$0xd6a00000000, %rcx
000000000001cf8f	movq	%rcx, -0x18(%r14)
000000000001cf93	movl	$0x0, (%rsp)
000000000001cf9a	leaq	-0x9d8(%rbp), %rdi
000000000001cfa1	movl	$0x3, %esi
000000000001cfa6	movl	%ebx, %edx
000000000001cfa8	movl	$0x2c, %ecx
000000000001cfad	movl	%eax, %r8d
000000000001cfb0	xorl	%r9d, %r9d
000000000001cfb3	callq	_mach_msg
000000000001cfb8	movl	%eax, %r14d
000000000001cfbb	leal	-0x10000002(%r14), %eax
000000000001cfc2	cmpl	$0xe, %eax
000000000001cfc5	ja	0x1cfde
000000000001cfc7	movl	$0x4003, %ecx
000000000001cfcc	btl	%eax, %ecx
000000000001cfcf	jae	0x1cfde
000000000001cfd1	movl	-0x9cc(%rbp), %edi
000000000001cfd7	callq	_mig_put_reply_port
000000000001cfdc	jmp	0x1d04f
000000000001cfde	testl	%r14d, %r14d
000000000001cfe1	jne	0x1d028
000000000001cfe3	movl	-0x9c4(%rbp), %eax
000000000001cfe9	cmpl	$0x47, %eax
000000000001cfec	je	0x1d035
000000000001cfee	cmpl	$0xdce, %eax
000000000001cff3	jne	0x1d03d
000000000001cff5	movl	$0xfffffed4, %r14d
000000000001cffb	cmpl	$0x0, -0x9d8(%rbp)
000000000001d002	js	0x1d043
000000000001d004	cmpl	$0x24, -0x9d4(%rbp)
000000000001d00b	jne	0x1d043
000000000001d00d	movl	-0x9d0(%rbp), %eax
000000000001d013	testl	%eax, %eax
000000000001d015	jne	0x1d043
000000000001d017	movl	-0x9b8(%rbp), %r14d
000000000001d01e	testl	%r14d, %r14d
000000000001d021	jne	0x1d043
000000000001d023	xorl	%r14d, %r14d
000000000001d026	jmp	0x1d04f
000000000001d028	movl	-0x9cc(%rbp), %edi
000000000001d02e	callq	_mig_dealloc_reply_port
000000000001d033	jmp	0x1d04f
000000000001d035	movl	$0xfffffecc, %r14d
000000000001d03b	jmp	0x1d043
000000000001d03d	movl	$0xfffffed3, %r14d
000000000001d043	leaq	-0x9d8(%rbp), %rdi
000000000001d04a	callq	_mach_msg_destroy
000000000001d04f	movl	%r14d, %eax
000000000001d052	addq	$0x9c8, %rsp
000000000001d059	popq	%rbx
000000000001d05a	popq	%r14
000000000001d05c	popq	%r15
000000000001d05e	popq	%rbp
000000000001d05f	retq
_task_set_phys_footprint_limit:
000000000001d060	pushq	%rbp
000000000001d061	movq	%rsp, %rbp
000000000001d064	pushq	%r14
000000000001d066	pushq	%rbx
000000000001d067	subq	$0x40, %rsp
000000000001d06b	movq	%rdx, %r14
000000000001d06e	leaq	_NDR_record(%rip), %rax
000000000001d075	movq	(%rax), %rax
000000000001d078	leaq	-0x40(%rbp), %rbx
000000000001d07c	movq	%rax, 0x18(%rbx)
000000000001d080	movl	%esi, 0x20(%rbx)
000000000001d083	movl	$0x1513, (%rbx)
000000000001d089	movl	%edi, 0x8(%rbx)
000000000001d08c	callq	_mig_get_reply_port
000000000001d091	movl	%eax, 0xc(%rbx)
000000000001d094	movabsq	$0xd6b00000000, %rcx
000000000001d09e	movq	%rcx, 0x10(%rbx)
000000000001d0a2	movl	$0x0, (%rsp)
000000000001d0a9	movq	%rbx, %rdi
000000000001d0ac	movl	$0x3, %esi
000000000001d0b1	movl	$0x24, %edx
000000000001d0b6	movl	$0x30, %ecx
000000000001d0bb	movl	%eax, %r8d
000000000001d0be	xorl	%r9d, %r9d
000000000001d0c1	callq	_mach_msg
000000000001d0c6	movl	%eax, %ebx
000000000001d0c8	leal	-0x10000002(%rbx), %eax
000000000001d0ce	cmpl	$0xe, %eax
000000000001d0d1	ja	0x1d0e7
000000000001d0d3	movl	$0x4003, %ecx
000000000001d0d8	btl	%eax, %ecx
000000000001d0db	jae	0x1d0e7
000000000001d0dd	movl	-0x34(%rbp), %edi
000000000001d0e0	callq	_mig_put_reply_port
000000000001d0e5	jmp	0x1d14e
000000000001d0e7	testl	%ebx, %ebx
000000000001d0e9	jne	0x1d12f
000000000001d0eb	movl	-0x2c(%rbp), %eax
000000000001d0ee	cmpl	$0x47, %eax
000000000001d0f1	je	0x1d139
000000000001d0f3	cmpl	$0xdcf, %eax
000000000001d0f8	jne	0x1d140
000000000001d0fa	movl	$0xfffffed4, %ebx
000000000001d0ff	cmpl	$0x0, -0x40(%rbp)
000000000001d103	js	0x1d145
000000000001d105	movl	-0x3c(%rbp), %eax
000000000001d108	cmpl	$0x28, %eax
000000000001d10b	je	0x1d118
000000000001d10d	cmpl	$0x24, %eax
000000000001d110	jne	0x1d145
000000000001d112	cmpl	$0x0, -0x20(%rbp)
000000000001d116	je	0x1d145
000000000001d118	cmpl	$0x0, -0x38(%rbp)
000000000001d11c	jne	0x1d145
000000000001d11e	movl	-0x20(%rbp), %ebx
000000000001d121	testl	%ebx, %ebx
000000000001d123	jne	0x1d145
000000000001d125	movl	-0x1c(%rbp), %eax
000000000001d128	movl	%eax, (%r14)
000000000001d12b	xorl	%ebx, %ebx
000000000001d12d	jmp	0x1d14e
000000000001d12f	movl	-0x34(%rbp), %edi
000000000001d132	callq	_mig_dealloc_reply_port
000000000001d137	jmp	0x1d14e
000000000001d139	movl	$0xfffffecc, %ebx
000000000001d13e	jmp	0x1d145
000000000001d140	movl	$0xfffffed3, %ebx
000000000001d145	leaq	-0x40(%rbp), %rdi
000000000001d149	callq	_mach_msg_destroy
000000000001d14e	movl	%ebx, %eax
000000000001d150	addq	$0x40, %rsp
000000000001d154	popq	%rbx
000000000001d155	popq	%r14
000000000001d157	popq	%rbp
000000000001d158	retq
_task_suspend2:
000000000001d159	pushq	%rbp
000000000001d15a	movq	%rsp, %rbp
000000000001d15d	pushq	%r14
000000000001d15f	pushq	%rbx
000000000001d160	subq	$0x40, %rsp
000000000001d164	movq	%rsi, %r14
000000000001d167	leaq	-0x40(%rbp), %rbx
000000000001d16b	movl	$0x1513, (%rbx)
000000000001d171	movl	%edi, 0x8(%rbx)
000000000001d174	callq	_mig_get_reply_port
000000000001d179	movl	%eax, 0xc(%rbx)
000000000001d17c	movabsq	$0xd6c00000000, %rcx
000000000001d186	movq	%rcx, 0x10(%rbx)
000000000001d18a	movl	$0x0, (%rsp)
000000000001d191	movq	%rbx, %rdi
000000000001d194	movl	$0x3, %esi
000000000001d199	movl	$0x18, %edx
000000000001d19e	movl	$0x30, %ecx
000000000001d1a3	movl	%eax, %r8d
000000000001d1a6	xorl	%r9d, %r9d
000000000001d1a9	callq	_mach_msg
000000000001d1ae	movl	%eax, %ebx
000000000001d1b0	leal	-0x10000002(%rbx), %eax
000000000001d1b6	cmpl	$0xe, %eax
000000000001d1b9	ja	0x1d1cf
000000000001d1bb	movl	$0x4003, %ecx
000000000001d1c0	btl	%eax, %ecx
000000000001d1c3	jae	0x1d1cf
000000000001d1c5	movl	-0x34(%rbp), %edi
000000000001d1c8	callq	_mig_put_reply_port
000000000001d1cd	jmp	0x1d21d
000000000001d1cf	testl	%ebx, %ebx
000000000001d1d1	jne	0x1d1fe
000000000001d1d3	movl	-0x2c(%rbp), %eax
000000000001d1d6	cmpl	$0x47, %eax
000000000001d1d9	je	0x1d208
000000000001d1db	cmpl	$0xdd0, %eax
000000000001d1e0	jne	0x1d20f
000000000001d1e2	movl	-0x40(%rbp), %eax
000000000001d1e5	movl	-0x3c(%rbp), %ecx
000000000001d1e8	movl	$0xfffffed4, %ebx
000000000001d1ed	testl	%eax, %eax
000000000001d1ef	js	0x1d228
000000000001d1f1	cmpl	$0x24, %ecx
000000000001d1f4	jne	0x1d214
000000000001d1f6	cmpl	$0x0, -0x20(%rbp)
000000000001d1fa	jne	0x1d233
000000000001d1fc	jmp	0x1d214
000000000001d1fe	movl	-0x34(%rbp), %edi
000000000001d201	callq	_mig_dealloc_reply_port
000000000001d206	jmp	0x1d21d
000000000001d208	movl	$0xfffffecc, %ebx
000000000001d20d	jmp	0x1d214
000000000001d20f	movl	$0xfffffed3, %ebx
000000000001d214	leaq	-0x40(%rbp), %rdi
000000000001d218	callq	_mach_msg_destroy
000000000001d21d	movl	%ebx, %eax
000000000001d21f	addq	$0x40, %rsp
000000000001d223	popq	%rbx
000000000001d224	popq	%r14
000000000001d226	popq	%rbp
000000000001d227	retq
000000000001d228	cmpl	$0x28, %ecx
000000000001d22b	jne	0x1d214
000000000001d22d	cmpl	$0x1, -0x28(%rbp)
000000000001d231	jne	0x1d214
000000000001d233	movl	$0xfffffed4, %ebx
000000000001d238	cmpl	$0x0, -0x38(%rbp)
000000000001d23c	jne	0x1d214
000000000001d23e	testl	%eax, %eax
000000000001d240	js	0x1d24b
000000000001d242	movl	-0x20(%rbp), %ebx
000000000001d245	testl	%ebx, %ebx
000000000001d247	jne	0x1d214
000000000001d249	jmp	0x1d259
000000000001d24b	movzwl	-0x1a(%rbp), %eax
000000000001d24f	shll	$0x10, %eax
000000000001d252	cmpl	$0x120000, %eax
000000000001d257	jne	0x1d214
000000000001d259	movl	-0x24(%rbp), %eax
000000000001d25c	movl	%eax, (%r14)
000000000001d25f	xorl	%ebx, %ebx
000000000001d261	jmp	0x1d21d
_task_resume2:
000000000001d263	pushq	%rbp
000000000001d264	movq	%rsp, %rbp
000000000001d267	pushq	%rbx
000000000001d268	subq	$0x38, %rsp
000000000001d26c	leaq	-0x38(%rbp), %rbx
000000000001d270	movl	$0x1512, (%rbx)
000000000001d276	movl	%edi, 0x8(%rbx)
000000000001d279	callq	_mig_get_reply_port
000000000001d27e	movl	%eax, 0xc(%rbx)
000000000001d281	movabsq	$0xd6d00000000, %rcx
000000000001d28b	movq	%rcx, 0x10(%rbx)
000000000001d28f	movl	$0x0, (%rsp)
000000000001d296	movq	%rbx, %rdi
000000000001d299	movl	$0x3, %esi
000000000001d29e	movl	$0x18, %edx
000000000001d2a3	movl	$0x2c, %ecx
000000000001d2a8	movl	%eax, %r8d
000000000001d2ab	xorl	%r9d, %r9d
000000000001d2ae	callq	_mach_msg
000000000001d2b3	movl	%eax, %ebx
000000000001d2b5	leal	-0x10000002(%rbx), %eax
000000000001d2bb	cmpl	$0xe, %eax
000000000001d2be	ja	0x1d2d4
000000000001d2c0	movl	$0x4003, %ecx
000000000001d2c5	btl	%eax, %ecx
000000000001d2c8	jae	0x1d2d4
000000000001d2ca	movl	-0x2c(%rbp), %edi
000000000001d2cd	callq	_mig_put_reply_port
000000000001d2d2	jmp	0x1d329
000000000001d2d4	testl	%ebx, %ebx
000000000001d2d6	jne	0x1d30a
000000000001d2d8	movl	-0x24(%rbp), %eax
000000000001d2db	cmpl	$0x47, %eax
000000000001d2de	je	0x1d314
000000000001d2e0	cmpl	$0xdd1, %eax
000000000001d2e5	jne	0x1d31b
000000000001d2e7	movl	$0xfffffed4, %ebx
000000000001d2ec	cmpl	$0x0, -0x38(%rbp)
000000000001d2f0	js	0x1d320
000000000001d2f2	cmpl	$0x24, -0x34(%rbp)
000000000001d2f6	jne	0x1d320
000000000001d2f8	movl	-0x30(%rbp), %eax
000000000001d2fb	testl	%eax, %eax
000000000001d2fd	jne	0x1d320
000000000001d2ff	movl	-0x18(%rbp), %ebx
000000000001d302	testl	%ebx, %ebx
000000000001d304	jne	0x1d320
000000000001d306	xorl	%ebx, %ebx
000000000001d308	jmp	0x1d329
000000000001d30a	movl	-0x2c(%rbp), %edi
000000000001d30d	callq	_mig_dealloc_reply_port
000000000001d312	jmp	0x1d329
000000000001d314	movl	$0xfffffecc, %ebx
000000000001d319	jmp	0x1d320
000000000001d31b	movl	$0xfffffed3, %ebx
000000000001d320	leaq	-0x38(%rbp), %rdi
000000000001d324	callq	_mach_msg_destroy
000000000001d329	movl	%ebx, %eax
000000000001d32b	addq	$0x38, %rsp
000000000001d32f	popq	%rbx
000000000001d330	popq	%rbp
000000000001d331	retq
_task_purgable_info:
000000000001d332	pushq	%rbp
000000000001d333	movq	%rsp, %rbp
000000000001d336	pushq	%r14
000000000001d338	pushq	%rbx
000000000001d339	subq	$0x150, %rsp
000000000001d340	movq	%rsi, %r14
000000000001d343	leaq	-0x150(%rbp), %rbx
000000000001d34a	movl	$0x1513, (%rbx)
000000000001d350	movl	%edi, 0x8(%rbx)
000000000001d353	callq	_mig_get_reply_port
000000000001d358	movl	%eax, 0xc(%rbx)
000000000001d35b	movabsq	$0xd6e00000000, %rcx
000000000001d365	movq	%rcx, 0x10(%rbx)
000000000001d369	movl	$0x0, (%rsp)
000000000001d370	movq	%rbx, %rdi
000000000001d373	movl	$0x3, %esi
000000000001d378	movl	$0x18, %edx
000000000001d37d	movl	$0x13c, %ecx
000000000001d382	movl	%eax, %r8d
000000000001d385	xorl	%r9d, %r9d
000000000001d388	callq	_mach_msg
000000000001d38d	movl	%eax, %ebx
000000000001d38f	leal	-0x10000002(%rbx), %eax
000000000001d395	cmpl	$0xe, %eax
000000000001d398	ja	0x1d3b4
000000000001d39a	movl	$0x4003, %ecx
000000000001d39f	btl	%eax, %ecx
000000000001d3a2	jae	0x1d3b4
000000000001d3a4	movl	-0x144(%rbp), %edi
000000000001d3aa	callq	_mig_put_reply_port
000000000001d3af	jmp	0x1d443
000000000001d3b4	testl	%ebx, %ebx
000000000001d3b6	jne	0x1d41e
000000000001d3b8	movl	-0x13c(%rbp), %eax
000000000001d3be	cmpl	$0x47, %eax
000000000001d3c1	je	0x1d42b
000000000001d3c3	cmpl	$0xdd2, %eax
000000000001d3c8	jne	0x1d432
000000000001d3ca	movl	$0xfffffed4, %ebx
000000000001d3cf	cmpl	$0x0, -0x150(%rbp)
000000000001d3d6	js	0x1d437
000000000001d3d8	movl	-0x14c(%rbp), %eax
000000000001d3de	cmpl	$0x134, %eax
000000000001d3e3	je	0x1d3f3
000000000001d3e5	cmpl	$0x24, %eax
000000000001d3e8	jne	0x1d437
000000000001d3ea	cmpl	$0x0, -0x130(%rbp)
000000000001d3f1	je	0x1d437
000000000001d3f3	cmpl	$0x0, -0x148(%rbp)
000000000001d3fa	jne	0x1d437
000000000001d3fc	movl	-0x130(%rbp), %ebx
000000000001d402	testl	%ebx, %ebx
000000000001d404	jne	0x1d437
000000000001d406	leaq	-0x12c(%rbp), %rsi
000000000001d40d	movl	$0x110, %edx
000000000001d412	movq	%r14, %rdi
000000000001d415	callq	_memcpy
000000000001d41a	xorl	%ebx, %ebx
000000000001d41c	jmp	0x1d443
000000000001d41e	movl	-0x144(%rbp), %edi
000000000001d424	callq	_mig_dealloc_reply_port
000000000001d429	jmp	0x1d443
000000000001d42b	movl	$0xfffffecc, %ebx
000000000001d430	jmp	0x1d437
000000000001d432	movl	$0xfffffed3, %ebx
000000000001d437	leaq	-0x150(%rbp), %rdi
000000000001d43e	callq	_mach_msg_destroy
000000000001d443	movl	%ebx, %eax
000000000001d445	addq	$0x150, %rsp
000000000001d44c	popq	%rbx
000000000001d44d	popq	%r14
000000000001d44f	popq	%rbp
000000000001d450	retq
_task_get_mach_voucher:
000000000001d451	pushq	%rbp
000000000001d452	movq	%rsp, %rbp
000000000001d455	pushq	%r14
000000000001d457	pushq	%rbx
000000000001d458	subq	$0x40, %rsp
000000000001d45c	movq	%rdx, %r14
000000000001d45f	leaq	_NDR_record(%rip), %rax
000000000001d466	movq	(%rax), %rax
000000000001d469	leaq	-0x40(%rbp), %rbx
000000000001d46d	movq	%rax, 0x18(%rbx)
000000000001d471	movl	%esi, 0x20(%rbx)
000000000001d474	movl	$0x1513, (%rbx)
000000000001d47a	movl	%edi, 0x8(%rbx)
000000000001d47d	callq	_mig_get_reply_port
000000000001d482	movl	%eax, 0xc(%rbx)
000000000001d485	movabsq	$0xd6f00000000, %rcx
000000000001d48f	movq	%rcx, 0x10(%rbx)
000000000001d493	movl	$0x0, (%rsp)
000000000001d49a	movq	%rbx, %rdi
000000000001d49d	movl	$0x3, %esi
000000000001d4a2	movl	$0x24, %edx
000000000001d4a7	movl	$0x30, %ecx
000000000001d4ac	movl	%eax, %r8d
000000000001d4af	xorl	%r9d, %r9d
000000000001d4b2	callq	_mach_msg
000000000001d4b7	movl	%eax, %ebx
000000000001d4b9	leal	-0x10000002(%rbx), %eax
000000000001d4bf	cmpl	$0xe, %eax
000000000001d4c2	ja	0x1d4d8
000000000001d4c4	movl	$0x4003, %ecx
000000000001d4c9	btl	%eax, %ecx
000000000001d4cc	jae	0x1d4d8
000000000001d4ce	movl	-0x34(%rbp), %edi
000000000001d4d1	callq	_mig_put_reply_port
000000000001d4d6	jmp	0x1d53f
000000000001d4d8	testl	%ebx, %ebx
000000000001d4da	jne	0x1d508
000000000001d4dc	movl	-0x2c(%rbp), %eax
000000000001d4df	cmpl	$0x47, %eax
000000000001d4e2	je	0x1d512
000000000001d4e4	cmpl	$0xdd3, %eax
000000000001d4e9	jne	0x1d519
000000000001d4eb	movl	-0x40(%rbp), %eax
000000000001d4ee	movl	-0x3c(%rbp), %ecx
000000000001d4f1	movl	$0xfffffed4, %ebx
000000000001d4f6	testl	%eax, %eax
000000000001d4f8	js	0x1d520
000000000001d4fa	cmpl	$0x24, %ecx
000000000001d4fd	jne	0x1d536
000000000001d4ff	movl	-0x20(%rbp), %ecx
000000000001d502	testl	%ecx, %ecx
000000000001d504	jne	0x1d52b
000000000001d506	jmp	0x1d536
000000000001d508	movl	-0x34(%rbp), %edi
000000000001d50b	callq	_mig_dealloc_reply_port
000000000001d510	jmp	0x1d53f
000000000001d512	movl	$0xfffffecc, %ebx
000000000001d517	jmp	0x1d536
000000000001d519	movl	$0xfffffed3, %ebx
000000000001d51e	jmp	0x1d536
000000000001d520	cmpl	$0x28, %ecx
000000000001d523	jne	0x1d536
000000000001d525	cmpl	$0x1, -0x28(%rbp)
000000000001d529	jne	0x1d536
000000000001d52b	movl	$0xfffffed4, %ebx
000000000001d530	cmpl	$0x0, -0x38(%rbp)
000000000001d534	je	0x1d54a
000000000001d536	leaq	-0x40(%rbp), %rdi
000000000001d53a	callq	_mach_msg_destroy
000000000001d53f	movl	%ebx, %eax
000000000001d541	addq	$0x40, %rsp
000000000001d545	popq	%rbx
000000000001d546	popq	%r14
000000000001d548	popq	%rbp
000000000001d549	retq
000000000001d54a	testl	%eax, %eax
000000000001d54c	js	0x1d557
000000000001d54e	movl	-0x20(%rbp), %ebx
000000000001d551	testl	%ebx, %ebx
000000000001d553	jne	0x1d536
000000000001d555	jmp	0x1d565
000000000001d557	movzwl	-0x1a(%rbp), %eax
000000000001d55b	shll	$0x10, %eax
000000000001d55e	cmpl	$0x110000, %eax
000000000001d563	jne	0x1d536
000000000001d565	movl	-0x24(%rbp), %eax
000000000001d568	movl	%eax, (%r14)
000000000001d56b	xorl	%ebx, %ebx
000000000001d56d	jmp	0x1d53f
_task_set_mach_voucher:
000000000001d56f	pushq	%rbp
000000000001d570	movq	%rsp, %rbp
000000000001d573	pushq	%rbx
000000000001d574	subq	$0x38, %rsp
000000000001d578	leaq	-0x38(%rbp), %rbx
000000000001d57c	movl	$0x1, 0x18(%rbx)
000000000001d583	movl	%esi, 0x1c(%rbx)
000000000001d586	movl	$0x130000, 0x24(%rbx)
000000000001d58d	movl	$0x80001513, (%rbx)
000000000001d593	movl	%edi, 0x8(%rbx)
000000000001d596	callq	_mig_get_reply_port
000000000001d59b	movl	%eax, 0xc(%rbx)
000000000001d59e	movabsq	$0xd7000000000, %rcx
000000000001d5a8	movq	%rcx, 0x10(%rbx)
000000000001d5ac	movl	$0x0, (%rsp)
000000000001d5b3	movq	%rbx, %rdi
000000000001d5b6	movl	$0x3, %esi
000000000001d5bb	movl	$0x28, %edx
000000000001d5c0	movl	$0x2c, %ecx
000000000001d5c5	movl	%eax, %r8d
000000000001d5c8	xorl	%r9d, %r9d
000000000001d5cb	callq	_mach_msg
000000000001d5d0	movl	%eax, %ebx
000000000001d5d2	leal	-0x10000002(%rbx), %eax
000000000001d5d8	cmpl	$0xe, %eax
000000000001d5db	ja	0x1d5f1
000000000001d5dd	movl	$0x4003, %ecx
000000000001d5e2	btl	%eax, %ecx
000000000001d5e5	jae	0x1d5f1
000000000001d5e7	movl	-0x2c(%rbp), %edi
000000000001d5ea	callq	_mig_put_reply_port
000000000001d5ef	jmp	0x1d646
000000000001d5f1	testl	%ebx, %ebx
000000000001d5f3	jne	0x1d627
000000000001d5f5	movl	-0x24(%rbp), %eax
000000000001d5f8	cmpl	$0x47, %eax
000000000001d5fb	je	0x1d631
000000000001d5fd	cmpl	$0xdd4, %eax
000000000001d602	jne	0x1d638
000000000001d604	movl	$0xfffffed4, %ebx
000000000001d609	cmpl	$0x0, -0x38(%rbp)
000000000001d60d	js	0x1d63d
000000000001d60f	cmpl	$0x24, -0x34(%rbp)
000000000001d613	jne	0x1d63d
000000000001d615	movl	-0x30(%rbp), %eax
000000000001d618	testl	%eax, %eax
000000000001d61a	jne	0x1d63d
000000000001d61c	movl	-0x18(%rbp), %ebx
000000000001d61f	testl	%ebx, %ebx
000000000001d621	jne	0x1d63d
000000000001d623	xorl	%ebx, %ebx
000000000001d625	jmp	0x1d646
000000000001d627	movl	-0x2c(%rbp), %edi
000000000001d62a	callq	_mig_dealloc_reply_port
000000000001d62f	jmp	0x1d646
000000000001d631	movl	$0xfffffecc, %ebx
000000000001d636	jmp	0x1d63d
000000000001d638	movl	$0xfffffed3, %ebx
000000000001d63d	leaq	-0x38(%rbp), %rdi
000000000001d641	callq	_mach_msg_destroy
000000000001d646	movl	%ebx, %eax
000000000001d648	addq	$0x38, %rsp
000000000001d64c	popq	%rbx
000000000001d64d	popq	%rbp
000000000001d64e	retq
_task_swap_mach_voucher:
000000000001d64f	pushq	%rbp
000000000001d650	movq	%rsp, %rbp
000000000001d653	pushq	%r14
000000000001d655	pushq	%rbx
000000000001d656	subq	$0x40, %rsp
000000000001d65a	movq	%rdx, %r14
000000000001d65d	leaq	-0x48(%rbp), %rbx
000000000001d661	movl	$0x2, 0x18(%rbx)
000000000001d668	movl	%esi, 0x1c(%rbx)
000000000001d66b	movl	$0x130000, %eax
000000000001d670	movl	%eax, 0x24(%rbx)
000000000001d673	movl	(%rdx), %ecx
000000000001d675	movl	%ecx, 0x28(%rbx)
000000000001d678	movl	%eax, 0x30(%rbx)
000000000001d67b	movl	$0x80001513, (%rbx)
000000000001d681	movl	%edi, 0x8(%rbx)
000000000001d684	callq	_mig_get_reply_port
000000000001d689	movl	%eax, 0xc(%rbx)
000000000001d68c	movabsq	$0xd7100000000, %rcx
000000000001d696	movq	%rcx, 0x10(%rbx)
000000000001d69a	movl	$0x0, (%rsp)
000000000001d6a1	movq	%rbx, %rdi
000000000001d6a4	movl	$0x3, %esi
000000000001d6a9	movl	$0x34, %edx
000000000001d6ae	movl	$0x30, %ecx
000000000001d6b3	movl	%eax, %r8d
000000000001d6b6	xorl	%r9d, %r9d
000000000001d6b9	callq	_mach_msg
000000000001d6be	movl	%eax, %ebx
000000000001d6c0	leal	-0x10000002(%rbx), %eax
000000000001d6c6	cmpl	$0xe, %eax
000000000001d6c9	ja	0x1d6df
000000000001d6cb	movl	$0x4003, %ecx
000000000001d6d0	btl	%eax, %ecx
000000000001d6d3	jae	0x1d6df
000000000001d6d5	movl	-0x3c(%rbp), %edi
000000000001d6d8	callq	_mig_put_reply_port
000000000001d6dd	jmp	0x1d72d
000000000001d6df	testl	%ebx, %ebx
000000000001d6e1	jne	0x1d70e
000000000001d6e3	movl	-0x34(%rbp), %eax
000000000001d6e6	cmpl	$0x47, %eax
000000000001d6e9	je	0x1d718
000000000001d6eb	cmpl	$0xdd5, %eax
000000000001d6f0	jne	0x1d71f
000000000001d6f2	movl	-0x48(%rbp), %eax
000000000001d6f5	movl	-0x44(%rbp), %ecx
000000000001d6f8	movl	$0xfffffed4, %ebx
000000000001d6fd	testl	%eax, %eax
000000000001d6ff	js	0x1d738
000000000001d701	cmpl	$0x24, %ecx
000000000001d704	jne	0x1d724
000000000001d706	cmpl	$0x0, -0x28(%rbp)
000000000001d70a	jne	0x1d743
000000000001d70c	jmp	0x1d724
000000000001d70e	movl	-0x3c(%rbp), %edi
000000000001d711	callq	_mig_dealloc_reply_port
000000000001d716	jmp	0x1d72d
000000000001d718	movl	$0xfffffecc, %ebx
000000000001d71d	jmp	0x1d724
000000000001d71f	movl	$0xfffffed3, %ebx
000000000001d724	leaq	-0x48(%rbp), %rdi
000000000001d728	callq	_mach_msg_destroy
000000000001d72d	movl	%ebx, %eax
000000000001d72f	addq	$0x40, %rsp
000000000001d733	popq	%rbx
000000000001d734	popq	%r14
000000000001d736	popq	%rbp
000000000001d737	retq
000000000001d738	cmpl	$0x28, %ecx
000000000001d73b	jne	0x1d724
000000000001d73d	cmpl	$0x1, -0x30(%rbp)
000000000001d741	jne	0x1d724
000000000001d743	movl	$0xfffffed4, %ebx
000000000001d748	cmpl	$0x0, -0x40(%rbp)
000000000001d74c	jne	0x1d724
000000000001d74e	testl	%eax, %eax
000000000001d750	js	0x1d75b
000000000001d752	movl	-0x28(%rbp), %ebx
000000000001d755	testl	%ebx, %ebx
000000000001d757	jne	0x1d724
000000000001d759	jmp	0x1d769
000000000001d75b	movzwl	-0x22(%rbp), %eax
000000000001d75f	shll	$0x10, %eax
000000000001d762	cmpl	$0x110000, %eax
000000000001d767	jne	0x1d724
000000000001d769	movl	-0x2c(%rbp), %eax
000000000001d76c	movl	%eax, (%r14)
000000000001d76f	xorl	%ebx, %ebx
000000000001d771	jmp	0x1d72d
_task_generate_corpse:
000000000001d773	pushq	%rbp
000000000001d774	movq	%rsp, %rbp
000000000001d777	pushq	%r14
000000000001d779	pushq	%rbx
000000000001d77a	subq	$0x40, %rsp
000000000001d77e	movq	%rsi, %r14
000000000001d781	leaq	-0x40(%rbp), %rbx
000000000001d785	movl	$0x1513, (%rbx)
000000000001d78b	movl	%edi, 0x8(%rbx)
000000000001d78e	callq	_mig_get_reply_port
000000000001d793	movl	%eax, 0xc(%rbx)
000000000001d796	movabsq	$0xd7200000000, %rcx
000000000001d7a0	movq	%rcx, 0x10(%rbx)
000000000001d7a4	movl	$0x0, (%rsp)
000000000001d7ab	movq	%rbx, %rdi
000000000001d7ae	movl	$0x3, %esi
000000000001d7b3	movl	$0x18, %edx
000000000001d7b8	movl	$0x30, %ecx
000000000001d7bd	movl	%eax, %r8d
000000000001d7c0	xorl	%r9d, %r9d
000000000001d7c3	callq	_mach_msg
000000000001d7c8	movl	%eax, %ebx
000000000001d7ca	leal	-0x10000002(%rbx), %eax
000000000001d7d0	cmpl	$0xe, %eax
000000000001d7d3	ja	0x1d7e9
000000000001d7d5	movl	$0x4003, %ecx
000000000001d7da	btl	%eax, %ecx
000000000001d7dd	jae	0x1d7e9
000000000001d7df	movl	-0x34(%rbp), %edi
000000000001d7e2	callq	_mig_put_reply_port
000000000001d7e7	jmp	0x1d837
000000000001d7e9	testl	%ebx, %ebx
000000000001d7eb	jne	0x1d818
000000000001d7ed	movl	-0x2c(%rbp), %eax
000000000001d7f0	cmpl	$0x47, %eax
000000000001d7f3	je	0x1d822
000000000001d7f5	cmpl	$0xdd6, %eax
000000000001d7fa	jne	0x1d829
000000000001d7fc	movl	-0x40(%rbp), %eax
000000000001d7ff	movl	-0x3c(%rbp), %ecx
000000000001d802	movl	$0xfffffed4, %ebx
000000000001d807	testl	%eax, %eax
000000000001d809	js	0x1d842
000000000001d80b	cmpl	$0x24, %ecx
000000000001d80e	jne	0x1d82e
000000000001d810	cmpl	$0x0, -0x20(%rbp)
000000000001d814	jne	0x1d84d
000000000001d816	jmp	0x1d82e
000000000001d818	movl	-0x34(%rbp), %edi
000000000001d81b	callq	_mig_dealloc_reply_port
000000000001d820	jmp	0x1d837
000000000001d822	movl	$0xfffffecc, %ebx
000000000001d827	jmp	0x1d82e
000000000001d829	movl	$0xfffffed3, %ebx
000000000001d82e	leaq	-0x40(%rbp), %rdi
000000000001d832	callq	_mach_msg_destroy
000000000001d837	movl	%ebx, %eax
000000000001d839	addq	$0x40, %rsp
000000000001d83d	popq	%rbx
000000000001d83e	popq	%r14
000000000001d840	popq	%rbp
000000000001d841	retq
000000000001d842	cmpl	$0x28, %ecx
000000000001d845	jne	0x1d82e
000000000001d847	cmpl	$0x1, -0x28(%rbp)
000000000001d84b	jne	0x1d82e
000000000001d84d	movl	$0xfffffed4, %ebx
000000000001d852	cmpl	$0x0, -0x38(%rbp)
000000000001d856	jne	0x1d82e
000000000001d858	testl	%eax, %eax
000000000001d85a	js	0x1d865
000000000001d85c	movl	-0x20(%rbp), %ebx
000000000001d85f	testl	%ebx, %ebx
000000000001d861	jne	0x1d82e
000000000001d863	jmp	0x1d873
000000000001d865	movzwl	-0x1a(%rbp), %eax
000000000001d869	shll	$0x10, %eax
000000000001d86c	cmpl	$0x110000, %eax
000000000001d871	jne	0x1d82e
000000000001d873	movl	-0x24(%rbp), %eax
000000000001d876	movl	%eax, (%r14)
000000000001d879	xorl	%ebx, %ebx
000000000001d87b	jmp	0x1d837
_task_map_corpse_info:
000000000001d87d	pushq	%rbp
000000000001d87e	movq	%rsp, %rbp
000000000001d881	pushq	%r15
000000000001d883	pushq	%r14
000000000001d885	pushq	%rbx
000000000001d886	subq	$0x48, %rsp
000000000001d88a	movq	%rcx, %r14
000000000001d88d	movq	%rdx, %r15
000000000001d890	leaq	-0x50(%rbp), %rbx
000000000001d894	movl	$0x1, 0x18(%rbx)
000000000001d89b	movl	%esi, 0x1c(%rbx)
000000000001d89e	movl	$0x130000, 0x24(%rbx)
000000000001d8a5	movl	$0x80001513, (%rbx)
000000000001d8ab	movl	%edi, 0x8(%rbx)
000000000001d8ae	callq	_mig_get_reply_port
000000000001d8b3	movl	%eax, 0xc(%rbx)
000000000001d8b6	movabsq	$0xd7300000000, %rcx
000000000001d8c0	movq	%rcx, 0x10(%rbx)
000000000001d8c4	movl	$0x0, (%rsp)
000000000001d8cb	movq	%rbx, %rdi
000000000001d8ce	movl	$0x3, %esi
000000000001d8d3	movl	$0x28, %edx
000000000001d8d8	movl	$0x38, %ecx
000000000001d8dd	movl	%eax, %r8d
000000000001d8e0	xorl	%r9d, %r9d
000000000001d8e3	callq	_mach_msg
000000000001d8e8	movl	%eax, %ebx
000000000001d8ea	leal	-0x10000002(%rbx), %eax
000000000001d8f0	cmpl	$0xe, %eax
000000000001d8f3	ja	0x1d909
000000000001d8f5	movl	$0x4003, %ecx
000000000001d8fa	btl	%eax, %ecx
000000000001d8fd	jae	0x1d909
000000000001d8ff	movl	-0x44(%rbp), %edi
000000000001d902	callq	_mig_put_reply_port
000000000001d907	jmp	0x1d977
000000000001d909	testl	%ebx, %ebx
000000000001d90b	jne	0x1d958
000000000001d90d	movl	-0x3c(%rbp), %eax
000000000001d910	cmpl	$0x47, %eax
000000000001d913	je	0x1d962
000000000001d915	cmpl	$0xdd7, %eax
000000000001d91a	jne	0x1d969
000000000001d91c	movl	$0xfffffed4, %ebx
000000000001d921	cmpl	$0x0, -0x50(%rbp)
000000000001d925	js	0x1d96e
000000000001d927	movl	-0x4c(%rbp), %eax
000000000001d92a	cmpl	$0x30, %eax
000000000001d92d	je	0x1d93a
000000000001d92f	cmpl	$0x24, %eax
000000000001d932	jne	0x1d96e
000000000001d934	cmpl	$0x0, -0x30(%rbp)
000000000001d938	je	0x1d96e
000000000001d93a	cmpl	$0x0, -0x48(%rbp)
000000000001d93e	jne	0x1d96e
000000000001d940	movl	-0x30(%rbp), %ebx
000000000001d943	testl	%ebx, %ebx
000000000001d945	jne	0x1d96e
000000000001d947	movq	-0x2c(%rbp), %rax
000000000001d94b	movq	%rax, (%r15)
000000000001d94e	movl	-0x24(%rbp), %eax
000000000001d951	movl	%eax, (%r14)
000000000001d954	xorl	%ebx, %ebx
000000000001d956	jmp	0x1d977
000000000001d958	movl	-0x44(%rbp), %edi
000000000001d95b	callq	_mig_dealloc_reply_port
000000000001d960	jmp	0x1d977
000000000001d962	movl	$0xfffffecc, %ebx
000000000001d967	jmp	0x1d96e
000000000001d969	movl	$0xfffffed3, %ebx
000000000001d96e	leaq	-0x50(%rbp), %rdi
000000000001d972	callq	_mach_msg_destroy
000000000001d977	movl	%ebx, %eax
000000000001d979	addq	$0x48, %rsp
000000000001d97d	popq	%rbx
000000000001d97e	popq	%r14
000000000001d980	popq	%r15
000000000001d982	popq	%rbp
000000000001d983	retq
_task_register_dyld_image_infos:
000000000001d984	pushq	%rbp
000000000001d985	movq	%rsp, %rbp
000000000001d988	pushq	%rbx
000000000001d989	subq	$0x48, %rsp
000000000001d98d	leaq	-0x40(%rbp), %rbx
000000000001d991	movl	$0x1, 0x18(%rbx)
000000000001d998	movq	%rsi, 0x1c(%rbx)
000000000001d99c	leal	(,%rdx,8), %eax
000000000001d9a3	leal	(%rax,%rax,4), %eax
000000000001d9a6	movl	%eax, 0x28(%rbx)
000000000001d9a9	movl	$0x1000100, 0x24(%rbx)
000000000001d9b0	leaq	_NDR_record(%rip), %rax
000000000001d9b7	movq	(%rax), %rax
000000000001d9ba	movq	%rax, 0x2c(%rbx)
000000000001d9be	movl	%edx, 0x34(%rbx)
000000000001d9c1	movl	$0x80001513, (%rbx)
000000000001d9c7	movl	%edi, 0x8(%rbx)
000000000001d9ca	callq	_mig_get_reply_port
000000000001d9cf	movl	%eax, 0xc(%rbx)
000000000001d9d2	movabsq	$0xd7400000000, %rcx
000000000001d9dc	movq	%rcx, 0x10(%rbx)
000000000001d9e0	movl	$0x0, (%rsp)
000000000001d9e7	movq	%rbx, %rdi
000000000001d9ea	movl	$0x3, %esi
000000000001d9ef	movl	$0x38, %edx
000000000001d9f4	movl	$0x2c, %ecx
000000000001d9f9	movl	%eax, %r8d
000000000001d9fc	xorl	%r9d, %r9d
000000000001d9ff	callq	_mach_msg
000000000001da04	movl	%eax, %ebx
000000000001da06	leal	-0x10000002(%rbx), %eax
000000000001da0c	cmpl	$0xe, %eax
000000000001da0f	ja	0x1da25
000000000001da11	movl	$0x4003, %ecx
000000000001da16	btl	%eax, %ecx
000000000001da19	jae	0x1da25
000000000001da1b	movl	-0x34(%rbp), %edi
000000000001da1e	callq	_mig_put_reply_port
000000000001da23	jmp	0x1da7a
000000000001da25	testl	%ebx, %ebx
000000000001da27	jne	0x1da5b
000000000001da29	movl	-0x2c(%rbp), %eax
000000000001da2c	cmpl	$0x47, %eax
000000000001da2f	je	0x1da65
000000000001da31	cmpl	$0xdd8, %eax
000000000001da36	jne	0x1da6c
000000000001da38	movl	$0xfffffed4, %ebx
000000000001da3d	cmpl	$0x0, -0x40(%rbp)
000000000001da41	js	0x1da71
000000000001da43	cmpl	$0x24, -0x3c(%rbp)
000000000001da47	jne	0x1da71
000000000001da49	movl	-0x38(%rbp), %eax
000000000001da4c	testl	%eax, %eax
000000000001da4e	jne	0x1da71
000000000001da50	movl	-0x20(%rbp), %ebx
000000000001da53	testl	%ebx, %ebx
000000000001da55	jne	0x1da71
000000000001da57	xorl	%ebx, %ebx
000000000001da59	jmp	0x1da7a
000000000001da5b	movl	-0x34(%rbp), %edi
000000000001da5e	callq	_mig_dealloc_reply_port
000000000001da63	jmp	0x1da7a
000000000001da65	movl	$0xfffffecc, %ebx
000000000001da6a	jmp	0x1da71
000000000001da6c	movl	$0xfffffed3, %ebx
000000000001da71	leaq	-0x40(%rbp), %rdi
000000000001da75	callq	_mach_msg_destroy
000000000001da7a	movl	%ebx, %eax
000000000001da7c	addq	$0x48, %rsp
000000000001da80	popq	%rbx
000000000001da81	popq	%rbp
000000000001da82	retq
_task_unregister_dyld_image_infos:
000000000001da83	pushq	%rbp
000000000001da84	movq	%rsp, %rbp
000000000001da87	pushq	%rbx
000000000001da88	subq	$0x48, %rsp
000000000001da8c	leaq	-0x40(%rbp), %rbx
000000000001da90	movl	$0x1, 0x18(%rbx)
000000000001da97	movq	%rsi, 0x1c(%rbx)
000000000001da9b	leal	(,%rdx,8), %eax
000000000001daa2	leal	(%rax,%rax,4), %eax
000000000001daa5	movl	%eax, 0x28(%rbx)
000000000001daa8	movl	$0x1000100, 0x24(%rbx)
000000000001daaf	leaq	_NDR_record(%rip), %rax
000000000001dab6	movq	(%rax), %rax
000000000001dab9	movq	%rax, 0x2c(%rbx)
000000000001dabd	movl	%edx, 0x34(%rbx)
000000000001dac0	movl	$0x80001513, (%rbx)
000000000001dac6	movl	%edi, 0x8(%rbx)
000000000001dac9	callq	_mig_get_reply_port
000000000001dace	movl	%eax, 0xc(%rbx)
000000000001dad1	movabsq	$0xd7500000000, %rcx
000000000001dadb	movq	%rcx, 0x10(%rbx)
000000000001dadf	movl	$0x0, (%rsp)
000000000001dae6	movq	%rbx, %rdi
000000000001dae9	movl	$0x3, %esi
000000000001daee	movl	$0x38, %edx
000000000001daf3	movl	$0x2c, %ecx
000000000001daf8	movl	%eax, %r8d
000000000001dafb	xorl	%r9d, %r9d
000000000001dafe	callq	_mach_msg
000000000001db03	movl	%eax, %ebx
000000000001db05	leal	-0x10000002(%rbx), %eax
000000000001db0b	cmpl	$0xe, %eax
000000000001db0e	ja	0x1db24
000000000001db10	movl	$0x4003, %ecx
000000000001db15	btl	%eax, %ecx
000000000001db18	jae	0x1db24
000000000001db1a	movl	-0x34(%rbp), %edi
000000000001db1d	callq	_mig_put_reply_port
000000000001db22	jmp	0x1db79
000000000001db24	testl	%ebx, %ebx
000000000001db26	jne	0x1db5a
000000000001db28	movl	-0x2c(%rbp), %eax
000000000001db2b	cmpl	$0x47, %eax
000000000001db2e	je	0x1db64
000000000001db30	cmpl	$0xdd9, %eax
000000000001db35	jne	0x1db6b
000000000001db37	movl	$0xfffffed4, %ebx
000000000001db3c	cmpl	$0x0, -0x40(%rbp)
000000000001db40	js	0x1db70
000000000001db42	cmpl	$0x24, -0x3c(%rbp)
000000000001db46	jne	0x1db70
000000000001db48	movl	-0x38(%rbp), %eax
000000000001db4b	testl	%eax, %eax
000000000001db4d	jne	0x1db70
000000000001db4f	movl	-0x20(%rbp), %ebx
000000000001db52	testl	%ebx, %ebx
000000000001db54	jne	0x1db70
000000000001db56	xorl	%ebx, %ebx
000000000001db58	jmp	0x1db79
000000000001db5a	movl	-0x34(%rbp), %edi
000000000001db5d	callq	_mig_dealloc_reply_port
000000000001db62	jmp	0x1db79
000000000001db64	movl	$0xfffffecc, %ebx
000000000001db69	jmp	0x1db70
000000000001db6b	movl	$0xfffffed3, %ebx
000000000001db70	leaq	-0x40(%rbp), %rdi
000000000001db74	callq	_mach_msg_destroy
000000000001db79	movl	%ebx, %eax
000000000001db7b	addq	$0x48, %rsp
000000000001db7f	popq	%rbx
000000000001db80	popq	%rbp
000000000001db81	retq
_task_get_dyld_image_infos:
000000000001db82	pushq	%rbp
000000000001db83	movq	%rsp, %rbp
000000000001db86	pushq	%r15
000000000001db88	pushq	%r14
000000000001db8a	pushq	%rbx
000000000001db8b	subq	$0x48, %rsp
000000000001db8f	movq	%rdx, %r14
000000000001db92	movq	%rsi, %r15
000000000001db95	leaq	-0x58(%rbp), %rbx
000000000001db99	movl	$0x1513, (%rbx)
000000000001db9f	movl	%edi, 0x8(%rbx)
000000000001dba2	callq	_mig_get_reply_port
000000000001dba7	movl	%eax, 0xc(%rbx)
000000000001dbaa	movabsq	$0xd7600000000, %rcx
000000000001dbb4	movq	%rcx, 0x10(%rbx)
000000000001dbb8	movl	$0x0, (%rsp)
000000000001dbbf	movq	%rbx, %rdi
000000000001dbc2	movl	$0x3, %esi
000000000001dbc7	movl	$0x18, %edx
000000000001dbcc	movl	$0x40, %ecx
000000000001dbd1	movl	%eax, %r8d
000000000001dbd4	xorl	%r9d, %r9d
000000000001dbd7	callq	_mach_msg
000000000001dbdc	movl	%eax, %ebx
000000000001dbde	leal	-0x10000002(%rbx), %eax
000000000001dbe4	cmpl	$0xe, %eax
000000000001dbe7	ja	0x1dbfd
000000000001dbe9	movl	$0x4003, %ecx
000000000001dbee	btl	%eax, %ecx
000000000001dbf1	jae	0x1dbfd
000000000001dbf3	movl	-0x4c(%rbp), %edi
000000000001dbf6	callq	_mig_put_reply_port
000000000001dbfb	jmp	0x1dc4b
000000000001dbfd	testl	%ebx, %ebx
000000000001dbff	jne	0x1dc2c
000000000001dc01	movl	-0x44(%rbp), %eax
000000000001dc04	cmpl	$0x47, %eax
000000000001dc07	je	0x1dc36
000000000001dc09	cmpl	$0xdda, %eax
000000000001dc0e	jne	0x1dc3d
000000000001dc10	movl	-0x58(%rbp), %eax
000000000001dc13	movl	-0x54(%rbp), %ecx
000000000001dc16	movl	$0xfffffed4, %ebx
000000000001dc1b	testl	%eax, %eax
000000000001dc1d	js	0x1dc58
000000000001dc1f	cmpl	$0x24, %ecx
000000000001dc22	jne	0x1dc42
000000000001dc24	cmpl	$0x0, -0x38(%rbp)
000000000001dc28	jne	0x1dc63
000000000001dc2a	jmp	0x1dc42
000000000001dc2c	movl	-0x4c(%rbp), %edi
000000000001dc2f	callq	_mig_dealloc_reply_port
000000000001dc34	jmp	0x1dc4b
000000000001dc36	movl	$0xfffffecc, %ebx
000000000001dc3b	jmp	0x1dc42
000000000001dc3d	movl	$0xfffffed3, %ebx
000000000001dc42	leaq	-0x58(%rbp), %rdi
000000000001dc46	callq	_mach_msg_destroy
000000000001dc4b	movl	%ebx, %eax
000000000001dc4d	addq	$0x48, %rsp
000000000001dc51	popq	%rbx
000000000001dc52	popq	%r14
000000000001dc54	popq	%r15
000000000001dc56	popq	%rbp
000000000001dc57	retq
000000000001dc58	cmpl	$0x38, %ecx
000000000001dc5b	jne	0x1dc42
000000000001dc5d	cmpl	$0x1, -0x40(%rbp)
000000000001dc61	jne	0x1dc42
000000000001dc63	movl	$0xfffffed4, %ebx
000000000001dc68	cmpl	$0x0, -0x50(%rbp)
000000000001dc6c	jne	0x1dc42
000000000001dc6e	testl	%eax, %eax
000000000001dc70	js	0x1dc7e
000000000001dc72	movl	-0x38(%rbp), %ebx
000000000001dc75	testl	%ebx, %ebx
000000000001dc77	jne	0x1dc42
000000000001dc79	movl	-0x24(%rbp), %eax
000000000001dc7c	jmp	0x1dca1
000000000001dc7e	movzbl	-0x31(%rbp), %eax
000000000001dc82	shll	$0x18, %eax
000000000001dc85	cmpl	$0x1000000, %eax
000000000001dc8a	jne	0x1dc42
000000000001dc8c	movl	-0x30(%rbp), %ecx
000000000001dc8f	movl	$0xcccccccd, %eax
000000000001dc94	imulq	%rcx, %rax
000000000001dc98	shrq	$0x25, %rax
000000000001dc9c	cmpl	-0x24(%rbp), %eax
000000000001dc9f	jne	0x1dc42
000000000001dca1	movq	-0x3c(%rbp), %rcx
000000000001dca5	movq	%rcx, (%r15)
000000000001dca8	movl	%eax, (%r14)
000000000001dcab	xorl	%ebx, %ebx
000000000001dcad	jmp	0x1dc4b
_task_register_dyld_shared_cache_image_info:
000000000001dcaf	pushq	%rbp
000000000001dcb0	movq	%rsp, %rbp
000000000001dcb3	pushq	%rbx
000000000001dcb4	subq	$0x58, %rsp
000000000001dcb8	leaq	_NDR_record(%rip), %rax
000000000001dcbf	movq	(%rax), %rax
000000000001dcc2	leaq	-0x58(%rbp), %rbx
000000000001dcc6	movq	%rax, 0x18(%rbx)
000000000001dcca	movq	0x10(%rbp), %rax
000000000001dcce	movq	0x18(%rbp), %rcx
000000000001dcd2	movq	%rax, 0x20(%rbx)
000000000001dcd6	movq	%rcx, 0x28(%rbx)
000000000001dcda	movq	0x20(%rbp), %rax
000000000001dcde	movq	%rax, 0x30(%rbx)
000000000001dce2	movq	0x28(%rbp), %rax
000000000001dce6	movq	%rax, 0x38(%rbx)
000000000001dcea	movq	0x30(%rbp), %rax
000000000001dcee	movq	%rax, 0x40(%rbx)
000000000001dcf2	movl	%esi, 0x48(%rbx)
000000000001dcf5	movl	%edx, 0x4c(%rbx)
000000000001dcf8	movl	$0x1513, (%rbx)
000000000001dcfe	movl	%edi, 0x8(%rbx)
000000000001dd01	callq	_mig_get_reply_port
000000000001dd06	movl	%eax, 0xc(%rbx)
000000000001dd09	movabsq	$0xd7700000000, %rcx
000000000001dd13	movq	%rcx, 0x10(%rbx)
000000000001dd17	movl	$0x0, (%rsp)
000000000001dd1e	movq	%rbx, %rdi
000000000001dd21	movl	$0x3, %esi
000000000001dd26	movl	$0x50, %edx
000000000001dd2b	movl	$0x2c, %ecx
000000000001dd30	movl	%eax, %r8d
000000000001dd33	xorl	%r9d, %r9d
000000000001dd36	callq	_mach_msg
000000000001dd3b	movl	%eax, %ebx
000000000001dd3d	leal	-0x10000002(%rbx), %eax
000000000001dd43	cmpl	$0xe, %eax
000000000001dd46	ja	0x1dd5c
000000000001dd48	movl	$0x4003, %ecx
000000000001dd4d	btl	%eax, %ecx
000000000001dd50	jae	0x1dd5c
000000000001dd52	movl	-0x4c(%rbp), %edi
000000000001dd55	callq	_mig_put_reply_port
000000000001dd5a	jmp	0x1ddb1
000000000001dd5c	testl	%ebx, %ebx
000000000001dd5e	jne	0x1dd92
000000000001dd60	movl	-0x44(%rbp), %eax
000000000001dd63	cmpl	$0x47, %eax
000000000001dd66	je	0x1dd9c
000000000001dd68	cmpl	$0xddb, %eax
000000000001dd6d	jne	0x1dda3
000000000001dd6f	movl	$0xfffffed4, %ebx
000000000001dd74	cmpl	$0x0, -0x58(%rbp)
000000000001dd78	js	0x1dda8
000000000001dd7a	cmpl	$0x24, -0x54(%rbp)
000000000001dd7e	jne	0x1dda8
000000000001dd80	movl	-0x50(%rbp), %eax
000000000001dd83	testl	%eax, %eax
000000000001dd85	jne	0x1dda8
000000000001dd87	movl	-0x38(%rbp), %ebx
000000000001dd8a	testl	%ebx, %ebx
000000000001dd8c	jne	0x1dda8
000000000001dd8e	xorl	%ebx, %ebx
000000000001dd90	jmp	0x1ddb1
000000000001dd92	movl	-0x4c(%rbp), %edi
000000000001dd95	callq	_mig_dealloc_reply_port
000000000001dd9a	jmp	0x1ddb1
000000000001dd9c	movl	$0xfffffecc, %ebx
000000000001dda1	jmp	0x1dda8
000000000001dda3	movl	$0xfffffed3, %ebx
000000000001dda8	leaq	-0x58(%rbp), %rdi
000000000001ddac	callq	_mach_msg_destroy
000000000001ddb1	movl	%ebx, %eax
000000000001ddb3	addq	$0x58, %rsp
000000000001ddb7	popq	%rbx
000000000001ddb8	popq	%rbp
000000000001ddb9	retq
_task_register_dyld_set_dyld_state:
000000000001ddba	pushq	%rbp
000000000001ddbb	movq	%rsp, %rbp
000000000001ddbe	pushq	%rbx
000000000001ddbf	subq	$0x38, %rsp
000000000001ddc3	leaq	_NDR_record(%rip), %rax
000000000001ddca	movq	(%rax), %rax
000000000001ddcd	leaq	-0x38(%rbp), %rbx
000000000001ddd1	movq	%rax, 0x18(%rbx)
000000000001ddd5	movb	%sil, 0x20(%rbx)
000000000001ddd9	movl	$0x1513, (%rbx)
000000000001dddf	movl	%edi, 0x8(%rbx)
000000000001dde2	callq	_mig_get_reply_port
000000000001dde7	movl	%eax, 0xc(%rbx)
000000000001ddea	movabsq	$0xd7800000000, %rcx
000000000001ddf4	movq	%rcx, 0x10(%rbx)
000000000001ddf8	movl	$0x0, (%rsp)
000000000001ddff	movq	%rbx, %rdi
000000000001de02	movl	$0x3, %esi
000000000001de07	movl	$0x24, %edx
000000000001de0c	movl	$0x2c, %ecx
000000000001de11	movl	%eax, %r8d
000000000001de14	xorl	%r9d, %r9d
000000000001de17	callq	_mach_msg
000000000001de1c	movl	%eax, %ebx
000000000001de1e	leal	-0x10000002(%rbx), %eax
000000000001de24	cmpl	$0xe, %eax
000000000001de27	ja	0x1de3d
000000000001de29	movl	$0x4003, %ecx
000000000001de2e	btl	%eax, %ecx
000000000001de31	jae	0x1de3d
000000000001de33	movl	-0x2c(%rbp), %edi
000000000001de36	callq	_mig_put_reply_port
000000000001de3b	jmp	0x1de92
000000000001de3d	testl	%ebx, %ebx
000000000001de3f	jne	0x1de73
000000000001de41	movl	-0x24(%rbp), %eax
000000000001de44	cmpl	$0x47, %eax
000000000001de47	je	0x1de7d
000000000001de49	cmpl	$0xddc, %eax
000000000001de4e	jne	0x1de84
000000000001de50	movl	$0xfffffed4, %ebx
000000000001de55	cmpl	$0x0, -0x38(%rbp)
000000000001de59	js	0x1de89
000000000001de5b	cmpl	$0x24, -0x34(%rbp)
000000000001de5f	jne	0x1de89
000000000001de61	movl	-0x30(%rbp), %eax
000000000001de64	testl	%eax, %eax
000000000001de66	jne	0x1de89
000000000001de68	movl	-0x18(%rbp), %ebx
000000000001de6b	testl	%ebx, %ebx
000000000001de6d	jne	0x1de89
000000000001de6f	xorl	%ebx, %ebx
000000000001de71	jmp	0x1de92
000000000001de73	movl	-0x2c(%rbp), %edi
000000000001de76	callq	_mig_dealloc_reply_port
000000000001de7b	jmp	0x1de92
000000000001de7d	movl	$0xfffffecc, %ebx
000000000001de82	jmp	0x1de89
000000000001de84	movl	$0xfffffed3, %ebx
000000000001de89	leaq	-0x38(%rbp), %rdi
000000000001de8d	callq	_mach_msg_destroy
000000000001de92	movl	%ebx, %eax
000000000001de94	addq	$0x38, %rsp
000000000001de98	popq	%rbx
000000000001de99	popq	%rbp
000000000001de9a	retq
_task_register_dyld_get_process_state:
000000000001de9b	pushq	%rbp
000000000001de9c	movq	%rsp, %rbp
000000000001de9f	pushq	%r14
000000000001dea1	pushq	%rbx
000000000001dea2	subq	$0x80, %rsp
000000000001dea9	movq	%rsi, %r14
000000000001deac	leaq	-0x88(%rbp), %rbx
000000000001deb3	movl	$0x1513, (%rbx)
000000000001deb9	movl	%edi, 0x8(%rbx)
000000000001debc	callq	_mig_get_reply_port
000000000001dec1	movl	%eax, 0xc(%rbx)
000000000001dec4	movabsq	$0xd7900000000, %rcx
000000000001dece	movq	%rcx, 0x10(%rbx)
000000000001ded2	movl	$0x0, (%rsp)
000000000001ded9	movq	%rbx, %rdi
000000000001dedc	movl	$0x3, %esi
000000000001dee1	movl	$0x18, %edx
000000000001dee6	movl	$0x74, %ecx
000000000001deeb	movl	%eax, %r8d
000000000001deee	xorl	%r9d, %r9d
000000000001def1	callq	_mach_msg
000000000001def6	movl	%eax, %ebx
000000000001def8	leal	-0x10000002(%rbx), %eax
000000000001defe	cmpl	$0xe, %eax
000000000001df01	ja	0x1df17
000000000001df03	movl	$0x4003, %ecx
000000000001df08	btl	%eax, %ecx
000000000001df0b	jae	0x1df17
000000000001df0d	movl	-0x7c(%rbp), %edi
000000000001df10	callq	_mig_put_reply_port
000000000001df15	jmp	0x1df8f
000000000001df17	testl	%ebx, %ebx
000000000001df19	jne	0x1df6d
000000000001df1b	movl	-0x74(%rbp), %eax
000000000001df1e	cmpl	$0x47, %eax
000000000001df21	je	0x1df77
000000000001df23	cmpl	$0xddd, %eax
000000000001df28	jne	0x1df7e
000000000001df2a	movl	$0xfffffed4, %ebx
000000000001df2f	cmpl	$0x0, -0x88(%rbp)
000000000001df36	js	0x1df83
000000000001df38	movl	-0x84(%rbp), %eax
000000000001df3e	cmpl	$0x6c, %eax
000000000001df41	je	0x1df4e
000000000001df43	cmpl	$0x24, %eax
000000000001df46	jne	0x1df83
000000000001df48	cmpl	$0x0, -0x68(%rbp)
000000000001df4c	je	0x1df83
000000000001df4e	cmpl	$0x0, -0x80(%rbp)
000000000001df52	jne	0x1df83
000000000001df54	movl	-0x68(%rbp), %ebx
000000000001df57	testl	%ebx, %ebx
000000000001df59	jne	0x1df83
000000000001df5b	leaq	-0x64(%rbp), %rsi
000000000001df5f	movl	$0x12, %ecx
000000000001df64	movq	%r14, %rdi
000000000001df67	rep		movsl	(%rsi), %es:(%rdi)
000000000001df69	xorl	%ebx, %ebx
000000000001df6b	jmp	0x1df8f
000000000001df6d	movl	-0x7c(%rbp), %edi
000000000001df70	callq	_mig_dealloc_reply_port
000000000001df75	jmp	0x1df8f
000000000001df77	movl	$0xfffffecc, %ebx
000000000001df7c	jmp	0x1df83
000000000001df7e	movl	$0xfffffed3, %ebx
000000000001df83	leaq	-0x88(%rbp), %rdi
000000000001df8a	callq	_mach_msg_destroy
000000000001df8f	movl	%ebx, %eax
000000000001df91	addq	$0x80, %rsp
000000000001df98	popq	%rbx
000000000001df99	popq	%r14
000000000001df9b	popq	%rbp
000000000001df9c	retq
_task_map_corpse_info_64:
000000000001df9d	pushq	%rbp
000000000001df9e	movq	%rsp, %rbp
000000000001dfa1	pushq	%r15
000000000001dfa3	pushq	%r14
000000000001dfa5	pushq	%rbx
000000000001dfa6	subq	$0x48, %rsp
000000000001dfaa	movq	%rcx, %r14
000000000001dfad	movq	%rdx, %r15
000000000001dfb0	leaq	-0x58(%rbp), %rbx
000000000001dfb4	movl	$0x1, 0x18(%rbx)
000000000001dfbb	movl	%esi, 0x1c(%rbx)
000000000001dfbe	movl	$0x130000, 0x24(%rbx)
000000000001dfc5	movl	$0x80001513, (%rbx)
000000000001dfcb	movl	%edi, 0x8(%rbx)
000000000001dfce	callq	_mig_get_reply_port
000000000001dfd3	movl	%eax, 0xc(%rbx)
000000000001dfd6	movabsq	$0xd7a00000000, %rcx
000000000001dfe0	movq	%rcx, 0x10(%rbx)
000000000001dfe4	movl	$0x0, (%rsp)
000000000001dfeb	movq	%rbx, %rdi
000000000001dfee	movl	$0x3, %esi
000000000001dff3	movl	$0x28, %edx
000000000001dff8	movl	$0x3c, %ecx
000000000001dffd	movl	%eax, %r8d
000000000001e000	xorl	%r9d, %r9d
000000000001e003	callq	_mach_msg
000000000001e008	movl	%eax, %ebx
000000000001e00a	leal	-0x10000002(%rbx), %eax
000000000001e010	cmpl	$0xe, %eax
000000000001e013	ja	0x1e029
000000000001e015	movl	$0x4003, %ecx
000000000001e01a	btl	%eax, %ecx
000000000001e01d	jae	0x1e029
000000000001e01f	movl	-0x4c(%rbp), %edi
000000000001e022	callq	_mig_put_reply_port
000000000001e027	jmp	0x1e098
000000000001e029	testl	%ebx, %ebx
000000000001e02b	jne	0x1e079
000000000001e02d	movl	-0x44(%rbp), %eax
000000000001e030	cmpl	$0x47, %eax
000000000001e033	je	0x1e083
000000000001e035	cmpl	$0xdde, %eax
000000000001e03a	jne	0x1e08a
000000000001e03c	movl	$0xfffffed4, %ebx
000000000001e041	cmpl	$0x0, -0x58(%rbp)
000000000001e045	js	0x1e08f
000000000001e047	movl	-0x54(%rbp), %eax
000000000001e04a	cmpl	$0x34, %eax
000000000001e04d	je	0x1e05a
000000000001e04f	cmpl	$0x24, %eax
000000000001e052	jne	0x1e08f
000000000001e054	cmpl	$0x0, -0x38(%rbp)
000000000001e058	je	0x1e08f
000000000001e05a	cmpl	$0x0, -0x50(%rbp)
000000000001e05e	jne	0x1e08f
000000000001e060	movl	-0x38(%rbp), %ebx
000000000001e063	testl	%ebx, %ebx
000000000001e065	jne	0x1e08f
000000000001e067	movq	-0x34(%rbp), %rax
000000000001e06b	movq	%rax, (%r15)
000000000001e06e	movq	-0x2c(%rbp), %rax
000000000001e072	movq	%rax, (%r14)
000000000001e075	xorl	%ebx, %ebx
000000000001e077	jmp	0x1e098
000000000001e079	movl	-0x4c(%rbp), %edi
000000000001e07c	callq	_mig_dealloc_reply_port
000000000001e081	jmp	0x1e098
000000000001e083	movl	$0xfffffecc, %ebx
000000000001e088	jmp	0x1e08f
000000000001e08a	movl	$0xfffffed3, %ebx
000000000001e08f	leaq	-0x58(%rbp), %rdi
000000000001e093	callq	_mach_msg_destroy
000000000001e098	movl	%ebx, %eax
000000000001e09a	addq	$0x48, %rsp
000000000001e09e	popq	%rbx
000000000001e09f	popq	%r14
000000000001e0a1	popq	%r15
000000000001e0a3	popq	%rbp
000000000001e0a4	retq
_task_inspect:
000000000001e0a5	pushq	%rbp
000000000001e0a6	movq	%rsp, %rbp
000000000001e0a9	pushq	%r15
000000000001e0ab	pushq	%r14
000000000001e0ad	pushq	%r12
000000000001e0af	pushq	%rbx
000000000001e0b0	subq	$0x50, %rsp
000000000001e0b4	movq	%rcx, %r15
000000000001e0b7	leaq	_NDR_record(%rip), %rax
000000000001e0be	movq	(%rax), %rax
000000000001e0c1	leaq	-0x60(%rbp), %rbx
000000000001e0c5	movq	%rax, 0x18(%rbx)
000000000001e0c9	movl	%esi, 0x20(%rbx)
000000000001e0cc	movl	(%rcx), %eax
000000000001e0ce	movl	$0x4, %ecx
000000000001e0d3	cmpl	%ecx, %eax
000000000001e0d5	cmovbl	%eax, %ecx
000000000001e0d8	movq	%rdx, %r14
000000000001e0db	movl	%ecx, 0x24(%rbx)
000000000001e0de	movl	$0x1513, (%rbx)
000000000001e0e4	movl	%edi, 0x8(%rbx)
000000000001e0e7	callq	_mig_get_reply_port
000000000001e0ec	movl	%eax, 0xc(%rbx)
000000000001e0ef	movabsq	$0xd7b00000000, %rcx
000000000001e0f9	movq	%rcx, 0x10(%rbx)
000000000001e0fd	movl	$0x0, (%rsp)
000000000001e104	movq	%rbx, %rdi
000000000001e107	movl	$0x3, %esi
000000000001e10c	movl	$0x28, %edx
000000000001e111	movl	$0x40, %ecx
000000000001e116	movl	%eax, %r8d
000000000001e119	xorl	%r9d, %r9d
000000000001e11c	callq	_mach_msg
000000000001e121	movl	%eax, %ebx
000000000001e123	leal	-0x10000002(%rbx), %eax
000000000001e129	cmpl	$0xe, %eax
000000000001e12c	ja	0x1e142
000000000001e12e	movl	$0x4003, %ecx
000000000001e133	btl	%eax, %ecx
000000000001e136	jae	0x1e142
000000000001e138	movl	-0x54(%rbp), %edi
000000000001e13b	callq	_mig_put_reply_port
000000000001e140	jmp	0x1e19e
000000000001e142	testl	%ebx, %ebx
000000000001e144	jne	0x1e17f
000000000001e146	movl	-0x4c(%rbp), %eax
000000000001e149	cmpl	$0x47, %eax
000000000001e14c	je	0x1e189
000000000001e14e	cmpl	$0xddf, %eax
000000000001e153	jne	0x1e190
000000000001e155	cmpl	$0x0, -0x60(%rbp)
000000000001e159	js	0x1e178
000000000001e15b	movl	-0x5c(%rbp), %eax
000000000001e15e	leal	-0x28(%rax), %ecx
000000000001e161	cmpl	$0x11, %ecx
000000000001e164	jb	0x1e172
000000000001e166	cmpl	$0x24, %eax
000000000001e169	jne	0x1e178
000000000001e16b	movl	-0x40(%rbp), %edx
000000000001e16e	testl	%edx, %edx
000000000001e170	je	0x1e178
000000000001e172	cmpl	$0x0, -0x58(%rbp)
000000000001e176	je	0x1e1ad
000000000001e178	movl	$0xfffffed4, %ebx
000000000001e17d	jmp	0x1e195
000000000001e17f	movl	-0x54(%rbp), %edi
000000000001e182	callq	_mig_dealloc_reply_port
000000000001e187	jmp	0x1e19e
000000000001e189	movl	$0xfffffecc, %ebx
000000000001e18e	jmp	0x1e195
000000000001e190	movl	$0xfffffed3, %ebx
000000000001e195	leaq	-0x60(%rbp), %rdi
000000000001e199	callq	_mach_msg_destroy
000000000001e19e	movl	%ebx, %eax
000000000001e1a0	addq	$0x50, %rsp
000000000001e1a4	popq	%rbx
000000000001e1a5	popq	%r12
000000000001e1a7	popq	%r14
000000000001e1a9	popq	%r15
000000000001e1ab	popq	%rbp
000000000001e1ac	retq
000000000001e1ad	movl	-0x40(%rbp), %ebx
000000000001e1b0	testl	%ebx, %ebx
000000000001e1b2	jne	0x1e195
000000000001e1b4	movl	-0x3c(%rbp), %r12d
000000000001e1b8	cmpl	$0x4, %r12d
000000000001e1bc	ja	0x1e178
000000000001e1be	shrl	$0x2, %ecx
000000000001e1c1	cmpl	%r12d, %ecx
000000000001e1c4	jb	0x1e178
000000000001e1c6	leal	0x28(,%r12,4), %ecx
000000000001e1ce	movl	$0xfffffed4, %ebx
000000000001e1d3	cmpl	%ecx, %eax
000000000001e1d5	jne	0x1e195
000000000001e1d7	movl	(%r15), %edx
000000000001e1da	leaq	-0x38(%rbp), %rsi
000000000001e1de	cmpl	%edx, %r12d
000000000001e1e1	jbe	0x1e1f8
000000000001e1e3	shll	$0x2, %edx
000000000001e1e6	movq	%r14, %rdi
000000000001e1e9	callq	_memcpy
000000000001e1ee	movl	%r12d, (%r15)
000000000001e1f1	movl	$0xfffffecd, %ebx
000000000001e1f6	jmp	0x1e19e
000000000001e1f8	leal	(,%r12,4), %eax
000000000001e200	movl	%eax, %edx
000000000001e202	movq	%r14, %rdi
000000000001e205	callq	_memcpy
000000000001e20a	movl	%r12d, (%r15)
000000000001e20d	xorl	%ebx, %ebx
000000000001e20f	jmp	0x1e19e
_task_get_exc_guard_behavior:
000000000001e211	pushq	%rbp
000000000001e212	movq	%rsp, %rbp
000000000001e215	pushq	%r14
000000000001e217	pushq	%rbx
000000000001e218	subq	$0x40, %rsp
000000000001e21c	movq	%rsi, %r14
000000000001e21f	leaq	-0x40(%rbp), %rbx
000000000001e223	movl	$0x1513, (%rbx)
000000000001e229	movl	%edi, 0x8(%rbx)
000000000001e22c	callq	_mig_get_reply_port
000000000001e231	movl	%eax, 0xc(%rbx)
000000000001e234	movabsq	$0xd7c00000000, %rcx
000000000001e23e	movq	%rcx, 0x10(%rbx)
000000000001e242	movl	$0x0, (%rsp)
000000000001e249	movq	%rbx, %rdi
000000000001e24c	movl	$0x3, %esi
000000000001e251	movl	$0x18, %edx
000000000001e256	movl	$0x30, %ecx
000000000001e25b	movl	%eax, %r8d
000000000001e25e	xorl	%r9d, %r9d
000000000001e261	callq	_mach_msg
000000000001e266	movl	%eax, %ebx
000000000001e268	leal	-0x10000002(%rbx), %eax
000000000001e26e	cmpl	$0xe, %eax
000000000001e271	ja	0x1e287
000000000001e273	movl	$0x4003, %ecx
000000000001e278	btl	%eax, %ecx
000000000001e27b	jae	0x1e287
000000000001e27d	movl	-0x34(%rbp), %edi
000000000001e280	callq	_mig_put_reply_port
000000000001e285	jmp	0x1e2ee
000000000001e287	testl	%ebx, %ebx
000000000001e289	jne	0x1e2cf
000000000001e28b	movl	-0x2c(%rbp), %eax
000000000001e28e	cmpl	$0x47, %eax
000000000001e291	je	0x1e2d9
000000000001e293	cmpl	$0xde0, %eax
000000000001e298	jne	0x1e2e0
000000000001e29a	movl	$0xfffffed4, %ebx
000000000001e29f	cmpl	$0x0, -0x40(%rbp)
000000000001e2a3	js	0x1e2e5
000000000001e2a5	movl	-0x3c(%rbp), %eax
000000000001e2a8	cmpl	$0x28, %eax
000000000001e2ab	je	0x1e2b8
000000000001e2ad	cmpl	$0x24, %eax
000000000001e2b0	jne	0x1e2e5
000000000001e2b2	cmpl	$0x0, -0x20(%rbp)
000000000001e2b6	je	0x1e2e5
000000000001e2b8	cmpl	$0x0, -0x38(%rbp)
000000000001e2bc	jne	0x1e2e5
000000000001e2be	movl	-0x20(%rbp), %ebx
000000000001e2c1	testl	%ebx, %ebx
000000000001e2c3	jne	0x1e2e5
000000000001e2c5	movl	-0x1c(%rbp), %eax
000000000001e2c8	movl	%eax, (%r14)
000000000001e2cb	xorl	%ebx, %ebx
000000000001e2cd	jmp	0x1e2ee
000000000001e2cf	movl	-0x34(%rbp), %edi
000000000001e2d2	callq	_mig_dealloc_reply_port
000000000001e2d7	jmp	0x1e2ee
000000000001e2d9	movl	$0xfffffecc, %ebx
000000000001e2de	jmp	0x1e2e5
000000000001e2e0	movl	$0xfffffed3, %ebx
000000000001e2e5	leaq	-0x40(%rbp), %rdi
000000000001e2e9	callq	_mach_msg_destroy
000000000001e2ee	movl	%ebx, %eax
000000000001e2f0	addq	$0x40, %rsp
000000000001e2f4	popq	%rbx
000000000001e2f5	popq	%r14
000000000001e2f7	popq	%rbp
000000000001e2f8	retq
_task_set_exc_guard_behavior:
000000000001e2f9	pushq	%rbp
000000000001e2fa	movq	%rsp, %rbp
000000000001e2fd	pushq	%rbx
000000000001e2fe	subq	$0x38, %rsp
000000000001e302	leaq	_NDR_record(%rip), %rax
000000000001e309	movq	(%rax), %rax
000000000001e30c	leaq	-0x38(%rbp), %rbx
000000000001e310	movq	%rax, 0x18(%rbx)
000000000001e314	movl	%esi, 0x20(%rbx)
000000000001e317	movl	$0x1513, (%rbx)
000000000001e31d	movl	%edi, 0x8(%rbx)
000000000001e320	callq	_mig_get_reply_port
000000000001e325	movl	%eax, 0xc(%rbx)
000000000001e328	movabsq	$0xd7d00000000, %rcx
000000000001e332	movq	%rcx, 0x10(%rbx)
000000000001e336	movl	$0x0, (%rsp)
000000000001e33d	movq	%rbx, %rdi
000000000001e340	movl	$0x3, %esi
000000000001e345	movl	$0x24, %edx
000000000001e34a	movl	$0x2c, %ecx
000000000001e34f	movl	%eax, %r8d
000000000001e352	xorl	%r9d, %r9d
000000000001e355	callq	_mach_msg
000000000001e35a	movl	%eax, %ebx
000000000001e35c	leal	-0x10000002(%rbx), %eax
000000000001e362	cmpl	$0xe, %eax
000000000001e365	ja	0x1e37b
000000000001e367	movl	$0x4003, %ecx
000000000001e36c	btl	%eax, %ecx
000000000001e36f	jae	0x1e37b
000000000001e371	movl	-0x2c(%rbp), %edi
000000000001e374	callq	_mig_put_reply_port
000000000001e379	jmp	0x1e3d0
000000000001e37b	testl	%ebx, %ebx
000000000001e37d	jne	0x1e3b1
000000000001e37f	movl	-0x24(%rbp), %eax
000000000001e382	cmpl	$0x47, %eax
000000000001e385	je	0x1e3bb
000000000001e387	cmpl	$0xde1, %eax
000000000001e38c	jne	0x1e3c2
000000000001e38e	movl	$0xfffffed4, %ebx
000000000001e393	cmpl	$0x0, -0x38(%rbp)
000000000001e397	js	0x1e3c7
000000000001e399	cmpl	$0x24, -0x34(%rbp)
000000000001e39d	jne	0x1e3c7
000000000001e39f	movl	-0x30(%rbp), %eax
000000000001e3a2	testl	%eax, %eax
000000000001e3a4	jne	0x1e3c7
000000000001e3a6	movl	-0x18(%rbp), %ebx
000000000001e3a9	testl	%ebx, %ebx
000000000001e3ab	jne	0x1e3c7
000000000001e3ad	xorl	%ebx, %ebx
000000000001e3af	jmp	0x1e3d0
000000000001e3b1	movl	-0x2c(%rbp), %edi
000000000001e3b4	callq	_mig_dealloc_reply_port
000000000001e3b9	jmp	0x1e3d0
000000000001e3bb	movl	$0xfffffecc, %ebx
000000000001e3c0	jmp	0x1e3c7
000000000001e3c2	movl	$0xfffffed3, %ebx
000000000001e3c7	leaq	-0x38(%rbp), %rdi
000000000001e3cb	callq	_mach_msg_destroy
000000000001e3d0	movl	%ebx, %eax
000000000001e3d2	addq	$0x38, %rsp
000000000001e3d6	popq	%rbx
000000000001e3d7	popq	%rbp
000000000001e3d8	retq
_thread_terminate:
000000000001e3d9	pushq	%rbp
000000000001e3da	movq	%rsp, %rbp
000000000001e3dd	pushq	%rbx
000000000001e3de	subq	$0x38, %rsp
000000000001e3e2	leaq	-0x38(%rbp), %rbx
000000000001e3e6	movl	$0x1511, (%rbx)
000000000001e3ec	movl	%edi, 0x8(%rbx)
000000000001e3ef	callq	_mig_get_reply_port
000000000001e3f4	movl	%eax, 0xc(%rbx)
000000000001e3f7	movabsq	$0xe1000000000, %rcx
000000000001e401	movq	%rcx, 0x10(%rbx)
000000000001e405	movl	$0x0, (%rsp)
000000000001e40c	movq	%rbx, %rdi
000000000001e40f	movl	$0x3, %esi
000000000001e414	movl	$0x18, %edx
000000000001e419	movl	$0x2c, %ecx
000000000001e41e	movl	%eax, %r8d
000000000001e421	xorl	%r9d, %r9d
000000000001e424	callq	_mach_msg
000000000001e429	movl	%eax, %ebx
000000000001e42b	leal	-0x10000002(%rbx), %eax
000000000001e431	cmpl	$0xe, %eax
000000000001e434	ja	0x1e44a
000000000001e436	movl	$0x4003, %ecx
000000000001e43b	btl	%eax, %ecx
000000000001e43e	jae	0x1e44a
000000000001e440	movl	-0x2c(%rbp), %edi
000000000001e443	callq	_mig_put_reply_port
000000000001e448	jmp	0x1e49f
000000000001e44a	testl	%ebx, %ebx
000000000001e44c	jne	0x1e480
000000000001e44e	movl	-0x24(%rbp), %eax
000000000001e451	cmpl	$0x47, %eax
000000000001e454	je	0x1e48a
000000000001e456	cmpl	$0xe74, %eax
000000000001e45b	jne	0x1e491
000000000001e45d	movl	$0xfffffed4, %ebx
000000000001e462	cmpl	$0x0, -0x38(%rbp)
000000000001e466	js	0x1e496
000000000001e468	cmpl	$0x24, -0x34(%rbp)
000000000001e46c	jne	0x1e496
000000000001e46e	movl	-0x30(%rbp), %eax
000000000001e471	testl	%eax, %eax
000000000001e473	jne	0x1e496
000000000001e475	movl	-0x18(%rbp), %ebx
000000000001e478	testl	%ebx, %ebx
000000000001e47a	jne	0x1e496
000000000001e47c	xorl	%ebx, %ebx
000000000001e47e	jmp	0x1e49f
000000000001e480	movl	-0x2c(%rbp), %edi
000000000001e483	callq	_mig_dealloc_reply_port
000000000001e488	jmp	0x1e49f
000000000001e48a	movl	$0xfffffecc, %ebx
000000000001e48f	jmp	0x1e496
000000000001e491	movl	$0xfffffed3, %ebx
000000000001e496	leaq	-0x38(%rbp), %rdi
000000000001e49a	callq	_mach_msg_destroy
000000000001e49f	movl	%ebx, %eax
000000000001e4a1	addq	$0x38, %rsp
000000000001e4a5	popq	%rbx
000000000001e4a6	popq	%rbp
000000000001e4a7	retq
_act_get_state:
000000000001e4a8	pushq	%rbp
000000000001e4a9	movq	%rsp, %rbp
000000000001e4ac	pushq	%r15
000000000001e4ae	pushq	%r14
000000000001e4b0	pushq	%r12
000000000001e4b2	pushq	%rbx
000000000001e4b3	subq	$0x9d0, %rsp
000000000001e4ba	movq	%rcx, %r15
000000000001e4bd	leaq	_NDR_record(%rip), %rax
000000000001e4c4	movq	(%rax), %rax
000000000001e4c7	leaq	-0x9e8(%rbp), %rbx
000000000001e4ce	movq	%rax, 0x18(%rbx)
000000000001e4d2	movl	%esi, 0x20(%rbx)
000000000001e4d5	movl	(%rcx), %eax
000000000001e4d7	movl	$0x266, %ecx
000000000001e4dc	cmpl	%ecx, %eax
000000000001e4de	cmovbl	%eax, %ecx
000000000001e4e1	movq	%rdx, %r14
000000000001e4e4	movl	%ecx, 0x24(%rbx)
000000000001e4e7	movl	$0x1513, (%rbx)
000000000001e4ed	movl	%edi, 0x8(%rbx)
000000000001e4f0	callq	_mig_get_reply_port
000000000001e4f5	movl	%eax, 0xc(%rbx)
000000000001e4f8	movabsq	$0xe1100000000, %rcx
000000000001e502	movq	%rcx, 0x10(%rbx)
000000000001e506	movl	$0x0, (%rsp)
000000000001e50d	movq	%rbx, %rdi
000000000001e510	movl	$0x3, %esi
000000000001e515	movl	$0x28, %edx
000000000001e51a	movl	$0x9c8, %ecx
000000000001e51f	movl	%eax, %r8d
000000000001e522	xorl	%r9d, %r9d
000000000001e525	callq	_mach_msg
000000000001e52a	movl	%eax, %ebx
000000000001e52c	leal	-0x10000002(%rbx), %eax
000000000001e532	cmpl	$0xe, %eax
000000000001e535	ja	0x1e54e
000000000001e537	movl	$0x4003, %ecx
000000000001e53c	btl	%eax, %ecx
000000000001e53f	jae	0x1e54e
000000000001e541	movl	-0x9dc(%rbp), %edi
000000000001e547	callq	_mig_put_reply_port
000000000001e54c	jmp	0x1e5c2
000000000001e54e	testl	%ebx, %ebx
000000000001e550	jne	0x1e59d
000000000001e552	movl	-0x9d4(%rbp), %eax
000000000001e558	cmpl	$0x47, %eax
000000000001e55b	je	0x1e5aa
000000000001e55d	cmpl	$0xe75, %eax
000000000001e562	jne	0x1e5b1
000000000001e564	cmpl	$0x0, -0x9e8(%rbp)
000000000001e56b	js	0x1e596
000000000001e56d	movl	-0x9e4(%rbp), %eax
000000000001e573	leal	-0x28(%rax), %ecx
000000000001e576	cmpl	$0x999, %ecx
000000000001e57c	jb	0x1e58d
000000000001e57e	cmpl	$0x24, %eax
000000000001e581	jne	0x1e596
000000000001e583	movl	-0x9c8(%rbp), %edx
000000000001e589	testl	%edx, %edx
000000000001e58b	je	0x1e596
000000000001e58d	cmpl	$0x0, -0x9e0(%rbp)
000000000001e594	je	0x1e5d4
000000000001e596	movl	$0xfffffed4, %ebx
000000000001e59b	jmp	0x1e5b6
000000000001e59d	movl	-0x9dc(%rbp), %edi
000000000001e5a3	callq	_mig_dealloc_reply_port
000000000001e5a8	jmp	0x1e5c2
000000000001e5aa	movl	$0xfffffecc, %ebx
000000000001e5af	jmp	0x1e5b6
000000000001e5b1	movl	$0xfffffed3, %ebx
000000000001e5b6	leaq	-0x9e8(%rbp), %rdi
000000000001e5bd	callq	_mach_msg_destroy
000000000001e5c2	movl	%ebx, %eax
000000000001e5c4	addq	$0x9d0, %rsp
000000000001e5cb	popq	%rbx
000000000001e5cc	popq	%r12
000000000001e5ce	popq	%r14
000000000001e5d0	popq	%r15
000000000001e5d2	popq	%rbp
000000000001e5d3	retq
000000000001e5d4	movl	-0x9c8(%rbp), %ebx
000000000001e5da	testl	%ebx, %ebx
000000000001e5dc	jne	0x1e5b6
000000000001e5de	movl	-0x9c4(%rbp), %r12d
000000000001e5e5	cmpl	$0x266, %r12d
000000000001e5ec	ja	0x1e596
000000000001e5ee	shrl	$0x2, %ecx
000000000001e5f1	cmpl	%r12d, %ecx
000000000001e5f4	jb	0x1e596
000000000001e5f6	leal	0x28(,%r12,4), %ecx
000000000001e5fe	movl	$0xfffffed4, %ebx
000000000001e603	cmpl	%ecx, %eax
000000000001e605	jne	0x1e5b6
000000000001e607	movl	(%r15), %edx
000000000001e60a	leaq	-0x9c0(%rbp), %rsi
000000000001e611	cmpl	%edx, %r12d
000000000001e614	jbe	0x1e62b
000000000001e616	shll	$0x2, %edx
000000000001e619	movq	%r14, %rdi
000000000001e61c	callq	_memcpy
000000000001e621	movl	%r12d, (%r15)
000000000001e624	movl	$0xfffffecd, %ebx
000000000001e629	jmp	0x1e5c2
000000000001e62b	leal	(,%r12,4), %eax
000000000001e633	movl	%eax, %edx
000000000001e635	movq	%r14, %rdi
000000000001e638	callq	_memcpy
000000000001e63d	movl	%r12d, (%r15)
000000000001e640	xorl	%ebx, %ebx
000000000001e642	jmp	0x1e5c2
_act_set_state:
000000000001e647	pushq	%rbp
000000000001e648	movq	%rsp, %rbp
000000000001e64b	pushq	%r15
000000000001e64d	pushq	%r14
000000000001e64f	pushq	%rbx
000000000001e650	subq	$0x9c8, %rsp
000000000001e657	leaq	_NDR_record(%rip), %rax
000000000001e65e	movq	(%rax), %rax
000000000001e661	movq	%rax, -0x9c0(%rbp)
000000000001e668	movl	%esi, -0x9b8(%rbp)
000000000001e66e	movl	$0xfffffecd, %r14d
000000000001e674	cmpl	$0x266, %ecx
000000000001e67a	ja	0x1e78b
000000000001e680	movl	%ecx, %ebx
000000000001e682	movl	%edi, %r15d
000000000001e685	leaq	-0x9b0(%rbp), %r14
000000000001e68c	leal	(,%rbx,4), %eax
000000000001e693	movq	%r14, %rdi
000000000001e696	movq	%rdx, %rsi
000000000001e699	movq	%rax, %rdx
000000000001e69c	callq	_memcpy
000000000001e6a1	movl	%ebx, -0x4(%r14)
000000000001e6a5	leal	0x28(,%rbx,4), %ebx
000000000001e6ac	movl	$0x1513, -0x28(%r14)
000000000001e6b4	movl	%r15d, -0x20(%r14)
000000000001e6b8	callq	_mig_get_reply_port
000000000001e6bd	movl	%eax, -0x1c(%r14)
000000000001e6c1	movabsq	$0xe1200000000, %rcx
000000000001e6cb	movq	%rcx, -0x18(%r14)
000000000001e6cf	movl	$0x0, (%rsp)
000000000001e6d6	leaq	-0x9d8(%rbp), %rdi
000000000001e6dd	movl	$0x3, %esi
000000000001e6e2	movl	%ebx, %edx
000000000001e6e4	movl	$0x2c, %ecx
000000000001e6e9	movl	%eax, %r8d
000000000001e6ec	xorl	%r9d, %r9d
000000000001e6ef	callq	_mach_msg
000000000001e6f4	movl	%eax, %r14d
000000000001e6f7	leal	-0x10000002(%r14), %eax
000000000001e6fe	cmpl	$0xe, %eax
000000000001e701	ja	0x1e71a
000000000001e703	movl	$0x4003, %ecx
000000000001e708	btl	%eax, %ecx
000000000001e70b	jae	0x1e71a
000000000001e70d	movl	-0x9cc(%rbp), %edi
000000000001e713	callq	_mig_put_reply_port
000000000001e718	jmp	0x1e78b
000000000001e71a	testl	%r14d, %r14d
000000000001e71d	jne	0x1e764
000000000001e71f	movl	-0x9c4(%rbp), %eax
000000000001e725	cmpl	$0x47, %eax
000000000001e728	je	0x1e771
000000000001e72a	cmpl	$0xe76, %eax
000000000001e72f	jne	0x1e779
000000000001e731	movl	$0xfffffed4, %r14d
000000000001e737	cmpl	$0x0, -0x9d8(%rbp)
000000000001e73e	js	0x1e77f
000000000001e740	cmpl	$0x24, -0x9d4(%rbp)
000000000001e747	jne	0x1e77f
000000000001e749	movl	-0x9d0(%rbp), %eax
000000000001e74f	testl	%eax, %eax
000000000001e751	jne	0x1e77f
000000000001e753	movl	-0x9b8(%rbp), %r14d
000000000001e75a	testl	%r14d, %r14d
000000000001e75d	jne	0x1e77f
000000000001e75f	xorl	%r14d, %r14d
000000000001e762	jmp	0x1e78b
000000000001e764	movl	-0x9cc(%rbp), %edi
000000000001e76a	callq	_mig_dealloc_reply_port
000000000001e76f	jmp	0x1e78b
000000000001e771	movl	$0xfffffecc, %r14d
000000000001e777	jmp	0x1e77f
000000000001e779	movl	$0xfffffed3, %r14d
000000000001e77f	leaq	-0x9d8(%rbp), %rdi
000000000001e786	callq	_mach_msg_destroy
000000000001e78b	movl	%r14d, %eax
000000000001e78e	addq	$0x9c8, %rsp
000000000001e795	popq	%rbx
000000000001e796	popq	%r14
000000000001e798	popq	%r15
000000000001e79a	popq	%rbp
000000000001e79b	retq
_thread_set_state:
000000000001e79c	pushq	%rbp
000000000001e79d	movq	%rsp, %rbp
000000000001e7a0	pushq	%r15
000000000001e7a2	pushq	%r14
000000000001e7a4	pushq	%rbx
000000000001e7a5	subq	$0x9c8, %rsp
000000000001e7ac	leaq	_NDR_record(%rip), %rax
000000000001e7b3	movq	(%rax), %rax
000000000001e7b6	movq	%rax, -0x9c0(%rbp)
000000000001e7bd	movl	%esi, -0x9b8(%rbp)
000000000001e7c3	movl	$0xfffffecd, %r14d
000000000001e7c9	cmpl	$0x266, %ecx
000000000001e7cf	ja	0x1e8e0
000000000001e7d5	movl	%ecx, %ebx
000000000001e7d7	movl	%edi, %r15d
000000000001e7da	leaq	-0x9b0(%rbp), %r14
000000000001e7e1	leal	(,%rbx,4), %eax
000000000001e7e8	movq	%r14, %rdi
000000000001e7eb	movq	%rdx, %rsi
000000000001e7ee	movq	%rax, %rdx
000000000001e7f1	callq	_memcpy
000000000001e7f6	movl	%ebx, -0x4(%r14)
000000000001e7fa	leal	0x28(,%rbx,4), %ebx
000000000001e801	movl	$0x1513, -0x28(%r14)
000000000001e809	movl	%r15d, -0x20(%r14)
000000000001e80d	callq	_mig_get_reply_port
000000000001e812	movl	%eax, -0x1c(%r14)
000000000001e816	movabsq	$0xe1400000000, %rcx
000000000001e820	movq	%rcx, -0x18(%r14)
000000000001e824	movl	$0x0, (%rsp)
000000000001e82b	leaq	-0x9d8(%rbp), %rdi
000000000001e832	movl	$0x3, %esi
000000000001e837	movl	%ebx, %edx
000000000001e839	movl	$0x2c, %ecx
000000000001e83e	movl	%eax, %r8d
000000000001e841	xorl	%r9d, %r9d
000000000001e844	callq	_mach_msg
000000000001e849	movl	%eax, %r14d
000000000001e84c	leal	-0x10000002(%r14), %eax
000000000001e853	cmpl	$0xe, %eax
000000000001e856	ja	0x1e86f
000000000001e858	movl	$0x4003, %ecx
000000000001e85d	btl	%eax, %ecx
000000000001e860	jae	0x1e86f
000000000001e862	movl	-0x9cc(%rbp), %edi
000000000001e868	callq	_mig_put_reply_port
000000000001e86d	jmp	0x1e8e0
000000000001e86f	testl	%r14d, %r14d
000000000001e872	jne	0x1e8b9
000000000001e874	movl	-0x9c4(%rbp), %eax
000000000001e87a	cmpl	$0x47, %eax
000000000001e87d	je	0x1e8c6
000000000001e87f	cmpl	$0xe78, %eax
000000000001e884	jne	0x1e8ce
000000000001e886	movl	$0xfffffed4, %r14d
000000000001e88c	cmpl	$0x0, -0x9d8(%rbp)
000000000001e893	js	0x1e8d4
000000000001e895	cmpl	$0x24, -0x9d4(%rbp)
000000000001e89c	jne	0x1e8d4
000000000001e89e	movl	-0x9d0(%rbp), %eax
000000000001e8a4	testl	%eax, %eax
000000000001e8a6	jne	0x1e8d4
000000000001e8a8	movl	-0x9b8(%rbp), %r14d
000000000001e8af	testl	%r14d, %r14d
000000000001e8b2	jne	0x1e8d4
000000000001e8b4	xorl	%r14d, %r14d
000000000001e8b7	jmp	0x1e8e0
000000000001e8b9	movl	-0x9cc(%rbp), %edi
000000000001e8bf	callq	_mig_dealloc_reply_port
000000000001e8c4	jmp	0x1e8e0
000000000001e8c6	movl	$0xfffffecc, %r14d
000000000001e8cc	jmp	0x1e8d4
000000000001e8ce	movl	$0xfffffed3, %r14d
000000000001e8d4	leaq	-0x9d8(%rbp), %rdi
000000000001e8db	callq	_mach_msg_destroy
000000000001e8e0	movl	%r14d, %eax
000000000001e8e3	addq	$0x9c8, %rsp
000000000001e8ea	popq	%rbx
000000000001e8eb	popq	%r14
000000000001e8ed	popq	%r15
000000000001e8ef	popq	%rbp
000000000001e8f0	retq
_thread_suspend:
000000000001e8f1	pushq	%rbp
000000000001e8f2	movq	%rsp, %rbp
000000000001e8f5	pushq	%rbx
000000000001e8f6	subq	$0x38, %rsp
000000000001e8fa	leaq	-0x38(%rbp), %rbx
000000000001e8fe	movl	$0x1513, (%rbx)
000000000001e904	movl	%edi, 0x8(%rbx)
000000000001e907	callq	_mig_get_reply_port
000000000001e90c	movl	%eax, 0xc(%rbx)
000000000001e90f	movabsq	$0xe1500000000, %rcx
000000000001e919	movq	%rcx, 0x10(%rbx)
000000000001e91d	movl	$0x0, (%rsp)
000000000001e924	movq	%rbx, %rdi
000000000001e927	movl	$0x3, %esi
000000000001e92c	movl	$0x18, %edx
000000000001e931	movl	$0x2c, %ecx
000000000001e936	movl	%eax, %r8d
000000000001e939	xorl	%r9d, %r9d
000000000001e93c	callq	_mach_msg
000000000001e941	movl	%eax, %ebx
000000000001e943	leal	-0x10000002(%rbx), %eax
000000000001e949	cmpl	$0xe, %eax
000000000001e94c	ja	0x1e962
000000000001e94e	movl	$0x4003, %ecx
000000000001e953	btl	%eax, %ecx
000000000001e956	jae	0x1e962
000000000001e958	movl	-0x2c(%rbp), %edi
000000000001e95b	callq	_mig_put_reply_port
000000000001e960	jmp	0x1e9b7
000000000001e962	testl	%ebx, %ebx
000000000001e964	jne	0x1e998
000000000001e966	movl	-0x24(%rbp), %eax
000000000001e969	cmpl	$0x47, %eax
000000000001e96c	je	0x1e9a2
000000000001e96e	cmpl	$0xe79, %eax
000000000001e973	jne	0x1e9a9
000000000001e975	movl	$0xfffffed4, %ebx
000000000001e97a	cmpl	$0x0, -0x38(%rbp)
000000000001e97e	js	0x1e9ae
000000000001e980	cmpl	$0x24, -0x34(%rbp)
000000000001e984	jne	0x1e9ae
000000000001e986	movl	-0x30(%rbp), %eax
000000000001e989	testl	%eax, %eax
000000000001e98b	jne	0x1e9ae
000000000001e98d	movl	-0x18(%rbp), %ebx
000000000001e990	testl	%ebx, %ebx
000000000001e992	jne	0x1e9ae
000000000001e994	xorl	%ebx, %ebx
000000000001e996	jmp	0x1e9b7
000000000001e998	movl	-0x2c(%rbp), %edi
000000000001e99b	callq	_mig_dealloc_reply_port
000000000001e9a0	jmp	0x1e9b7
000000000001e9a2	movl	$0xfffffecc, %ebx
000000000001e9a7	jmp	0x1e9ae
000000000001e9a9	movl	$0xfffffed3, %ebx
000000000001e9ae	leaq	-0x38(%rbp), %rdi
000000000001e9b2	callq	_mach_msg_destroy
000000000001e9b7	movl	%ebx, %eax
000000000001e9b9	addq	$0x38, %rsp
000000000001e9bd	popq	%rbx
000000000001e9be	popq	%rbp
000000000001e9bf	retq
_thread_resume:
000000000001e9c0	pushq	%rbp
000000000001e9c1	movq	%rsp, %rbp
000000000001e9c4	pushq	%rbx
000000000001e9c5	subq	$0x38, %rsp
000000000001e9c9	leaq	-0x38(%rbp), %rbx
000000000001e9cd	movl	$0x1513, (%rbx)
000000000001e9d3	movl	%edi, 0x8(%rbx)
000000000001e9d6	callq	_mig_get_reply_port
000000000001e9db	movl	%eax, 0xc(%rbx)
000000000001e9de	movabsq	$0xe1600000000, %rcx
000000000001e9e8	movq	%rcx, 0x10(%rbx)
000000000001e9ec	movl	$0x0, (%rsp)
000000000001e9f3	movq	%rbx, %rdi
000000000001e9f6	movl	$0x3, %esi
000000000001e9fb	movl	$0x18, %edx
000000000001ea00	movl	$0x2c, %ecx
000000000001ea05	movl	%eax, %r8d
000000000001ea08	xorl	%r9d, %r9d
000000000001ea0b	callq	_mach_msg
000000000001ea10	movl	%eax, %ebx
000000000001ea12	leal	-0x10000002(%rbx), %eax
000000000001ea18	cmpl	$0xe, %eax
000000000001ea1b	ja	0x1ea31
000000000001ea1d	movl	$0x4003, %ecx
000000000001ea22	btl	%eax, %ecx
000000000001ea25	jae	0x1ea31
000000000001ea27	movl	-0x2c(%rbp), %edi
000000000001ea2a	callq	_mig_put_reply_port
000000000001ea2f	jmp	0x1ea86
000000000001ea31	testl	%ebx, %ebx
000000000001ea33	jne	0x1ea67
000000000001ea35	movl	-0x24(%rbp), %eax
000000000001ea38	cmpl	$0x47, %eax
000000000001ea3b	je	0x1ea71
000000000001ea3d	cmpl	$0xe7a, %eax
000000000001ea42	jne	0x1ea78
000000000001ea44	movl	$0xfffffed4, %ebx
000000000001ea49	cmpl	$0x0, -0x38(%rbp)
000000000001ea4d	js	0x1ea7d
000000000001ea4f	cmpl	$0x24, -0x34(%rbp)
000000000001ea53	jne	0x1ea7d
000000000001ea55	movl	-0x30(%rbp), %eax
000000000001ea58	testl	%eax, %eax
000000000001ea5a	jne	0x1ea7d
000000000001ea5c	movl	-0x18(%rbp), %ebx
000000000001ea5f	testl	%ebx, %ebx
000000000001ea61	jne	0x1ea7d
000000000001ea63	xorl	%ebx, %ebx
000000000001ea65	jmp	0x1ea86
000000000001ea67	movl	-0x2c(%rbp), %edi
000000000001ea6a	callq	_mig_dealloc_reply_port
000000000001ea6f	jmp	0x1ea86
000000000001ea71	movl	$0xfffffecc, %ebx
000000000001ea76	jmp	0x1ea7d
000000000001ea78	movl	$0xfffffed3, %ebx
000000000001ea7d	leaq	-0x38(%rbp), %rdi
000000000001ea81	callq	_mach_msg_destroy
000000000001ea86	movl	%ebx, %eax
000000000001ea88	addq	$0x38, %rsp
000000000001ea8c	popq	%rbx
000000000001ea8d	popq	%rbp
000000000001ea8e	retq
_thread_abort:
000000000001ea8f	pushq	%rbp
000000000001ea90	movq	%rsp, %rbp
000000000001ea93	pushq	%rbx
000000000001ea94	subq	$0x38, %rsp
000000000001ea98	leaq	-0x38(%rbp), %rbx
000000000001ea9c	movl	$0x1513, (%rbx)
000000000001eaa2	movl	%edi, 0x8(%rbx)
000000000001eaa5	callq	_mig_get_reply_port
000000000001eaaa	movl	%eax, 0xc(%rbx)
000000000001eaad	movabsq	$0xe1700000000, %rcx
000000000001eab7	movq	%rcx, 0x10(%rbx)
000000000001eabb	movl	$0x0, (%rsp)
000000000001eac2	movq	%rbx, %rdi
000000000001eac5	movl	$0x3, %esi
000000000001eaca	movl	$0x18, %edx
000000000001eacf	movl	$0x2c, %ecx
000000000001ead4	movl	%eax, %r8d
000000000001ead7	xorl	%r9d, %r9d
000000000001eada	callq	_mach_msg
000000000001eadf	movl	%eax, %ebx
000000000001eae1	leal	-0x10000002(%rbx), %eax
000000000001eae7	cmpl	$0xe, %eax
000000000001eaea	ja	0x1eb00
000000000001eaec	movl	$0x4003, %ecx
000000000001eaf1	btl	%eax, %ecx
000000000001eaf4	jae	0x1eb00
000000000001eaf6	movl	-0x2c(%rbp), %edi
000000000001eaf9	callq	_mig_put_reply_port
000000000001eafe	jmp	0x1eb55
000000000001eb00	testl	%ebx, %ebx
000000000001eb02	jne	0x1eb36
000000000001eb04	movl	-0x24(%rbp), %eax
000000000001eb07	cmpl	$0x47, %eax
000000000001eb0a	je	0x1eb40
000000000001eb0c	cmpl	$0xe7b, %eax
000000000001eb11	jne	0x1eb47
000000000001eb13	movl	$0xfffffed4, %ebx
000000000001eb18	cmpl	$0x0, -0x38(%rbp)
000000000001eb1c	js	0x1eb4c
000000000001eb1e	cmpl	$0x24, -0x34(%rbp)
000000000001eb22	jne	0x1eb4c
000000000001eb24	movl	-0x30(%rbp), %eax
000000000001eb27	testl	%eax, %eax
000000000001eb29	jne	0x1eb4c
000000000001eb2b	movl	-0x18(%rbp), %ebx
000000000001eb2e	testl	%ebx, %ebx
000000000001eb30	jne	0x1eb4c
000000000001eb32	xorl	%ebx, %ebx
000000000001eb34	jmp	0x1eb55
000000000001eb36	movl	-0x2c(%rbp), %edi
000000000001eb39	callq	_mig_dealloc_reply_port
000000000001eb3e	jmp	0x1eb55
000000000001eb40	movl	$0xfffffecc, %ebx
000000000001eb45	jmp	0x1eb4c
000000000001eb47	movl	$0xfffffed3, %ebx
000000000001eb4c	leaq	-0x38(%rbp), %rdi
000000000001eb50	callq	_mach_msg_destroy
000000000001eb55	movl	%ebx, %eax
000000000001eb57	addq	$0x38, %rsp
000000000001eb5b	popq	%rbx
000000000001eb5c	popq	%rbp
000000000001eb5d	retq
_thread_abort_safely:
000000000001eb5e	pushq	%rbp
000000000001eb5f	movq	%rsp, %rbp
000000000001eb62	pushq	%rbx
000000000001eb63	subq	$0x38, %rsp
000000000001eb67	leaq	-0x38(%rbp), %rbx
000000000001eb6b	movl	$0x1513, (%rbx)
000000000001eb71	movl	%edi, 0x8(%rbx)
000000000001eb74	callq	_mig_get_reply_port
000000000001eb79	movl	%eax, 0xc(%rbx)
000000000001eb7c	movabsq	$0xe1800000000, %rcx
000000000001eb86	movq	%rcx, 0x10(%rbx)
000000000001eb8a	movl	$0x0, (%rsp)
000000000001eb91	movq	%rbx, %rdi
000000000001eb94	movl	$0x3, %esi
000000000001eb99	movl	$0x18, %edx
000000000001eb9e	movl	$0x2c, %ecx
000000000001eba3	movl	%eax, %r8d
000000000001eba6	xorl	%r9d, %r9d
000000000001eba9	callq	_mach_msg
000000000001ebae	movl	%eax, %ebx
000000000001ebb0	leal	-0x10000002(%rbx), %eax
000000000001ebb6	cmpl	$0xe, %eax
000000000001ebb9	ja	0x1ebcf
000000000001ebbb	movl	$0x4003, %ecx
000000000001ebc0	btl	%eax, %ecx
000000000001ebc3	jae	0x1ebcf
000000000001ebc5	movl	-0x2c(%rbp), %edi
000000000001ebc8	callq	_mig_put_reply_port
000000000001ebcd	jmp	0x1ec24
000000000001ebcf	testl	%ebx, %ebx
000000000001ebd1	jne	0x1ec05
000000000001ebd3	movl	-0x24(%rbp), %eax
000000000001ebd6	cmpl	$0x47, %eax
000000000001ebd9	je	0x1ec0f
000000000001ebdb	cmpl	$0xe7c, %eax
000000000001ebe0	jne	0x1ec16
000000000001ebe2	movl	$0xfffffed4, %ebx
000000000001ebe7	cmpl	$0x0, -0x38(%rbp)
000000000001ebeb	js	0x1ec1b
000000000001ebed	cmpl	$0x24, -0x34(%rbp)
000000000001ebf1	jne	0x1ec1b
000000000001ebf3	movl	-0x30(%rbp), %eax
000000000001ebf6	testl	%eax, %eax
000000000001ebf8	jne	0x1ec1b
000000000001ebfa	movl	-0x18(%rbp), %ebx
000000000001ebfd	testl	%ebx, %ebx
000000000001ebff	jne	0x1ec1b
000000000001ec01	xorl	%ebx, %ebx
000000000001ec03	jmp	0x1ec24
000000000001ec05	movl	-0x2c(%rbp), %edi
000000000001ec08	callq	_mig_dealloc_reply_port
000000000001ec0d	jmp	0x1ec24
000000000001ec0f	movl	$0xfffffecc, %ebx
000000000001ec14	jmp	0x1ec1b
000000000001ec16	movl	$0xfffffed3, %ebx
000000000001ec1b	leaq	-0x38(%rbp), %rdi
000000000001ec1f	callq	_mach_msg_destroy
000000000001ec24	movl	%ebx, %eax
000000000001ec26	addq	$0x38, %rsp
000000000001ec2a	popq	%rbx
000000000001ec2b	popq	%rbp
000000000001ec2c	retq
_thread_depress_abort:
000000000001ec2d	pushq	%rbp
000000000001ec2e	movq	%rsp, %rbp
000000000001ec31	pushq	%rbx
000000000001ec32	subq	$0x38, %rsp
000000000001ec36	leaq	-0x38(%rbp), %rbx
000000000001ec3a	movl	$0x1513, (%rbx)
000000000001ec40	movl	%edi, 0x8(%rbx)
000000000001ec43	callq	_mig_get_reply_port
000000000001ec48	movl	%eax, 0xc(%rbx)
000000000001ec4b	movabsq	$0xe1900000000, %rcx
000000000001ec55	movq	%rcx, 0x10(%rbx)
000000000001ec59	movl	$0x0, (%rsp)
000000000001ec60	movq	%rbx, %rdi
000000000001ec63	movl	$0x3, %esi
000000000001ec68	movl	$0x18, %edx
000000000001ec6d	movl	$0x2c, %ecx
000000000001ec72	movl	%eax, %r8d
000000000001ec75	xorl	%r9d, %r9d
000000000001ec78	callq	_mach_msg
000000000001ec7d	movl	%eax, %ebx
000000000001ec7f	leal	-0x10000002(%rbx), %eax
000000000001ec85	cmpl	$0xe, %eax
000000000001ec88	ja	0x1ec9e
000000000001ec8a	movl	$0x4003, %ecx
000000000001ec8f	btl	%eax, %ecx
000000000001ec92	jae	0x1ec9e
000000000001ec94	movl	-0x2c(%rbp), %edi
000000000001ec97	callq	_mig_put_reply_port
000000000001ec9c	jmp	0x1ecf3
000000000001ec9e	testl	%ebx, %ebx
000000000001eca0	jne	0x1ecd4
000000000001eca2	movl	-0x24(%rbp), %eax
000000000001eca5	cmpl	$0x47, %eax
000000000001eca8	je	0x1ecde
000000000001ecaa	cmpl	$0xe7d, %eax
000000000001ecaf	jne	0x1ece5
000000000001ecb1	movl	$0xfffffed4, %ebx
000000000001ecb6	cmpl	$0x0, -0x38(%rbp)
000000000001ecba	js	0x1ecea
000000000001ecbc	cmpl	$0x24, -0x34(%rbp)
000000000001ecc0	jne	0x1ecea
000000000001ecc2	movl	-0x30(%rbp), %eax
000000000001ecc5	testl	%eax, %eax
000000000001ecc7	jne	0x1ecea
000000000001ecc9	movl	-0x18(%rbp), %ebx
000000000001eccc	testl	%ebx, %ebx
000000000001ecce	jne	0x1ecea
000000000001ecd0	xorl	%ebx, %ebx
000000000001ecd2	jmp	0x1ecf3
000000000001ecd4	movl	-0x2c(%rbp), %edi
000000000001ecd7	callq	_mig_dealloc_reply_port
000000000001ecdc	jmp	0x1ecf3
000000000001ecde	movl	$0xfffffecc, %ebx
000000000001ece3	jmp	0x1ecea
000000000001ece5	movl	$0xfffffed3, %ebx
000000000001ecea	leaq	-0x38(%rbp), %rdi
000000000001ecee	callq	_mach_msg_destroy
000000000001ecf3	movl	%ebx, %eax
000000000001ecf5	addq	$0x38, %rsp
000000000001ecf9	popq	%rbx
000000000001ecfa	popq	%rbp
000000000001ecfb	retq
_thread_get_special_port:
000000000001ecfc	pushq	%rbp
000000000001ecfd	movq	%rsp, %rbp
000000000001ed00	pushq	%r14
000000000001ed02	pushq	%rbx
000000000001ed03	subq	$0x40, %rsp
000000000001ed07	movq	%rdx, %r14
000000000001ed0a	leaq	_NDR_record(%rip), %rax
000000000001ed11	movq	(%rax), %rax
000000000001ed14	leaq	-0x40(%rbp), %rbx
000000000001ed18	movq	%rax, 0x18(%rbx)
000000000001ed1c	movl	%esi, 0x20(%rbx)
000000000001ed1f	movl	$0x1513, (%rbx)
000000000001ed25	movl	%edi, 0x8(%rbx)
000000000001ed28	callq	_mig_get_reply_port
000000000001ed2d	movl	%eax, 0xc(%rbx)
000000000001ed30	movabsq	$0xe1a00000000, %rcx
000000000001ed3a	movq	%rcx, 0x10(%rbx)
000000000001ed3e	movl	$0x0, (%rsp)
000000000001ed45	movq	%rbx, %rdi
000000000001ed48	movl	$0x3, %esi
000000000001ed4d	movl	$0x24, %edx
000000000001ed52	movl	$0x30, %ecx
000000000001ed57	movl	%eax, %r8d
000000000001ed5a	xorl	%r9d, %r9d
000000000001ed5d	callq	_mach_msg
000000000001ed62	movl	%eax, %ebx
000000000001ed64	leal	-0x10000002(%rbx), %eax
000000000001ed6a	cmpl	$0xe, %eax
000000000001ed6d	ja	0x1ed83
000000000001ed6f	movl	$0x4003, %ecx
000000000001ed74	btl	%eax, %ecx
000000000001ed77	jae	0x1ed83
000000000001ed79	movl	-0x34(%rbp), %edi
000000000001ed7c	callq	_mig_put_reply_port
000000000001ed81	jmp	0x1edea
000000000001ed83	testl	%ebx, %ebx
000000000001ed85	jne	0x1edb3
000000000001ed87	movl	-0x2c(%rbp), %eax
000000000001ed8a	cmpl	$0x47, %eax
000000000001ed8d	je	0x1edbd
000000000001ed8f	cmpl	$0xe7e, %eax
000000000001ed94	jne	0x1edc4
000000000001ed96	movl	-0x40(%rbp), %eax
000000000001ed99	movl	-0x3c(%rbp), %ecx
000000000001ed9c	movl	$0xfffffed4, %ebx
000000000001eda1	testl	%eax, %eax
000000000001eda3	js	0x1edcb
000000000001eda5	cmpl	$0x24, %ecx
000000000001eda8	jne	0x1ede1
000000000001edaa	movl	-0x20(%rbp), %ecx
000000000001edad	testl	%ecx, %ecx
000000000001edaf	jne	0x1edd6
000000000001edb1	jmp	0x1ede1
000000000001edb3	movl	-0x34(%rbp), %edi
000000000001edb6	callq	_mig_dealloc_reply_port
000000000001edbb	jmp	0x1edea
000000000001edbd	movl	$0xfffffecc, %ebx
000000000001edc2	jmp	0x1ede1
000000000001edc4	movl	$0xfffffed3, %ebx
000000000001edc9	jmp	0x1ede1
000000000001edcb	cmpl	$0x28, %ecx
000000000001edce	jne	0x1ede1
000000000001edd0	cmpl	$0x1, -0x28(%rbp)
000000000001edd4	jne	0x1ede1
000000000001edd6	movl	$0xfffffed4, %ebx
000000000001eddb	cmpl	$0x0, -0x38(%rbp)
000000000001eddf	je	0x1edf5
000000000001ede1	leaq	-0x40(%rbp), %rdi
000000000001ede5	callq	_mach_msg_destroy
000000000001edea	movl	%ebx, %eax
000000000001edec	addq	$0x40, %rsp
000000000001edf0	popq	%rbx
000000000001edf1	popq	%r14
000000000001edf3	popq	%rbp
000000000001edf4	retq
000000000001edf5	testl	%eax, %eax
000000000001edf7	js	0x1ee02
000000000001edf9	movl	-0x20(%rbp), %ebx
000000000001edfc	testl	%ebx, %ebx
000000000001edfe	jne	0x1ede1
000000000001ee00	jmp	0x1ee10
000000000001ee02	movzwl	-0x1a(%rbp), %eax
000000000001ee06	shll	$0x10, %eax
000000000001ee09	cmpl	$0x110000, %eax
000000000001ee0e	jne	0x1ede1
000000000001ee10	movl	-0x24(%rbp), %eax
000000000001ee13	movl	%eax, (%r14)
000000000001ee16	xorl	%ebx, %ebx
000000000001ee18	jmp	0x1edea
_thread_set_special_port:
000000000001ee1a	pushq	%rbp
000000000001ee1b	movq	%rsp, %rbp
000000000001ee1e	pushq	%rbx
000000000001ee1f	subq	$0x48, %rsp
000000000001ee23	leaq	-0x40(%rbp), %rbx
000000000001ee27	movl	$0x1, 0x18(%rbx)
000000000001ee2e	movl	%edx, 0x1c(%rbx)
000000000001ee31	movl	$0x130000, 0x24(%rbx)
000000000001ee38	leaq	_NDR_record(%rip), %rax
000000000001ee3f	movq	(%rax), %rax
000000000001ee42	movq	%rax, 0x28(%rbx)
000000000001ee46	movl	%esi, 0x30(%rbx)
000000000001ee49	movl	$0x80001513, (%rbx)
000000000001ee4f	movl	%edi, 0x8(%rbx)
000000000001ee52	callq	_mig_get_reply_port
000000000001ee57	movl	%eax, 0xc(%rbx)
000000000001ee5a	movabsq	$0xe1b00000000, %rcx
000000000001ee64	movq	%rcx, 0x10(%rbx)
000000000001ee68	movl	$0x0, (%rsp)
000000000001ee6f	movq	%rbx, %rdi
000000000001ee72	movl	$0x3, %esi
000000000001ee77	movl	$0x34, %edx
000000000001ee7c	movl	$0x2c, %ecx
000000000001ee81	movl	%eax, %r8d
000000000001ee84	xorl	%r9d, %r9d
000000000001ee87	callq	_mach_msg
000000000001ee8c	movl	%eax, %ebx
000000000001ee8e	leal	-0x10000002(%rbx), %eax
000000000001ee94	cmpl	$0xe, %eax
000000000001ee97	ja	0x1eead
000000000001ee99	movl	$0x4003, %ecx
000000000001ee9e	btl	%eax, %ecx
000000000001eea1	jae	0x1eead
000000000001eea3	movl	-0x34(%rbp), %edi
000000000001eea6	callq	_mig_put_reply_port
000000000001eeab	jmp	0x1ef02
000000000001eead	testl	%ebx, %ebx
000000000001eeaf	jne	0x1eee3
000000000001eeb1	movl	-0x2c(%rbp), %eax
000000000001eeb4	cmpl	$0x47, %eax
000000000001eeb7	je	0x1eeed
000000000001eeb9	cmpl	$0xe7f, %eax
000000000001eebe	jne	0x1eef4
000000000001eec0	movl	$0xfffffed4, %ebx
000000000001eec5	cmpl	$0x0, -0x40(%rbp)
000000000001eec9	js	0x1eef9
000000000001eecb	cmpl	$0x24, -0x3c(%rbp)
000000000001eecf	jne	0x1eef9
000000000001eed1	movl	-0x38(%rbp), %eax
000000000001eed4	testl	%eax, %eax
000000000001eed6	jne	0x1eef9
000000000001eed8	movl	-0x20(%rbp), %ebx
000000000001eedb	testl	%ebx, %ebx
000000000001eedd	jne	0x1eef9
000000000001eedf	xorl	%ebx, %ebx
000000000001eee1	jmp	0x1ef02
000000000001eee3	movl	-0x34(%rbp), %edi
000000000001eee6	callq	_mig_dealloc_reply_port
000000000001eeeb	jmp	0x1ef02
000000000001eeed	movl	$0xfffffecc, %ebx
000000000001eef2	jmp	0x1eef9
000000000001eef4	movl	$0xfffffed3, %ebx
000000000001eef9	leaq	-0x40(%rbp), %rdi
000000000001eefd	callq	_mach_msg_destroy
000000000001ef02	movl	%ebx, %eax
000000000001ef04	addq	$0x48, %rsp
000000000001ef08	popq	%rbx
000000000001ef09	popq	%rbp
000000000001ef0a	retq
_thread_swap_exception_ports:
000000000001ef0b	pushq	%rbp
000000000001ef0c	movq	%rsp, %rbp
000000000001ef0f	pushq	%r15
000000000001ef11	pushq	%r14
000000000001ef13	pushq	%r13
000000000001ef15	pushq	%r12
000000000001ef17	pushq	%rbx
000000000001ef18	subq	$0x338, %rsp
000000000001ef1f	movq	%r9, %r14
000000000001ef22	movl	$0x1, -0x340(%rbp)
000000000001ef2c	movl	%edx, -0x33c(%rbp)
000000000001ef32	movl	$0x130000, -0x334(%rbp)
000000000001ef3c	leaq	_NDR_record(%rip), %rax
000000000001ef43	movq	(%rax), %rax
000000000001ef46	movq	%rax, -0x330(%rbp)
000000000001ef4d	movl	%esi, -0x328(%rbp)
000000000001ef53	movl	%ecx, -0x324(%rbp)
000000000001ef59	movl	%r8d, -0x320(%rbp)
000000000001ef60	movl	$0x80001513, -0x358(%rbp)
000000000001ef6a	movl	%edi, -0x350(%rbp)
000000000001ef70	callq	_mig_get_reply_port
000000000001ef75	movl	%eax, -0x34c(%rbp)
000000000001ef7b	movabsq	$0xe1f00000000, %rcx
000000000001ef85	movq	%rcx, -0x348(%rbp)
000000000001ef8c	movl	$0x0, (%rsp)
000000000001ef93	leaq	-0x358(%rbp), %r15
000000000001ef9a	movq	%r15, %rdi
000000000001ef9d	movl	$0x3, %esi
000000000001efa2	movl	$0x3c, %edx
000000000001efa7	movl	$0x330, %ecx
000000000001efac	movl	%eax, %r8d
000000000001efaf	xorl	%r9d, %r9d
000000000001efb2	callq	_mach_msg
000000000001efb7	movl	%eax, %ebx
000000000001efb9	leal	-0x10000002(%rbx), %eax
000000000001efbf	cmpl	$0xe, %eax
000000000001efc2	ja	0x1efdb
000000000001efc4	movl	$0x4003, %ecx
000000000001efc9	btl	%eax, %ecx
000000000001efcc	jae	0x1efdb
000000000001efce	movl	-0x34c(%rbp), %edi
000000000001efd4	callq	_mig_put_reply_port
000000000001efd9	jmp	0x1f03b
000000000001efdb	testl	%ebx, %ebx
000000000001efdd	jne	0x1f016
000000000001efdf	movl	-0x344(%rbp), %eax
000000000001efe5	cmpl	$0x47, %eax
000000000001efe8	je	0x1f023
000000000001efea	cmpl	$0xe83, %eax
000000000001efef	jne	0x1f02a
000000000001eff1	movl	-0x358(%rbp), %ecx
000000000001eff7	movl	-0x354(%rbp), %eax
000000000001effd	testl	%ecx, %ecx
000000000001efff	js	0x1f04f
000000000001f001	movl	$0xfffffed4, %ebx
000000000001f006	cmpl	$0x24, %eax
000000000001f009	jne	0x1f02f
000000000001f00b	cmpl	$0x0, -0x338(%rbp)
000000000001f012	jne	0x1f06b
000000000001f014	jmp	0x1f02f
000000000001f016	movl	-0x34c(%rbp), %edi
000000000001f01c	callq	_mig_dealloc_reply_port
000000000001f021	jmp	0x1f03b
000000000001f023	movl	$0xfffffecc, %ebx
000000000001f028	jmp	0x1f02f
000000000001f02a	movl	$0xfffffed3, %ebx
000000000001f02f	leaq	-0x358(%rbp), %rdi
000000000001f036	callq	_mach_msg_destroy
000000000001f03b	movl	%ebx, %eax
000000000001f03d	addq	$0x338, %rsp
000000000001f044	popq	%rbx
000000000001f045	popq	%r12
000000000001f047	popq	%r13
000000000001f049	popq	%r14
000000000001f04b	popq	%r15
000000000001f04d	popq	%rbp
000000000001f04e	retq
000000000001f04f	leal	-0x1a8(%rax), %edx
000000000001f055	movl	$0xfffffed4, %ebx
000000000001f05a	cmpl	$0x180, %edx
000000000001f060	ja	0x1f02f
000000000001f062	cmpl	$0x20, -0x340(%rbp)
000000000001f069	jne	0x1f02f
000000000001f06b	movl	$0xfffffed4, %ebx
000000000001f070	cmpl	$0x0, -0x350(%rbp)
000000000001f077	jne	0x1f02f
000000000001f079	movq	0x10(%rbp), %r13
000000000001f07d	testl	%ecx, %ecx
000000000001f07f	js	0x1f0b8
000000000001f081	movl	-0x338(%rbp), %ebx
000000000001f087	testl	%ebx, %ebx
000000000001f089	jne	0x1f02f
000000000001f08b	leaq	-0x1b0(%rbp), %rsi
000000000001f092	movl	-0x4(%rsi), %r12d
000000000001f096	cmpl	$0x21, %r12d
000000000001f09a	jb	0x1f160
000000000001f0a0	movl	$0x80, %edx
000000000001f0a5	movq	%r14, %rdi
000000000001f0a8	callq	_memcpy
000000000001f0ad	movl	%r12d, (%r13)
000000000001f0b1	movl	$0xfffffecd, %ebx
000000000001f0b6	jmp	0x1f03b
000000000001f0b8	leaq	-0x334(%rbp), %rcx
000000000001f0bf	xorl	%edx, %edx
000000000001f0c1	cmpl	$0xffffff, (%rcx)
000000000001f0c7	ja	0x1f02f
000000000001f0cd	incl	%edx
000000000001f0cf	addq	$0xc, %rcx
000000000001f0d3	cmpl	$0x20, %edx
000000000001f0d6	jb	0x1f0c1
000000000001f0d8	movl	-0x1b4(%rbp), %r12d
000000000001f0df	cmpl	$0x20, %r12d
000000000001f0e3	ja	0x1f02f
000000000001f0e9	leal	-0x1a8(%rax), %ecx
000000000001f0ef	shrl	$0x2, %ecx
000000000001f0f2	cmpl	%r12d, %ecx
000000000001f0f5	jb	0x1f02f
000000000001f0fb	leal	(,%r12,4), %ecx
000000000001f103	leal	0x1a8(%rcx), %edx
000000000001f109	cmpl	%edx, %eax
000000000001f10b	jb	0x1f02f
000000000001f111	subl	%ecx, %eax
000000000001f113	cmpl	%edx, %eax
000000000001f115	jb	0x1f02f
000000000001f11b	leal	-0x1a8(%rax), %esi
000000000001f121	shrl	$0x2, %esi
000000000001f124	cmpl	%r12d, %esi
000000000001f127	jb	0x1f02f
000000000001f12d	subl	%ecx, %eax
000000000001f12f	cmpl	%edx, %eax
000000000001f131	jne	0x1f02f
000000000001f137	addl	$0xfffffe58, %eax
000000000001f13c	shrl	$0x2, %eax
000000000001f13f	cmpl	%r12d, %eax
000000000001f142	jb	0x1f02f
000000000001f148	movl	%ecx, %r13d
000000000001f14b	leaq	-0x80(%r13,%r15), %r15
000000000001f150	addq	$-0x80, %r13
000000000001f154	addq	%r15, %r13
000000000001f157	leaq	-0x1b0(%rbp), %rsi
000000000001f15e	jmp	0x1f166
000000000001f160	xorl	%r15d, %r15d
000000000001f163	xorl	%r13d, %r13d
000000000001f166	leal	(,%r12,4), %ebx
000000000001f16e	movq	%r14, %rdi
000000000001f171	movq	%rbx, %rdx
000000000001f174	callq	_memcpy
000000000001f179	movq	0x10(%rbp), %rax
000000000001f17d	movl	%r12d, (%rax)
000000000001f180	testl	%r12d, %r12d
000000000001f183	je	0x1f1a6
000000000001f185	movq	0x18(%rbp), %rax
000000000001f189	leaq	-0x33c(%rbp), %rcx
000000000001f190	movslq	%r12d, %rdx
000000000001f193	xorl	%esi, %esi
000000000001f195	movl	(%rcx), %edi
000000000001f197	movl	%edi, (%rax,%rsi,4)
000000000001f19a	addq	$0xc, %rcx
000000000001f19e	incq	%rsi
000000000001f1a1	cmpq	%rdx, %rsi
000000000001f1a4	jl	0x1f195
000000000001f1a6	addq	$0x228, %r15
000000000001f1ad	movq	0x20(%rbp), %rdi
000000000001f1b1	movq	%r15, %rsi
000000000001f1b4	movq	%rbx, %rdx
000000000001f1b7	callq	_memcpy
000000000001f1bc	addq	$0x2a8, %r13
000000000001f1c3	movq	0x28(%rbp), %rdi
000000000001f1c7	movq	%r13, %rsi
000000000001f1ca	movq	%rbx, %rdx
000000000001f1cd	callq	_memcpy
000000000001f1d2	xorl	%ebx, %ebx
000000000001f1d4	jmp	0x1f03b
_thread_sample:
000000000001f1d9	pushq	%rbp
000000000001f1da	movq	%rsp, %rbp
000000000001f1dd	pushq	%rbx
000000000001f1de	subq	$0x38, %rsp
000000000001f1e2	leaq	-0x38(%rbp), %rbx
000000000001f1e6	movl	$0x1, 0x18(%rbx)
000000000001f1ed	movl	%esi, 0x1c(%rbx)
000000000001f1f0	movl	$0x140000, 0x24(%rbx)
000000000001f1f7	movl	$0x80001513, (%rbx)
000000000001f1fd	movl	%edi, 0x8(%rbx)
000000000001f200	callq	_mig_get_reply_port
000000000001f205	movl	%eax, 0xc(%rbx)
000000000001f208	movabsq	$0xe2300000000, %rcx
000000000001f212	movq	%rcx, 0x10(%rbx)
000000000001f216	movl	$0x0, (%rsp)
000000000001f21d	movq	%rbx, %rdi
000000000001f220	movl	$0x3, %esi
000000000001f225	movl	$0x28, %edx
000000000001f22a	movl	$0x2c, %ecx
000000000001f22f	movl	%eax, %r8d
000000000001f232	xorl	%r9d, %r9d
000000000001f235	callq	_mach_msg
000000000001f23a	movl	%eax, %ebx
000000000001f23c	leal	-0x10000002(%rbx), %eax
000000000001f242	cmpl	$0xe, %eax
000000000001f245	ja	0x1f25b
000000000001f247	movl	$0x4003, %ecx
000000000001f24c	btl	%eax, %ecx
000000000001f24f	jae	0x1f25b
000000000001f251	movl	-0x2c(%rbp), %edi
000000000001f254	callq	_mig_put_reply_port
000000000001f259	jmp	0x1f2b0
000000000001f25b	testl	%ebx, %ebx
000000000001f25d	jne	0x1f291
000000000001f25f	movl	-0x24(%rbp), %eax
000000000001f262	cmpl	$0x47, %eax
000000000001f265	je	0x1f29b
000000000001f267	cmpl	$0xe87, %eax
000000000001f26c	jne	0x1f2a2
000000000001f26e	movl	$0xfffffed4, %ebx
000000000001f273	cmpl	$0x0, -0x38(%rbp)
000000000001f277	js	0x1f2a7
000000000001f279	cmpl	$0x24, -0x34(%rbp)
000000000001f27d	jne	0x1f2a7
000000000001f27f	movl	-0x30(%rbp), %eax
000000000001f282	testl	%eax, %eax
000000000001f284	jne	0x1f2a7
000000000001f286	movl	-0x18(%rbp), %ebx
000000000001f289	testl	%ebx, %ebx
000000000001f28b	jne	0x1f2a7
000000000001f28d	xorl	%ebx, %ebx
000000000001f28f	jmp	0x1f2b0
000000000001f291	movl	-0x2c(%rbp), %edi
000000000001f294	callq	_mig_dealloc_reply_port
000000000001f299	jmp	0x1f2b0
000000000001f29b	movl	$0xfffffecc, %ebx
000000000001f2a0	jmp	0x1f2a7
000000000001f2a2	movl	$0xfffffed3, %ebx
000000000001f2a7	leaq	-0x38(%rbp), %rdi
000000000001f2ab	callq	_mach_msg_destroy
000000000001f2b0	movl	%ebx, %eax
000000000001f2b2	addq	$0x38, %rsp
000000000001f2b6	popq	%rbx
000000000001f2b7	popq	%rbp
000000000001f2b8	retq
_etap_trace_thread:
000000000001f2b9	pushq	%rbp
000000000001f2ba	movq	%rsp, %rbp
000000000001f2bd	pushq	%rbx
000000000001f2be	subq	$0x38, %rsp
000000000001f2c2	leaq	_NDR_record(%rip), %rax
000000000001f2c9	movq	(%rax), %rax
000000000001f2cc	leaq	-0x38(%rbp), %rbx
000000000001f2d0	movq	%rax, 0x18(%rbx)
000000000001f2d4	movl	%esi, 0x20(%rbx)
000000000001f2d7	movl	$0x1513, (%rbx)
000000000001f2dd	movl	%edi, 0x8(%rbx)
000000000001f2e0	callq	_mig_get_reply_port
000000000001f2e5	movl	%eax, 0xc(%rbx)
000000000001f2e8	movabsq	$0xe2400000000, %rcx
000000000001f2f2	movq	%rcx, 0x10(%rbx)
000000000001f2f6	movl	$0x0, (%rsp)
000000000001f2fd	movq	%rbx, %rdi
000000000001f300	movl	$0x3, %esi
000000000001f305	movl	$0x24, %edx
000000000001f30a	movl	$0x2c, %ecx
000000000001f30f	movl	%eax, %r8d
000000000001f312	xorl	%r9d, %r9d
000000000001f315	callq	_mach_msg
000000000001f31a	movl	%eax, %ebx
000000000001f31c	leal	-0x10000002(%rbx), %eax
000000000001f322	cmpl	$0xe, %eax
000000000001f325	ja	0x1f33b
000000000001f327	movl	$0x4003, %ecx
000000000001f32c	btl	%eax, %ecx
000000000001f32f	jae	0x1f33b
000000000001f331	movl	-0x2c(%rbp), %edi
000000000001f334	callq	_mig_put_reply_port
000000000001f339	jmp	0x1f390
000000000001f33b	testl	%ebx, %ebx
000000000001f33d	jne	0x1f371
000000000001f33f	movl	-0x24(%rbp), %eax
000000000001f342	cmpl	$0x47, %eax
000000000001f345	je	0x1f37b
000000000001f347	cmpl	$0xe88, %eax
000000000001f34c	jne	0x1f382
000000000001f34e	movl	$0xfffffed4, %ebx
000000000001f353	cmpl	$0x0, -0x38(%rbp)
000000000001f357	js	0x1f387
000000000001f359	cmpl	$0x24, -0x34(%rbp)
000000000001f35d	jne	0x1f387
000000000001f35f	movl	-0x30(%rbp), %eax
000000000001f362	testl	%eax, %eax
000000000001f364	jne	0x1f387
000000000001f366	movl	-0x18(%rbp), %ebx
000000000001f369	testl	%ebx, %ebx
000000000001f36b	jne	0x1f387
000000000001f36d	xorl	%ebx, %ebx
000000000001f36f	jmp	0x1f390
000000000001f371	movl	-0x2c(%rbp), %edi
000000000001f374	callq	_mig_dealloc_reply_port
000000000001f379	jmp	0x1f390
000000000001f37b	movl	$0xfffffecc, %ebx
000000000001f380	jmp	0x1f387
000000000001f382	movl	$0xfffffed3, %ebx
000000000001f387	leaq	-0x38(%rbp), %rdi
000000000001f38b	callq	_mach_msg_destroy
000000000001f390	movl	%ebx, %eax
000000000001f392	addq	$0x38, %rsp
000000000001f396	popq	%rbx
000000000001f397	popq	%rbp
000000000001f398	retq
_thread_assign:
000000000001f399	pushq	%rbp
000000000001f39a	movq	%rsp, %rbp
000000000001f39d	pushq	%rbx
000000000001f39e	subq	$0x38, %rsp
000000000001f3a2	leaq	-0x38(%rbp), %rbx
000000000001f3a6	movl	$0x1, 0x18(%rbx)
000000000001f3ad	movl	%esi, 0x1c(%rbx)
000000000001f3b0	movl	$0x130000, 0x24(%rbx)
000000000001f3b7	movl	$0x80001513, (%rbx)
000000000001f3bd	movl	%edi, 0x8(%rbx)
000000000001f3c0	callq	_mig_get_reply_port
000000000001f3c5	movl	%eax, 0xc(%rbx)
000000000001f3c8	movabsq	$0xe2500000000, %rcx
000000000001f3d2	movq	%rcx, 0x10(%rbx)
000000000001f3d6	movl	$0x0, (%rsp)
000000000001f3dd	movq	%rbx, %rdi
000000000001f3e0	movl	$0x3, %esi
000000000001f3e5	movl	$0x28, %edx
000000000001f3ea	movl	$0x2c, %ecx
000000000001f3ef	movl	%eax, %r8d
000000000001f3f2	xorl	%r9d, %r9d
000000000001f3f5	callq	_mach_msg
000000000001f3fa	movl	%eax, %ebx
000000000001f3fc	leal	-0x10000002(%rbx), %eax
000000000001f402	cmpl	$0xe, %eax
000000000001f405	ja	0x1f41b
000000000001f407	movl	$0x4003, %ecx
000000000001f40c	btl	%eax, %ecx
000000000001f40f	jae	0x1f41b
000000000001f411	movl	-0x2c(%rbp), %edi
000000000001f414	callq	_mig_put_reply_port
000000000001f419	jmp	0x1f470
000000000001f41b	testl	%ebx, %ebx
000000000001f41d	jne	0x1f451
000000000001f41f	movl	-0x24(%rbp), %eax
000000000001f422	cmpl	$0x47, %eax
000000000001f425	je	0x1f45b
000000000001f427	cmpl	$0xe89, %eax
000000000001f42c	jne	0x1f462
000000000001f42e	movl	$0xfffffed4, %ebx
000000000001f433	cmpl	$0x0, -0x38(%rbp)
000000000001f437	js	0x1f467
000000000001f439	cmpl	$0x24, -0x34(%rbp)
000000000001f43d	jne	0x1f467
000000000001f43f	movl	-0x30(%rbp), %eax
000000000001f442	testl	%eax, %eax
000000000001f444	jne	0x1f467
000000000001f446	movl	-0x18(%rbp), %ebx
000000000001f449	testl	%ebx, %ebx
000000000001f44b	jne	0x1f467
000000000001f44d	xorl	%ebx, %ebx
000000000001f44f	jmp	0x1f470
000000000001f451	movl	-0x2c(%rbp), %edi
000000000001f454	callq	_mig_dealloc_reply_port
000000000001f459	jmp	0x1f470
000000000001f45b	movl	$0xfffffecc, %ebx
000000000001f460	jmp	0x1f467
000000000001f462	movl	$0xfffffed3, %ebx
000000000001f467	leaq	-0x38(%rbp), %rdi
000000000001f46b	callq	_mach_msg_destroy
000000000001f470	movl	%ebx, %eax
000000000001f472	addq	$0x38, %rsp
000000000001f476	popq	%rbx
000000000001f477	popq	%rbp
000000000001f478	retq
_thread_assign_default:
000000000001f479	pushq	%rbp
000000000001f47a	movq	%rsp, %rbp
000000000001f47d	pushq	%rbx
000000000001f47e	subq	$0x38, %rsp
000000000001f482	leaq	-0x38(%rbp), %rbx
000000000001f486	movl	$0x1513, (%rbx)
000000000001f48c	movl	%edi, 0x8(%rbx)
000000000001f48f	callq	_mig_get_reply_port
000000000001f494	movl	%eax, 0xc(%rbx)
000000000001f497	movabsq	$0xe2600000000, %rcx
000000000001f4a1	movq	%rcx, 0x10(%rbx)
000000000001f4a5	movl	$0x0, (%rsp)
000000000001f4ac	movq	%rbx, %rdi
000000000001f4af	movl	$0x3, %esi
000000000001f4b4	movl	$0x18, %edx
000000000001f4b9	movl	$0x2c, %ecx
000000000001f4be	movl	%eax, %r8d
000000000001f4c1	xorl	%r9d, %r9d
000000000001f4c4	callq	_mach_msg
000000000001f4c9	movl	%eax, %ebx
000000000001f4cb	leal	-0x10000002(%rbx), %eax
000000000001f4d1	cmpl	$0xe, %eax
000000000001f4d4	ja	0x1f4ea
000000000001f4d6	movl	$0x4003, %ecx
000000000001f4db	btl	%eax, %ecx
000000000001f4de	jae	0x1f4ea
000000000001f4e0	movl	-0x2c(%rbp), %edi
000000000001f4e3	callq	_mig_put_reply_port
000000000001f4e8	jmp	0x1f53f
000000000001f4ea	testl	%ebx, %ebx
000000000001f4ec	jne	0x1f520
000000000001f4ee	movl	-0x24(%rbp), %eax
000000000001f4f1	cmpl	$0x47, %eax
000000000001f4f4	je	0x1f52a
000000000001f4f6	cmpl	$0xe8a, %eax
000000000001f4fb	jne	0x1f531
000000000001f4fd	movl	$0xfffffed4, %ebx
000000000001f502	cmpl	$0x0, -0x38(%rbp)
000000000001f506	js	0x1f536
000000000001f508	cmpl	$0x24, -0x34(%rbp)
000000000001f50c	jne	0x1f536
000000000001f50e	movl	-0x30(%rbp), %eax
000000000001f511	testl	%eax, %eax
000000000001f513	jne	0x1f536
000000000001f515	movl	-0x18(%rbp), %ebx
000000000001f518	testl	%ebx, %ebx
000000000001f51a	jne	0x1f536
000000000001f51c	xorl	%ebx, %ebx
000000000001f51e	jmp	0x1f53f
000000000001f520	movl	-0x2c(%rbp), %edi
000000000001f523	callq	_mig_dealloc_reply_port
000000000001f528	jmp	0x1f53f
000000000001f52a	movl	$0xfffffecc, %ebx
000000000001f52f	jmp	0x1f536
000000000001f531	movl	$0xfffffed3, %ebx
000000000001f536	leaq	-0x38(%rbp), %rdi
000000000001f53a	callq	_mach_msg_destroy
000000000001f53f	movl	%ebx, %eax
000000000001f541	addq	$0x38, %rsp
000000000001f545	popq	%rbx
000000000001f546	popq	%rbp
000000000001f547	retq
_thread_get_assignment:
000000000001f548	pushq	%rbp
000000000001f549	movq	%rsp, %rbp
000000000001f54c	pushq	%r14
000000000001f54e	pushq	%rbx
000000000001f54f	subq	$0x40, %rsp
000000000001f553	movq	%rsi, %r14
000000000001f556	leaq	-0x40(%rbp), %rbx
000000000001f55a	movl	$0x1513, (%rbx)
000000000001f560	movl	%edi, 0x8(%rbx)
000000000001f563	callq	_mig_get_reply_port
000000000001f568	movl	%eax, 0xc(%rbx)
000000000001f56b	movabsq	$0xe2700000000, %rcx
000000000001f575	movq	%rcx, 0x10(%rbx)
000000000001f579	movl	$0x0, (%rsp)
000000000001f580	movq	%rbx, %rdi
000000000001f583	movl	$0x3, %esi
000000000001f588	movl	$0x18, %edx
000000000001f58d	movl	$0x30, %ecx
000000000001f592	movl	%eax, %r8d
000000000001f595	xorl	%r9d, %r9d
000000000001f598	callq	_mach_msg
000000000001f59d	movl	%eax, %ebx
000000000001f59f	leal	-0x10000002(%rbx), %eax
000000000001f5a5	cmpl	$0xe, %eax
000000000001f5a8	ja	0x1f5be
000000000001f5aa	movl	$0x4003, %ecx
000000000001f5af	btl	%eax, %ecx
000000000001f5b2	jae	0x1f5be
000000000001f5b4	movl	-0x34(%rbp), %edi
000000000001f5b7	callq	_mig_put_reply_port
000000000001f5bc	jmp	0x1f60c
000000000001f5be	testl	%ebx, %ebx
000000000001f5c0	jne	0x1f5ed
000000000001f5c2	movl	-0x2c(%rbp), %eax
000000000001f5c5	cmpl	$0x47, %eax
000000000001f5c8	je	0x1f5f7
000000000001f5ca	cmpl	$0xe8b, %eax
000000000001f5cf	jne	0x1f5fe
000000000001f5d1	movl	-0x40(%rbp), %eax
000000000001f5d4	movl	-0x3c(%rbp), %ecx
000000000001f5d7	movl	$0xfffffed4, %ebx
000000000001f5dc	testl	%eax, %eax
000000000001f5de	js	0x1f617
000000000001f5e0	cmpl	$0x24, %ecx
000000000001f5e3	jne	0x1f603
000000000001f5e5	cmpl	$0x0, -0x20(%rbp)
000000000001f5e9	jne	0x1f622
000000000001f5eb	jmp	0x1f603
000000000001f5ed	movl	-0x34(%rbp), %edi
000000000001f5f0	callq	_mig_dealloc_reply_port
000000000001f5f5	jmp	0x1f60c
000000000001f5f7	movl	$0xfffffecc, %ebx
000000000001f5fc	jmp	0x1f603
000000000001f5fe	movl	$0xfffffed3, %ebx
000000000001f603	leaq	-0x40(%rbp), %rdi
000000000001f607	callq	_mach_msg_destroy
000000000001f60c	movl	%ebx, %eax
000000000001f60e	addq	$0x40, %rsp
000000000001f612	popq	%rbx
000000000001f613	popq	%r14
000000000001f615	popq	%rbp
000000000001f616	retq
000000000001f617	cmpl	$0x28, %ecx
000000000001f61a	jne	0x1f603
000000000001f61c	cmpl	$0x1, -0x28(%rbp)
000000000001f620	jne	0x1f603
000000000001f622	movl	$0xfffffed4, %ebx
000000000001f627	cmpl	$0x0, -0x38(%rbp)
000000000001f62b	jne	0x1f603
000000000001f62d	testl	%eax, %eax
000000000001f62f	js	0x1f63a
000000000001f631	movl	-0x20(%rbp), %ebx
000000000001f634	testl	%ebx, %ebx
000000000001f636	jne	0x1f603
000000000001f638	jmp	0x1f648
000000000001f63a	movzwl	-0x1a(%rbp), %eax
000000000001f63e	shll	$0x10, %eax
000000000001f641	cmpl	$0x110000, %eax
000000000001f646	jne	0x1f603
000000000001f648	movl	-0x24(%rbp), %eax
000000000001f64b	movl	%eax, (%r14)
000000000001f64e	xorl	%ebx, %ebx
000000000001f650	jmp	0x1f60c
__kernelrpc_thread_set_policy:
000000000001f652	pushq	%rbp
000000000001f653	movq	%rsp, %rbp
000000000001f656	pushq	%r15
000000000001f658	pushq	%r14
000000000001f65a	pushq	%r13
000000000001f65c	pushq	%r12
000000000001f65e	pushq	%rbx
000000000001f65f	subq	$0x68, %rsp
000000000001f663	movl	$0x1, -0x68(%rbp)
000000000001f66a	movl	%esi, -0x64(%rbp)
000000000001f66d	movl	$0x130000, -0x5c(%rbp)
000000000001f674	leaq	_NDR_record(%rip), %rax
000000000001f67b	movq	(%rax), %rax
000000000001f67e	movq	%rax, -0x58(%rbp)
000000000001f682	movl	%edx, -0x50(%rbp)
000000000001f685	movl	$0xfffffecd, %r12d
000000000001f68b	cmpl	$0x5, %r8d
000000000001f68f	ja	0x1f7b8
000000000001f695	movq	%r9, %r15
000000000001f698	movl	%r8d, %ebx
000000000001f69b	movl	%edi, -0x2c(%rbp)
000000000001f69e	leaq	-0x48(%rbp), %r14
000000000001f6a2	leal	(,%rbx,4), %r13d
000000000001f6aa	movq	%r14, %rdi
000000000001f6ad	movq	%rcx, %rsi
000000000001f6b0	movq	%r13, %rdx
000000000001f6b3	callq	_memcpy
000000000001f6b8	movl	%ebx, -0x4(%r14)
000000000001f6bc	movl	0x10(%rbp), %r14d
000000000001f6c0	cmpl	$0x1, %r14d
000000000001f6c4	ja	0x1f7b8
000000000001f6ca	leaq	-0x80(%rbp), %rax
000000000001f6ce	leaq	-0x14(%r13,%rax), %rbx
000000000001f6d3	leaq	0x50(%rbx), %rdi
000000000001f6d7	leal	(,%r14,4), %edx
000000000001f6df	movq	%r15, %rsi
000000000001f6e2	callq	_memcpy
000000000001f6e7	movl	%r14d, 0x4c(%rbx)
000000000001f6eb	leal	0x3c(%r13,%r14,4), %r14d
000000000001f6f0	leaq	-0x80(%rbp), %rbx
000000000001f6f4	movl	$0x80001513, (%rbx)
000000000001f6fa	movl	-0x2c(%rbp), %eax
000000000001f6fd	movl	%eax, 0x8(%rbx)
000000000001f700	callq	_mig_get_reply_port
000000000001f705	movl	%eax, 0xc(%rbx)
000000000001f708	movabsq	$0xe2800000000, %rcx
000000000001f712	movq	%rcx, 0x10(%rbx)
000000000001f716	movl	$0x0, (%rsp)
000000000001f71d	movq	%rbx, %rdi
000000000001f720	movl	$0x3, %esi
000000000001f725	movl	%r14d, %edx
000000000001f728	movl	$0x2c, %ecx
000000000001f72d	movl	%eax, %r8d
000000000001f730	xorl	%r9d, %r9d
000000000001f733	callq	_mach_msg
000000000001f738	movl	%eax, %r12d
000000000001f73b	leal	-0x10000002(%r12), %eax
000000000001f743	cmpl	$0xe, %eax
000000000001f746	ja	0x1f75c
000000000001f748	movl	$0x4003, %ecx
000000000001f74d	btl	%eax, %ecx
000000000001f750	jae	0x1f75c
000000000001f752	movl	-0x74(%rbp), %edi
000000000001f755	callq	_mig_put_reply_port
000000000001f75a	jmp	0x1f7b8
000000000001f75c	testl	%r12d, %r12d
000000000001f75f	jne	0x1f797
000000000001f761	movl	-0x6c(%rbp), %eax
000000000001f764	cmpl	$0x47, %eax
000000000001f767	je	0x1f7a1
000000000001f769	cmpl	$0xe8c, %eax
000000000001f76e	jne	0x1f7a9
000000000001f770	movl	$0xfffffed4, %r12d
000000000001f776	cmpl	$0x0, -0x80(%rbp)
000000000001f77a	js	0x1f7af
000000000001f77c	cmpl	$0x24, -0x7c(%rbp)
000000000001f780	jne	0x1f7af
000000000001f782	movl	-0x78(%rbp), %eax
000000000001f785	testl	%eax, %eax
000000000001f787	jne	0x1f7af
000000000001f789	movl	-0x60(%rbp), %r12d
000000000001f78d	testl	%r12d, %r12d
000000000001f790	jne	0x1f7af
000000000001f792	xorl	%r12d, %r12d
000000000001f795	jmp	0x1f7b8
000000000001f797	movl	-0x74(%rbp), %edi
000000000001f79a	callq	_mig_dealloc_reply_port
000000000001f79f	jmp	0x1f7b8
000000000001f7a1	movl	$0xfffffecc, %r12d
000000000001f7a7	jmp	0x1f7af
000000000001f7a9	movl	$0xfffffed3, %r12d
000000000001f7af	leaq	-0x80(%rbp), %rdi
000000000001f7b3	callq	_mach_msg_destroy
000000000001f7b8	movl	%r12d, %eax
000000000001f7bb	addq	$0x68, %rsp
000000000001f7bf	popq	%rbx
000000000001f7c0	popq	%r12
000000000001f7c2	popq	%r13
000000000001f7c4	popq	%r14
000000000001f7c6	popq	%r15
000000000001f7c8	popq	%rbp
000000000001f7c9	retq
_thread_get_mach_voucher:
000000000001f7ca	pushq	%rbp
000000000001f7cb	movq	%rsp, %rbp
000000000001f7ce	pushq	%r14
000000000001f7d0	pushq	%rbx
000000000001f7d1	subq	$0x40, %rsp
000000000001f7d5	movq	%rdx, %r14
000000000001f7d8	leaq	_NDR_record(%rip), %rax
000000000001f7df	movq	(%rax), %rax
000000000001f7e2	leaq	-0x40(%rbp), %rbx
000000000001f7e6	movq	%rax, 0x18(%rbx)
000000000001f7ea	movl	%esi, 0x20(%rbx)
000000000001f7ed	movl	$0x1513, (%rbx)
000000000001f7f3	movl	%edi, 0x8(%rbx)
000000000001f7f6	callq	_mig_get_reply_port
000000000001f7fb	movl	%eax, 0xc(%rbx)
000000000001f7fe	movabsq	$0xe2900000000, %rcx
000000000001f808	movq	%rcx, 0x10(%rbx)
000000000001f80c	movl	$0x0, (%rsp)
000000000001f813	movq	%rbx, %rdi
000000000001f816	movl	$0x3, %esi
000000000001f81b	movl	$0x24, %edx
000000000001f820	movl	$0x30, %ecx
000000000001f825	movl	%eax, %r8d
000000000001f828	xorl	%r9d, %r9d
000000000001f82b	callq	_mach_msg
000000000001f830	movl	%eax, %ebx
000000000001f832	leal	-0x10000002(%rbx), %eax
000000000001f838	cmpl	$0xe, %eax
000000000001f83b	ja	0x1f851
000000000001f83d	movl	$0x4003, %ecx
000000000001f842	btl	%eax, %ecx
000000000001f845	jae	0x1f851
000000000001f847	movl	-0x34(%rbp), %edi
000000000001f84a	callq	_mig_put_reply_port
000000000001f84f	jmp	0x1f8b8
000000000001f851	testl	%ebx, %ebx
000000000001f853	jne	0x1f881
000000000001f855	movl	-0x2c(%rbp), %eax
000000000001f858	cmpl	$0x47, %eax
000000000001f85b	je	0x1f88b
000000000001f85d	cmpl	$0xe8d, %eax
000000000001f862	jne	0x1f892
000000000001f864	movl	-0x40(%rbp), %eax
000000000001f867	movl	-0x3c(%rbp), %ecx
000000000001f86a	movl	$0xfffffed4, %ebx
000000000001f86f	testl	%eax, %eax
000000000001f871	js	0x1f899
000000000001f873	cmpl	$0x24, %ecx
000000000001f876	jne	0x1f8af
000000000001f878	movl	-0x20(%rbp), %ecx
000000000001f87b	testl	%ecx, %ecx
000000000001f87d	jne	0x1f8a4
000000000001f87f	jmp	0x1f8af
000000000001f881	movl	-0x34(%rbp), %edi
000000000001f884	callq	_mig_dealloc_reply_port
000000000001f889	jmp	0x1f8b8
000000000001f88b	movl	$0xfffffecc, %ebx
000000000001f890	jmp	0x1f8af
000000000001f892	movl	$0xfffffed3, %ebx
000000000001f897	jmp	0x1f8af
000000000001f899	cmpl	$0x28, %ecx
000000000001f89c	jne	0x1f8af
000000000001f89e	cmpl	$0x1, -0x28(%rbp)
000000000001f8a2	jne	0x1f8af
000000000001f8a4	movl	$0xfffffed4, %ebx
000000000001f8a9	cmpl	$0x0, -0x38(%rbp)
000000000001f8ad	je	0x1f8c3
000000000001f8af	leaq	-0x40(%rbp), %rdi
000000000001f8b3	callq	_mach_msg_destroy
000000000001f8b8	movl	%ebx, %eax
000000000001f8ba	addq	$0x40, %rsp
000000000001f8be	popq	%rbx
000000000001f8bf	popq	%r14
000000000001f8c1	popq	%rbp
000000000001f8c2	retq
000000000001f8c3	testl	%eax, %eax
000000000001f8c5	js	0x1f8d0
000000000001f8c7	movl	-0x20(%rbp), %ebx
000000000001f8ca	testl	%ebx, %ebx
000000000001f8cc	jne	0x1f8af
000000000001f8ce	jmp	0x1f8de
000000000001f8d0	movzwl	-0x1a(%rbp), %eax
000000000001f8d4	shll	$0x10, %eax
000000000001f8d7	cmpl	$0x110000, %eax
000000000001f8dc	jne	0x1f8af
000000000001f8de	movl	-0x24(%rbp), %eax
000000000001f8e1	movl	%eax, (%r14)
000000000001f8e4	xorl	%ebx, %ebx
000000000001f8e6	jmp	0x1f8b8
_thread_set_mach_voucher:
000000000001f8e8	pushq	%rbp
000000000001f8e9	movq	%rsp, %rbp
000000000001f8ec	pushq	%rbx
000000000001f8ed	subq	$0x38, %rsp
000000000001f8f1	leaq	-0x38(%rbp), %rbx
000000000001f8f5	movl	$0x1, 0x18(%rbx)
000000000001f8fc	movl	%esi, 0x1c(%rbx)
000000000001f8ff	movl	$0x130000, 0x24(%rbx)
000000000001f906	movl	$0x80001513, (%rbx)
000000000001f90c	movl	%edi, 0x8(%rbx)
000000000001f90f	callq	_mig_get_reply_port
000000000001f914	movl	%eax, 0xc(%rbx)
000000000001f917	movabsq	$0xe2a00000000, %rcx
000000000001f921	movq	%rcx, 0x10(%rbx)
000000000001f925	movl	$0x0, (%rsp)
000000000001f92c	movq	%rbx, %rdi
000000000001f92f	movl	$0x3, %esi
000000000001f934	movl	$0x28, %edx
000000000001f939	movl	$0x2c, %ecx
000000000001f93e	movl	%eax, %r8d
000000000001f941	xorl	%r9d, %r9d
000000000001f944	callq	_mach_msg
000000000001f949	movl	%eax, %ebx
000000000001f94b	leal	-0x10000002(%rbx), %eax
000000000001f951	cmpl	$0xe, %eax
000000000001f954	ja	0x1f96a
000000000001f956	movl	$0x4003, %ecx
000000000001f95b	btl	%eax, %ecx
000000000001f95e	jae	0x1f96a
000000000001f960	movl	-0x2c(%rbp), %edi
000000000001f963	callq	_mig_put_reply_port
000000000001f968	jmp	0x1f9bf
000000000001f96a	testl	%ebx, %ebx
000000000001f96c	jne	0x1f9a0
000000000001f96e	movl	-0x24(%rbp), %eax
000000000001f971	cmpl	$0x47, %eax
000000000001f974	je	0x1f9aa
000000000001f976	cmpl	$0xe8e, %eax
000000000001f97b	jne	0x1f9b1
000000000001f97d	movl	$0xfffffed4, %ebx
000000000001f982	cmpl	$0x0, -0x38(%rbp)
000000000001f986	js	0x1f9b6
000000000001f988	cmpl	$0x24, -0x34(%rbp)
000000000001f98c	jne	0x1f9b6
000000000001f98e	movl	-0x30(%rbp), %eax
000000000001f991	testl	%eax, %eax
000000000001f993	jne	0x1f9b6
000000000001f995	movl	-0x18(%rbp), %ebx
000000000001f998	testl	%ebx, %ebx
000000000001f99a	jne	0x1f9b6
000000000001f99c	xorl	%ebx, %ebx
000000000001f99e	jmp	0x1f9bf
000000000001f9a0	movl	-0x2c(%rbp), %edi
000000000001f9a3	callq	_mig_dealloc_reply_port
000000000001f9a8	jmp	0x1f9bf
000000000001f9aa	movl	$0xfffffecc, %ebx
000000000001f9af	jmp	0x1f9b6
000000000001f9b1	movl	$0xfffffed3, %ebx
000000000001f9b6	leaq	-0x38(%rbp), %rdi
000000000001f9ba	callq	_mach_msg_destroy
000000000001f9bf	movl	%ebx, %eax
000000000001f9c1	addq	$0x38, %rsp
000000000001f9c5	popq	%rbx
000000000001f9c6	popq	%rbp
000000000001f9c7	retq
_thread_swap_mach_voucher:
000000000001f9c8	pushq	%rbp
000000000001f9c9	movq	%rsp, %rbp
000000000001f9cc	pushq	%r14
000000000001f9ce	pushq	%rbx
000000000001f9cf	subq	$0x40, %rsp
000000000001f9d3	movq	%rdx, %r14
000000000001f9d6	leaq	-0x48(%rbp), %rbx
000000000001f9da	movl	$0x2, 0x18(%rbx)
000000000001f9e1	movl	%esi, 0x1c(%rbx)
000000000001f9e4	movl	$0x130000, %eax
000000000001f9e9	movl	%eax, 0x24(%rbx)
000000000001f9ec	movl	(%rdx), %ecx
000000000001f9ee	movl	%ecx, 0x28(%rbx)
000000000001f9f1	movl	%eax, 0x30(%rbx)
000000000001f9f4	movl	$0x80001513, (%rbx)
000000000001f9fa	movl	%edi, 0x8(%rbx)
000000000001f9fd	callq	_mig_get_reply_port
000000000001fa02	movl	%eax, 0xc(%rbx)
000000000001fa05	movabsq	$0xe2b00000000, %rcx
000000000001fa0f	movq	%rcx, 0x10(%rbx)
000000000001fa13	movl	$0x0, (%rsp)
000000000001fa1a	movq	%rbx, %rdi
000000000001fa1d	movl	$0x3, %esi
000000000001fa22	movl	$0x34, %edx
000000000001fa27	movl	$0x30, %ecx
000000000001fa2c	movl	%eax, %r8d
000000000001fa2f	xorl	%r9d, %r9d
000000000001fa32	callq	_mach_msg
000000000001fa37	movl	%eax, %ebx
000000000001fa39	leal	-0x10000002(%rbx), %eax
000000000001fa3f	cmpl	$0xe, %eax
000000000001fa42	ja	0x1fa58
000000000001fa44	movl	$0x4003, %ecx
000000000001fa49	btl	%eax, %ecx
000000000001fa4c	jae	0x1fa58
000000000001fa4e	movl	-0x3c(%rbp), %edi
000000000001fa51	callq	_mig_put_reply_port
000000000001fa56	jmp	0x1faa6
000000000001fa58	testl	%ebx, %ebx
000000000001fa5a	jne	0x1fa87
000000000001fa5c	movl	-0x34(%rbp), %eax
000000000001fa5f	cmpl	$0x47, %eax
000000000001fa62	je	0x1fa91
000000000001fa64	cmpl	$0xe8f, %eax
000000000001fa69	jne	0x1fa98
000000000001fa6b	movl	-0x48(%rbp), %eax
000000000001fa6e	movl	-0x44(%rbp), %ecx
000000000001fa71	movl	$0xfffffed4, %ebx
000000000001fa76	testl	%eax, %eax
000000000001fa78	js	0x1fab1
000000000001fa7a	cmpl	$0x24, %ecx
000000000001fa7d	jne	0x1fa9d
000000000001fa7f	cmpl	$0x0, -0x28(%rbp)
000000000001fa83	jne	0x1fabc
000000000001fa85	jmp	0x1fa9d
000000000001fa87	movl	-0x3c(%rbp), %edi
000000000001fa8a	callq	_mig_dealloc_reply_port
000000000001fa8f	jmp	0x1faa6
000000000001fa91	movl	$0xfffffecc, %ebx
000000000001fa96	jmp	0x1fa9d
000000000001fa98	movl	$0xfffffed3, %ebx
000000000001fa9d	leaq	-0x48(%rbp), %rdi
000000000001faa1	callq	_mach_msg_destroy
000000000001faa6	movl	%ebx, %eax
000000000001faa8	addq	$0x40, %rsp
000000000001faac	popq	%rbx
000000000001faad	popq	%r14
000000000001faaf	popq	%rbp
000000000001fab0	retq
000000000001fab1	cmpl	$0x28, %ecx
000000000001fab4	jne	0x1fa9d
000000000001fab6	cmpl	$0x1, -0x30(%rbp)
000000000001faba	jne	0x1fa9d
000000000001fabc	movl	$0xfffffed4, %ebx
000000000001fac1	cmpl	$0x0, -0x40(%rbp)
000000000001fac5	jne	0x1fa9d
000000000001fac7	testl	%eax, %eax
000000000001fac9	js	0x1fad4
000000000001facb	movl	-0x28(%rbp), %ebx
000000000001face	testl	%ebx, %ebx
000000000001fad0	jne	0x1fa9d
000000000001fad2	jmp	0x1fae2
000000000001fad4	movzwl	-0x22(%rbp), %eax
000000000001fad8	shll	$0x10, %eax
000000000001fadb	cmpl	$0x110000, %eax
000000000001fae0	jne	0x1fa9d
000000000001fae2	movl	-0x2c(%rbp), %eax
000000000001fae5	movl	%eax, (%r14)
000000000001fae8	xorl	%ebx, %ebx
000000000001faea	jmp	0x1faa6
_vm_inherit:
000000000001faec	pushq	%rbp
000000000001faed	movq	%rsp, %rbp
000000000001faf0	pushq	%rbx
000000000001faf1	subq	$0x48, %rsp
000000000001faf5	leaq	_NDR_record(%rip), %rax
000000000001fafc	movq	(%rax), %rax
000000000001faff	leaq	-0x40(%rbp), %rbx
000000000001fb03	movq	%rax, 0x18(%rbx)
000000000001fb07	movq	%rsi, 0x20(%rbx)
000000000001fb0b	movq	%rdx, 0x28(%rbx)
000000000001fb0f	movl	%ecx, 0x30(%rbx)
000000000001fb12	movl	$0x1513, (%rbx)
000000000001fb18	movl	%edi, 0x8(%rbx)
000000000001fb1b	callq	_mig_get_reply_port
000000000001fb20	movl	%eax, 0xc(%rbx)
000000000001fb23	movabsq	$0x12c300000000, %rcx
000000000001fb2d	movq	%rcx, 0x10(%rbx)
000000000001fb31	movl	$0x0, (%rsp)
000000000001fb38	movq	%rbx, %rdi
000000000001fb3b	movl	$0x3, %esi
000000000001fb40	movl	$0x34, %edx
000000000001fb45	movl	$0x2c, %ecx
000000000001fb4a	movl	%eax, %r8d
000000000001fb4d	xorl	%r9d, %r9d
000000000001fb50	callq	_mach_msg
000000000001fb55	movl	%eax, %ebx
000000000001fb57	leal	-0x10000002(%rbx), %eax
000000000001fb5d	cmpl	$0xe, %eax
000000000001fb60	ja	0x1fb76
000000000001fb62	movl	$0x4003, %ecx
000000000001fb67	btl	%eax, %ecx
000000000001fb6a	jae	0x1fb76
000000000001fb6c	movl	-0x34(%rbp), %edi
000000000001fb6f	callq	_mig_put_reply_port
000000000001fb74	jmp	0x1fbcb
000000000001fb76	testl	%ebx, %ebx
000000000001fb78	jne	0x1fbac
000000000001fb7a	movl	-0x2c(%rbp), %eax
000000000001fb7d	cmpl	$0x47, %eax
000000000001fb80	je	0x1fbb6
000000000001fb82	cmpl	$0x1327, %eax
000000000001fb87	jne	0x1fbbd
000000000001fb89	movl	$0xfffffed4, %ebx
000000000001fb8e	cmpl	$0x0, -0x40(%rbp)
000000000001fb92	js	0x1fbc2
000000000001fb94	cmpl	$0x24, -0x3c(%rbp)
000000000001fb98	jne	0x1fbc2
000000000001fb9a	movl	-0x38(%rbp), %eax
000000000001fb9d	testl	%eax, %eax
000000000001fb9f	jne	0x1fbc2
000000000001fba1	movl	-0x20(%rbp), %ebx
000000000001fba4	testl	%ebx, %ebx
000000000001fba6	jne	0x1fbc2
000000000001fba8	xorl	%ebx, %ebx
000000000001fbaa	jmp	0x1fbcb
000000000001fbac	movl	-0x34(%rbp), %edi
000000000001fbaf	callq	_mig_dealloc_reply_port
000000000001fbb4	jmp	0x1fbcb
000000000001fbb6	movl	$0xfffffecc, %ebx
000000000001fbbb	jmp	0x1fbc2
000000000001fbbd	movl	$0xfffffed3, %ebx
000000000001fbc2	leaq	-0x40(%rbp), %rdi
000000000001fbc6	callq	_mach_msg_destroy
000000000001fbcb	movl	%ebx, %eax
000000000001fbcd	addq	$0x48, %rsp
000000000001fbd1	popq	%rbx
000000000001fbd2	popq	%rbp
000000000001fbd3	retq
_vm_read_list:
000000000001fbd4	pushq	%rbp
000000000001fbd5	movq	%rsp, %rbp
000000000001fbd8	pushq	%r15
000000000001fbda	pushq	%r14
000000000001fbdc	pushq	%r12
000000000001fbde	pushq	%rbx
000000000001fbdf	subq	$0x1040, %rsp
000000000001fbe6	movl	%edx, %r12d
000000000001fbe9	movq	%rsi, %r14
000000000001fbec	movl	%edi, %r15d
000000000001fbef	leaq	_NDR_record(%rip), %rax
000000000001fbf6	movq	(%rax), %rax
000000000001fbf9	leaq	-0x1030(%rbp), %rbx
000000000001fc00	movq	%rax, -0x8(%rbx)
000000000001fc04	movl	$0x1000, %edx
000000000001fc09	movq	%rbx, %rdi
000000000001fc0c	callq	_memcpy
000000000001fc11	movl	%r12d, 0x1000(%rbx)
000000000001fc18	movl	$0x1513, -0x20(%rbx)
000000000001fc1f	movl	%r15d, -0x18(%rbx)
000000000001fc23	callq	_mig_get_reply_port
000000000001fc28	movl	%eax, -0x14(%rbx)
000000000001fc2b	movabsq	$0x12c500000000, %rcx
000000000001fc35	movq	%rcx, -0x10(%rbx)
000000000001fc39	movl	$0x0, (%rsp)
000000000001fc40	leaq	-0x1050(%rbp), %rdi
000000000001fc47	movl	$0x3, %esi
000000000001fc4c	movl	$0x1024, %edx
000000000001fc51	movl	$0x102c, %ecx
000000000001fc56	movl	%eax, %r8d
000000000001fc59	xorl	%r9d, %r9d
000000000001fc5c	callq	_mach_msg
000000000001fc61	movl	%eax, %ebx
000000000001fc63	leal	-0x10000002(%rbx), %eax
000000000001fc69	cmpl	$0xe, %eax
000000000001fc6c	ja	0x1fc88
000000000001fc6e	movl	$0x4003, %ecx
000000000001fc73	btl	%eax, %ecx
000000000001fc76	jae	0x1fc88
000000000001fc78	movl	-0x1044(%rbp), %edi
000000000001fc7e	callq	_mig_put_reply_port
000000000001fc83	jmp	0x1fd17
000000000001fc88	testl	%ebx, %ebx
000000000001fc8a	jne	0x1fcf2
000000000001fc8c	movl	-0x103c(%rbp), %eax
000000000001fc92	cmpl	$0x47, %eax
000000000001fc95	je	0x1fcff
000000000001fc97	cmpl	$0x1329, %eax
000000000001fc9c	jne	0x1fd06
000000000001fc9e	movl	$0xfffffed4, %ebx
000000000001fca3	cmpl	$0x0, -0x1050(%rbp)
000000000001fcaa	js	0x1fd0b
000000000001fcac	movl	-0x104c(%rbp), %eax
000000000001fcb2	cmpl	$0x1024, %eax
000000000001fcb7	je	0x1fcc7
000000000001fcb9	cmpl	$0x24, %eax
000000000001fcbc	jne	0x1fd0b
000000000001fcbe	cmpl	$0x0, -0x1030(%rbp)
000000000001fcc5	je	0x1fd0b
000000000001fcc7	cmpl	$0x0, -0x1048(%rbp)
000000000001fcce	jne	0x1fd0b
000000000001fcd0	movl	-0x1030(%rbp), %ebx
000000000001fcd6	testl	%ebx, %ebx
000000000001fcd8	jne	0x1fd0b
000000000001fcda	leaq	-0x102c(%rbp), %rsi
000000000001fce1	movl	$0x1000, %edx
000000000001fce6	movq	%r14, %rdi
000000000001fce9	callq	_memcpy
000000000001fcee	xorl	%ebx, %ebx
000000000001fcf0	jmp	0x1fd17
000000000001fcf2	movl	-0x1044(%rbp), %edi
000000000001fcf8	callq	_mig_dealloc_reply_port
000000000001fcfd	jmp	0x1fd17
000000000001fcff	movl	$0xfffffecc, %ebx
000000000001fd04	jmp	0x1fd0b
000000000001fd06	movl	$0xfffffed3, %ebx
000000000001fd0b	leaq	-0x1050(%rbp), %rdi
000000000001fd12	callq	_mach_msg_destroy
000000000001fd17	movl	%ebx, %eax
000000000001fd19	addq	$0x1040, %rsp
000000000001fd20	popq	%rbx
000000000001fd21	popq	%r12
000000000001fd23	popq	%r14
000000000001fd25	popq	%r15
000000000001fd27	popq	%rbp
000000000001fd28	retq
_vm_write:
000000000001fd29	pushq	%rbp
000000000001fd2a	movq	%rsp, %rbp
000000000001fd2d	pushq	%rbx
000000000001fd2e	subq	$0x48, %rsp
000000000001fd32	leaq	-0x48(%rbp), %rbx
000000000001fd36	movl	$0x1, 0x18(%rbx)
000000000001fd3d	movq	%rdx, 0x1c(%rbx)
000000000001fd41	movl	%ecx, 0x28(%rbx)
000000000001fd44	movl	$0x1000100, 0x24(%rbx)
000000000001fd4b	leaq	_NDR_record(%rip), %rax
000000000001fd52	movq	(%rax), %rax
000000000001fd55	movq	%rax, 0x2c(%rbx)
000000000001fd59	movq	%rsi, 0x34(%rbx)
000000000001fd5d	movl	%ecx, 0x3c(%rbx)
000000000001fd60	movl	$0x80001513, (%rbx)
000000000001fd66	movl	%edi, 0x8(%rbx)
000000000001fd69	callq	_mig_get_reply_port
000000000001fd6e	movl	%eax, 0xc(%rbx)
000000000001fd71	movabsq	$0x12c600000000, %rcx
000000000001fd7b	movq	%rcx, 0x10(%rbx)
000000000001fd7f	movl	$0x0, (%rsp)
000000000001fd86	movq	%rbx, %rdi
000000000001fd89	movl	$0x3, %esi
000000000001fd8e	movl	$0x40, %edx
000000000001fd93	movl	$0x2c, %ecx
000000000001fd98	movl	%eax, %r8d
000000000001fd9b	xorl	%r9d, %r9d
000000000001fd9e	callq	_mach_msg
000000000001fda3	movl	%eax, %ebx
000000000001fda5	leal	-0x10000002(%rbx), %eax
000000000001fdab	cmpl	$0xe, %eax
000000000001fdae	ja	0x1fdc4
000000000001fdb0	movl	$0x4003, %ecx
000000000001fdb5	btl	%eax, %ecx
000000000001fdb8	jae	0x1fdc4
000000000001fdba	movl	-0x3c(%rbp), %edi
000000000001fdbd	callq	_mig_put_reply_port
000000000001fdc2	jmp	0x1fe19
000000000001fdc4	testl	%ebx, %ebx
000000000001fdc6	jne	0x1fdfa
000000000001fdc8	movl	-0x34(%rbp), %eax
000000000001fdcb	cmpl	$0x47, %eax
000000000001fdce	je	0x1fe04
000000000001fdd0	cmpl	$0x132a, %eax
000000000001fdd5	jne	0x1fe0b
000000000001fdd7	movl	$0xfffffed4, %ebx
000000000001fddc	cmpl	$0x0, -0x48(%rbp)
000000000001fde0	js	0x1fe10
000000000001fde2	cmpl	$0x24, -0x44(%rbp)
000000000001fde6	jne	0x1fe10
000000000001fde8	movl	-0x40(%rbp), %eax
000000000001fdeb	testl	%eax, %eax
000000000001fded	jne	0x1fe10
000000000001fdef	movl	-0x28(%rbp), %ebx
000000000001fdf2	testl	%ebx, %ebx
000000000001fdf4	jne	0x1fe10
000000000001fdf6	xorl	%ebx, %ebx
000000000001fdf8	jmp	0x1fe19
000000000001fdfa	movl	-0x3c(%rbp), %edi
000000000001fdfd	callq	_mig_dealloc_reply_port
000000000001fe02	jmp	0x1fe19
000000000001fe04	movl	$0xfffffecc, %ebx
000000000001fe09	jmp	0x1fe10
000000000001fe0b	movl	$0xfffffed3, %ebx
000000000001fe10	leaq	-0x48(%rbp), %rdi
000000000001fe14	callq	_mach_msg_destroy
000000000001fe19	movl	%ebx, %eax
000000000001fe1b	addq	$0x48, %rsp
000000000001fe1f	popq	%rbx
000000000001fe20	popq	%rbp
000000000001fe21	retq
_vm_read_overwrite:
000000000001fe22	pushq	%rbp
000000000001fe23	movq	%rsp, %rbp
000000000001fe26	pushq	%r14
000000000001fe28	pushq	%rbx
000000000001fe29	subq	$0x40, %rsp
000000000001fe2d	movq	%r8, %r14
000000000001fe30	leaq	_NDR_record(%rip), %rax
000000000001fe37	movq	(%rax), %rax
000000000001fe3a	leaq	-0x48(%rbp), %rbx
000000000001fe3e	movq	%rax, 0x18(%rbx)
000000000001fe42	movq	%rsi, 0x20(%rbx)
000000000001fe46	movq	%rdx, 0x28(%rbx)
000000000001fe4a	movq	%rcx, 0x30(%rbx)
000000000001fe4e	movl	$0x1513, (%rbx)
000000000001fe54	movl	%edi, 0x8(%rbx)
000000000001fe57	callq	_mig_get_reply_port
000000000001fe5c	movl	%eax, 0xc(%rbx)
000000000001fe5f	movabsq	$0x12c800000000, %rcx
000000000001fe69	movq	%rcx, 0x10(%rbx)
000000000001fe6d	movl	$0x0, (%rsp)
000000000001fe74	movq	%rbx, %rdi
000000000001fe77	movl	$0x3, %esi
000000000001fe7c	movl	$0x38, %edx
000000000001fe81	movl	$0x34, %ecx
000000000001fe86	movl	%eax, %r8d
000000000001fe89	xorl	%r9d, %r9d
000000000001fe8c	callq	_mach_msg
000000000001fe91	movl	%eax, %ebx
000000000001fe93	leal	-0x10000002(%rbx), %eax
000000000001fe99	cmpl	$0xe, %eax
000000000001fe9c	ja	0x1feb2
000000000001fe9e	movl	$0x4003, %ecx
000000000001fea3	btl	%eax, %ecx
000000000001fea6	jae	0x1feb2
000000000001fea8	movl	-0x3c(%rbp), %edi
000000000001feab	callq	_mig_put_reply_port
000000000001feb0	jmp	0x1ff1a
000000000001feb2	testl	%ebx, %ebx
000000000001feb4	jne	0x1fefb
000000000001feb6	movl	-0x34(%rbp), %eax
000000000001feb9	cmpl	$0x47, %eax
000000000001febc	je	0x1ff05
000000000001febe	cmpl	$0x132c, %eax
000000000001fec3	jne	0x1ff0c
000000000001fec5	movl	$0xfffffed4, %ebx
000000000001feca	cmpl	$0x0, -0x48(%rbp)
000000000001fece	js	0x1ff11
000000000001fed0	movl	-0x44(%rbp), %eax
000000000001fed3	cmpl	$0x2c, %eax
000000000001fed6	je	0x1fee3
000000000001fed8	cmpl	$0x24, %eax
000000000001fedb	jne	0x1ff11
000000000001fedd	cmpl	$0x0, -0x28(%rbp)
000000000001fee1	je	0x1ff11
000000000001fee3	cmpl	$0x0, -0x40(%rbp)
000000000001fee7	jne	0x1ff11
000000000001fee9	movl	-0x28(%rbp), %ebx
000000000001feec	testl	%ebx, %ebx
000000000001feee	jne	0x1ff11
000000000001fef0	movq	-0x24(%rbp), %rax
000000000001fef4	movq	%rax, (%r14)
000000000001fef7	xorl	%ebx, %ebx
000000000001fef9	jmp	0x1ff1a
000000000001fefb	movl	-0x3c(%rbp), %edi
000000000001fefe	callq	_mig_dealloc_reply_port
000000000001ff03	jmp	0x1ff1a
000000000001ff05	movl	$0xfffffecc, %ebx
000000000001ff0a	jmp	0x1ff11
000000000001ff0c	movl	$0xfffffed3, %ebx
000000000001ff11	leaq	-0x48(%rbp), %rdi
000000000001ff15	callq	_mach_msg_destroy
000000000001ff1a	movl	%ebx, %eax
000000000001ff1c	addq	$0x40, %rsp
000000000001ff20	popq	%rbx
000000000001ff21	popq	%r14
000000000001ff23	popq	%rbp
000000000001ff24	retq
_vm_msync:
000000000001ff25	pushq	%rbp
000000000001ff26	movq	%rsp, %rbp
000000000001ff29	pushq	%rbx
000000000001ff2a	subq	$0x48, %rsp
000000000001ff2e	leaq	_NDR_record(%rip), %rax
000000000001ff35	movq	(%rax), %rax
000000000001ff38	leaq	-0x40(%rbp), %rbx
000000000001ff3c	movq	%rax, 0x18(%rbx)
000000000001ff40	movq	%rsi, 0x20(%rbx)
000000000001ff44	movq	%rdx, 0x28(%rbx)
000000000001ff48	movl	%ecx, 0x30(%rbx)
000000000001ff4b	movl	$0x1513, (%rbx)
000000000001ff51	movl	%edi, 0x8(%rbx)
000000000001ff54	callq	_mig_get_reply_port
000000000001ff59	movl	%eax, 0xc(%rbx)
000000000001ff5c	movabsq	$0x12c900000000, %rcx
000000000001ff66	movq	%rcx, 0x10(%rbx)
000000000001ff6a	movl	$0x0, (%rsp)
000000000001ff71	movq	%rbx, %rdi
000000000001ff74	movl	$0x3, %esi
000000000001ff79	movl	$0x34, %edx
000000000001ff7e	movl	$0x2c, %ecx
000000000001ff83	movl	%eax, %r8d
000000000001ff86	xorl	%r9d, %r9d
000000000001ff89	callq	_mach_msg
000000000001ff8e	movl	%eax, %ebx
000000000001ff90	leal	-0x10000002(%rbx), %eax
000000000001ff96	cmpl	$0xe, %eax
000000000001ff99	ja	0x1ffaf
000000000001ff9b	movl	$0x4003, %ecx
000000000001ffa0	btl	%eax, %ecx
000000000001ffa3	jae	0x1ffaf
000000000001ffa5	movl	-0x34(%rbp), %edi
000000000001ffa8	callq	_mig_put_reply_port
000000000001ffad	jmp	0x20004
000000000001ffaf	testl	%ebx, %ebx
000000000001ffb1	jne	0x1ffe5
000000000001ffb3	movl	-0x2c(%rbp), %eax
000000000001ffb6	cmpl	$0x47, %eax
000000000001ffb9	je	0x1ffef
000000000001ffbb	cmpl	$0x132d, %eax
000000000001ffc0	jne	0x1fff6
000000000001ffc2	movl	$0xfffffed4, %ebx
000000000001ffc7	cmpl	$0x0, -0x40(%rbp)
000000000001ffcb	js	0x1fffb
000000000001ffcd	cmpl	$0x24, -0x3c(%rbp)
000000000001ffd1	jne	0x1fffb
000000000001ffd3	movl	-0x38(%rbp), %eax
000000000001ffd6	testl	%eax, %eax
000000000001ffd8	jne	0x1fffb
000000000001ffda	movl	-0x20(%rbp), %ebx
000000000001ffdd	testl	%ebx, %ebx
000000000001ffdf	jne	0x1fffb
000000000001ffe1	xorl	%ebx, %ebx
000000000001ffe3	jmp	0x20004
000000000001ffe5	movl	-0x34(%rbp), %edi
000000000001ffe8	callq	_mig_dealloc_reply_port
000000000001ffed	jmp	0x20004
000000000001ffef	movl	$0xfffffecc, %ebx
000000000001fff4	jmp	0x1fffb
000000000001fff6	movl	$0xfffffed3, %ebx
000000000001fffb	leaq	-0x40(%rbp), %rdi
000000000001ffff	callq	_mach_msg_destroy
0000000000020004	movl	%ebx, %eax
0000000000020006	addq	$0x48, %rsp
000000000002000a	popq	%rbx
000000000002000b	popq	%rbp
000000000002000c	retq
_vm_behavior_set:
000000000002000d	pushq	%rbp
000000000002000e	movq	%rsp, %rbp
0000000000020011	pushq	%rbx
0000000000020012	subq	$0x48, %rsp
0000000000020016	leaq	_NDR_record(%rip), %rax
000000000002001d	movq	(%rax), %rax
0000000000020020	leaq	-0x40(%rbp), %rbx
0000000000020024	movq	%rax, 0x18(%rbx)
0000000000020028	movq	%rsi, 0x20(%rbx)
000000000002002c	movq	%rdx, 0x28(%rbx)
0000000000020030	movl	%ecx, 0x30(%rbx)
0000000000020033	movl	$0x1513, (%rbx)
0000000000020039	movl	%edi, 0x8(%rbx)
000000000002003c	callq	_mig_get_reply_port
0000000000020041	movl	%eax, 0xc(%rbx)
0000000000020044	movabsq	$0x12ca00000000, %rcx
000000000002004e	movq	%rcx, 0x10(%rbx)
0000000000020052	movl	$0x0, (%rsp)
0000000000020059	movq	%rbx, %rdi
000000000002005c	movl	$0x3, %esi
0000000000020061	movl	$0x34, %edx
0000000000020066	movl	$0x2c, %ecx
000000000002006b	movl	%eax, %r8d
000000000002006e	xorl	%r9d, %r9d
0000000000020071	callq	_mach_msg
0000000000020076	movl	%eax, %ebx
0000000000020078	leal	-0x10000002(%rbx), %eax
000000000002007e	cmpl	$0xe, %eax
0000000000020081	ja	0x20097
0000000000020083	movl	$0x4003, %ecx
0000000000020088	btl	%eax, %ecx
000000000002008b	jae	0x20097
000000000002008d	movl	-0x34(%rbp), %edi
0000000000020090	callq	_mig_put_reply_port
0000000000020095	jmp	0x200ec
0000000000020097	testl	%ebx, %ebx
0000000000020099	jne	0x200cd
000000000002009b	movl	-0x2c(%rbp), %eax
000000000002009e	cmpl	$0x47, %eax
00000000000200a1	je	0x200d7
00000000000200a3	cmpl	$0x132e, %eax
00000000000200a8	jne	0x200de
00000000000200aa	movl	$0xfffffed4, %ebx
00000000000200af	cmpl	$0x0, -0x40(%rbp)
00000000000200b3	js	0x200e3
00000000000200b5	cmpl	$0x24, -0x3c(%rbp)
00000000000200b9	jne	0x200e3
00000000000200bb	movl	-0x38(%rbp), %eax
00000000000200be	testl	%eax, %eax
00000000000200c0	jne	0x200e3
00000000000200c2	movl	-0x20(%rbp), %ebx
00000000000200c5	testl	%ebx, %ebx
00000000000200c7	jne	0x200e3
00000000000200c9	xorl	%ebx, %ebx
00000000000200cb	jmp	0x200ec
00000000000200cd	movl	-0x34(%rbp), %edi
00000000000200d0	callq	_mig_dealloc_reply_port
00000000000200d5	jmp	0x200ec
00000000000200d7	movl	$0xfffffecc, %ebx
00000000000200dc	jmp	0x200e3
00000000000200de	movl	$0xfffffed3, %ebx
00000000000200e3	leaq	-0x40(%rbp), %rdi
00000000000200e7	callq	_mach_msg_destroy
00000000000200ec	movl	%ebx, %eax
00000000000200ee	addq	$0x48, %rsp
00000000000200f2	popq	%rbx
00000000000200f3	popq	%rbp
00000000000200f4	retq
_vm_machine_attribute:
00000000000200f5	pushq	%rbp
00000000000200f6	movq	%rsp, %rbp
00000000000200f9	pushq	%r14
00000000000200fb	pushq	%rbx
00000000000200fc	subq	$0x40, %rsp
0000000000020100	movq	%r8, %r14
0000000000020103	leaq	_NDR_record(%rip), %rax
000000000002010a	movq	(%rax), %rax
000000000002010d	leaq	-0x48(%rbp), %rbx
0000000000020111	movq	%rax, 0x18(%rbx)
0000000000020115	movq	%rsi, 0x20(%rbx)
0000000000020119	movq	%rdx, 0x28(%rbx)
000000000002011d	movl	%ecx, 0x30(%rbx)
0000000000020120	movl	(%r8), %eax
0000000000020123	movl	%eax, 0x34(%rbx)
0000000000020126	movl	$0x1513, (%rbx)
000000000002012c	movl	%edi, 0x8(%rbx)
000000000002012f	callq	_mig_get_reply_port
0000000000020134	movl	%eax, 0xc(%rbx)
0000000000020137	movabsq	$0x12cc00000000, %rcx
0000000000020141	movq	%rcx, 0x10(%rbx)
0000000000020145	movl	$0x0, (%rsp)
000000000002014c	movq	%rbx, %rdi
000000000002014f	movl	$0x3, %esi
0000000000020154	movl	$0x38, %edx
0000000000020159	movl	$0x30, %ecx
000000000002015e	movl	%eax, %r8d
0000000000020161	xorl	%r9d, %r9d
0000000000020164	callq	_mach_msg
0000000000020169	movl	%eax, %ebx
000000000002016b	leal	-0x10000002(%rbx), %eax
0000000000020171	cmpl	$0xe, %eax
0000000000020174	ja	0x2018a
0000000000020176	movl	$0x4003, %ecx
000000000002017b	btl	%eax, %ecx
000000000002017e	jae	0x2018a
0000000000020180	movl	-0x3c(%rbp), %edi
0000000000020183	callq	_mig_put_reply_port
0000000000020188	jmp	0x201f1
000000000002018a	testl	%ebx, %ebx
000000000002018c	jne	0x201d2
000000000002018e	movl	-0x34(%rbp), %eax
0000000000020191	cmpl	$0x47, %eax
0000000000020194	je	0x201dc
0000000000020196	cmpl	$0x1330, %eax
000000000002019b	jne	0x201e3
000000000002019d	movl	$0xfffffed4, %ebx
00000000000201a2	cmpl	$0x0, -0x48(%rbp)
00000000000201a6	js	0x201e8
00000000000201a8	movl	-0x44(%rbp), %eax
00000000000201ab	cmpl	$0x28, %eax
00000000000201ae	je	0x201bb
00000000000201b0	cmpl	$0x24, %eax
00000000000201b3	jne	0x201e8
00000000000201b5	cmpl	$0x0, -0x28(%rbp)
00000000000201b9	je	0x201e8
00000000000201bb	cmpl	$0x0, -0x40(%rbp)
00000000000201bf	jne	0x201e8
00000000000201c1	movl	-0x28(%rbp), %ebx
00000000000201c4	testl	%ebx, %ebx
00000000000201c6	jne	0x201e8
00000000000201c8	movl	-0x24(%rbp), %eax
00000000000201cb	movl	%eax, (%r14)
00000000000201ce	xorl	%ebx, %ebx
00000000000201d0	jmp	0x201f1
00000000000201d2	movl	-0x3c(%rbp), %edi
00000000000201d5	callq	_mig_dealloc_reply_port
00000000000201da	jmp	0x201f1
00000000000201dc	movl	$0xfffffecc, %ebx
00000000000201e1	jmp	0x201e8
00000000000201e3	movl	$0xfffffed3, %ebx
00000000000201e8	leaq	-0x48(%rbp), %rdi
00000000000201ec	callq	_mach_msg_destroy
00000000000201f1	movl	%ebx, %eax
00000000000201f3	addq	$0x40, %rsp
00000000000201f7	popq	%rbx
00000000000201f8	popq	%r14
00000000000201fa	popq	%rbp
00000000000201fb	retq
_vm_map_page_query:
00000000000201fc	pushq	%rbp
00000000000201fd	movq	%rsp, %rbp
0000000000020200	pushq	%r15
0000000000020202	pushq	%r14
0000000000020204	pushq	%rbx
0000000000020205	subq	$0x48, %rsp
0000000000020209	movq	%rcx, %r14
000000000002020c	movq	%rdx, %r15
000000000002020f	leaq	_NDR_record(%rip), %rax
0000000000020216	movq	(%rax), %rax
0000000000020219	leaq	-0x50(%rbp), %rbx
000000000002021d	movq	%rax, 0x18(%rbx)
0000000000020221	movq	%rsi, 0x20(%rbx)
0000000000020225	movl	$0x1513, (%rbx)
000000000002022b	movl	%edi, 0x8(%rbx)
000000000002022e	callq	_mig_get_reply_port
0000000000020233	movl	%eax, 0xc(%rbx)
0000000000020236	movabsq	$0x12ce00000000, %rcx
0000000000020240	movq	%rcx, 0x10(%rbx)
0000000000020244	movl	$0x0, (%rsp)
000000000002024b	movq	%rbx, %rdi
000000000002024e	movl	$0x3, %esi
0000000000020253	movl	$0x28, %edx
0000000000020258	movl	$0x34, %ecx
000000000002025d	movl	%eax, %r8d
0000000000020260	xorl	%r9d, %r9d
0000000000020263	callq	_mach_msg
0000000000020268	movl	%eax, %ebx
000000000002026a	leal	-0x10000002(%rbx), %eax
0000000000020270	cmpl	$0xe, %eax
0000000000020273	ja	0x20289
0000000000020275	movl	$0x4003, %ecx
000000000002027a	btl	%eax, %ecx
000000000002027d	jae	0x20289
000000000002027f	movl	-0x44(%rbp), %edi
0000000000020282	callq	_mig_put_reply_port
0000000000020287	jmp	0x202f6
0000000000020289	testl	%ebx, %ebx
000000000002028b	jne	0x202d7
000000000002028d	movl	-0x3c(%rbp), %eax
0000000000020290	cmpl	$0x47, %eax
0000000000020293	je	0x202e1
0000000000020295	cmpl	$0x1332, %eax
000000000002029a	jne	0x202e8
000000000002029c	movl	$0xfffffed4, %ebx
00000000000202a1	cmpl	$0x0, -0x50(%rbp)
00000000000202a5	js	0x202ed
00000000000202a7	movl	-0x4c(%rbp), %eax
00000000000202aa	cmpl	$0x2c, %eax
00000000000202ad	je	0x202ba
00000000000202af	cmpl	$0x24, %eax
00000000000202b2	jne	0x202ed
00000000000202b4	cmpl	$0x0, -0x30(%rbp)
00000000000202b8	je	0x202ed
00000000000202ba	cmpl	$0x0, -0x48(%rbp)
00000000000202be	jne	0x202ed
00000000000202c0	movl	-0x30(%rbp), %ebx
00000000000202c3	testl	%ebx, %ebx
00000000000202c5	jne	0x202ed
00000000000202c7	movl	-0x2c(%rbp), %eax
00000000000202ca	movl	%eax, (%r15)
00000000000202cd	movl	-0x28(%rbp), %eax
00000000000202d0	movl	%eax, (%r14)
00000000000202d3	xorl	%ebx, %ebx
00000000000202d5	jmp	0x202f6
00000000000202d7	movl	-0x44(%rbp), %edi
00000000000202da	callq	_mig_dealloc_reply_port
00000000000202df	jmp	0x202f6
00000000000202e1	movl	$0xfffffecc, %ebx
00000000000202e6	jmp	0x202ed
00000000000202e8	movl	$0xfffffed3, %ebx
00000000000202ed	leaq	-0x50(%rbp), %rdi
00000000000202f1	callq	_mach_msg_destroy
00000000000202f6	movl	%ebx, %eax
00000000000202f8	addq	$0x48, %rsp
00000000000202fc	popq	%rbx
00000000000202fd	popq	%r14
00000000000202ff	popq	%r15
0000000000020301	popq	%rbp
0000000000020302	retq
__kernelrpc_vm_purgable_control:
0000000000020303	pushq	%rbp
0000000000020304	movq	%rsp, %rbp
0000000000020307	pushq	%r14
0000000000020309	pushq	%rbx
000000000002030a	subq	$0x40, %rsp
000000000002030e	movq	%rcx, %r14
0000000000020311	leaq	_NDR_record(%rip), %rax
0000000000020318	movq	(%rax), %rax
000000000002031b	leaq	-0x40(%rbp), %rbx
000000000002031f	movq	%rax, 0x18(%rbx)
0000000000020323	movq	%rsi, 0x20(%rbx)
0000000000020327	movl	%edx, 0x28(%rbx)
000000000002032a	movl	(%rcx), %eax
000000000002032c	movl	%eax, 0x2c(%rbx)
000000000002032f	movl	$0x1513, (%rbx)
0000000000020335	movl	%edi, 0x8(%rbx)
0000000000020338	callq	_mig_get_reply_port
000000000002033d	movl	%eax, 0xc(%rbx)
0000000000020340	movabsq	$0x12d200000000, %rcx
000000000002034a	movq	%rcx, 0x10(%rbx)
000000000002034e	movl	$0x0, (%rsp)
0000000000020355	movq	%rbx, %rdi
0000000000020358	movl	$0x3, %esi
000000000002035d	movl	$0x30, %edx
0000000000020362	movl	$0x30, %ecx
0000000000020367	movl	%eax, %r8d
000000000002036a	xorl	%r9d, %r9d
000000000002036d	callq	_mach_msg
0000000000020372	movl	%eax, %ebx
0000000000020374	leal	-0x10000002(%rbx), %eax
000000000002037a	cmpl	$0xe, %eax
000000000002037d	ja	0x20393
000000000002037f	movl	$0x4003, %ecx
0000000000020384	btl	%eax, %ecx
0000000000020387	jae	0x20393
0000000000020389	movl	-0x34(%rbp), %edi
000000000002038c	callq	_mig_put_reply_port
0000000000020391	jmp	0x203fa
0000000000020393	testl	%ebx, %ebx
0000000000020395	jne	0x203db
0000000000020397	movl	-0x2c(%rbp), %eax
000000000002039a	cmpl	$0x47, %eax
000000000002039d	je	0x203e5
000000000002039f	cmpl	$0x1336, %eax
00000000000203a4	jne	0x203ec
00000000000203a6	movl	$0xfffffed4, %ebx
00000000000203ab	cmpl	$0x0, -0x40(%rbp)
00000000000203af	js	0x203f1
00000000000203b1	movl	-0x3c(%rbp), %eax
00000000000203b4	cmpl	$0x28, %eax
00000000000203b7	je	0x203c4
00000000000203b9	cmpl	$0x24, %eax
00000000000203bc	jne	0x203f1
00000000000203be	cmpl	$0x0, -0x20(%rbp)
00000000000203c2	je	0x203f1
00000000000203c4	cmpl	$0x0, -0x38(%rbp)
00000000000203c8	jne	0x203f1
00000000000203ca	movl	-0x20(%rbp), %ebx
00000000000203cd	testl	%ebx, %ebx
00000000000203cf	jne	0x203f1
00000000000203d1	movl	-0x1c(%rbp), %eax
00000000000203d4	movl	%eax, (%r14)
00000000000203d7	xorl	%ebx, %ebx
00000000000203d9	jmp	0x203fa
00000000000203db	movl	-0x34(%rbp), %edi
00000000000203de	callq	_mig_dealloc_reply_port
00000000000203e3	jmp	0x203fa
00000000000203e5	movl	$0xfffffecc, %ebx
00000000000203ea	jmp	0x203f1
00000000000203ec	movl	$0xfffffed3, %ebx
00000000000203f1	leaq	-0x40(%rbp), %rdi
00000000000203f5	callq	_mach_msg_destroy
00000000000203fa	movl	%ebx, %eax
00000000000203fc	addq	$0x40, %rsp
0000000000020400	popq	%rbx
0000000000020401	popq	%r14
0000000000020403	popq	%rbp
0000000000020404	retq
_mach_memory_entry_purgable_control:
0000000000020405	pushq	%rbp
0000000000020406	movq	%rsp, %rbp
0000000000020409	pushq	%r14
000000000002040b	pushq	%rbx
000000000002040c	subq	$0x40, %rsp
0000000000020410	movq	%rdx, %r14
0000000000020413	leaq	_NDR_record(%rip), %rax
000000000002041a	movq	(%rax), %rax
000000000002041d	leaq	-0x40(%rbp), %rbx
0000000000020421	movq	%rax, 0x18(%rbx)
0000000000020425	movl	%esi, 0x20(%rbx)
0000000000020428	movl	(%rdx), %eax
000000000002042a	movl	%eax, 0x24(%rbx)
000000000002042d	movl	$0x1513, (%rbx)
0000000000020433	movl	%edi, 0x8(%rbx)
0000000000020436	callq	_mig_get_reply_port
000000000002043b	movl	%eax, 0xc(%rbx)
000000000002043e	movabsq	$0x132400000000, %rcx
0000000000020448	movq	%rcx, 0x10(%rbx)
000000000002044c	movl	$0x0, (%rsp)
0000000000020453	movq	%rbx, %rdi
0000000000020456	movl	$0x3, %esi
000000000002045b	movl	$0x28, %edx
0000000000020460	movl	$0x30, %ecx
0000000000020465	movl	%eax, %r8d
0000000000020468	xorl	%r9d, %r9d
000000000002046b	callq	_mach_msg
0000000000020470	movl	%eax, %ebx
0000000000020472	leal	-0x10000002(%rbx), %eax
0000000000020478	cmpl	$0xe, %eax
000000000002047b	ja	0x20491
000000000002047d	movl	$0x4003, %ecx
0000000000020482	btl	%eax, %ecx
0000000000020485	jae	0x20491
0000000000020487	movl	-0x34(%rbp), %edi
000000000002048a	callq	_mig_put_reply_port
000000000002048f	jmp	0x204f8
0000000000020491	testl	%ebx, %ebx
0000000000020493	jne	0x204d9
0000000000020495	movl	-0x2c(%rbp), %eax
0000000000020498	cmpl	$0x47, %eax
000000000002049b	je	0x204e3
000000000002049d	cmpl	$_host_create_mach_voucher_trap, %eax
00000000000204a2	jne	0x204ea
00000000000204a4	movl	$0xfffffed4, %ebx
00000000000204a9	cmpl	$0x0, -0x40(%rbp)
00000000000204ad	js	0x204ef
00000000000204af	movl	-0x3c(%rbp), %eax
00000000000204b2	cmpl	$0x28, %eax
00000000000204b5	je	0x204c2
00000000000204b7	cmpl	$0x24, %eax
00000000000204ba	jne	0x204ef
00000000000204bc	cmpl	$0x0, -0x20(%rbp)
00000000000204c0	je	0x204ef
00000000000204c2	cmpl	$0x0, -0x38(%rbp)
00000000000204c6	jne	0x204ef
00000000000204c8	movl	-0x20(%rbp), %ebx
00000000000204cb	testl	%ebx, %ebx
00000000000204cd	jne	0x204ef
00000000000204cf	movl	-0x1c(%rbp), %eax
00000000000204d2	movl	%eax, (%r14)
00000000000204d5	xorl	%ebx, %ebx
00000000000204d7	jmp	0x204f8
00000000000204d9	movl	-0x34(%rbp), %edi
00000000000204dc	callq	_mig_dealloc_reply_port
00000000000204e1	jmp	0x204f8
00000000000204e3	movl	$0xfffffecc, %ebx
00000000000204e8	jmp	0x204ef
00000000000204ea	movl	$0xfffffed3, %ebx
00000000000204ef	leaq	-0x40(%rbp), %rdi
00000000000204f3	callq	_mach_msg_destroy
00000000000204f8	movl	%ebx, %eax
00000000000204fa	addq	$0x40, %rsp
00000000000204fe	popq	%rbx
00000000000204ff	popq	%r14
0000000000020501	popq	%rbp
0000000000020502	retq
_mach_memory_entry_access_tracking:
0000000000020503	pushq	%rbp
0000000000020504	movq	%rsp, %rbp
0000000000020507	pushq	%r15
0000000000020509	pushq	%r14
000000000002050b	pushq	%r12
000000000002050d	pushq	%rbx
000000000002050e	subq	$0x40, %rsp
0000000000020512	movq	%rcx, %r14
0000000000020515	movq	%rdx, %r15
0000000000020518	movq	%rsi, %r12
000000000002051b	leaq	_NDR_record(%rip), %rax
0000000000020522	movq	(%rax), %rax
0000000000020525	leaq	-0x58(%rbp), %rbx
0000000000020529	movq	%rax, 0x18(%rbx)
000000000002052d	movl	(%rsi), %eax
000000000002052f	movl	%eax, 0x20(%rbx)
0000000000020532	movl	$0x1513, (%rbx)
0000000000020538	movl	%edi, 0x8(%rbx)
000000000002053b	callq	_mig_get_reply_port
0000000000020540	movl	%eax, 0xc(%rbx)
0000000000020543	movabsq	$0x132500000000, %rcx
000000000002054d	movq	%rcx, 0x10(%rbx)
0000000000020551	movl	$0x0, (%rsp)
0000000000020558	movq	%rbx, %rdi
000000000002055b	movl	$0x3, %esi
0000000000020560	movl	$0x24, %edx
0000000000020565	movl	$0x38, %ecx
000000000002056a	movl	%eax, %r8d
000000000002056d	xorl	%r9d, %r9d
0000000000020570	callq	_mach_msg
0000000000020575	movl	%eax, %ebx
0000000000020577	leal	-0x10000002(%rbx), %eax
000000000002057d	cmpl	$0xe, %eax
0000000000020580	ja	0x20596
0000000000020582	movl	$0x4003, %ecx
0000000000020587	btl	%eax, %ecx
000000000002058a	jae	0x20596
000000000002058c	movl	-0x4c(%rbp), %edi
000000000002058f	callq	_mig_put_reply_port
0000000000020594	jmp	0x2060a
0000000000020596	testl	%ebx, %ebx
0000000000020598	jne	0x205eb
000000000002059a	movl	-0x44(%rbp), %eax
000000000002059d	cmpl	$0x47, %eax
00000000000205a0	je	0x205f5
00000000000205a2	cmpl	$0x1389, %eax
00000000000205a7	jne	0x205fc
00000000000205a9	movl	$0xfffffed4, %ebx
00000000000205ae	cmpl	$0x0, -0x58(%rbp)
00000000000205b2	js	0x20601
00000000000205b4	movl	-0x54(%rbp), %eax
00000000000205b7	cmpl	$0x30, %eax
00000000000205ba	je	0x205c7
00000000000205bc	cmpl	$0x24, %eax
00000000000205bf	jne	0x20601
00000000000205c1	cmpl	$0x0, -0x38(%rbp)
00000000000205c5	je	0x20601
00000000000205c7	cmpl	$0x0, -0x50(%rbp)
00000000000205cb	jne	0x20601
00000000000205cd	movl	-0x38(%rbp), %ebx
00000000000205d0	testl	%ebx, %ebx
00000000000205d2	jne	0x20601
00000000000205d4	movl	-0x34(%rbp), %eax
00000000000205d7	movl	%eax, (%r12)
00000000000205db	movl	-0x30(%rbp), %eax
00000000000205de	movl	%eax, (%r15)
00000000000205e1	movl	-0x2c(%rbp), %eax
00000000000205e4	movl	%eax, (%r14)
00000000000205e7	xorl	%ebx, %ebx
00000000000205e9	jmp	0x2060a
00000000000205eb	movl	-0x4c(%rbp), %edi
00000000000205ee	callq	_mig_dealloc_reply_port
00000000000205f3	jmp	0x2060a
00000000000205f5	movl	$0xfffffecc, %ebx
00000000000205fa	jmp	0x20601
00000000000205fc	movl	$0xfffffed3, %ebx
0000000000020601	leaq	-0x58(%rbp), %rdi
0000000000020605	callq	_mach_msg_destroy
000000000002060a	movl	%ebx, %eax
000000000002060c	addq	$0x40, %rsp
0000000000020610	popq	%rbx
0000000000020611	popq	%r12
0000000000020613	popq	%r14
0000000000020615	popq	%r15
0000000000020617	popq	%rbp
0000000000020618	retq
_mach_memory_entry_ownership:
0000000000020619	pushq	%rbp
000000000002061a	movq	%rsp, %rbp
000000000002061d	pushq	%rbx
000000000002061e	subq	$0x48, %rsp
0000000000020622	leaq	-0x40(%rbp), %rbx
0000000000020626	movl	$0x1, 0x18(%rbx)
000000000002062d	movl	%esi, 0x1c(%rbx)
0000000000020630	movl	$0x130000, 0x24(%rbx)
0000000000020637	leaq	_NDR_record(%rip), %rax
000000000002063e	movq	(%rax), %rax
0000000000020641	movq	%rax, 0x28(%rbx)
0000000000020645	movl	%edx, 0x30(%rbx)
0000000000020648	movl	%ecx, 0x34(%rbx)
000000000002064b	movl	$0x80001513, (%rbx)
0000000000020651	movl	%edi, 0x8(%rbx)
0000000000020654	callq	_mig_get_reply_port
0000000000020659	movl	%eax, 0xc(%rbx)
000000000002065c	movabsq	$0x132600000000, %rcx
0000000000020666	movq	%rcx, 0x10(%rbx)
000000000002066a	movl	$0x0, (%rsp)
0000000000020671	movq	%rbx, %rdi
0000000000020674	movl	$0x3, %esi
0000000000020679	movl	$0x38, %edx
000000000002067e	movl	$0x2c, %ecx
0000000000020683	movl	%eax, %r8d
0000000000020686	xorl	%r9d, %r9d
0000000000020689	callq	_mach_msg
000000000002068e	movl	%eax, %ebx
0000000000020690	leal	-0x10000002(%rbx), %eax
0000000000020696	cmpl	$0xe, %eax
0000000000020699	ja	0x206af
000000000002069b	movl	$0x4003, %ecx
00000000000206a0	btl	%eax, %ecx
00000000000206a3	jae	0x206af
00000000000206a5	movl	-0x34(%rbp), %edi
00000000000206a8	callq	_mig_put_reply_port
00000000000206ad	jmp	0x20704
00000000000206af	testl	%ebx, %ebx
00000000000206b1	jne	0x206e5
00000000000206b3	movl	-0x2c(%rbp), %eax
00000000000206b6	cmpl	$0x47, %eax
00000000000206b9	je	0x206ef
00000000000206bb	cmpl	$0x138a, %eax
00000000000206c0	jne	0x206f6
00000000000206c2	movl	$0xfffffed4, %ebx
00000000000206c7	cmpl	$0x0, -0x40(%rbp)
00000000000206cb	js	0x206fb
00000000000206cd	cmpl	$0x24, -0x3c(%rbp)
00000000000206d1	jne	0x206fb
00000000000206d3	movl	-0x38(%rbp), %eax
00000000000206d6	testl	%eax, %eax
00000000000206d8	jne	0x206fb
00000000000206da	movl	-0x20(%rbp), %ebx
00000000000206dd	testl	%ebx, %ebx
00000000000206df	jne	0x206fb
00000000000206e1	xorl	%ebx, %ebx
00000000000206e3	jmp	0x20704
00000000000206e5	movl	-0x34(%rbp), %edi
00000000000206e8	callq	_mig_dealloc_reply_port
00000000000206ed	jmp	0x20704
00000000000206ef	movl	$0xfffffecc, %ebx
00000000000206f4	jmp	0x206fb
00000000000206f6	movl	$0xfffffed3, %ebx
00000000000206fb	leaq	-0x40(%rbp), %rdi
00000000000206ff	callq	_mach_msg_destroy
0000000000020704	movl	%ebx, %eax
0000000000020706	addq	$0x48, %rsp
000000000002070a	popq	%rbx
000000000002070b	popq	%rbp
000000000002070c	retq
__kernelrpc_mach_voucher_extract_attr_recipe:
000000000002070d	pushq	%rbp
000000000002070e	movq	%rsp, %rbp
0000000000020711	pushq	%r15
0000000000020713	pushq	%r14
0000000000020715	pushq	%r12
0000000000020717	pushq	%rbx
0000000000020718	subq	$0x1040, %rsp
000000000002071f	movq	%rcx, %r15
0000000000020722	leaq	_NDR_record(%rip), %rax
0000000000020729	movq	(%rax), %rax
000000000002072c	leaq	-0x1050(%rbp), %rbx
0000000000020733	movq	%rax, 0x18(%rbx)
0000000000020737	movl	%esi, 0x20(%rbx)
000000000002073a	movl	(%rcx), %eax
000000000002073c	movl	$0x1000, %ecx
0000000000020741	cmpl	%ecx, %eax
0000000000020743	cmovbl	%eax, %ecx
0000000000020746	movq	%rdx, %r14
0000000000020749	movl	%ecx, 0x24(%rbx)
000000000002074c	movl	$0x1513, (%rbx)
0000000000020752	movl	%edi, 0x8(%rbx)
0000000000020755	callq	_mig_get_reply_port
000000000002075a	movl	%eax, 0xc(%rbx)
000000000002075d	movabsq	$0x151900000000, %rcx
0000000000020767	movq	%rcx, 0x10(%rbx)
000000000002076b	movl	$0x0, (%rsp)
0000000000020772	movq	%rbx, %rdi
0000000000020775	movl	$0x3, %esi
000000000002077a	movl	$0x28, %edx
000000000002077f	movl	$0x1030, %ecx
0000000000020784	movl	%eax, %r8d
0000000000020787	xorl	%r9d, %r9d
000000000002078a	callq	_mach_msg
000000000002078f	movl	%eax, %ebx
0000000000020791	leal	-0x10000002(%rbx), %eax
0000000000020797	cmpl	$0xe, %eax
000000000002079a	ja	0x207b3
000000000002079c	movl	$0x4003, %ecx
00000000000207a1	btl	%eax, %ecx
00000000000207a4	jae	0x207b3
00000000000207a6	movl	-0x1044(%rbp), %edi
00000000000207ac	callq	_mig_put_reply_port
00000000000207b1	jmp	0x20827
00000000000207b3	testl	%ebx, %ebx
00000000000207b5	jne	0x20802
00000000000207b7	movl	-0x103c(%rbp), %eax
00000000000207bd	cmpl	$0x47, %eax
00000000000207c0	je	0x2080f
00000000000207c2	cmpl	$0x157d, %eax
00000000000207c7	jne	0x20816
00000000000207c9	cmpl	$0x0, -0x1050(%rbp)
00000000000207d0	js	0x207fb
00000000000207d2	movl	-0x104c(%rbp), %eax
00000000000207d8	leal	-0x28(%rax), %ecx
00000000000207db	cmpl	$0x1001, %ecx
00000000000207e1	jb	0x207f2
00000000000207e3	cmpl	$0x24, %eax
00000000000207e6	jne	0x207fb
00000000000207e8	movl	-0x1030(%rbp), %edx
00000000000207ee	testl	%edx, %edx
00000000000207f0	je	0x207fb
00000000000207f2	cmpl	$0x0, -0x1048(%rbp)
00000000000207f9	je	0x20839
00000000000207fb	movl	$0xfffffed4, %ebx
0000000000020800	jmp	0x2081b
0000000000020802	movl	-0x1044(%rbp), %edi
0000000000020808	callq	_mig_dealloc_reply_port
000000000002080d	jmp	0x20827
000000000002080f	movl	$0xfffffecc, %ebx
0000000000020814	jmp	0x2081b
0000000000020816	movl	$0xfffffed3, %ebx
000000000002081b	leaq	-0x1050(%rbp), %rdi
0000000000020822	callq	_mach_msg_destroy
0000000000020827	movl	%ebx, %eax
0000000000020829	addq	$0x1040, %rsp
0000000000020830	popq	%rbx
0000000000020831	popq	%r12
0000000000020833	popq	%r14
0000000000020835	popq	%r15
0000000000020837	popq	%rbp
0000000000020838	retq
0000000000020839	movl	-0x1030(%rbp), %ebx
000000000002083f	testl	%ebx, %ebx
0000000000020841	jne	0x2081b
0000000000020843	movl	-0x102c(%rbp), %r12d
000000000002084a	cmpq	$0x1000, %r12
0000000000020851	ja	0x207fb
0000000000020853	cmpl	%r12d, %ecx
0000000000020856	jb	0x207fb
0000000000020858	leal	0x2b(%r12), %ecx
000000000002085d	andl	$-0x4, %ecx
0000000000020860	movl	$0xfffffed4, %ebx
0000000000020865	cmpl	%ecx, %eax
0000000000020867	jne	0x2081b
0000000000020869	movl	(%r15), %edx
000000000002086c	leaq	-0x1028(%rbp), %rsi
0000000000020873	movq	%r14, %rdi
0000000000020876	cmpl	%edx, %r12d
0000000000020879	jbe	0x2088a
000000000002087b	callq	_memcpy
0000000000020880	movl	%r12d, (%r15)
0000000000020883	movl	$0xfffffecd, %ebx
0000000000020888	jmp	0x20827
000000000002088a	movq	%r12, %rdx
000000000002088d	callq	_memcpy
0000000000020892	movl	%r12d, (%r15)
0000000000020895	xorl	%ebx, %ebx
0000000000020897	jmp	0x20827
_mach_voucher_extract_all_attr_recipes:
0000000000020899	pushq	%rbp
000000000002089a	movq	%rsp, %rbp
000000000002089d	pushq	%r15
000000000002089f	pushq	%r14
00000000000208a1	pushq	%r12
00000000000208a3	pushq	%rbx
00000000000208a4	subq	$0x1440, %rsp
00000000000208ab	movq	%rdx, %r15
00000000000208ae	leaq	_NDR_record(%rip), %rax
00000000000208b5	movq	(%rax), %rax
00000000000208b8	leaq	-0x1450(%rbp), %rbx
00000000000208bf	movq	%rax, 0x18(%rbx)
00000000000208c3	movl	(%rdx), %eax
00000000000208c5	movl	$_mk_timer_arm_leeway, %ecx
00000000000208ca	cmpl	%ecx, %eax
00000000000208cc	cmovbl	%eax, %ecx
00000000000208cf	movq	%rsi, %r14
00000000000208d2	movl	%ecx, 0x20(%rbx)
00000000000208d5	movl	$0x1513, (%rbx)
00000000000208db	movl	%edi, 0x8(%rbx)
00000000000208de	callq	_mig_get_reply_port
00000000000208e3	movl	%eax, 0xc(%rbx)
00000000000208e6	movabsq	$0x151a00000000, %rcx
00000000000208f0	movq	%rcx, 0x10(%rbx)
00000000000208f4	movl	$0x0, (%rsp)
00000000000208fb	movq	%rbx, %rdi
00000000000208fe	movl	$0x3, %esi
0000000000020903	movl	$0x24, %edx
0000000000020908	movl	$0x1430, %ecx
000000000002090d	movl	%eax, %r8d
0000000000020910	xorl	%r9d, %r9d
0000000000020913	callq	_mach_msg
0000000000020918	movl	%eax, %ebx
000000000002091a	leal	-0x10000002(%rbx), %eax
0000000000020920	cmpl	$0xe, %eax
0000000000020923	ja	0x2093c
0000000000020925	movl	$0x4003, %ecx
000000000002092a	btl	%eax, %ecx
000000000002092d	jae	0x2093c
000000000002092f	movl	-0x1444(%rbp), %edi
0000000000020935	callq	_mig_put_reply_port
000000000002093a	jmp	0x209b0
000000000002093c	testl	%ebx, %ebx
000000000002093e	jne	0x2098b
0000000000020940	movl	-0x143c(%rbp), %eax
0000000000020946	cmpl	$0x47, %eax
0000000000020949	je	0x20998
000000000002094b	cmpl	$0x157e, %eax
0000000000020950	jne	0x2099f
0000000000020952	cmpl	$0x0, -0x1450(%rbp)
0000000000020959	js	0x20984
000000000002095b	movl	-0x144c(%rbp), %eax
0000000000020961	leal	-0x28(%rax), %ecx
0000000000020964	cmpl	$0x1401, %ecx
000000000002096a	jb	0x2097b
000000000002096c	cmpl	$0x24, %eax
000000000002096f	jne	0x20984
0000000000020971	movl	-0x1430(%rbp), %edx
0000000000020977	testl	%edx, %edx
0000000000020979	je	0x20984
000000000002097b	cmpl	$0x0, -0x1448(%rbp)
0000000000020982	je	0x209c2
0000000000020984	movl	$0xfffffed4, %ebx
0000000000020989	jmp	0x209a4
000000000002098b	movl	-0x1444(%rbp), %edi
0000000000020991	callq	_mig_dealloc_reply_port
0000000000020996	jmp	0x209b0
0000000000020998	movl	$0xfffffecc, %ebx
000000000002099d	jmp	0x209a4
000000000002099f	movl	$0xfffffed3, %ebx
00000000000209a4	leaq	-0x1450(%rbp), %rdi
00000000000209ab	callq	_mach_msg_destroy
00000000000209b0	movl	%ebx, %eax
00000000000209b2	addq	$0x1440, %rsp
00000000000209b9	popq	%rbx
00000000000209ba	popq	%r12
00000000000209bc	popq	%r14
00000000000209be	popq	%r15
00000000000209c0	popq	%rbp
00000000000209c1	retq
00000000000209c2	movl	-0x1430(%rbp), %ebx
00000000000209c8	testl	%ebx, %ebx
00000000000209ca	jne	0x209a4
00000000000209cc	movl	-0x142c(%rbp), %r12d
00000000000209d3	cmpq	$_mk_timer_arm_leeway, %r12
00000000000209da	ja	0x20984
00000000000209dc	cmpl	%r12d, %ecx
00000000000209df	jb	0x20984
00000000000209e1	leal	0x2b(%r12), %ecx
00000000000209e6	andl	$-0x4, %ecx
00000000000209e9	movl	$0xfffffed4, %ebx
00000000000209ee	cmpl	%ecx, %eax
00000000000209f0	jne	0x209a4
00000000000209f2	movl	(%r15), %edx
00000000000209f5	leaq	-0x1428(%rbp), %rsi
00000000000209fc	movq	%r14, %rdi
00000000000209ff	cmpl	%edx, %r12d
0000000000020a02	jbe	0x20a13
0000000000020a04	callq	_memcpy
0000000000020a09	movl	%r12d, (%r15)
0000000000020a0c	movl	$0xfffffecd, %ebx
0000000000020a11	jmp	0x209b0
0000000000020a13	movq	%r12, %rdx
0000000000020a16	callq	_memcpy
0000000000020a1b	movl	%r12d, (%r15)
0000000000020a1e	xorl	%ebx, %ebx
0000000000020a20	jmp	0x209b0
_mach_voucher_debug_info:
0000000000020a22	pushq	%rbp
0000000000020a23	movq	%rsp, %rbp
0000000000020a26	pushq	%r15
0000000000020a28	pushq	%r14
0000000000020a2a	pushq	%r12
0000000000020a2c	pushq	%rbx
0000000000020a2d	subq	$0x1440, %rsp
0000000000020a34	movq	%rcx, %r15
0000000000020a37	leaq	_NDR_record(%rip), %rax
0000000000020a3e	movq	(%rax), %rax
0000000000020a41	leaq	-0x1450(%rbp), %rbx
0000000000020a48	movq	%rax, 0x18(%rbx)
0000000000020a4c	movl	%esi, 0x20(%rbx)
0000000000020a4f	movl	(%rcx), %eax
0000000000020a51	movl	$_mk_timer_arm_leeway, %ecx
0000000000020a56	cmpl	%ecx, %eax
0000000000020a58	cmovbl	%eax, %ecx
0000000000020a5b	movq	%rdx, %r14
0000000000020a5e	movl	%ecx, 0x24(%rbx)
0000000000020a61	movl	$0x1513, (%rbx)
0000000000020a67	movl	%edi, 0x8(%rbx)
0000000000020a6a	callq	_mig_get_reply_port
0000000000020a6f	movl	%eax, 0xc(%rbx)
0000000000020a72	movabsq	$0x151c00000000, %rcx
0000000000020a7c	movq	%rcx, 0x10(%rbx)
0000000000020a80	movl	$0x0, (%rsp)
0000000000020a87	movq	%rbx, %rdi
0000000000020a8a	movl	$0x3, %esi
0000000000020a8f	movl	$0x28, %edx
0000000000020a94	movl	$0x1430, %ecx
0000000000020a99	movl	%eax, %r8d
0000000000020a9c	xorl	%r9d, %r9d
0000000000020a9f	callq	_mach_msg
0000000000020aa4	movl	%eax, %ebx
0000000000020aa6	leal	-0x10000002(%rbx), %eax
0000000000020aac	cmpl	$0xe, %eax
0000000000020aaf	ja	0x20ac8
0000000000020ab1	movl	$0x4003, %ecx
0000000000020ab6	btl	%eax, %ecx
0000000000020ab9	jae	0x20ac8
0000000000020abb	movl	-0x1444(%rbp), %edi
0000000000020ac1	callq	_mig_put_reply_port
0000000000020ac6	jmp	0x20b3c
0000000000020ac8	testl	%ebx, %ebx
0000000000020aca	jne	0x20b17
0000000000020acc	movl	-0x143c(%rbp), %eax
0000000000020ad2	cmpl	$0x47, %eax
0000000000020ad5	je	0x20b24
0000000000020ad7	cmpl	$0x1580, %eax
0000000000020adc	jne	0x20b2b
0000000000020ade	cmpl	$0x0, -0x1450(%rbp)
0000000000020ae5	js	0x20b10
0000000000020ae7	movl	-0x144c(%rbp), %eax
0000000000020aed	leal	-0x28(%rax), %ecx
0000000000020af0	cmpl	$0x1401, %ecx
0000000000020af6	jb	0x20b07
0000000000020af8	cmpl	$0x24, %eax
0000000000020afb	jne	0x20b10
0000000000020afd	movl	-0x1430(%rbp), %edx
0000000000020b03	testl	%edx, %edx
0000000000020b05	je	0x20b10
0000000000020b07	cmpl	$0x0, -0x1448(%rbp)
0000000000020b0e	je	0x20b4e
0000000000020b10	movl	$0xfffffed4, %ebx
0000000000020b15	jmp	0x20b30
0000000000020b17	movl	-0x1444(%rbp), %edi
0000000000020b1d	callq	_mig_dealloc_reply_port
0000000000020b22	jmp	0x20b3c
0000000000020b24	movl	$0xfffffecc, %ebx
0000000000020b29	jmp	0x20b30
0000000000020b2b	movl	$0xfffffed3, %ebx
0000000000020b30	leaq	-0x1450(%rbp), %rdi
0000000000020b37	callq	_mach_msg_destroy
0000000000020b3c	movl	%ebx, %eax
0000000000020b3e	addq	$0x1440, %rsp
0000000000020b45	popq	%rbx
0000000000020b46	popq	%r12
0000000000020b48	popq	%r14
0000000000020b4a	popq	%r15
0000000000020b4c	popq	%rbp
0000000000020b4d	retq
0000000000020b4e	movl	-0x1430(%rbp), %ebx
0000000000020b54	testl	%ebx, %ebx
0000000000020b56	jne	0x20b30
0000000000020b58	movl	-0x142c(%rbp), %r12d
0000000000020b5f	cmpq	$_mk_timer_arm_leeway, %r12
0000000000020b66	ja	0x20b10
0000000000020b68	cmpl	%r12d, %ecx
0000000000020b6b	jb	0x20b10
0000000000020b6d	leal	0x2b(%r12), %ecx
0000000000020b72	andl	$-0x4, %ecx
0000000000020b75	movl	$0xfffffed4, %ebx
0000000000020b7a	cmpl	%ecx, %eax
0000000000020b7c	jne	0x20b30
0000000000020b7e	movl	(%r15), %edx
0000000000020b81	leaq	-0x1428(%rbp), %rsi
0000000000020b88	movq	%r14, %rdi
0000000000020b8b	cmpl	%edx, %r12d
0000000000020b8e	jbe	0x20b9f
0000000000020b90	callq	_memcpy
0000000000020b95	movl	%r12d, (%r15)
0000000000020b98	movl	$0xfffffecd, %ebx
0000000000020b9d	jmp	0x20b3c
0000000000020b9f	movq	%r12, %rdx
0000000000020ba2	callq	_memcpy
0000000000020ba7	movl	%r12d, (%r15)
0000000000020baa	xorl	%ebx, %ebx
0000000000020bac	jmp	0x20b3c
0000000000020bae	nop
0000000000020baf	nop
_____old_semwait_signal_nocancel:
0000000000020bb0	movl	$0x2000173, %eax
0000000000020bb5	movq	%rcx, %r10
0000000000020bb8	syscall
0000000000020bba	jae	0x20bc4
0000000000020bbc	movq	%rax, %rdi
0000000000020bbf	jmp	_cerror_nocancel
0000000000020bc4	retq
0000000000020bc5	nop
0000000000020bc6	nop
0000000000020bc7	nop
_____sigwait_nocancel:
0000000000020bc8	movl	$0x20001a6, %eax
0000000000020bcd	movq	%rcx, %r10
0000000000020bd0	syscall
0000000000020bd2	jae	0x20bdc
0000000000020bd4	movq	%rax, %rdi
0000000000020bd7	jmp	_cerror_nocancel
0000000000020bdc	retq
0000000000020bdd	nop
0000000000020bde	nop
0000000000020bdf	nop
___abort_with_payload:
0000000000020be0	movl	$0x2000209, %eax
0000000000020be5	movq	%rcx, %r10
0000000000020be8	syscall
0000000000020bea	jae	0x20bf4
0000000000020bec	movq	%rax, %rdi
0000000000020bef	jmp	_cerror_nocancel
0000000000020bf4	retq
0000000000020bf5	nop
0000000000020bf6	nop
0000000000020bf7	nop
_accept$NOCANCEL:
___accept_nocancel:
0000000000020bf8	movl	$0x2000194, %eax
0000000000020bfd	movq	%rcx, %r10
0000000000020c00	syscall
0000000000020c02	jae	0x20c0c
0000000000020c04	movq	%rax, %rdi
0000000000020c07	jmp	_cerror_nocancel
0000000000020c0c	retq
0000000000020c0d	nop
0000000000020c0e	nop
0000000000020c0f	nop
_accessx_np:
___access_extended:
0000000000020c10	movl	$0x200011c, %eax
0000000000020c15	movq	%rcx, %r10
0000000000020c18	syscall
0000000000020c1a	jae	0x20c24
0000000000020c1c	movq	%rax, %rdi
0000000000020c1f	jmp	_cerror_nocancel
0000000000020c24	retq
0000000000020c25	nop
0000000000020c26	nop
0000000000020c27	nop
_aio_suspend$NOCANCEL:
___aio_suspend_nocancel:
0000000000020c28	movl	$0x20001a5, %eax
0000000000020c2d	movq	%rcx, %r10
0000000000020c30	syscall
0000000000020c32	jae	0x20c3c
0000000000020c34	movq	%rax, %rdi
0000000000020c37	jmp	_cerror_nocancel
0000000000020c3c	retq
0000000000020c3d	nop
0000000000020c3e	nop
0000000000020c3f	nop
___channel_get_info:
0000000000020c40	movl	$0x20001ff, %eax
0000000000020c45	movq	%rcx, %r10
0000000000020c48	syscall
0000000000020c4a	jae	0x20c54
0000000000020c4c	movq	%rax, %rdi
0000000000020c4f	jmp	_cerror_nocancel
0000000000020c54	retq
0000000000020c55	nop
0000000000020c56	nop
0000000000020c57	nop
___channel_get_opt:
0000000000020c58	movl	$0x2000201, %eax
0000000000020c5d	movq	%rcx, %r10
0000000000020c60	syscall
0000000000020c62	jae	0x20c6c
0000000000020c64	movq	%rax, %rdi
0000000000020c67	jmp	_cerror_nocancel
0000000000020c6c	retq
0000000000020c6d	nop
0000000000020c6e	nop
0000000000020c6f	nop
___channel_open:
0000000000020c70	movl	$0x20001fe, %eax
0000000000020c75	movq	%rcx, %r10
0000000000020c78	syscall
0000000000020c7a	jae	0x20c84
0000000000020c7c	movq	%rax, %rdi
0000000000020c7f	jmp	_cerror_nocancel
0000000000020c84	retq
0000000000020c85	nop
0000000000020c86	nop
0000000000020c87	nop
___channel_set_opt:
0000000000020c88	movl	$0x2000202, %eax
0000000000020c8d	movq	%rcx, %r10
0000000000020c90	syscall
0000000000020c92	jae	0x20c9c
0000000000020c94	movq	%rax, %rdi
0000000000020c97	jmp	_cerror_nocancel
0000000000020c9c	retq
0000000000020c9d	nop
0000000000020c9e	nop
0000000000020c9f	nop
___channel_sync:
0000000000020ca0	movl	$0x2000200, %eax
0000000000020ca5	movq	%rcx, %r10
0000000000020ca8	syscall
0000000000020caa	jae	0x20cb4
0000000000020cac	movq	%rax, %rdi
0000000000020caf	jmp	_cerror_nocancel
0000000000020cb4	retq
0000000000020cb5	nop
0000000000020cb6	nop
0000000000020cb7	nop
___coalition:
0000000000020cb8	movl	$0x20001ca, %eax
0000000000020cbd	movq	%rcx, %r10
0000000000020cc0	syscall
0000000000020cc2	jae	0x20ccc
0000000000020cc4	movq	%rax, %rdi
0000000000020cc7	jmp	_cerror_nocancel
0000000000020ccc	retq
0000000000020ccd	nop
0000000000020cce	nop
0000000000020ccf	nop
___coalition_info:
0000000000020cd0	movl	$0x20001cb, %eax
0000000000020cd5	movq	%rcx, %r10
0000000000020cd8	syscall
0000000000020cda	jae	0x20ce4
0000000000020cdc	movq	%rax, %rdi
0000000000020cdf	jmp	_cerror_nocancel
0000000000020ce4	retq
0000000000020ce5	nop
0000000000020ce6	nop
0000000000020ce7	nop
___coalition_ledger:
0000000000020ce8	movl	$0x2000214, %eax
0000000000020ced	movq	%rcx, %r10
0000000000020cf0	syscall
0000000000020cf2	jae	0x20cfc
0000000000020cf4	movq	%rax, %rdi
0000000000020cf7	jmp	_cerror_nocancel
0000000000020cfc	retq
0000000000020cfd	nop
0000000000020cfe	nop
0000000000020cff	nop
___copyfile:
0000000000020d00	movl	$0x20000e3, %eax
0000000000020d05	movq	%rcx, %r10
0000000000020d08	syscall
0000000000020d0a	jae	0x20d14
0000000000020d0c	movq	%rax, %rdi
0000000000020d0f	jmp	_cerror_nocancel
0000000000020d14	retq
0000000000020d15	nop
0000000000020d16	nop
0000000000020d17	nop
___fs_snapshot:
0000000000020d18	movl	$0x2000206, %eax
0000000000020d1d	movq	%rcx, %r10
0000000000020d20	syscall
0000000000020d22	jae	0x20d2c
0000000000020d24	movq	%rax, %rdi
0000000000020d27	jmp	_cerror_nocancel
0000000000020d2c	retq
0000000000020d2d	nop
0000000000020d2e	nop
0000000000020d2f	nop
___fstat_extended:
0000000000020d30	movl	$0x2000119, %eax
0000000000020d35	movq	%rcx, %r10
0000000000020d38	syscall
0000000000020d3a	jae	0x20d44
0000000000020d3c	movq	%rax, %rdi
0000000000020d3f	jmp	_cerror_nocancel
0000000000020d44	retq
0000000000020d45	nop
0000000000020d46	nop
0000000000020d47	nop
_fsync$NOCANCEL:
___fsync_nocancel:
0000000000020d48	movl	$0x2000198, %eax
0000000000020d4d	movq	%rcx, %r10
0000000000020d50	syscall
0000000000020d52	jae	0x20d5c
0000000000020d54	movq	%rax, %rdi
0000000000020d57	jmp	_cerror_nocancel
0000000000020d5c	retq
0000000000020d5d	nop
0000000000020d5e	nop
0000000000020d5f	nop
___getsgroups:
_getsgroups_np:
0000000000020d60	movl	$0x2000120, %eax
0000000000020d65	movq	%rcx, %r10
0000000000020d68	syscall
0000000000020d6a	jae	0x20d74
0000000000020d6c	movq	%rax, %rdi
0000000000020d6f	jmp	_cerror_nocancel
0000000000020d74	retq
0000000000020d75	nop
0000000000020d76	nop
0000000000020d77	nop
___getwgroups:
_getwgroups_np:
0000000000020d78	movl	$0x2000122, %eax
0000000000020d7d	movq	%rcx, %r10
0000000000020d80	syscall
0000000000020d82	jae	0x20d8c
0000000000020d84	movq	%rax, %rdi
0000000000020d87	jmp	_cerror_nocancel
0000000000020d8c	retq
0000000000020d8d	nop
0000000000020d8e	nop
0000000000020d8f	nop
___guarded_open_dprotected_np:
0000000000020d90	movl	$0x20001e4, %eax
0000000000020d95	movq	%rcx, %r10
0000000000020d98	syscall
0000000000020d9a	jae	0x20da4
0000000000020d9c	movq	%rax, %rdi
0000000000020d9f	jmp	_cerror_nocancel
0000000000020da4	retq
0000000000020da5	nop
0000000000020da6	nop
0000000000020da7	nop
___identitysvc:
0000000000020da8	movl	$0x2000125, %eax
0000000000020dad	movq	%rcx, %r10
0000000000020db0	syscall
0000000000020db2	jae	0x20dbc
0000000000020db4	movq	%rax, %rdi
0000000000020db7	jmp	_cerror_nocancel
0000000000020dbc	retq
0000000000020dbd	nop
0000000000020dbe	nop
0000000000020dbf	nop
___kdebug_trace:
0000000000020dc0	movl	$0x20000b4, %eax
0000000000020dc5	movq	%rcx, %r10
0000000000020dc8	syscall
0000000000020dca	jae	0x20dd4
0000000000020dcc	movq	%rax, %rdi
0000000000020dcf	jmp	_cerror_nocancel
0000000000020dd4	retq
0000000000020dd5	nop
0000000000020dd6	nop
0000000000020dd7	nop
___kdebug_trace_string:
0000000000020dd8	movl	$0x20000b2, %eax
0000000000020ddd	movq	%rcx, %r10
0000000000020de0	syscall
0000000000020de2	jae	0x20dec
0000000000020de4	movq	%rax, %rdi
0000000000020de7	jmp	_cerror
0000000000020dec	retq
0000000000020ded	nop
0000000000020dee	nop
0000000000020def	nop
___log_data:
0000000000020df0	movl	$0x2000215, %eax
0000000000020df5	movq	%rcx, %r10
0000000000020df8	syscall
0000000000020dfa	jae	0x20e04
0000000000020dfc	movq	%rax, %rdi
0000000000020dff	jmp	_cerror_nocancel
0000000000020e04	retq
0000000000020e05	nop
0000000000020e06	nop
0000000000020e07	nop
___lstat_extended:
0000000000020e08	movl	$0x2000118, %eax
0000000000020e0d	movq	%rcx, %r10
0000000000020e10	syscall
0000000000020e12	jae	0x20e1c
0000000000020e14	movq	%rax, %rdi
0000000000020e17	jmp	_cerror_nocancel
0000000000020e1c	retq
0000000000020e1d	nop
0000000000020e1e	nop
0000000000020e1f	nop
___mac_execve:
___sandbox_me:
0000000000020e20	movl	$0x200017c, %eax
0000000000020e25	movq	%rcx, %r10
0000000000020e28	syscall
0000000000020e2a	jae	0x20e34
0000000000020e2c	movq	%rax, %rdi
0000000000020e2f	jmp	_cerror_nocancel
0000000000020e34	retq
0000000000020e35	nop
0000000000020e36	nop
0000000000020e37	nop
___mac_get_fd:
0000000000020e38	movl	$0x2000184, %eax
0000000000020e3d	movq	%rcx, %r10
0000000000020e40	syscall
0000000000020e42	jae	0x20e4c
0000000000020e44	movq	%rax, %rdi
0000000000020e47	jmp	_cerror_nocancel
0000000000020e4c	retq
0000000000020e4d	nop
0000000000020e4e	nop
0000000000020e4f	nop
___mac_get_file:
0000000000020e50	movl	$0x200017e, %eax
0000000000020e55	movq	%rcx, %r10
0000000000020e58	syscall
0000000000020e5a	jae	0x20e64
0000000000020e5c	movq	%rax, %rdi
0000000000020e5f	jmp	_cerror_nocancel
0000000000020e64	retq
0000000000020e65	nop
0000000000020e66	nop
0000000000020e67	nop
___mac_get_link:
0000000000020e68	movl	$0x2000180, %eax
0000000000020e6d	movq	%rcx, %r10
0000000000020e70	syscall
0000000000020e72	jae	0x20e7c
0000000000020e74	movq	%rax, %rdi
0000000000020e77	jmp	_cerror_nocancel
0000000000020e7c	retq
0000000000020e7d	nop
0000000000020e7e	nop
0000000000020e7f	nop
___mac_get_mount:
0000000000020e80	movl	$0x20001a9, %eax
0000000000020e85	movq	%rcx, %r10
0000000000020e88	syscall
0000000000020e8a	jae	0x20e94
0000000000020e8c	movq	%rax, %rdi
0000000000020e8f	jmp	_cerror_nocancel
0000000000020e94	retq
0000000000020e95	nop
0000000000020e96	nop
0000000000020e97	nop
___mac_get_pid:
0000000000020e98	movl	$0x2000186, %eax
0000000000020e9d	movq	%rcx, %r10
0000000000020ea0	syscall
0000000000020ea2	jae	0x20eac
0000000000020ea4	movq	%rax, %rdi
0000000000020ea7	jmp	_cerror_nocancel
0000000000020eac	retq
0000000000020ead	nop
0000000000020eae	nop
0000000000020eaf	nop
___mac_get_proc:
0000000000020eb0	movl	$0x2000182, %eax
0000000000020eb5	movq	%rcx, %r10
0000000000020eb8	syscall
0000000000020eba	jae	0x20ec4
0000000000020ebc	movq	%rax, %rdi
0000000000020ebf	jmp	_cerror_nocancel
0000000000020ec4	retq
0000000000020ec5	nop
0000000000020ec6	nop
0000000000020ec7	nop
___mac_getfsstat:
0000000000020ec8	movl	$0x20001aa, %eax
0000000000020ecd	movq	%rcx, %r10
0000000000020ed0	syscall
0000000000020ed2	jae	0x20edc
0000000000020ed4	movq	%rax, %rdi
0000000000020ed7	jmp	_cerror_nocancel
0000000000020edc	retq
0000000000020edd	nop
0000000000020ede	nop
0000000000020edf	nop
___mac_mount:
___sandbox_mm:
0000000000020ee0	movl	$0x20001a8, %eax
0000000000020ee5	movq	%rcx, %r10
0000000000020ee8	syscall
0000000000020eea	jae	0x20ef4
0000000000020eec	movq	%rax, %rdi
0000000000020eef	jmp	_cerror_nocancel
0000000000020ef4	retq
0000000000020ef5	nop
0000000000020ef6	nop
0000000000020ef7	nop
___mac_set_fd:
0000000000020ef8	movl	$0x2000185, %eax
0000000000020efd	movq	%rcx, %r10
0000000000020f00	syscall
0000000000020f02	jae	0x20f0c
0000000000020f04	movq	%rax, %rdi
0000000000020f07	jmp	_cerror_nocancel
0000000000020f0c	retq
0000000000020f0d	nop
0000000000020f0e	nop
0000000000020f0f	nop
___mac_set_file:
0000000000020f10	movl	$0x200017f, %eax
0000000000020f15	movq	%rcx, %r10
0000000000020f18	syscall
0000000000020f1a	jae	0x20f24
0000000000020f1c	movq	%rax, %rdi
0000000000020f1f	jmp	_cerror_nocancel
0000000000020f24	retq
0000000000020f25	nop
0000000000020f26	nop
0000000000020f27	nop
___mac_set_link:
0000000000020f28	movl	$0x2000181, %eax
0000000000020f2d	movq	%rcx, %r10
0000000000020f30	syscall
0000000000020f32	jae	0x20f3c
0000000000020f34	movq	%rax, %rdi
0000000000020f37	jmp	_cerror_nocancel
0000000000020f3c	retq
0000000000020f3d	nop
0000000000020f3e	nop
0000000000020f3f	nop
___mach_bridge_remote_time:
0000000000020f40	movl	$0x2000213, %eax
0000000000020f45	movq	%rcx, %r10
0000000000020f48	syscall
0000000000020f4a	jae	0x20f54
0000000000020f4c	movq	%rax, %rdi
0000000000020f4f	jmp	_cerror_nocancel
0000000000020f54	retq
0000000000020f55	nop
0000000000020f56	nop
0000000000020f57	nop
___memorystatus_available_memory:
0000000000020f58	movl	$0x2000216, %eax
0000000000020f5d	movq	%rcx, %r10
0000000000020f60	syscall
0000000000020f62	jae	0x20f6c
0000000000020f64	movq	%rax, %rdi
0000000000020f67	jmp	_cerror_nocancel
0000000000020f6c	retq
0000000000020f6d	nop
0000000000020f6e	nop
0000000000020f6f	nop
___microstackshot:
0000000000020f70	movl	$0x20001ec, %eax
0000000000020f75	movq	%rcx, %r10
0000000000020f78	syscall
0000000000020f7a	jae	0x20f84
0000000000020f7c	movq	%rax, %rdi
0000000000020f7f	jmp	_cerror_nocancel
0000000000020f84	retq
0000000000020f85	nop
0000000000020f86	nop
0000000000020f87	nop
___mkdir_extended:
0000000000020f88	movl	$0x2000124, %eax
0000000000020f8d	movq	%rcx, %r10
0000000000020f90	syscall
0000000000020f92	jae	0x20f9c
0000000000020f94	movq	%rax, %rdi
0000000000020f97	jmp	_cerror_nocancel
0000000000020f9c	retq
0000000000020f9d	nop
0000000000020f9e	nop
0000000000020f9f	nop
___mkfifo_extended:
0000000000020fa0	movl	$0x2000123, %eax
0000000000020fa5	movq	%rcx, %r10
0000000000020fa8	syscall
0000000000020faa	jae	0x20fb4
0000000000020fac	movq	%rax, %rdi
0000000000020faf	jmp	_cerror_nocancel
0000000000020fb4	retq
0000000000020fb5	nop
0000000000020fb6	nop
0000000000020fb7	nop
_msgctl:
___msgctl:
0000000000020fb8	movl	$0x2000102, %eax
0000000000020fbd	movq	%rcx, %r10
0000000000020fc0	syscall
0000000000020fc2	jae	0x20fcc
0000000000020fc4	movq	%rax, %rdi
0000000000020fc7	jmp	_cerror_nocancel
0000000000020fcc	retq
0000000000020fcd	nop
0000000000020fce	nop
0000000000020fcf	nop
_msgrcv$NOCANCEL:
___msgrcv_nocancel:
0000000000020fd0	movl	$0x20001a3, %eax
0000000000020fd5	movq	%rcx, %r10
0000000000020fd8	syscall
0000000000020fda	jae	0x20fe4
0000000000020fdc	movq	%rax, %rdi
0000000000020fdf	jmp	_cerror_nocancel
0000000000020fe4	retq
0000000000020fe5	nop
0000000000020fe6	nop
0000000000020fe7	nop
_msgsnd$NOCANCEL:
___msgsnd_nocancel:
0000000000020fe8	movl	$0x20001a2, %eax
0000000000020fed	movq	%rcx, %r10
0000000000020ff0	syscall
0000000000020ff2	jae	0x20ffc
0000000000020ff4	movq	%rax, %rdi
0000000000020ff7	jmp	_cerror_nocancel
0000000000020ffc	retq
0000000000020ffd	nop
0000000000020ffe	nop
0000000000020fff	nop
_msgsys:
___msgsys:
0000000000021000	movl	$0x20000fc, %eax
0000000000021005	movq	%rcx, %r10
0000000000021008	syscall
000000000002100a	jae	0x21014
000000000002100c	movq	%rax, %rdi
000000000002100f	jmp	_cerror_nocancel
0000000000021014	retq
0000000000021015	nop
0000000000021016	nop
0000000000021017	nop
_msync$NOCANCEL:
___msync_nocancel:
0000000000021018	movl	$0x2000195, %eax
000000000002101d	movq	%rcx, %r10
0000000000021020	syscall
0000000000021022	jae	0x2102c
0000000000021024	movq	%rax, %rdi
0000000000021027	jmp	_cerror_nocancel
000000000002102c	retq
000000000002102d	nop
000000000002102e	nop
000000000002102f	nop
___nexus_create:
0000000000021030	movl	$0x20001fa, %eax
0000000000021035	movq	%rcx, %r10
0000000000021038	syscall
000000000002103a	jae	0x21044
000000000002103c	movq	%rax, %rdi
000000000002103f	jmp	_cerror_nocancel
0000000000021044	retq
0000000000021045	nop
0000000000021046	nop
0000000000021047	nop
___nexus_deregister:
0000000000021048	movl	$0x20001f9, %eax
000000000002104d	movq	%rcx, %r10
0000000000021050	syscall
0000000000021052	jae	0x2105c
0000000000021054	movq	%rax, %rdi
0000000000021057	jmp	_cerror_nocancel
000000000002105c	retq
000000000002105d	nop
000000000002105e	nop
000000000002105f	nop
___nexus_destroy:
0000000000021060	movl	$0x20001fb, %eax
0000000000021065	movq	%rcx, %r10
0000000000021068	syscall
000000000002106a	jae	0x21074
000000000002106c	movq	%rax, %rdi
000000000002106f	jmp	_cerror_nocancel
0000000000021074	retq
0000000000021075	nop
0000000000021076	nop
0000000000021077	nop
___nexus_get_opt:
0000000000021078	movl	$0x20001fc, %eax
000000000002107d	movq	%rcx, %r10
0000000000021080	syscall
0000000000021082	jae	0x2108c
0000000000021084	movq	%rax, %rdi
0000000000021087	jmp	_cerror_nocancel
000000000002108c	retq
000000000002108d	nop
000000000002108e	nop
000000000002108f	nop
___nexus_open:
0000000000021090	movl	$0x20001f7, %eax
0000000000021095	movq	%rcx, %r10
0000000000021098	syscall
000000000002109a	jae	0x210a4
000000000002109c	movq	%rax, %rdi
000000000002109f	jmp	_cerror_nocancel
00000000000210a4	retq
00000000000210a5	nop
00000000000210a6	nop
00000000000210a7	nop
___nexus_register:
00000000000210a8	movl	$0x20001f8, %eax
00000000000210ad	movq	%rcx, %r10
00000000000210b0	syscall
00000000000210b2	jae	0x210bc
00000000000210b4	movq	%rax, %rdi
00000000000210b7	jmp	_cerror_nocancel
00000000000210bc	retq
00000000000210bd	nop
00000000000210be	nop
00000000000210bf	nop
___nexus_set_opt:
00000000000210c0	movl	$0x20001fd, %eax
00000000000210c5	movq	%rcx, %r10
00000000000210c8	syscall
00000000000210ca	jae	0x210d4
00000000000210cc	movq	%rax, %rdi
00000000000210cf	jmp	_cerror_nocancel
00000000000210d4	retq
00000000000210d5	nop
00000000000210d6	nop
00000000000210d7	nop
___old_semwait_signal:
00000000000210d8	movl	$0x2000172, %eax
00000000000210dd	movq	%rcx, %r10
00000000000210e0	syscall
00000000000210e2	jae	0x210ec
00000000000210e4	movq	%rax, %rdi
00000000000210e7	jmp	_cerror_nocancel
00000000000210ec	retq
00000000000210ed	nop
00000000000210ee	nop
00000000000210ef	nop
_poll$NOCANCEL:
___poll_nocancel:
00000000000210f0	movl	$0x20001a1, %eax
00000000000210f5	movq	%rcx, %r10
00000000000210f8	syscall
00000000000210fa	jae	0x21104
00000000000210fc	movq	%rax, %rdi
00000000000210ff	jmp	_cerror_nocancel
0000000000021104	retq
0000000000021105	nop
0000000000021106	nop
0000000000021107	nop
___pread_nocancel:
_pread$NOCANCEL:
0000000000021108	movl	$0x200019e, %eax
000000000002110d	movq	%rcx, %r10
0000000000021110	syscall
0000000000021112	jae	0x2111c
0000000000021114	movq	%rax, %rdi
0000000000021117	jmp	_cerror_nocancel
000000000002111c	retq
000000000002111d	nop
000000000002111e	nop
000000000002111f	nop
___pselect_nocancel:
0000000000021120	movl	$0x200018b, %eax
0000000000021125	movq	%rcx, %r10
0000000000021128	syscall
000000000002112a	jae	0x21134
000000000002112c	movq	%rax, %rdi
000000000002112f	jmp	_cerror_nocancel
0000000000021134	retq
0000000000021135	nop
0000000000021136	nop
0000000000021137	nop
___psynch_rw_downgrade:
0000000000021138	movl	$0x200012b, %eax
000000000002113d	movq	%rcx, %r10
0000000000021140	syscall
0000000000021142	jae	0x2114c
0000000000021144	movq	%rax, %rdi
0000000000021147	jmp	_cerror_nocancel
000000000002114c	retq
000000000002114d	nop
000000000002114e	nop
000000000002114f	nop
___psynch_rw_longrdlock:
0000000000021150	movl	$0x2000129, %eax
0000000000021155	movq	%rcx, %r10
0000000000021158	syscall
000000000002115a	jae	0x21164
000000000002115c	movq	%rax, %rdi
000000000002115f	jmp	_cerror_nocancel
0000000000021164	retq
0000000000021165	nop
0000000000021166	nop
0000000000021167	nop
___psynch_rw_unlock2:
0000000000021168	movl	$0x2000135, %eax
000000000002116d	movq	%rcx, %r10
0000000000021170	syscall
0000000000021172	jae	0x2117c
0000000000021174	movq	%rax, %rdi
0000000000021177	jmp	_cerror_nocancel
000000000002117c	retq
000000000002117d	nop
000000000002117e	nop
000000000002117f	nop
___psynch_rw_upgrade:
0000000000021180	movl	$0x200012c, %eax
0000000000021185	movq	%rcx, %r10
0000000000021188	syscall
000000000002118a	jae	0x21194
000000000002118c	movq	%rax, %rdi
000000000002118f	jmp	_cerror_nocancel
0000000000021194	retq
0000000000021195	nop
0000000000021196	nop
0000000000021197	nop
___psynch_rw_yieldwrlock:
0000000000021198	movl	$0x200012a, %eax
000000000002119d	movq	%rcx, %r10
00000000000211a0	syscall
00000000000211a2	jae	0x211ac
00000000000211a4	movq	%rax, %rdi
00000000000211a7	jmp	_cerror_nocancel
00000000000211ac	retq
00000000000211ad	nop
00000000000211ae	nop
00000000000211af	nop
___pthread_markcancel:
00000000000211b0	movl	$0x200014c, %eax
00000000000211b5	movq	%rcx, %r10
00000000000211b8	syscall
00000000000211ba	jae	0x211c4
00000000000211bc	movq	%rax, %rdi
00000000000211bf	jmp	_cerror_nocancel
00000000000211c4	retq
00000000000211c5	nop
00000000000211c6	nop
00000000000211c7	nop
_pwrite$NOCANCEL:
___pwrite_nocancel:
00000000000211c8	movl	$0x200019f, %eax
00000000000211cd	movq	%rcx, %r10
00000000000211d0	syscall
00000000000211d2	jae	0x211dc
00000000000211d4	movq	%rax, %rdi
00000000000211d7	jmp	_cerror_nocancel
00000000000211dc	retq
00000000000211dd	nop
00000000000211de	nop
00000000000211df	nop
_readv$NOCANCEL:
___readv_nocancel:
00000000000211e0	movl	$0x200019b, %eax
00000000000211e5	movq	%rcx, %r10
00000000000211e8	syscall
00000000000211ea	jae	0x211f4
00000000000211ec	movq	%rax, %rdi
00000000000211ef	jmp	_cerror_nocancel
00000000000211f4	retq
00000000000211f5	nop
00000000000211f6	nop
00000000000211f7	nop
___reboot:
00000000000211f8	movl	$0x2000037, %eax
00000000000211fd	movq	%rcx, %r10
0000000000021200	syscall
0000000000021202	jae	0x2120c
0000000000021204	movq	%rax, %rdi
0000000000021207	jmp	_cerror_nocancel
000000000002120c	retq
000000000002120d	nop
000000000002120e	nop
000000000002120f	nop
_recvmsg$NOCANCEL:
___recvmsg_nocancel:
0000000000021210	movl	$0x2000191, %eax
0000000000021215	movq	%rcx, %r10
0000000000021218	syscall
000000000002121a	jae	0x21224
000000000002121c	movq	%rax, %rdi
000000000002121f	jmp	_cerror_nocancel
0000000000021224	retq
0000000000021225	nop
0000000000021226	nop
0000000000021227	nop
___renameat:
0000000000021228	movl	$0x20001d1, %eax
000000000002122d	movq	%rcx, %r10
0000000000021230	syscall
0000000000021232	jae	0x2123c
0000000000021234	movq	%rax, %rdi
0000000000021237	jmp	_cerror
000000000002123c	retq
000000000002123d	nop
000000000002123e	nop
000000000002123f	nop
___renameatx_np:
0000000000021240	movl	$0x20001e8, %eax
0000000000021245	movq	%rcx, %r10
0000000000021248	syscall
000000000002124a	jae	0x21254
000000000002124c	movq	%rax, %rdi
000000000002124f	jmp	_cerror_nocancel
0000000000021254	retq
0000000000021255	nop
0000000000021256	nop
0000000000021257	nop
_sem_wait$NOCANCEL:
___sem_wait_nocancel:
0000000000021258	movl	$0x20001a4, %eax
000000000002125d	movq	%rcx, %r10
0000000000021260	syscall
0000000000021262	jae	0x2126c
0000000000021264	movq	%rax, %rdi
0000000000021267	jmp	_cerror_nocancel
000000000002126c	retq
000000000002126d	nop
000000000002126e	nop
000000000002126f	nop
_semctl:
___semctl:
0000000000021270	movl	$0x20000fe, %eax
0000000000021275	movq	%rcx, %r10
0000000000021278	syscall
000000000002127a	jae	0x21284
000000000002127c	movq	%rax, %rdi
000000000002127f	jmp	_cerror_nocancel
0000000000021284	retq
0000000000021285	nop
0000000000021286	nop
0000000000021287	nop
_semsys:
___semsys:
0000000000021288	movl	$0x20000fb, %eax
000000000002128d	movq	%rcx, %r10
0000000000021290	syscall
0000000000021292	jae	0x2129c
0000000000021294	movq	%rax, %rdi
0000000000021297	jmp	_cerror_nocancel
000000000002129c	retq
000000000002129d	nop
000000000002129e	nop
000000000002129f	nop
_setregid:
___setregid:
00000000000212a0	movl	$0x200007f, %eax
00000000000212a5	movq	%rcx, %r10
00000000000212a8	syscall
00000000000212aa	jae	0x212b4
00000000000212ac	movq	%rax, %rdi
00000000000212af	jmp	_cerror_nocancel
00000000000212b4	retq
00000000000212b5	nop
00000000000212b6	nop
00000000000212b7	nop
___setreuid:
_setreuid:
00000000000212b8	movl	$0x200007e, %eax
00000000000212bd	movq	%rcx, %r10
00000000000212c0	syscall
00000000000212c2	jae	0x212cc
00000000000212c4	movq	%rax, %rdi
00000000000212c7	jmp	_cerror_nocancel
00000000000212cc	retq
00000000000212cd	nop
00000000000212ce	nop
00000000000212cf	nop
___setsgroups:
_setsgroups_np:
00000000000212d0	movl	$0x200011f, %eax
00000000000212d5	movq	%rcx, %r10
00000000000212d8	syscall
00000000000212da	jae	0x212e4
00000000000212dc	movq	%rax, %rdi
00000000000212df	jmp	_cerror_nocancel
00000000000212e4	retq
00000000000212e5	nop
00000000000212e6	nop
00000000000212e7	nop
___settid_with_pid:
00000000000212e8	movl	$0x2000137, %eax
00000000000212ed	movq	%rcx, %r10
00000000000212f0	syscall
00000000000212f2	jae	0x212fc
00000000000212f4	movq	%rax, %rdi
00000000000212f7	jmp	_cerror_nocancel
00000000000212fc	retq
00000000000212fd	nop
00000000000212fe	nop
00000000000212ff	nop
___settimeofday:
0000000000021300	movl	$0x200007a, %eax
0000000000021305	movq	%rcx, %r10
0000000000021308	syscall
000000000002130a	jae	0x21314
000000000002130c	movq	%rax, %rdi
000000000002130f	jmp	_cerror_nocancel
0000000000021314	retq
0000000000021315	nop
0000000000021316	nop
0000000000021317	nop
___setwgroups:
_setwgroups_np:
0000000000021318	movl	$0x2000121, %eax
000000000002131d	movq	%rcx, %r10
0000000000021320	syscall
0000000000021322	jae	0x2132c
0000000000021324	movq	%rax, %rdi
0000000000021327	jmp	_cerror_nocancel
000000000002132c	retq
000000000002132d	nop
000000000002132e	nop
000000000002132f	nop
___sfi_pidctl:
0000000000021330	movl	$0x20001c9, %eax
0000000000021335	movq	%rcx, %r10
0000000000021338	syscall
000000000002133a	jae	0x21344
000000000002133c	movq	%rax, %rdi
000000000002133f	jmp	_cerror_nocancel
0000000000021344	retq
0000000000021345	nop
0000000000021346	nop
0000000000021347	nop
___shared_region_check_np:
0000000000021348	movl	$0x2000126, %eax
000000000002134d	movq	%rcx, %r10
0000000000021350	syscall
0000000000021352	jae	0x2135c
0000000000021354	movq	%rax, %rdi
0000000000021357	jmp	_cerror_nocancel
000000000002135c	retq
000000000002135d	nop
000000000002135e	nop
000000000002135f	nop
___shared_region_map_and_slide_np:
0000000000021360	movl	$0x20001b6, %eax
0000000000021365	movq	%rcx, %r10
0000000000021368	syscall
000000000002136a	jae	0x21374
000000000002136c	movq	%rax, %rdi
000000000002136f	jmp	_cerror_nocancel
0000000000021374	retq
0000000000021375	nop
0000000000021376	nop
0000000000021377	nop
___shmctl:
_shmctl:
0000000000021378	movl	$0x2000107, %eax
000000000002137d	movq	%rcx, %r10
0000000000021380	syscall
0000000000021382	jae	0x2138c
0000000000021384	movq	%rax, %rdi
0000000000021387	jmp	_cerror_nocancel
000000000002138c	retq
000000000002138d	nop
000000000002138e	nop
000000000002138f	nop
___shmsys:
_shmsys:
0000000000021390	movl	$0x20000fd, %eax
0000000000021395	movq	%rcx, %r10
0000000000021398	syscall
000000000002139a	jae	0x213a4
000000000002139c	movq	%rax, %rdi
000000000002139f	jmp	_cerror_nocancel
00000000000213a4	retq
00000000000213a5	nop
00000000000213a6	nop
00000000000213a7	nop
___sigsuspend:
00000000000213a8	movl	$0x200006f, %eax
00000000000213ad	movq	%rcx, %r10
00000000000213b0	syscall
00000000000213b2	jae	0x213bc
00000000000213b4	movq	%rax, %rdi
00000000000213b7	jmp	_cerror
00000000000213bc	retq
00000000000213bd	nop
00000000000213be	nop
00000000000213bf	nop
___stack_snapshot_with_config:
00000000000213c0	movl	$0x20001eb, %eax
00000000000213c5	movq	%rcx, %r10
00000000000213c8	syscall
00000000000213ca	jae	0x213d4
00000000000213cc	movq	%rax, %rdi
00000000000213cf	jmp	_cerror_nocancel
00000000000213d4	retq
00000000000213d5	nop
00000000000213d6	nop
00000000000213d7	nop
___stat_extended:
00000000000213d8	movl	$0x2000117, %eax
00000000000213dd	movq	%rcx, %r10
00000000000213e0	syscall
00000000000213e2	jae	0x213ec
00000000000213e4	movq	%rax, %rdi
00000000000213e7	jmp	_cerror_nocancel
00000000000213ec	retq
00000000000213ed	nop
00000000000213ee	nop
00000000000213ef	nop
___telemetry:
00000000000213f0	movl	$0x20001c3, %eax
00000000000213f5	movq	%rcx, %r10
00000000000213f8	syscall
00000000000213fa	jae	0x21404
00000000000213fc	movq	%rax, %rdi
00000000000213ff	jmp	_cerror_nocancel
0000000000021404	retq
0000000000021405	nop
0000000000021406	nop
0000000000021407	nop
___thread_selfusage:
0000000000021408	movl	$0x20001e2, %eax
000000000002140d	movq	%rcx, %r10
0000000000021410	syscall
0000000000021412	jae	0x2141c
0000000000021414	movq	%rax, %rdi
0000000000021417	jmp	_cerror
000000000002141c	retq
000000000002141d	nop
000000000002141e	nop
000000000002141f	nop
___umask_extended:
0000000000021420	movl	$0x2000116, %eax
0000000000021425	movq	%rcx, %r10
0000000000021428	syscall
000000000002142a	jae	0x21434
000000000002142c	movq	%rax, %rdi
000000000002142f	jmp	_cerror_nocancel
0000000000021434	retq
0000000000021435	nop
0000000000021436	nop
0000000000021437	nop
___vfork:
_vfork:
0000000000021438	leaq	__current_pid(%rip), %rax
000000000002143f	movl	(%rax), %eax
0000000000021441	xorl	%ecx, %ecx
0000000000021443	testl	%eax, %eax
0000000000021445	cmovsl	%eax, %ecx
0000000000021448	subl	$0x1, %ecx
000000000002144b	leaq	__current_pid(%rip), %rdx
0000000000021452	lock
0000000000021453	cmpxchgl	%ecx, (%rdx)
0000000000021456	jne	0x21441
0000000000021458	popq	%rdi
0000000000021459	movq	$0x2000042, %rax
0000000000021460	syscall
0000000000021462	jae	0x21478
0000000000021464	pushq	%rdi
0000000000021465	leaq	__current_pid(%rip), %rcx
000000000002146c	lock
000000000002146d	addl	$0x1, (%rcx)
0000000000021470	movq	%rax, %rdi
0000000000021473	jmp	_cerror
0000000000021478	testl	%edx, %edx
000000000002147a	je	0x21481
000000000002147c	xorq	%rax, %rax
000000000002147f	jmpq	*%rdi
0000000000021481	leaq	__current_pid(%rip), %rdx
0000000000021488	lock
0000000000021489	addl	$0x1, (%rdx)
000000000002148c	jmpq	*%rdi
000000000002148e	nop
000000000002148f	nop
_waitid$NOCANCEL:
___waitid_nocancel:
0000000000021490	movl	$0x20001a0, %eax
0000000000021495	movq	%rcx, %r10
0000000000021498	syscall
000000000002149a	jae	0x214a4
000000000002149c	movq	%rax, %rdi
000000000002149f	jmp	_cerror_nocancel
00000000000214a4	retq
00000000000214a5	nop
00000000000214a6	nop
00000000000214a7	nop
_writev$NOCANCEL:
___writev_nocancel:
00000000000214a8	movl	$0x200019c, %eax
00000000000214ad	movq	%rcx, %r10
00000000000214b0	syscall
00000000000214b2	jae	0x214bc
00000000000214b4	movq	%rax, %rdi
00000000000214b7	jmp	_cerror_nocancel
00000000000214bc	retq
00000000000214bd	nop
00000000000214be	nop
00000000000214bf	nop
_acct:
00000000000214c0	movl	$0x2000033, %eax
00000000000214c5	movq	%rcx, %r10
00000000000214c8	syscall
00000000000214ca	jae	0x214d4
00000000000214cc	movq	%rax, %rdi
00000000000214cf	jmp	_cerror_nocancel
00000000000214d4	retq
00000000000214d5	nop
00000000000214d6	nop
00000000000214d7	nop
_adjtime:
00000000000214d8	movl	$0x200008c, %eax
00000000000214dd	movq	%rcx, %r10
00000000000214e0	syscall
00000000000214e2	jae	0x214ec
00000000000214e4	movq	%rax, %rdi
00000000000214e7	jmp	_cerror_nocancel
00000000000214ec	retq
00000000000214ed	nop
00000000000214ee	nop
00000000000214ef	nop
_aio_cancel:
00000000000214f0	movl	$0x200013c, %eax
00000000000214f5	movq	%rcx, %r10
00000000000214f8	syscall
00000000000214fa	jae	0x21504
00000000000214fc	movq	%rax, %rdi
00000000000214ff	jmp	_cerror_nocancel
0000000000021504	retq
0000000000021505	nop
0000000000021506	nop
0000000000021507	nop
_aio_error:
0000000000021508	movl	$0x200013d, %eax
000000000002150d	movq	%rcx, %r10
0000000000021510	syscall
0000000000021512	jae	0x2151c
0000000000021514	movq	%rax, %rdi
0000000000021517	jmp	_cerror_nocancel
000000000002151c	retq
000000000002151d	nop
000000000002151e	nop
000000000002151f	nop
_aio_fsync:
0000000000021520	movl	$0x2000139, %eax
0000000000021525	movq	%rcx, %r10
0000000000021528	syscall
000000000002152a	jae	0x21534
000000000002152c	movq	%rax, %rdi
000000000002152f	jmp	_cerror_nocancel
0000000000021534	retq
0000000000021535	nop
0000000000021536	nop
0000000000021537	nop
_aio_read:
0000000000021538	movl	$0x200013e, %eax
000000000002153d	movq	%rcx, %r10
0000000000021540	syscall
0000000000021542	jae	0x2154c
0000000000021544	movq	%rax, %rdi
0000000000021547	jmp	_cerror_nocancel
000000000002154c	retq
000000000002154d	nop
000000000002154e	nop
000000000002154f	nop
_aio_return:
0000000000021550	movl	$0x200013a, %eax
0000000000021555	movq	%rcx, %r10
0000000000021558	syscall
000000000002155a	jae	0x21564
000000000002155c	movq	%rax, %rdi
000000000002155f	jmp	_cerror_nocancel
0000000000021564	retq
0000000000021565	nop
0000000000021566	nop
0000000000021567	nop
_aio_suspend:
0000000000021568	movl	$0x200013b, %eax
000000000002156d	movq	%rcx, %r10
0000000000021570	syscall
0000000000021572	jae	0x2157c
0000000000021574	movq	%rax, %rdi
0000000000021577	jmp	_cerror
000000000002157c	retq
000000000002157d	nop
000000000002157e	nop
000000000002157f	nop
_aio_write:
0000000000021580	movl	$0x200013f, %eax
0000000000021585	movq	%rcx, %r10
0000000000021588	syscall
000000000002158a	jae	0x21594
000000000002158c	movq	%rax, %rdi
000000000002158f	jmp	_cerror_nocancel
0000000000021594	retq
0000000000021595	nop
0000000000021596	nop
0000000000021597	nop
_audit:
0000000000021598	movl	$0x200015e, %eax
000000000002159d	movq	%rcx, %r10
00000000000215a0	syscall
00000000000215a2	jae	0x215ac
00000000000215a4	movq	%rax, %rdi
00000000000215a7	jmp	_cerror_nocancel
00000000000215ac	retq
00000000000215ad	nop
00000000000215ae	nop
00000000000215af	nop
_auditctl:
00000000000215b0	movl	$0x2000167, %eax
00000000000215b5	movq	%rcx, %r10
00000000000215b8	syscall
00000000000215ba	jae	0x215c4
00000000000215bc	movq	%rax, %rdi
00000000000215bf	jmp	_cerror_nocancel
00000000000215c4	retq
00000000000215c5	nop
00000000000215c6	nop
00000000000215c7	nop
_chroot:
00000000000215c8	movl	$0x200003d, %eax
00000000000215cd	movq	%rcx, %r10
00000000000215d0	syscall
00000000000215d2	jae	0x215dc
00000000000215d4	movq	%rax, %rdi
00000000000215d7	jmp	_cerror_nocancel
00000000000215dc	retq
00000000000215dd	nop
00000000000215de	nop
00000000000215df	nop
_disconnectx:
00000000000215e0	movl	$0x20001c0, %eax
00000000000215e5	movq	%rcx, %r10
00000000000215e8	syscall
00000000000215ea	jae	0x215f4
00000000000215ec	movq	%rax, %rdi
00000000000215ef	jmp	_cerror
00000000000215f4	retq
00000000000215f5	nop
00000000000215f6	nop
00000000000215f7	nop
_faccessat:
00000000000215f8	movl	$0x20001d2, %eax
00000000000215fd	movq	%rcx, %r10
0000000000021600	syscall
0000000000021602	jae	0x2160c
0000000000021604	movq	%rax, %rdi
0000000000021607	jmp	_cerror
000000000002160c	retq
000000000002160d	nop
000000000002160e	nop
000000000002160f	nop
_fchdir:
0000000000021610	movl	$0x200000d, %eax
0000000000021615	movq	%rcx, %r10
0000000000021618	syscall
000000000002161a	jae	0x21624
000000000002161c	movq	%rax, %rdi
000000000002161f	jmp	_cerror_nocancel
0000000000021624	retq
0000000000021625	nop
0000000000021626	nop
0000000000021627	nop
_fchmodat:
0000000000021628	movl	$0x20001d3, %eax
000000000002162d	movq	%rcx, %r10
0000000000021630	syscall
0000000000021632	jae	0x2163c
0000000000021634	movq	%rax, %rdi
0000000000021637	jmp	_cerror_nocancel
000000000002163c	retq
000000000002163d	nop
000000000002163e	nop
000000000002163f	nop
_fchownat:
0000000000021640	movl	$0x20001d4, %eax
0000000000021645	movq	%rcx, %r10
0000000000021648	syscall
000000000002164a	jae	0x21654
000000000002164c	movq	%rax, %rdi
000000000002164f	jmp	_cerror_nocancel
0000000000021654	retq
0000000000021655	nop
0000000000021656	nop
0000000000021657	nop
_fclonefileat:
0000000000021658	movl	$0x2000205, %eax
000000000002165d	movq	%rcx, %r10
0000000000021660	syscall
0000000000021662	jae	0x2166c
0000000000021664	movq	%rax, %rdi
0000000000021667	jmp	_cerror_nocancel
000000000002166c	retq
000000000002166d	nop
000000000002166e	nop
000000000002166f	nop
_fdatasync:
0000000000021670	movl	$0x20000bb, %eax
0000000000021675	movq	%rcx, %r10
0000000000021678	syscall
000000000002167a	jae	0x21684
000000000002167c	movq	%rax, %rdi
000000000002167f	jmp	_cerror
0000000000021684	retq
0000000000021685	nop
0000000000021686	nop
0000000000021687	nop
_fhopen:
0000000000021688	movl	$0x20000f8, %eax
000000000002168d	movq	%rcx, %r10
0000000000021690	syscall
0000000000021692	jae	0x2169c
0000000000021694	movq	%rax, %rdi
0000000000021697	jmp	_cerror_nocancel
000000000002169c	retq
000000000002169d	nop
000000000002169e	nop
000000000002169f	nop
_fmount:
00000000000216a0	movl	$0x200020e, %eax
00000000000216a5	movq	%rcx, %r10
00000000000216a8	syscall
00000000000216aa	jae	0x216b4
00000000000216ac	movq	%rax, %rdi
00000000000216af	jmp	_cerror_nocancel
00000000000216b4	retq
00000000000216b5	nop
00000000000216b6	nop
00000000000216b7	nop
_fpathconf:
00000000000216b8	movl	$0x20000c0, %eax
00000000000216bd	movq	%rcx, %r10
00000000000216c0	syscall
00000000000216c2	jae	0x216cc
00000000000216c4	movq	%rax, %rdi
00000000000216c7	jmp	_cerror
00000000000216cc	retq
00000000000216cd	nop
00000000000216ce	nop
00000000000216cf	nop
_fremovexattr:
00000000000216d0	movl	$0x20000ef, %eax
00000000000216d5	movq	%rcx, %r10
00000000000216d8	syscall
00000000000216da	jae	0x216e4
00000000000216dc	movq	%rax, %rdi
00000000000216df	jmp	_cerror_nocancel
00000000000216e4	retq
00000000000216e5	nop
00000000000216e6	nop
00000000000216e7	nop
_fsgetpath_ext:
00000000000216e8	movl	$0x20000d9, %eax
00000000000216ed	movq	%rcx, %r10
00000000000216f0	syscall
00000000000216f2	jae	0x216fc
00000000000216f4	movq	%rax, %rdi
00000000000216f7	jmp	_cerror_nocancel
00000000000216fc	retq
00000000000216fd	nop
00000000000216fe	nop
00000000000216ff	nop
_fstat:
0000000000021700	movl	$0x20000bd, %eax
0000000000021705	movq	%rcx, %r10
0000000000021708	syscall
000000000002170a	jae	0x21714
000000000002170c	movq	%rax, %rdi
000000000002170f	jmp	_cerror
0000000000021714	retq
0000000000021715	nop
0000000000021716	nop
0000000000021717	nop
_fstatat:
0000000000021718	movl	$0x20001d5, %eax
000000000002171d	movq	%rcx, %r10
0000000000021720	syscall
0000000000021722	jae	0x2172c
0000000000021724	movq	%rax, %rdi
0000000000021727	jmp	_cerror
000000000002172c	retq
000000000002172d	nop
000000000002172e	nop
000000000002172f	nop
_getattrlistat:
0000000000021730	movl	$0x20001dc, %eax
0000000000021735	movq	%rcx, %r10
0000000000021738	syscall
000000000002173a	jae	0x21744
000000000002173c	movq	%rax, %rdi
000000000002173f	jmp	_cerror_nocancel
0000000000021744	retq
0000000000021745	nop
0000000000021746	nop
0000000000021747	nop
_getauid:
0000000000021748	movl	$0x2000161, %eax
000000000002174d	movq	%rcx, %r10
0000000000021750	syscall
0000000000021752	jae	0x2175c
0000000000021754	movq	%rax, %rdi
0000000000021757	jmp	_cerror_nocancel
000000000002175c	retq
000000000002175d	nop
000000000002175e	nop
000000000002175f	nop
_getdirentries:
0000000000021760	movl	$0x20000c4, %eax
0000000000021765	movq	%rcx, %r10
0000000000021768	syscall
000000000002176a	jae	0x21774
000000000002176c	movq	%rax, %rdi
000000000002176f	jmp	_cerror_nocancel
0000000000021774	retq
0000000000021775	nop
0000000000021776	nop
0000000000021777	nop
_getdirentriesattr:
0000000000021778	movl	$0x20000de, %eax
000000000002177d	movq	%rcx, %r10
0000000000021780	syscall
0000000000021782	jae	0x2178c
0000000000021784	movq	%rax, %rdi
0000000000021787	jmp	_cerror_nocancel
000000000002178c	retq
000000000002178d	nop
000000000002178e	nop
000000000002178f	nop
_getfh:
0000000000021790	movl	$0x20000a1, %eax
0000000000021795	movq	%rcx, %r10
0000000000021798	syscall
000000000002179a	jae	0x217a4
000000000002179c	movq	%rax, %rdi
000000000002179f	jmp	_cerror_nocancel
00000000000217a4	retq
00000000000217a5	nop
00000000000217a6	nop
00000000000217a7	nop
_getfsstat:
00000000000217a8	movl	$0x2000012, %eax
00000000000217ad	movq	%rcx, %r10
00000000000217b0	syscall
00000000000217b2	jae	0x217bc
00000000000217b4	movq	%rax, %rdi
00000000000217b7	jmp	_cerror_nocancel
00000000000217bc	retq
00000000000217bd	nop
00000000000217be	nop
00000000000217bf	nop
_getitimer:
00000000000217c0	movl	$0x2000056, %eax
00000000000217c5	movq	%rcx, %r10
00000000000217c8	syscall
00000000000217ca	jae	0x217d4
00000000000217cc	movq	%rax, %rdi
00000000000217cf	jmp	_cerror_nocancel
00000000000217d4	retq
00000000000217d5	nop
00000000000217d6	nop
00000000000217d7	nop
_getsid:
00000000000217d8	movl	$0x2000136, %eax
00000000000217dd	movq	%rcx, %r10
00000000000217e0	syscall
00000000000217e2	jae	0x217ec
00000000000217e4	movq	%rax, %rdi
00000000000217e7	jmp	_cerror_nocancel
00000000000217ec	retq
00000000000217ed	nop
00000000000217ee	nop
00000000000217ef	nop
_grab_pgo_data:
00000000000217f0	movl	$0x20001ed, %eax
00000000000217f5	movq	%rcx, %r10
00000000000217f8	syscall
00000000000217fa	jae	0x21804
00000000000217fc	movq	%rax, %rdi
00000000000217ff	jmp	_cerror_nocancel
0000000000021804	retq
0000000000021805	nop
0000000000021806	nop
0000000000021807	nop
_guarded_writev_np:
0000000000021808	movl	$0x20001e7, %eax
000000000002180d	movq	%rcx, %r10
0000000000021810	syscall
0000000000021812	jae	0x2181c
0000000000021814	movq	%rax, %rdi
0000000000021817	jmp	_cerror_nocancel
000000000002181c	retq
000000000002181d	nop
000000000002181e	nop
000000000002181f	nop
_kas_info:
0000000000021820	movl	$0x20001b7, %eax
0000000000021825	movq	%rcx, %r10
0000000000021828	syscall
000000000002182a	jae	0x21834
000000000002182c	movq	%rax, %rdi
000000000002182f	jmp	_cerror_nocancel
0000000000021834	retq
0000000000021835	nop
0000000000021836	nop
0000000000021837	nop
_ledger:
0000000000021838	movl	$0x2000175, %eax
000000000002183d	movq	%rcx, %r10
0000000000021840	syscall
0000000000021842	jae	0x2184c
0000000000021844	movq	%rax, %rdi
0000000000021847	jmp	_cerror_nocancel
000000000002184c	retq
000000000002184d	nop
000000000002184e	nop
000000000002184f	nop
_linkat:
0000000000021850	movl	$0x20001d7, %eax
0000000000021855	movq	%rcx, %r10
0000000000021858	syscall
000000000002185a	jae	0x21864
000000000002185c	movq	%rax, %rdi
000000000002185f	jmp	_cerror
0000000000021864	retq
0000000000021865	nop
0000000000021866	nop
0000000000021867	nop
_lio_listio:
0000000000021868	movl	$0x2000140, %eax
000000000002186d	movq	%rcx, %r10
0000000000021870	syscall
0000000000021872	jae	0x2187c
0000000000021874	movq	%rax, %rdi
0000000000021877	jmp	_cerror_nocancel
000000000002187c	retq
000000000002187d	nop
000000000002187e	nop
000000000002187f	nop
_memorystatus_get_level:
0000000000021880	movl	$0x20001c5, %eax
0000000000021885	movq	%rcx, %r10
0000000000021888	syscall
000000000002188a	jae	0x21894
000000000002188c	movq	%rax, %rdi
000000000002188f	jmp	_cerror_nocancel
0000000000021894	retq
0000000000021895	nop
0000000000021896	nop
0000000000021897	nop
_mincore:
0000000000021898	movl	$0x200004e, %eax
000000000002189d	movq	%rcx, %r10
00000000000218a0	syscall
00000000000218a2	jae	0x218ac
00000000000218a4	movq	%rax, %rdi
00000000000218a7	jmp	_cerror_nocancel
00000000000218ac	retq
00000000000218ad	nop
00000000000218ae	nop
00000000000218af	nop
_minherit:
00000000000218b0	movl	$0x20000fa, %eax
00000000000218b5	movq	%rcx, %r10
00000000000218b8	syscall
00000000000218ba	jae	0x218c4
00000000000218bc	movq	%rax, %rdi
00000000000218bf	jmp	_cerror_nocancel
00000000000218c4	retq
00000000000218c5	nop
00000000000218c6	nop
00000000000218c7	nop
_mkfifo:
00000000000218c8	movl	$0x2000084, %eax
00000000000218cd	movq	%rcx, %r10
00000000000218d0	syscall
00000000000218d2	jae	0x218dc
00000000000218d4	movq	%rax, %rdi
00000000000218d7	jmp	_cerror_nocancel
00000000000218dc	retq
00000000000218dd	nop
00000000000218de	nop
00000000000218df	nop
_mknod:
00000000000218e0	movl	$0x200000e, %eax
00000000000218e5	movq	%rcx, %r10
00000000000218e8	syscall
00000000000218ea	jae	0x218f4
00000000000218ec	movq	%rax, %rdi
00000000000218ef	jmp	_cerror_nocancel
00000000000218f4	retq
00000000000218f5	nop
00000000000218f6	nop
00000000000218f7	nop
_mlockall:
00000000000218f8	movl	$0x2000144, %eax
00000000000218fd	movq	%rcx, %r10
0000000000021900	syscall
0000000000021902	jae	0x2190c
0000000000021904	movq	%rax, %rdi
0000000000021907	jmp	_cerror_nocancel
000000000002190c	retq
000000000002190d	nop
000000000002190e	nop
000000000002190f	nop
_modwatch:
0000000000021910	movl	$0x20000e9, %eax
0000000000021915	movq	%rcx, %r10
0000000000021918	syscall
000000000002191a	jae	0x21924
000000000002191c	movq	%rax, %rdi
000000000002191f	jmp	_cerror_nocancel
0000000000021924	retq
0000000000021925	nop
0000000000021926	nop
0000000000021927	nop
_mremap_encrypted:
0000000000021928	movl	$0x20001e9, %eax
000000000002192d	movq	%rcx, %r10
0000000000021930	syscall
0000000000021932	jae	0x2193c
0000000000021934	movq	%rax, %rdi
0000000000021937	jmp	_cerror_nocancel
000000000002193c	retq
000000000002193d	nop
000000000002193e	nop
000000000002193f	nop
_msgget:
0000000000021940	movl	$0x2000103, %eax
0000000000021945	movq	%rcx, %r10
0000000000021948	syscall
000000000002194a	jae	0x21954
000000000002194c	movq	%rax, %rdi
000000000002194f	jmp	_cerror_nocancel
0000000000021954	retq
0000000000021955	nop
0000000000021956	nop
0000000000021957	nop
_msgrcv:
0000000000021958	movl	$0x2000105, %eax
000000000002195d	movq	%rcx, %r10
0000000000021960	syscall
0000000000021962	jae	0x2196c
0000000000021964	movq	%rax, %rdi
0000000000021967	jmp	_cerror
000000000002196c	retq
000000000002196d	nop
000000000002196e	nop
000000000002196f	nop
_msgsnd:
0000000000021970	movl	$0x2000104, %eax
0000000000021975	movq	%rcx, %r10
0000000000021978	syscall
000000000002197a	jae	0x21984
000000000002197c	movq	%rax, %rdi
000000000002197f	jmp	_cerror
0000000000021984	retq
0000000000021985	nop
0000000000021986	nop
0000000000021987	nop
_munlockall:
0000000000021988	movl	$0x2000145, %eax
000000000002198d	movq	%rcx, %r10
0000000000021990	syscall
0000000000021992	jae	0x2199c
0000000000021994	movq	%rax, %rdi
0000000000021997	jmp	_cerror_nocancel
000000000002199c	retq
000000000002199d	nop
000000000002199e	nop
000000000002199f	nop
_necp_session_action:
00000000000219a0	movl	$0x200020b, %eax
00000000000219a5	movq	%rcx, %r10
00000000000219a8	syscall
00000000000219aa	jae	0x219b4
00000000000219ac	movq	%rax, %rdi
00000000000219af	jmp	_cerror_nocancel
00000000000219b4	retq
00000000000219b5	nop
00000000000219b6	nop
00000000000219b7	nop
_necp_session_open:
00000000000219b8	movl	$0x200020a, %eax
00000000000219bd	movq	%rcx, %r10
00000000000219c0	syscall
00000000000219c2	jae	0x219cc
00000000000219c4	movq	%rax, %rdi
00000000000219c7	jmp	_cerror_nocancel
00000000000219cc	retq
00000000000219cd	nop
00000000000219ce	nop
00000000000219cf	nop
_net_qos_guideline:
00000000000219d0	movl	$0x200020d, %eax
00000000000219d5	movq	%rcx, %r10
00000000000219d8	syscall
00000000000219da	jae	0x219e4
00000000000219dc	movq	%rax, %rdi
00000000000219df	jmp	_cerror_nocancel
00000000000219e4	retq
00000000000219e5	nop
00000000000219e6	nop
00000000000219e7	nop
_netagent_trigger:
00000000000219e8	movl	$0x20001ea, %eax
00000000000219ed	movq	%rcx, %r10
00000000000219f0	syscall
00000000000219f2	jae	0x219fc
00000000000219f4	movq	%rax, %rdi
00000000000219f7	jmp	_cerror_nocancel
00000000000219fc	retq
00000000000219fd	nop
00000000000219fe	nop
00000000000219ff	nop
_nfsclnt:
0000000000021a00	movl	$0x20000f7, %eax
0000000000021a05	movq	%rcx, %r10
0000000000021a08	syscall
0000000000021a0a	jae	0x21a14
0000000000021a0c	movq	%rax, %rdi
0000000000021a0f	jmp	_cerror_nocancel
0000000000021a14	retq
0000000000021a15	nop
0000000000021a16	nop
0000000000021a17	nop
_nfssvc:
0000000000021a18	movl	$0x200009b, %eax
0000000000021a1d	movq	%rcx, %r10
0000000000021a20	syscall
0000000000021a22	jae	0x21a2c
0000000000021a24	movq	%rax, %rdi
0000000000021a27	jmp	_cerror_nocancel
0000000000021a2c	retq
0000000000021a2d	nop
0000000000021a2e	nop
0000000000021a2f	nop
_ntp_adjtime:
0000000000021a30	movl	$0x200020f, %eax
0000000000021a35	movq	%rcx, %r10
0000000000021a38	syscall
0000000000021a3a	jae	0x21a44
0000000000021a3c	movq	%rax, %rdi
0000000000021a3f	jmp	_cerror_nocancel
0000000000021a44	retq
0000000000021a45	nop
0000000000021a46	nop
0000000000021a47	nop
_ntp_gettime:
0000000000021a48	movl	$0x2000210, %eax
0000000000021a4d	movq	%rcx, %r10
0000000000021a50	syscall
0000000000021a52	jae	0x21a5c
0000000000021a54	movq	%rax, %rdi
0000000000021a57	jmp	_cerror_nocancel
0000000000021a5c	retq
0000000000021a5d	nop
0000000000021a5e	nop
0000000000021a5f	nop
_openbyid_np:
0000000000021a60	movl	$0x20001df, %eax
0000000000021a65	movq	%rcx, %r10
0000000000021a68	syscall
0000000000021a6a	jae	0x21a74
0000000000021a6c	movq	%rax, %rdi
0000000000021a6f	jmp	_cerror_nocancel
0000000000021a74	retq
0000000000021a75	nop
0000000000021a76	nop
0000000000021a77	nop
_os_fault_with_payload:
0000000000021a78	movl	$0x2000211, %eax
0000000000021a7d	movq	%rcx, %r10
0000000000021a80	syscall
0000000000021a82	jae	0x21a8c
0000000000021a84	movq	%rax, %rdi
0000000000021a87	jmp	_cerror_nocancel
0000000000021a8c	retq
0000000000021a8d	nop
0000000000021a8e	nop
0000000000021a8f	nop
_peeloff:
0000000000021a90	movl	$0x20001c1, %eax
0000000000021a95	movq	%rcx, %r10
0000000000021a98	syscall
0000000000021a9a	jae	0x21aa4
0000000000021a9c	movq	%rax, %rdi
0000000000021a9f	jmp	_cerror
0000000000021aa4	retq
0000000000021aa5	nop
0000000000021aa6	nop
0000000000021aa7	nop
_pid_hibernate:
0000000000021aa8	movl	$0x20001b3, %eax
0000000000021aad	movq	%rcx, %r10
0000000000021ab0	syscall
0000000000021ab2	jae	0x21abc
0000000000021ab4	movq	%rax, %rdi
0000000000021ab7	jmp	_cerror_nocancel
0000000000021abc	retq
0000000000021abd	nop
0000000000021abe	nop
0000000000021abf	nop
_pid_resume:
0000000000021ac0	movl	$0x20001b2, %eax
0000000000021ac5	movq	%rcx, %r10
0000000000021ac8	syscall
0000000000021aca	jae	0x21ad4
0000000000021acc	movq	%rax, %rdi
0000000000021acf	jmp	_cerror_nocancel
0000000000021ad4	retq
0000000000021ad5	nop
0000000000021ad6	nop
0000000000021ad7	nop
_pid_shutdown_sockets:
0000000000021ad8	movl	$0x20001b4, %eax
0000000000021add	movq	%rcx, %r10
0000000000021ae0	syscall
0000000000021ae2	jae	0x21aec
0000000000021ae4	movq	%rax, %rdi
0000000000021ae7	jmp	_cerror_nocancel
0000000000021aec	retq
0000000000021aed	nop
0000000000021aee	nop
0000000000021aef	nop
_pid_suspend:
0000000000021af0	movl	$0x20001b1, %eax
0000000000021af5	movq	%rcx, %r10
0000000000021af8	syscall
0000000000021afa	jae	0x21b04
0000000000021afc	movq	%rax, %rdi
0000000000021aff	jmp	_cerror_nocancel
0000000000021b04	retq
0000000000021b05	nop
0000000000021b06	nop
0000000000021b07	nop
_proc_trace_log:
0000000000021b08	movl	$0x20001dd, %eax
0000000000021b0d	movq	%rcx, %r10
0000000000021b10	syscall
0000000000021b12	jae	0x21b1c
0000000000021b14	movq	%rax, %rdi
0000000000021b17	jmp	_cerror_nocancel
0000000000021b1c	retq
0000000000021b1d	nop
0000000000021b1e	nop
0000000000021b1f	nop
_proc_uuid_policy:
0000000000021b20	movl	$0x20001c4, %eax
0000000000021b25	movq	%rcx, %r10
0000000000021b28	syscall
0000000000021b2a	jae	0x21b34
0000000000021b2c	movq	%rax, %rdi
0000000000021b2f	jmp	_cerror_nocancel
0000000000021b34	retq
0000000000021b35	nop
0000000000021b36	nop
0000000000021b37	nop
_readlinkat:
0000000000021b38	movl	$0x20001d9, %eax
0000000000021b3d	movq	%rcx, %r10
0000000000021b40	syscall
0000000000021b42	jae	0x21b4c
0000000000021b44	movq	%rax, %rdi
0000000000021b47	jmp	_cerror_nocancel
0000000000021b4c	retq
0000000000021b4d	nop
0000000000021b4e	nop
0000000000021b4f	nop
_readv:
0000000000021b50	movl	$0x2000078, %eax
0000000000021b55	movq	%rcx, %r10
0000000000021b58	syscall
0000000000021b5a	jae	0x21b64
0000000000021b5c	movq	%rax, %rdi
0000000000021b5f	jmp	_cerror
0000000000021b64	retq
0000000000021b65	nop
0000000000021b66	nop
0000000000021b67	nop
_recvmsg_x:
0000000000021b68	movl	$0x20001e0, %eax
0000000000021b6d	movq	%rcx, %r10
0000000000021b70	syscall
0000000000021b72	jae	0x21b7c
0000000000021b74	movq	%rax, %rdi
0000000000021b77	jmp	_cerror_nocancel
0000000000021b7c	retq
0000000000021b7d	nop
0000000000021b7e	nop
0000000000021b7f	nop
_revoke:
0000000000021b80	movl	$0x2000038, %eax
0000000000021b85	movq	%rcx, %r10
0000000000021b88	syscall
0000000000021b8a	jae	0x21b94
0000000000021b8c	movq	%rax, %rdi
0000000000021b8f	jmp	_cerror_nocancel
0000000000021b94	retq
0000000000021b95	nop
0000000000021b96	nop
0000000000021b97	nop
_searchfs:
0000000000021b98	movl	$0x20000e1, %eax
0000000000021b9d	movq	%rcx, %r10
0000000000021ba0	syscall
0000000000021ba2	jae	0x21bac
0000000000021ba4	movq	%rax, %rdi
0000000000021ba7	jmp	_cerror_nocancel
0000000000021bac	retq
0000000000021bad	nop
0000000000021bae	nop
0000000000021baf	nop
_sem_post:
0000000000021bb0	movl	$0x2000111, %eax
0000000000021bb5	movq	%rcx, %r10
0000000000021bb8	syscall
0000000000021bba	jae	0x21bc4
0000000000021bbc	movq	%rax, %rdi
0000000000021bbf	jmp	_cerror_nocancel
0000000000021bc4	retq
0000000000021bc5	nop
0000000000021bc6	nop
0000000000021bc7	nop
_sem_trywait:
0000000000021bc8	movl	$0x2000110, %eax
0000000000021bcd	movq	%rcx, %r10
0000000000021bd0	syscall
0000000000021bd2	jae	0x21bdc
0000000000021bd4	movq	%rax, %rdi
0000000000021bd7	jmp	_cerror_nocancel
0000000000021bdc	retq
0000000000021bdd	nop
0000000000021bde	nop
0000000000021bdf	nop
_sem_unlink:
0000000000021be0	movl	$0x200010e, %eax
0000000000021be5	movq	%rcx, %r10
0000000000021be8	syscall
0000000000021bea	jae	0x21bf4
0000000000021bec	movq	%rax, %rdi
0000000000021bef	jmp	_cerror_nocancel
0000000000021bf4	retq
0000000000021bf5	nop
0000000000021bf6	nop
0000000000021bf7	nop
_sem_wait:
0000000000021bf8	movl	$0x200010f, %eax
0000000000021bfd	movq	%rcx, %r10
0000000000021c00	syscall
0000000000021c02	jae	0x21c0c
0000000000021c04	movq	%rax, %rdi
0000000000021c07	jmp	_cerror
0000000000021c0c	retq
0000000000021c0d	nop
0000000000021c0e	nop
0000000000021c0f	nop
_semget:
0000000000021c10	movl	$0x20000ff, %eax
0000000000021c15	movq	%rcx, %r10
0000000000021c18	syscall
0000000000021c1a	jae	0x21c24
0000000000021c1c	movq	%rax, %rdi
0000000000021c1f	jmp	_cerror_nocancel
0000000000021c24	retq
0000000000021c25	nop
0000000000021c26	nop
0000000000021c27	nop
_semop:
0000000000021c28	movl	$0x2000100, %eax
0000000000021c2d	movq	%rcx, %r10
0000000000021c30	syscall
0000000000021c32	jae	0x21c3c
0000000000021c34	movq	%rax, %rdi
0000000000021c37	jmp	_cerror
0000000000021c3c	retq
0000000000021c3d	nop
0000000000021c3e	nop
0000000000021c3f	nop
_sendfile:
0000000000021c40	movl	$0x2000151, %eax
0000000000021c45	movq	%rcx, %r10
0000000000021c48	syscall
0000000000021c4a	jae	0x21c54
0000000000021c4c	movq	%rax, %rdi
0000000000021c4f	jmp	_cerror_nocancel
0000000000021c54	retq
0000000000021c55	nop
0000000000021c56	nop
0000000000021c57	nop
_sendmsg_x:
0000000000021c58	movl	$0x20001e1, %eax
0000000000021c5d	movq	%rcx, %r10
0000000000021c60	syscall
0000000000021c62	jae	0x21c6c
0000000000021c64	movq	%rax, %rdi
0000000000021c67	jmp	_cerror_nocancel
0000000000021c6c	retq
0000000000021c6d	nop
0000000000021c6e	nop
0000000000021c6f	nop
_setattrlistat:
0000000000021c70	movl	$0x200020c, %eax
0000000000021c75	movq	%rcx, %r10
0000000000021c78	syscall
0000000000021c7a	jae	0x21c84
0000000000021c7c	movq	%rax, %rdi
0000000000021c7f	jmp	_cerror_nocancel
0000000000021c84	retq
0000000000021c85	nop
0000000000021c86	nop
0000000000021c87	nop
_setaudit_addr:
0000000000021c88	movl	$0x2000166, %eax
0000000000021c8d	movq	%rcx, %r10
0000000000021c90	syscall
0000000000021c92	jae	0x21c9c
0000000000021c94	movq	%rax, %rdi
0000000000021c97	jmp	_cerror_nocancel
0000000000021c9c	retq
0000000000021c9d	nop
0000000000021c9e	nop
0000000000021c9f	nop
_setauid:
0000000000021ca0	movl	$0x2000162, %eax
0000000000021ca5	movq	%rcx, %r10
0000000000021ca8	syscall
0000000000021caa	jae	0x21cb4
0000000000021cac	movq	%rax, %rdi
0000000000021caf	jmp	_cerror_nocancel
0000000000021cb4	retq
0000000000021cb5	nop
0000000000021cb6	nop
0000000000021cb7	nop
_setgroups:
0000000000021cb8	movl	$0x2000050, %eax
0000000000021cbd	movq	%rcx, %r10
0000000000021cc0	syscall
0000000000021cc2	jae	0x21ccc
0000000000021cc4	movq	%rax, %rdi
0000000000021cc7	jmp	_cerror_nocancel
0000000000021ccc	retq
0000000000021ccd	nop
0000000000021cce	nop
0000000000021ccf	nop
_setprivexec:
0000000000021cd0	movl	$0x2000098, %eax
0000000000021cd5	movq	%rcx, %r10
0000000000021cd8	syscall
0000000000021cda	jae	0x21ce4
0000000000021cdc	movq	%rax, %rdi
0000000000021cdf	jmp	_cerror_nocancel
0000000000021ce4	retq
0000000000021ce5	nop
0000000000021ce6	nop
0000000000021ce7	nop
_shm_unlink:
0000000000021ce8	movl	$0x200010b, %eax
0000000000021ced	movq	%rcx, %r10
0000000000021cf0	syscall
0000000000021cf2	jae	0x21cfc
0000000000021cf4	movq	%rax, %rdi
0000000000021cf7	jmp	_cerror_nocancel
0000000000021cfc	retq
0000000000021cfd	nop
0000000000021cfe	nop
0000000000021cff	nop
_shmat:
0000000000021d00	movl	$0x2000106, %eax
0000000000021d05	movq	%rcx, %r10
0000000000021d08	syscall
0000000000021d0a	jae	0x21d14
0000000000021d0c	movq	%rax, %rdi
0000000000021d0f	jmp	_cerror_nocancel
0000000000021d14	retq
0000000000021d15	nop
0000000000021d16	nop
0000000000021d17	nop
_shmdt:
0000000000021d18	movl	$0x2000108, %eax
0000000000021d1d	movq	%rcx, %r10
0000000000021d20	syscall
0000000000021d22	jae	0x21d2c
0000000000021d24	movq	%rax, %rdi
0000000000021d27	jmp	_cerror_nocancel
0000000000021d2c	retq
0000000000021d2d	nop
0000000000021d2e	nop
0000000000021d2f	nop
_shmget:
0000000000021d30	movl	$0x2000109, %eax
0000000000021d35	movq	%rcx, %r10
0000000000021d38	syscall
0000000000021d3a	jae	0x21d44
0000000000021d3c	movq	%rax, %rdi
0000000000021d3f	jmp	_cerror_nocancel
0000000000021d44	retq
0000000000021d45	nop
0000000000021d46	nop
0000000000021d47	nop
_sigpending:
0000000000021d48	movl	$0x2000034, %eax
0000000000021d4d	movq	%rcx, %r10
0000000000021d50	syscall
0000000000021d52	jae	0x21d5c
0000000000021d54	movq	%rax, %rdi
0000000000021d57	jmp	_cerror_nocancel
0000000000021d5c	retq
0000000000021d5d	nop
0000000000021d5e	nop
0000000000021d5f	nop
_socket_delegate:
0000000000021d60	movl	$0x20001c2, %eax
0000000000021d65	movq	%rcx, %r10
0000000000021d68	syscall
0000000000021d6a	jae	0x21d74
0000000000021d6c	movq	%rax, %rdi
0000000000021d6f	jmp	_cerror_nocancel
0000000000021d74	retq
0000000000021d75	nop
0000000000021d76	nop
0000000000021d77	nop
_statfs:
0000000000021d78	movl	$0x200009d, %eax
0000000000021d7d	movq	%rcx, %r10
0000000000021d80	syscall
0000000000021d82	jae	0x21d8c
0000000000021d84	movq	%rax, %rdi
0000000000021d87	jmp	_cerror_nocancel
0000000000021d8c	retq
0000000000021d8d	nop
0000000000021d8e	nop
0000000000021d8f	nop
_swapon:
0000000000021d90	movl	$0x2000055, %eax
0000000000021d95	movq	%rcx, %r10
0000000000021d98	syscall
0000000000021d9a	jae	0x21da4
0000000000021d9c	movq	%rax, %rdi
0000000000021d9f	jmp	_cerror_nocancel
0000000000021da4	retq
0000000000021da5	nop
0000000000021da6	nop
0000000000021da7	nop
_symlinkat:
0000000000021da8	movl	$0x20001da, %eax
0000000000021dad	movq	%rcx, %r10
0000000000021db0	syscall
0000000000021db2	jae	0x21dbc
0000000000021db4	movq	%rax, %rdi
0000000000021db7	jmp	_cerror
0000000000021dbc	retq
0000000000021dbd	nop
0000000000021dbe	nop
0000000000021dbf	nop
_sync:
0000000000021dc0	movl	$0x2000024, %eax
0000000000021dc5	movq	%rcx, %r10
0000000000021dc8	syscall
0000000000021dca	jae	0x21dd4
0000000000021dcc	movq	%rax, %rdi
0000000000021dcf	jmp	_cerror
0000000000021dd4	retq
0000000000021dd5	nop
0000000000021dd6	nop
0000000000021dd7	nop
_system_override:
0000000000021dd8	movl	$0x20001c6, %eax
0000000000021ddd	movq	%rcx, %r10
0000000000021de0	syscall
0000000000021de2	jae	0x21dec
0000000000021de4	movq	%rax, %rdi
0000000000021de7	jmp	_cerror_nocancel
0000000000021dec	retq
0000000000021ded	nop
0000000000021dee	nop
0000000000021def	nop
_thread_selfcounts:
0000000000021df0	movl	$0x20000ba, %eax
0000000000021df5	movq	%rcx, %r10
0000000000021df8	syscall
0000000000021dfa	jae	0x21e04
0000000000021dfc	movq	%rax, %rdi
0000000000021dff	jmp	_cerror_nocancel
0000000000021e04	retq
0000000000021e05	nop
0000000000021e06	nop
0000000000021e07	nop
_truncate:
0000000000021e08	movl	$0x20000c8, %eax
0000000000021e0d	movq	%rcx, %r10
0000000000021e10	syscall
0000000000021e12	jae	0x21e1c
0000000000021e14	movq	%rax, %rdi
0000000000021e17	jmp	_cerror_nocancel
0000000000021e1c	retq
0000000000021e1d	nop
0000000000021e1e	nop
0000000000021e1f	nop
_undelete:
0000000000021e20	movl	$0x20000cd, %eax
0000000000021e25	movq	%rcx, %r10
0000000000021e28	syscall
0000000000021e2a	jae	0x21e34
0000000000021e2c	movq	%rax, %rdi
0000000000021e2f	jmp	_cerror_nocancel
0000000000021e34	retq
0000000000021e35	nop
0000000000021e36	nop
0000000000021e37	nop
_usrctl:
0000000000021e38	movl	$0x20001bd, %eax
0000000000021e3d	movq	%rcx, %r10
0000000000021e40	syscall
0000000000021e42	jae	0x21e4c
0000000000021e44	movq	%rax, %rdi
0000000000021e47	jmp	_cerror_nocancel
0000000000021e4c	retq
0000000000021e4d	nop
0000000000021e4e	nop
0000000000021e4f	nop
_vfs_purge:
0000000000021e50	movl	$0x20001c7, %eax
0000000000021e55	movq	%rcx, %r10
0000000000021e58	syscall
0000000000021e5a	jae	0x21e64
0000000000021e5c	movq	%rax, %rdi
0000000000021e5f	jmp	_cerror_nocancel
0000000000021e64	retq
0000000000021e65	nop
0000000000021e66	nop
0000000000021e67	nop
_vm_pressure_monitor:
0000000000021e68	movl	$0x2000128, %eax
0000000000021e6d	movq	%rcx, %r10
0000000000021e70	syscall
0000000000021e72	jae	0x21e7c
0000000000021e74	movq	%rax, %rdi
0000000000021e77	jmp	_cerror_nocancel
0000000000021e7c	retq
0000000000021e7d	nop
0000000000021e7e	nop
0000000000021e7f	nop
_waitevent:
0000000000021e80	movl	$0x20000e8, %eax
0000000000021e85	movq	%rcx, %r10
0000000000021e88	syscall
0000000000021e8a	jae	0x21e94
0000000000021e8c	movq	%rax, %rdi
0000000000021e8f	jmp	_cerror_nocancel
0000000000021e94	retq
0000000000021e95	nop
0000000000021e96	nop
0000000000021e97	nop
_waitid:
0000000000021e98	movl	$0x20000ad, %eax
0000000000021e9d	movq	%rcx, %r10
0000000000021ea0	syscall
0000000000021ea2	jae	0x21eac
0000000000021ea4	movq	%rax, %rdi
0000000000021ea7	jmp	_cerror
0000000000021eac	retq
0000000000021ead	nop
0000000000021eae	nop
0000000000021eaf	nop
_watchevent:
0000000000021eb0	movl	$0x20000e7, %eax
0000000000021eb5	movq	%rcx, %r10
0000000000021eb8	syscall
0000000000021eba	jae	0x21ec4
0000000000021ebc	movq	%rax, %rdi
0000000000021ebf	jmp	_cerror_nocancel
0000000000021ec4	retq
0000000000021ec5	nop
0000000000021ec6	nop
0000000000021ec7	nop
_i386_get_ldt:
0000000000021ec8	movl	$0x3000006, %eax
0000000000021ecd	syscall
0000000000021ecf	jae	0x21ed9
0000000000021ed1	movq	%rax, %rdi
0000000000021ed4	jmp	_cerror
0000000000021ed9	retq
0000000000021eda	nop
_i386_set_ldt:
0000000000021edc	movl	$0x3000005, %eax
0000000000021ee1	syscall
0000000000021ee3	jae	0x21eed
0000000000021ee5	movq	%rax, %rdi
0000000000021ee8	jmp	_cerror
0000000000021eed	retq
0000000000021eee	nop
__thread_set_tsd_base:
0000000000021ef0	movl	$0x0, %esi
0000000000021ef5	movl	$0x3000003, %eax
0000000000021efa	syscall
0000000000021efc	retq
_pkt_subtype_assert_fail.cold.1:
0000000000021efd	movq	%rdi, %rax
0000000000021f00	leaq	0x1287(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021f07	movq	%rcx, 0xd6ba(%rip)
0000000000021f0e	movq	%rax, 0xd6e3(%rip)
0000000000021f15	ud2
_pkt_type_assert_fail.cold.1:
0000000000021f17	movq	%rdi, %rax
0000000000021f1a	leaq	0x1284(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000021f21	movq	%rcx, 0xd6a0(%rip)
0000000000021f28	movq	%rax, 0xd6c9(%rip)
0000000000021f2f	ud2
_os_packet_set_headroom.cold.1:
0000000000021f31	movq	%rdi, %rax
0000000000021f34	leaq	0x1253(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021f3b	movq	%rcx, 0xd686(%rip)
0000000000021f42	movq	%rax, 0xd6af(%rip)
0000000000021f49	ud2
_os_packet_get_headroom.cold.1:
0000000000021f4b	movq	%rdi, %rax
0000000000021f4e	leaq	0x1239(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021f55	movq	%rcx, 0xd66c(%rip)
0000000000021f5c	movq	%rax, 0xd695(%rip)
0000000000021f63	ud2
_os_packet_set_link_header_length.cold.1:
0000000000021f65	movq	%rdi, %rax
0000000000021f68	leaq	0x1236(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000021f6f	movq	%rcx, 0xd652(%rip)
0000000000021f76	movq	%rax, 0xd67b(%rip)
0000000000021f7d	ud2
_os_packet_get_link_header_length.cold.1:
0000000000021f7f	movq	%rdi, %rax
0000000000021f82	leaq	0x121c(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000021f89	movq	%rcx, 0xd638(%rip)
0000000000021f90	movq	%rax, 0xd661(%rip)
0000000000021f97	ud2
_os_packet_set_link_broadcast.cold.1:
0000000000021f99	movq	%rdi, %rax
0000000000021f9c	leaq	0x11eb(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021fa3	movq	%rcx, 0xd61e(%rip)
0000000000021faa	movq	%rax, 0xd647(%rip)
0000000000021fb1	ud2
_os_packet_get_link_broadcast.cold.1:
0000000000021fb3	movq	%rdi, %rax
0000000000021fb6	leaq	0x11d1(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021fbd	movq	%rcx, 0xd604(%rip)
0000000000021fc4	movq	%rax, 0xd62d(%rip)
0000000000021fcb	ud2
_os_packet_set_link_multicast.cold.1:
0000000000021fcd	movq	%rdi, %rax
0000000000021fd0	leaq	0x11b7(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021fd7	movq	%rcx, 0xd5ea(%rip)
0000000000021fde	movq	%rax, 0xd613(%rip)
0000000000021fe5	ud2
_os_packet_get_link_multicast.cold.1:
0000000000021fe7	movq	%rdi, %rax
0000000000021fea	leaq	0x119d(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000021ff1	movq	%rcx, 0xd5d0(%rip)
0000000000021ff8	movq	%rax, 0xd5f9(%rip)
0000000000021fff	ud2
_os_packet_set_link_ethfcs.cold.1:
0000000000022001	movq	%rdi, %rax
0000000000022004	leaq	0x1183(%rip), %rcx ## literal pool for: "invalid packet subtype"
000000000002200b	movq	%rcx, 0xd5b6(%rip)
0000000000022012	movq	%rax, 0xd5df(%rip)
0000000000022019	ud2
_os_packet_get_link_ethfcs.cold.1:
000000000002201b	movq	%rdi, %rax
000000000002201e	leaq	0x1169(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000022025	movq	%rcx, 0xd59c(%rip)
000000000002202c	movq	%rax, 0xd5c5(%rip)
0000000000022033	ud2
_os_packet_set_transport_traffic_background.cold.1:
0000000000022035	movq	%rdi, %rax
0000000000022038	leaq	0x1166(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002203f	movq	%rcx, 0xd582(%rip)
0000000000022046	movq	%rax, 0xd5ab(%rip)
000000000002204d	ud2
_os_packet_get_transport_traffic_background.cold.1:
000000000002204f	movq	%rdi, %rax
0000000000022052	leaq	0x114c(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022059	movq	%rcx, 0xd568(%rip)
0000000000022060	movq	%rax, 0xd591(%rip)
0000000000022067	ud2
_os_packet_set_transport_traffic_realtime.cold.1:
0000000000022069	movq	%rdi, %rax
000000000002206c	leaq	0x1132(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022073	movq	%rcx, 0xd54e(%rip)
000000000002207a	movq	%rax, 0xd577(%rip)
0000000000022081	ud2
_os_packet_get_transport_traffic_realtime.cold.1:
0000000000022083	movq	%rdi, %rax
0000000000022086	leaq	0x1118(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002208d	movq	%rcx, 0xd534(%rip)
0000000000022094	movq	%rax, 0xd55d(%rip)
000000000002209b	ud2
_os_packet_set_transport_retransmit.cold.1:
000000000002209d	movq	%rdi, %rax
00000000000220a0	leaq	0x10fe(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000220a7	movq	%rcx, 0xd51a(%rip)
00000000000220ae	movq	%rax, 0xd543(%rip)
00000000000220b5	ud2
_os_packet_get_transport_retransmit.cold.1:
00000000000220b7	movq	%rdi, %rax
00000000000220ba	leaq	0x10e4(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000220c1	movq	%rcx, 0xd500(%rip)
00000000000220c8	movq	%rax, 0xd529(%rip)
00000000000220cf	ud2
_os_packet_set_transport_last_packet.cold.1:
00000000000220d1	movq	%rdi, %rax
00000000000220d4	leaq	0x10ca(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000220db	movq	%rcx, 0xd4e6(%rip)
00000000000220e2	movq	%rax, 0xd50f(%rip)
00000000000220e9	ud2
_os_packet_set_service_class.cold.1:
00000000000220eb	movq	%rdi, %rax
00000000000220ee	leaq	0x10b0(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000220f5	movq	%rcx, 0xd4cc(%rip)
00000000000220fc	movq	%rax, 0xd4f5(%rip)
0000000000022103	ud2
_os_packet_get_service_class.cold.1:
0000000000022105	movq	%rdi, %rax
0000000000022108	leaq	0x1096(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002210f	movq	%rcx, 0xd4b2(%rip)
0000000000022116	movq	%rax, 0xd4db(%rip)
000000000002211d	ud2
_os_packet_set_traffic_class.cold.1:
000000000002211f	movq	%rdi, %rax
0000000000022122	leaq	0x107c(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022129	movq	%rcx, 0xd498(%rip)
0000000000022130	movq	%rax, 0xd4c1(%rip)
0000000000022137	ud2
_os_packet_get_traffic_class.cold.1:
0000000000022139	movq	%rdi, %rax
000000000002213c	leaq	0x1062(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022143	movq	%rcx, 0xd47e(%rip)
000000000002214a	movq	%rax, 0xd4a7(%rip)
0000000000022151	ud2
_os_packet_set_inet_checksum.cold.1:
0000000000022153	movq	%rdi, %rax
0000000000022156	leaq	0x1048(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002215d	movq	%rcx, 0xd464(%rip)
0000000000022164	movq	%rax, 0xd48d(%rip)
000000000002216b	ud2
_os_packet_get_inet_checksum.cold.1:
000000000002216d	movq	%rdi, %rax
0000000000022170	leaq	0x102e(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022177	movq	%rcx, 0xd44a(%rip)
000000000002217e	movq	%rax, 0xd473(%rip)
0000000000022185	ud2
_os_packet_set_group_start.cold.1:
0000000000022187	movq	%rdi, %rax
000000000002218a	leaq	0x1014(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022191	movq	%rcx, 0xd430(%rip)
0000000000022198	movq	%rax, 0xd459(%rip)
000000000002219f	ud2
_os_packet_get_group_start.cold.1:
00000000000221a1	movq	%rdi, %rax
00000000000221a4	leaq	0xffa(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000221ab	movq	%rcx, 0xd416(%rip)
00000000000221b2	movq	%rax, 0xd43f(%rip)
00000000000221b9	ud2
_os_packet_set_group_end.cold.1:
00000000000221bb	movq	%rdi, %rax
00000000000221be	leaq	0xfe0(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000221c5	movq	%rcx, 0xd3fc(%rip)
00000000000221cc	movq	%rax, 0xd425(%rip)
00000000000221d3	ud2
_os_packet_get_group_end.cold.1:
00000000000221d5	movq	%rdi, %rax
00000000000221d8	leaq	0xfc6(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000221df	movq	%rcx, 0xd3e2(%rip)
00000000000221e6	movq	%rax, 0xd40b(%rip)
00000000000221ed	ud2
_os_packet_get_expire_time.cold.1:
00000000000221ef	movq	%rdi, %rax
00000000000221f2	leaq	0xfac(%rip), %rcx ## literal pool for: "invalid packet type"
00000000000221f9	movq	%rcx, 0xd3c8(%rip)
0000000000022200	movq	%rax, 0xd3f1(%rip)
0000000000022207	ud2
_os_packet_set_expire_time.cold.1:
0000000000022209	movq	%rdi, %rax
000000000002220c	leaq	0xf92(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022213	movq	%rcx, 0xd3ae(%rip)
000000000002221a	movq	%rax, 0xd3d7(%rip)
0000000000022221	ud2
_os_packet_get_token.cold.1:
0000000000022223	leaq	0xf8f(%rip), %rcx ## literal pool for: "assertion failed: tlen <= 16"
000000000002222a	movq	%rcx, 0xd397(%rip)
0000000000022231	ud2
_os_packet_get_token.cold.2:
0000000000022233	movq	%rdi, %rax
0000000000022236	leaq	0xf68(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002223d	movq	%rcx, 0xd384(%rip)
0000000000022244	movq	%rax, 0xd3ad(%rip)
000000000002224b	ud2
_os_packet_set_token.cold.1:
000000000002224d	movq	%rdi, %rax
0000000000022250	leaq	0xf4e(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022257	movq	%rcx, 0xd36a(%rip)
000000000002225e	movq	%rax, 0xd393(%rip)
0000000000022265	ud2
_os_packet_get_packetid.cold.1:
0000000000022267	movq	%rdi, %rax
000000000002226a	leaq	0xf34(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000022271	movq	%rcx, 0xd350(%rip)
0000000000022278	movq	%rax, 0xd379(%rip)
000000000002227f	ud2
_os_packet_set_packetid.cold.1:
0000000000022281	movq	%rdi, %rax
0000000000022284	leaq	0xf1a(%rip), %rcx ## literal pool for: "invalid packet type"
000000000002228b	movq	%rcx, 0xd336(%rip)
0000000000022292	movq	%rax, 0xd35f(%rip)
0000000000022299	ud2
_os_packet_set_vlan_tag.cold.1:
000000000002229b	movq	%rdi, %rax
000000000002229e	leaq	0xee9(%rip), %rcx ## literal pool for: "invalid packet subtype"
00000000000222a5	movq	%rcx, 0xd31c(%rip)
00000000000222ac	movq	%rax, 0xd345(%rip)
00000000000222b3	ud2
_os_packet_get_vlan_tag.cold.1:
00000000000222b5	movq	%rdi, %rax
00000000000222b8	leaq	0xecf(%rip), %rcx ## literal pool for: "invalid packet subtype"
00000000000222bf	movq	%rcx, 0xd302(%rip)
00000000000222c6	movq	%rax, 0xd32b(%rip)
00000000000222cd	ud2
_os_packet_get_truncated.cold.1:
00000000000222cf	movq	%rdi, %rax
00000000000222d2	leaq	0xeb5(%rip), %rcx ## literal pool for: "invalid packet subtype"
00000000000222d9	movq	%rcx, 0xd2e8(%rip)
00000000000222e0	movq	%rax, 0xd311(%rip)
00000000000222e7	ud2
_os_packet_get_next_buflet.cold.1:
00000000000222e9	leaq	0xee6(%rip), %rcx ## literal pool for: "assertion failed: (((struct __user_buflet *)(uintptr_t)bprev)) == ((void *)0) || (((struct __user_buflet *)(uintptr_t)bprev)) == (((struct __user_quantum *)((uint64_t)(ph) & (~((uint64_t)0xf)))))->qum_buf"
00000000000222f0	movq	%rcx, 0xd2d1(%rip)
00000000000222f7	ud2
_os_packet_finalize.cold.1:
00000000000222f9	leaq	0xfa3(%rip), %rcx ## literal pool for: "assertion failed: bprev != ((void *)0) || bcur != ((void *)0)"
0000000000022300	movq	%rcx, 0xd2c1(%rip)
0000000000022307	ud2
_os_packet_finalize.cold.2:
0000000000022309	leaq	0xec6(%rip), %rcx ## literal pool for: "assertion failed: (((struct __user_buflet *)(uintptr_t)bprev)) == ((void *)0) || (((struct __user_buflet *)(uintptr_t)bprev)) == (((struct __user_quantum *)((uint64_t)(ph) & (~((uint64_t)0xf)))))->qum_buf"
0000000000022310	movq	%rcx, 0xd2b1(%rip)
0000000000022317	ud2
_abort:
0000000000022319	pushq	%rbp
000000000002231a	movq	%rsp, %rbp
000000000002231d	callq	_getpid
0000000000022322	pushq	$0x6
0000000000022324	popq	%rsi
0000000000022325	movl	%eax, %edi
0000000000022327	xorl	%edx, %edx
0000000000022329	callq	___kill
000000000002232e	pushq	$0x1
0000000000022330	popq	%rdi
0000000000022331	callq	__exit
_abort:
0000000000022336	pushq	%rbp
0000000000022337	movq	%rsp, %rbp
000000000002233a	callq	_getpid
000000000002233f	pushq	$0x6
0000000000022341	popq	%rsi
0000000000022342	movl	%eax, %edi
0000000000022344	xorl	%edx, %edx
0000000000022346	callq	___kill
000000000002234b	pushq	$0x1
000000000002234d	popq	%rdi
000000000002234e	callq	__exit
_abort:
0000000000022353	pushq	%rbp
0000000000022354	movq	%rsp, %rbp
0000000000022357	callq	_getpid
000000000002235c	pushq	$0x6
000000000002235e	popq	%rsi
000000000002235f	movl	%eax, %edi
0000000000022361	xorl	%edx, %edx
0000000000022363	callq	___kill
0000000000022368	pushq	$0x1
000000000002236a	popq	%rdi
000000000002236b	callq	__exit
_abort:
0000000000022370	pushq	%rbp
0000000000022371	movq	%rsp, %rbp
0000000000022374	callq	_getpid
0000000000022379	pushq	$0x6
000000000002237b	popq	%rsi
000000000002237c	movl	%eax, %edi
000000000002237e	xorl	%edx, %edx
0000000000022380	callq	___kill
0000000000022385	pushq	$0x1
0000000000022387	popq	%rdi
0000000000022388	callq	__exit
_mach_right_recv_construct.cold.1:
000000000002238d	movslq	%edi, %rax
0000000000022390	leaq	0x59fa(%rip), %rcx ## literal pool for: "construct recv right failed"
0000000000022397	movq	%rcx, 0xd22a(%rip)
000000000002239e	movq	%rax, 0xd253(%rip)
00000000000223a5	ud2
_mach_right_recv_destruct.cold.1:
00000000000223a7	movslq	%edi, %rax
00000000000223aa	leaq	0x5a17(%rip), %rcx ## literal pool for: "destruct recv right failed"
00000000000223b1	movq	%rcx, 0xd210(%rip)
00000000000223b8	movq	%rax, 0xd239(%rip)
00000000000223bf	ud2
_mach_right_recv_destruct.cold.2:
00000000000223c1	movl	%edi, %eax
00000000000223c3	leaq	0x59e3(%rip), %rcx ## literal pool for: "api misuse: bad send right"
00000000000223ca	movq	%rcx, 0xd1f7(%rip)
00000000000223d1	movq	%rax, 0xd220(%rip)
00000000000223d8	ud2
_mach_right_send_create.cold.1:
00000000000223da	movslq	%edi, %rax
00000000000223dd	leaq	0x59ff(%rip), %rcx ## literal pool for: "create send right failed"
00000000000223e4	movq	%rcx, 0xd1dd(%rip)
00000000000223eb	movq	%rax, 0xd206(%rip)
00000000000223f2	ud2
_mach_right_send_retain.cold.1:
00000000000223f4	movslq	%edi, %rax
00000000000223f7	leaq	0x59fe(%rip), %rcx ## literal pool for: "retain send right failed"
00000000000223fe	movq	%rcx, 0xd1c3(%rip)
0000000000022405	movq	%rax, 0xd1ec(%rip)
000000000002240c	ud2
_mach_right_send_release.cold.1:
000000000002240e	movslq	%edi, %rax
0000000000022411	leaq	0x5a16(%rip), %rcx ## literal pool for: "release send right failed"
0000000000022418	movq	%rcx, 0xd1a9(%rip)
000000000002241f	movq	%rax, 0xd1d2(%rip)
0000000000022426	ud2
_mach_right_send_release.cold.2:
0000000000022428	movslq	%edi, %rax
000000000002242b	leaq	0x59e3(%rip), %rcx ## literal pool for: "release dead name failed"
0000000000022432	movq	%rcx, 0xd18f(%rip)
0000000000022439	movq	%rax, 0xd1b8(%rip)
0000000000022440	ud2
_mach_right_send_once_create.cold.1:
0000000000022442	movslq	%edi, %rax
0000000000022445	leaq	0x59fc(%rip), %rcx ## literal pool for: "create send-once right failed"
000000000002244c	movq	%rcx, 0xd175(%rip)
0000000000022453	movq	%rax, 0xd19e(%rip)
000000000002245a	ud2
_mach_right_send_once_consume.cold.1:
000000000002245c	movslq	%edi, %rax
000000000002245f	leaq	0x5a00(%rip), %rcx ## literal pool for: "consume send-once right failed"
0000000000022466	movq	%rcx, 0xd15b(%rip)
000000000002246d	movq	%rax, 0xd184(%rip)
0000000000022474	ud2
_mach_right_send_once_consume.cold.2:
0000000000022476	movslq	%edi, %rax
0000000000022479	leaq	0x5995(%rip), %rcx ## literal pool for: "release dead name failed"
0000000000022480	movq	%rcx, 0xd141(%rip)
0000000000022487	movq	%rax, 0xd16a(%rip)
000000000002248e	ud2
_abort_with_reason:
0000000000022490	pushq	%rbp
0000000000022491	movq	%rsp, %rbp
0000000000022494	movq	%rcx, %r9
0000000000022497	movq	%rdx, %r8
000000000002249a	xorl	%edx, %edx
000000000002249c	xorl	%ecx, %ecx
000000000002249e	callq	_abort_with_payload_wrapper_internal
_abort_with_payload_wrapper_internal:
00000000000224a3	pushq	%rbp
00000000000224a4	movq	%rsp, %rbp
00000000000224a7	pushq	%r15
00000000000224a9	pushq	%r14
00000000000224ab	pushq	%r13
00000000000224ad	pushq	%r12
00000000000224af	pushq	%rbx
00000000000224b0	subq	$0x18, %rsp
00000000000224b4	movq	%r9, %rbx
00000000000224b7	movq	%r8, -0x30(%rbp)
00000000000224bb	movl	%ecx, %r12d
00000000000224be	movq	%rdx, %r13
00000000000224c1	movq	%rsi, %r14
00000000000224c4	movl	%edi, %r15d
00000000000224c7	leaq	-0x34(%rbp), %rsi
00000000000224cb	movl	$0x20, (%rsi)
00000000000224d1	pushq	$0x2
00000000000224d3	popq	%rdi
00000000000224d4	xorl	%edx, %edx
00000000000224d6	callq	_sigprocmask
00000000000224db	movl	%r15d, %edi
00000000000224de	movq	%r14, %rsi
00000000000224e1	movq	%r13, %rdx
00000000000224e4	movl	%r12d, %ecx
00000000000224e7	movq	-0x30(%rbp), %r8
00000000000224eb	movq	%rbx, %r9
00000000000224ee	callq	___abort_with_payload
00000000000224f3	callq	_getpid
00000000000224f8	orq	$0x200, %rbx
00000000000224ff	movq	%rbx, (%rsp)
0000000000022503	movl	%eax, %edi
0000000000022505	movl	%r15d, %esi
0000000000022508	movq	%r14, %rdx
000000000002250b	movq	%r13, %rcx
000000000002250e	movl	%r12d, %r8d
0000000000022511	movq	-0x30(%rbp), %r9
0000000000022515	callq	_terminate_with_payload
000000000002251a	ud2
_abort_with_payload:
000000000002251c	pushq	%rbp
000000000002251d	movq	%rsp, %rbp
0000000000022520	callq	_abort_with_payload_wrapper_internal
_os_channel_create_extended.cold.1:
0000000000022525	leaq	0x5a33(%rip), %rcx ## literal pool for: "nexus advisory version mismatch for netif"
000000000002252c	pushq	$0x1
000000000002252e	popq	%rax
000000000002252f	movq	%rcx, 0xd092(%rip)
0000000000022536	movq	%rax, 0xd0bb(%rip)
000000000002253d	ud2
_os_channel_create_extended.cold.2:
000000000002253f	leaq	0x5a43(%rip), %rcx ## literal pool for: "nexus advisory version mismatch for flowswitch"
0000000000022546	pushq	$0x1
0000000000022548	popq	%rax
0000000000022549	movq	%rcx, 0xd078(%rip)
0000000000022550	movq	%rax, 0xd0a1(%rip)
0000000000022557	ud2
_os_channel_create_extended.cold.3:
0000000000022559	leaq	0x5a58(%rip), %rcx ## literal pool for: "nexus advisory metadata type unknown"
0000000000022560	pushq	$0x1
0000000000022562	popq	%rax
0000000000022563	movq	%rcx, 0xd05e(%rip)
000000000002256a	movq	%rax, 0xd087(%rip)
0000000000022571	ud2
_os_channel_create_extended.cold.4:
0000000000022573	leaq	0x59bc(%rip), %rcx ## literal pool for: "nexus advisory metadata version mismatch"
000000000002257a	pushq	$0x1
000000000002257c	popq	%rax
000000000002257d	movq	%rcx, 0xd044(%rip)
0000000000022584	movq	%rax, 0xd06d(%rip)
000000000002258b	ud2
_os_channel_create_extended.cold.5:
000000000002258d	pushq	%rbp
000000000002258e	movq	%rsp, %rbp
0000000000022591	pushq	%r15
0000000000022593	pushq	%r14
0000000000022595	pushq	%r13
0000000000022597	pushq	%r12
0000000000022599	pushq	%rbx
000000000002259a	subq	$0x58, %rsp
000000000002259e	movq	%rdi, %rbx
00000000000225a1	movl	$0x400, %edi
00000000000225a6	callq	_malloc
00000000000225ab	movq	%rax, %rdi
00000000000225ae	movq	%rax, -0x40(%rbp)
00000000000225b2	movq	(%rbx), %rax
00000000000225b5	movl	(%rax), %ecx
00000000000225b7	movzbl	0x108(%rax), %edx
00000000000225be	movq	%rdx, -0x78(%rbp)
00000000000225c2	movzbl	0x109(%rax), %edx
00000000000225c9	movq	%rdx, -0x70(%rbp)
00000000000225cd	movzbl	0x10a(%rax), %edx
00000000000225d4	movq	%rdx, -0x68(%rbp)
00000000000225d8	movzbl	0x10b(%rax), %edx
00000000000225df	movq	%rdx, -0x60(%rbp)
00000000000225e3	movzbl	0x10c(%rax), %edx
00000000000225ea	movq	%rdx, -0x58(%rbp)
00000000000225ee	movzbl	0x10d(%rax), %edx
00000000000225f5	movq	%rdx, -0x50(%rbp)
00000000000225f9	movzbl	0x10e(%rax), %edx
0000000000022600	movq	%rdx, -0x48(%rbp)
0000000000022604	movzbl	0x10f(%rax), %edx
000000000002260b	movq	%rdx, -0x38(%rbp)
000000000002260f	movzbl	0x110(%rax), %edx
0000000000022616	movq	%rdx, -0x30(%rbp)
000000000002261a	movzbl	0x111(%rax), %r12d
0000000000022622	movzbl	0x112(%rax), %r13d
000000000002262a	movzbl	0x113(%rax), %ebx
0000000000022631	movzbl	0x114(%rax), %r10d
0000000000022639	movzbl	0x115(%rax), %r11d
0000000000022641	movzbl	0x116(%rax), %r15d
0000000000022649	movzbl	0x117(%rax), %r14d
0000000000022651	leaq	0x8(%rax), %r9
0000000000022655	leaq	0x5829(%rip), %rdx ## literal pool for: "Schema region version mismatch: 0x%x != 0x%x\nKernel version: %s - did you forget to install a matching libsystem_kernel.dylib?\nKernel UUID: %x%x%x%x-%x%x-%x%x-%x%x-%x%x%x%x%x%x"
000000000002265c	pushq	$0xb
000000000002265e	popq	%r8
0000000000022660	movl	$0x400, %esi
0000000000022665	movl	$0x0, %eax
000000000002266a	pushq	%r14
000000000002266c	pushq	%r15
000000000002266e	pushq	%r11
0000000000022670	pushq	%r10
0000000000022672	pushq	%rbx
0000000000022673	pushq	%r13
0000000000022675	pushq	%r12
0000000000022677	pushq	-0x30(%rbp)
000000000002267a	pushq	-0x38(%rbp)
000000000002267d	pushq	-0x48(%rbp)
0000000000022680	pushq	-0x50(%rbp)
0000000000022683	pushq	-0x58(%rbp)
0000000000022686	pushq	-0x60(%rbp)
0000000000022689	pushq	-0x68(%rbp)
000000000002268c	pushq	-0x70(%rbp)
000000000002268f	pushq	-0x78(%rbp)
0000000000022692	callq	__mach_snprintf
0000000000022697	addq	$0x80, %rsp
000000000002269e	movq	-0x40(%rbp), %rax
00000000000226a2	movq	%rax, 0xcf1f(%rip)
00000000000226a9	ud2
_os_channel_init_ring.cold.1:
00000000000226ab	leaq	0x5b1c(%rip), %rcx ## literal pool for: "Channel schema not valid"
00000000000226b2	movq	%rcx, 0xcf0f(%rip)
00000000000226b9	ud2
_os_channel_init_ring.cold.2:
00000000000226bb	movl	%edi, %eax
00000000000226bd	leaq	0x5b39(%rip), %rcx ## literal pool for: "Metadata subtype unknown"
00000000000226c4	movq	%rcx, 0xcefd(%rip)
00000000000226cb	movq	%rax, 0xcf26(%rip)
00000000000226d2	ud2
_os_channel_init_ring.cold.3:
00000000000226d4	movl	%edi, %eax
00000000000226d6	leaq	0x5b0a(%rip), %rcx ## literal pool for: "Metadata type unknown"
00000000000226dd	movq	%rcx, 0xcee4(%rip)
00000000000226e4	movq	%rax, 0xcf0d(%rip)
00000000000226eb	ud2
_os_channel_get_next_slot.cold.1:
00000000000226ed	leaq	0x5b22(%rip), %rcx ## literal pool for: "bad bufcnt"
00000000000226f4	movq	%rcx, 0xcecd(%rip)
00000000000226fb	ud2
_os_channel_get_next_slot.cold.2:
00000000000226fd	movzwl	%di, %eax
0000000000022700	leaq	0x5a87(%rip), %rcx ## literal pool for: "Invalid max bufcnt"
0000000000022707	movq	%rcx, 0xceba(%rip)
000000000002270e	movq	%rax, 0xcee3(%rip)
0000000000022715	ud2
_os_channel_get_next_slot.cold.3:
0000000000022717	movzwl	%di, %eax
000000000002271a	leaq	0x5a80(%rip), %rcx ## literal pool for: "Invalid bufcnt"
0000000000022721	movq	%rcx, 0xcea0(%rip)
0000000000022728	movq	%rax, 0xcec9(%rip)
000000000002272f	ud2
_os_channel_get_next_slot.cold.4:
0000000000022731	movq	%rdi, %rax
0000000000022734	leaq	0x58fb(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000002273b	movq	%rcx, 0xce86(%rip)
0000000000022742	movq	%rax, 0xceaf(%rip)
0000000000022749	ud2
_os_channel_get_next_slot.cold.5:
000000000002274b	leaq	0x58c4(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
0000000000022752	movq	%rcx, 0xce6f(%rip)
0000000000022759	ud2
_os_channel_get_next_slot.cold.6:
000000000002275b	movq	%rdi, %rax
000000000002275e	leaq	0x5893(%rip), %rcx ## literal pool for: "Tx slot has attached metadata"
0000000000022765	movq	%rcx, 0xce5c(%rip)
000000000002276c	movq	%rax, 0xce85(%rip)
0000000000022773	ud2
_os_channel_get_next_slot.cold.7:
0000000000022775	movl	%edi, %eax
0000000000022777	leaq	0x585f(%rip), %rcx ## literal pool for: "Index out of bounds in gns"
000000000002277e	movq	%rcx, 0xce43(%rip)
0000000000022785	movq	%rax, 0xce6c(%rip)
000000000002278c	ud2
_os_channel_set_slot_properties.cold.1:
000000000002278e	leaq	0x5881(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
0000000000022795	movq	%rcx, 0xce2c(%rip)
000000000002279c	ud2
_os_channel_set_slot_properties.cold.2:
000000000002279e	movq	%rdi, %rax
00000000000227a1	leaq	0x588e(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
00000000000227a8	movq	%rcx, 0xce19(%rip)
00000000000227af	movq	%rax, 0xce42(%rip)
00000000000227b6	ud2
_os_channel_set_slot_properties.cold.3:
00000000000227b8	movl	%edi, %eax
00000000000227ba	leaq	0x5890(%rip), %rcx ## literal pool for: "Index out of bounds in ssp"
00000000000227c1	movq	%rcx, 0xce00(%rip)
00000000000227c8	movq	%rax, 0xce29(%rip)
00000000000227cf	ud2
_os_channel_slot_get_packet.cold.1:
00000000000227d1	movl	%edi, %eax
00000000000227d3	leaq	0x58ad(%rip), %rcx ## literal pool for: "bad packet handle"
00000000000227da	movq	%rcx, 0xcde7(%rip)
00000000000227e1	movq	%rax, 0xce10(%rip)
00000000000227e8	ud2
_os_channel_slot_get_packet.cold.2:
00000000000227ea	movq	%rdi, %rax
00000000000227ed	leaq	0x5842(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
00000000000227f4	movq	%rcx, 0xcdcd(%rip)
00000000000227fb	movq	%rax, 0xcdf6(%rip)
0000000000022802	ud2
_os_channel_slot_get_packet.cold.3:
0000000000022804	movl	%edi, %eax
0000000000022806	leaq	0x585f(%rip), %rcx ## literal pool for: "Index out of bounds in sgp"
000000000002280d	movq	%rcx, 0xcdb4(%rip)
0000000000022814	movq	%rax, 0xcddd(%rip)
000000000002281b	ud2
_os_channel_packet_alloc.cold.1:
000000000002281d	leaq	0x57f2(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
0000000000022824	movq	%rcx, 0xcd9d(%rip)
000000000002282b	ud2
_os_channel_packet_alloc.cold.2:
000000000002282d	leaq	0x59e2(%rip), %rcx ## literal pool for: "bad bufcnt"
0000000000022834	movq	%rcx, 0xcd8d(%rip)
000000000002283b	ud2
_os_channel_packet_alloc.cold.3:
000000000002283d	movzwl	%di, %eax
0000000000022840	leaq	0x5947(%rip), %rcx ## literal pool for: "Invalid max bufcnt"
0000000000022847	movq	%rcx, 0xcd7a(%rip)
000000000002284e	movq	%rax, 0xcda3(%rip)
0000000000022855	ud2
_os_channel_packet_alloc.cold.4:
0000000000022857	movzwl	%di, %eax
000000000002285a	leaq	0x5940(%rip), %rcx ## literal pool for: "Invalid bufcnt"
0000000000022861	movq	%rcx, 0xcd60(%rip)
0000000000022868	movq	%rax, 0xcd89(%rip)
000000000002286f	ud2
_os_channel_packet_alloc.cold.5:
0000000000022871	movq	%rdi, %rax
0000000000022874	leaq	0x57bb(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000002287b	movq	%rcx, 0xcd46(%rip)
0000000000022882	movq	%rax, 0xcd6f(%rip)
0000000000022889	ud2
_os_channel_packet_alloc.cold.6:
000000000002288b	movslq	%edi, %rax
000000000002288e	leaq	0x5804(%rip), %rcx ## literal pool for: "packet pool alloc sync failed"
0000000000022895	movq	%rcx, 0xcd2c(%rip)
000000000002289c	movq	%rax, 0xcd55(%rip)
00000000000228a3	ud2
_os_channel_packet_free.cold.1:
00000000000228a5	leaq	0x5828(%rip), %rcx ## literal pool for: "no free ring space"
00000000000228ac	movq	%rcx, 0xcd15(%rip)
00000000000228b3	ud2
_os_channel_packet_free.cold.2:
00000000000228b5	movl	%edi, %eax
00000000000228b7	leaq	0x57c9(%rip), %rcx ## literal pool for: "bad packet handle"
00000000000228be	movq	%rcx, 0xcd03(%rip)
00000000000228c5	movq	%rax, 0xcd2c(%rip)
00000000000228cc	ud2
_os_channel_packet_free.cold.3:
00000000000228ce	movslq	%edi, %rax
00000000000228d1	leaq	0x57df(%rip), %rcx ## literal pool for: "packet pool free sync failed"
00000000000228d8	movq	%rcx, 0xcce9(%rip)
00000000000228df	movq	%rax, 0xcd12(%rip)
00000000000228e6	ud2
_os_channel_slot_attach_packet.cold.1:
00000000000228e8	leaq	0x57f8(%rip), %rcx ## literal pool for: "packet not finalized"
00000000000228ef	movq	%rcx, 0xccd2(%rip)
00000000000228f6	ud2
_os_channel_slot_attach_packet.cold.2:
00000000000228f8	movl	%edi, %eax
00000000000228fa	leaq	0x5786(%rip), %rcx ## literal pool for: "bad packet handle"
0000000000022901	movq	%rcx, 0xccc0(%rip)
0000000000022908	movq	%rax, 0xcce9(%rip)
000000000002290f	ud2
_os_channel_slot_attach_packet.cold.3:
0000000000022911	movq	%rdi, %rax
0000000000022914	leaq	0x57ee(%rip), %rcx ## literal pool for: "Slot has attached packet"
000000000002291b	movq	%rcx, 0xcca6(%rip)
0000000000022922	movq	%rax, 0xcccf(%rip)
0000000000022929	ud2
_os_channel_slot_attach_packet.cold.4:
000000000002292b	movq	%rdi, %rax
000000000002292e	leaq	0x57c7(%rip), %rcx ## literal pool for: "Invalid slot"
0000000000022935	movq	%rcx, 0xcc8c(%rip)
000000000002293c	movq	%rax, 0xccb5(%rip)
0000000000022943	ud2
_os_channel_slot_detach_packet.cold.1:
0000000000022945	movq	%rdi, %rax
0000000000022948	leaq	0x57d3(%rip), %rcx ## literal pool for: "Slot has no attached packet"
000000000002294f	movq	%rcx, 0xcc72(%rip)
0000000000022956	movq	%rax, 0xcc9b(%rip)
000000000002295d	ud2
_os_channel_slot_detach_packet.cold.2:
000000000002295f	leaq	0x5781(%rip), %rcx ## literal pool for: "packet not finalized"
0000000000022966	movq	%rcx, 0xcc5b(%rip)
000000000002296d	ud2
_os_channel_slot_detach_packet.cold.3:
000000000002296f	leaq	0x57c8(%rip), %rcx ## literal pool for: "packet handle mismatch"
0000000000022976	movq	%rcx, 0xcc4b(%rip)
000000000002297d	ud2
_os_channel_slot_detach_packet.cold.4:
000000000002297f	movq	%rdi, %rax
0000000000022982	leaq	0x5773(%rip), %rcx ## literal pool for: "Invalid slot"
0000000000022989	movq	%rcx, 0xcc38(%rip)
0000000000022990	movq	%rax, 0xcc61(%rip)
0000000000022997	ud2
_os_channel_packet_pool_purge.cold.1:
0000000000022999	leaq	0x5676(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
00000000000229a0	movq	%rcx, 0xcc21(%rip)
00000000000229a7	ud2
_os_channel_packet_pool_purge.cold.2:
00000000000229a9	leaq	0x57c3(%rip), %rcx ## literal pool for: "pkt pool purge, bad bufcnt"
00000000000229b0	movq	%rcx, 0xcc11(%rip)
00000000000229b7	ud2
_os_channel_packet_pool_purge.cold.3:
00000000000229b9	movzwl	%di, %eax
00000000000229bc	leaq	0x57cb(%rip), %rcx ## literal pool for: "Invalid max bufcnt"
00000000000229c3	movq	%rcx, 0xcbfe(%rip)
00000000000229ca	movq	%rax, 0xcc27(%rip)
00000000000229d1	ud2
_os_channel_packet_pool_purge.cold.4:
00000000000229d3	movzwl	%di, %eax
00000000000229d6	leaq	0x57c4(%rip), %rcx ## literal pool for: "Invalid bufcnt"
00000000000229dd	movq	%rcx, 0xcbe4(%rip)
00000000000229e4	movq	%rax, 0xcc0d(%rip)
00000000000229eb	ud2
_os_channel_packet_pool_purge.cold.5:
00000000000229ed	movslq	%edi, %rax
00000000000229f0	leaq	0x57b9(%rip), %rcx ## literal pool for: "packet pool purge free failed"
00000000000229f7	movq	%rcx, 0xcbca(%rip)
00000000000229fe	movq	%rax, 0xcbf3(%rip)
0000000000022a05	ud2
_os_channel_packet_pool_purge.cold.6:
0000000000022a07	movq	%rdi, %rax
0000000000022a0a	leaq	0x5625(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
0000000000022a11	movq	%rcx, 0xcbb0(%rip)
0000000000022a18	movq	%rax, 0xcbd9(%rip)
0000000000022a1f	ud2
_os_channel_packet_pool_purge.cold.7:
0000000000022a21	movslq	%edi, %rax
0000000000022a24	leaq	0x568c(%rip), %rcx ## literal pool for: "packet pool free sync failed"
0000000000022a2b	movq	%rcx, 0xcb96(%rip)
0000000000022a32	movq	%rax, 0xcbbf(%rip)
0000000000022a39	ud2
_os_channel_packet_pool_purge.cold.8:
0000000000022a3b	movslq	%edi, %rax
0000000000022a3e	leaq	0x5710(%rip), %rcx ## literal pool for: "packet pool purge sync failed"
0000000000022a45	movq	%rcx, 0xcb7c(%rip)
0000000000022a4c	movq	%rax, 0xcba5(%rip)
0000000000022a53	ud2
_os_channel_get_next_event_handle.cold.1:
0000000000022a55	leaq	0x55ba(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
0000000000022a5c	movq	%rcx, 0xcb65(%rip)
0000000000022a63	ud2
_os_channel_get_next_event_handle.cold.2:
0000000000022a65	leaq	0x57aa(%rip), %rcx ## literal pool for: "bad bufcnt"
0000000000022a6c	movq	%rcx, 0xcb55(%rip)
0000000000022a73	ud2
_os_channel_get_next_event_handle.cold.3:
0000000000022a75	movzwl	%di, %eax
0000000000022a78	leaq	0x570f(%rip), %rcx ## literal pool for: "Invalid max bufcnt"
0000000000022a7f	movq	%rcx, 0xcb42(%rip)
0000000000022a86	movq	%rax, 0xcb6b(%rip)
0000000000022a8d	ud2
_os_channel_get_next_event_handle.cold.4:
0000000000022a8f	movzwl	%di, %eax
0000000000022a92	leaq	0x5708(%rip), %rcx ## literal pool for: "Invalid bufcnt"
0000000000022a99	movq	%rcx, 0xcb28(%rip)
0000000000022aa0	movq	%rax, 0xcb51(%rip)
0000000000022aa7	ud2
_os_channel_get_next_event_handle.cold.5:
0000000000022aa9	movq	%rdi, %rax
0000000000022aac	leaq	0x5583(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
0000000000022ab3	movq	%rcx, 0xcb0e(%rip)
0000000000022aba	movq	%rax, 0xcb37(%rip)
0000000000022ac1	ud2
_os_cpu_in_cksum_mbuf.cold.1:
0000000000022ac3	leaq	0x5757(%rip), %rcx ## literal pool for: "assertion failed: len >= 0"
0000000000022aca	movq	%rcx, 0xcaf7(%rip)
0000000000022ad1	ud2
_os_cpu_in_cksum_mbuf.cold.2:
0000000000022ad3	leaq	0x5762(%rip), %rcx ## literal pool for: "assertion failed: off >= 0"
0000000000022ada	movq	%rcx, 0xcae7(%rip)
0000000000022ae1	ud2
